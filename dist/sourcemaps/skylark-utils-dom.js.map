{"version":3,"sources":["skylark-utils-dom.js"],"names":["define","skylark","dom","attach","langx","vendorPrefix","vendorPrefixRE","browser","hoster","transEndEventNames","WebkitTransition","MozTransition","OTransition","transition","transEndEventName","css3PropPrefix","css3EventPrefix","cssStyles","cssProps","vendorPrefixesRE","document","window","testEl","createElement","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","requestFullScreen","requestFullscreen","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","testStyle","exitFullscreen","webkitCancelFullScreen","mozCancelFullScreen","msExitFullscreen","style","name","matched","match","RegExp","toLowerCase","lowerFirst","cssPropName","dasherize","undefined","mixin","isIE","exec","navigator","userAgent","normalizeStyleProperty","normalizeCssProperty","normalizeCssEvent","location","support","end","Array","prototype","every","forEach","camelCase","maybeAddPx","value","cssNumber","column-count","columns","font-weight","line-height","opacity","z-index","zoom","classReCache","classRE","className","node","klass","svg","baseVal","elementDisplay","getStyles","elem","view","ownerDocument","defaultView","opener","getComputedStyle","styler","autocssfix","cssHooks","addClass","elm","this","names","cls","isString","split","re","css","property","arguments","length","computedStyle","getPropertyValue","isArrayLike","props","call","prop","removeProperty","key","cssText","disabled","hasClass","hide","isInvisible","removeClass","replace","trim","show","nodeName","element","display","body","appendChild","parentNode","removeChild","defaultDisplay","toggleClass","when","self","fragmentRE","singleTagRE","div","table","tableBody","tableRow","containers","tr","tbody","thead","tfoot","td","th","*","rootNodeRE","map","slice","ensureNodes","nodes","copyByClone","cloneNode","flatten","chkName","enhancePlaceContent","placing","isFunction","apply","neddsFlattern","i","append","tag","parent","setAttribute","rxhtmlTag","isChildOf","directly","documentElement","contains","ownerDoc","nodeType","noder","active","doc","el","activeElement","error","blur","clone","deep","each","getAttribs","attr","setAttrib","getAttrib","contents","contentDocument","childNodes","createFragment","html","test","$1","container","innerHTML","child","createTextNode","text","empty","hasChildNodes","firstChild","fullScreen","exitFullScreen","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","focusable","hasTabindex","mapName","img","focusableIfVisible","fieldset","href","$","is","closest","visible","isNumber","isDocument","DOCUMENT_NODE","isInDocument","isWindow","offsetParent","ownerWindow","parentWindow","after","refNode","nextSibling","insertBefore","before","prepend","remove","e","console","warn","children","oldNode","replaceChild","throb","params","timer","time","callback","throbber","class","overlayDiv","position","top","left","width","height","zIndex","overlay","textNode","clearTimeout","setTimeout","update","nodeValue","traverse","fn","len","reverse","wrapper","wrapperNode","wrapperInner","unwrap","isDoc","insertRuleFunc","head","getElementsByTagName","count","sheetsByUrl","sheetsById","defaultSheetId","_createStyleSheet","defaultSheet","rulesPropName","deleteRuleFunc","deleteRule","removeRule","insertRule","_insertRule","selector","index","addRule","external","options","type","id","media","create","rel","async","deleteSheetRule","sheetId","rule","sheet","_rule","addSheetRules","rules","toString","isAtRule","str","startsWith","json","adjust","parentName","depth","strNode","values","atFlg","SPACE","repeat","isArray","n","adjusted","addRules","createStyleSheet","insertSheetRule","loadStyleSheet","url","loadedCallback","errorCallback","state","deferred","Deferred","startTime","Date","getTime","onload","resolve","onerror","reject","promise","then","removeStyleSheet","Error","velm","local","filter","nativeMatchesSelector","parsed","separatorIndex","combinatorIndex","reversed","from","cache","reverseCache","reUnescape","parse","expression","isReversed","Slick","currentCache","expressions","raw","regexp","parser","reverseCombinator","combinator","exp","last","parts","j","cexp","push","escapeRegExp","string","rawMatch","separator","combinatorChildren","tagName","attributeKey","attributeOperator","attributeQuote","attributeValue","pseudoMarker","pseudoClass","pseudoQuote","pseudoClassQuotedValue","pseudoClassValue","currentSeparator","currentParsed","classList","classes","pseudos","indexOf","attributes","operator","rinputs","rheader","parseSelector","button","checked","idx","enabled","eq","even","focus","tabindex","first","gt","has","sel","find","header","hidden","input","lt","not","matches","odd","selected","tabbable","tabIndex","offsetWidth","createInputPseudo","createButtonPseudo","item","isArrayFilter","radio","checkbox","file","password","image","submit","reset","ancestors","root","ret","rootIsSelector","inArray","descendants","querySelectorAll","matchError","query","descendant","querySelector","lastChild","previousSibling","isPlainObject","check","adjacent","nextSiblings","previousSiblings","siblings","divide","cond","nativeSelector","customPseudos","JSON","stringify","part","toUpperCase","arrayFilte","pseudo","getAttribute","hasAttribute","currentExpression","simpleExpCounter","filterSingle","matchs","uniq","concat","combine","bit","node1","op","prev","next","divided","single","currentBit","founds","found","currentItems","finder","ancestor","byId","getElementById","findAll","deserializeValue","capitalRE","propMap","readonly","for","maxlength","cellspacing","cellpadding","rowspan","colspan","usemap","frameborder","contenteditable","valHooks","option","get","val","join","select","selectedIndex","one","max","set","optionSet","makeArray","attrName","_store","confirm","store","_attributeData","_setData","data","dataAttrName","camelName","_getData","cleanData","txt","textContent","hooks","value1","datax","dataName","aria","pluck","removeAttr","removeAttribute","removeData","removeProp","uid","ignoreProperties","eventMethods","preventDefault","stopImmediatePropagation","stopPropagation","readyRE","compatible","event","source","isDefaultPrevented","predicate","sourceMethod","returnTrue","returnFalse","segs","ns","sort","createEvent","EventCtors","NativeEvents","compositionstart","compositionend","compositionupdate","beforecopy","beforecut","beforepaste","copy","cut","paste","drag","dragend","dragenter","dragexit","dragleave","dragover","dragstart","drop","abort","change","selectionchange","focusin","focusout","keydown","keypress","keyup","message","click","contextmenu","dblclick","mousedown","mouseup","mousemove","mouseover","mouseout","mouseenter","mouseleave","textInput","touchstart","touchmove","touchend","load","resize","scroll","unload","wheel","bubbles","cancelable","namespace","ctor","getEventCtor","safeMixin","createProxy","src","proxy","originalEvent","specialEvents","focusinSupported","hover","realEvent","handlers","EventBindings","init","target","_target","_event","_bindings","add","bindings","binding","_listener","domEvt","args","_args","isDefined","isImmediatePropagationStopped","currentTarget","liveFired","related","relatedTarget","result","addEventListener","matcher","removing","removeEventListener","EventsHandler","_handler","register","specialEvent","bindingEvent","bindType","bindEventName","events","unregister","listener","findHandler","handler","on","ready","readyState","defer","keyCodeLookup","backspace","comma","delete","down","enter","escape","home","page_down","page_up","period","right","space","tab","up","eventer","transitionEnd","delegateType","keys","off","shortcuts","registry","run","shortcut","metaKey","ctrlKey","ctrl","alt","altKey","shift","shiftKey","keyCode","charCode","pattern","shortcutKey","setting","charCodeAt","regKey","special","stop","all","trigger","evented","Event","dispatchEvent","cachedScrollbarWidth","px","toPixel","scrollbarWidth","w1","w2","innerDiv","clientWidth","borderExtents","bottom","s","borderLeftWidth","borderTopWidth","borderRightWidth","borderBottomWidth","boundingPosition","coords","getBoundingClientRect","parentOffset","mex","marginExtents","pbex","relativePosition","boundingRect","size","clientSize","dimension","clientHeight","isBorderBox","bex","pex","paddingExtents","getDocumentSize","Math","scrollWidth","scrollHeight","offsetHeight","marginLeft","marginTop","marginRight","marginBottom","marginSize","obj","me","paddingLeft","paddingTop","paddingRight","paddingBottom","pagePosition","pageXOffset","pageYOffset","offset","relativeRect","scrollLeft","hasScrollLeft","scrollTo","scrollY","scrollTop","hasScrollTop","scrollX","innerWidth","innerHeight","geom","contentRect","cs","marginRect","pageRect","round","scrollIntoView","align","x","y","parentWidth","parentHeight","parentElm","pos","rootElm","offsetLeft","offsetTop","getOffset","abs","rhorizontal","rvertical","roffset","rposition","rpercent","getOffsets","offsets","parseFloat","parseCss","parseInt","positions","fit","newOverRight","within","withinOffset","outerWidth","collisionPosLeft","collisionPosition","overLeft","overRight","collisionWidth","newOverBottom","outerHeight","collisionPosTop","overTop","overBottom","collisionHeight","flip","newOverLeft","myOffset","my","elemWidth","atOffset","at","targetWidth","newOverTop","elemHeight","targetHeight","flipfit","posit","targetOffset","basePosition","dimensions","extend","of","withinElement","hasOffset","msize","scrollInfo","overflowX","overflowY","hasOverflowX","getScrollInfo","collision","pageY","pageX","horizontalOffset","verticalOffset","using","dir","feedback","horizontal","vertical","important","animationName","animationDuration","animationTiming","transitionProperty","transitionDuration","transitionTiming","transitionDelay","animationEnd","supportedTransforms","transform","cssReset","animate","properties","duration","ease","delay","endEvent","wrappedCallback","cssValues","cssProperties","transforms","that","fired","easing","complete","fx","speeds","normal","eace","v","debounce","clientLeft","scrollToTop","speed","scale","scrollFrom","freq","interval","setInterval","clearInterval","fadeTo","fadeIn","fadeOut","slideDown","visibility","overflow","slideUp","queue","fast","slow","emulateTransitionEnd","called","fadeToggle","ceasing","allback","slideToggle","toggle","css3Transform","getZoom","d","radian","Cos","Sin","matrix","cos","sin","M11","M12","M21","M22","toFixed","transformData","calcs","PI","rotate","degress","hZoom","vZoom","zoomin","zoomout","calcFunc","unshift","isQ","some","rquickExpr","funcArg","isObject","compact","wrapper_map","func","context","wrapper_selector","wrapper_every_act","wrapper_every_act_firstArgFunc","oldValueFunc","arg1","wrapper_name_value","wrapper_value","newValue","NodeList","klassName","charAt","object","toArray","isHtmlNode","excludes","parents","parentsUntil","util","pushStack","elms","prevObject","replaceWith","newContent","wrap","structure","wrapAll","wrappingElement","wrapInner","prevAll","nextAll","wrapper_some_chk","detach","fnOver","fnOut","Dimension","m","margin","cb","mb","wrapper_node_operation","argType","arg","appendTo","prependTo","insertAfter","replaceAll","original","elems","insert","toogle","scrollParent","includeHidden","excludeStaticParent","overflowRegex","andSelf","addBack","eventType","place","addContent","content","template","substitute","replaceClass","newClass","oldClass","disableSelection","enableSelection","plugin","returnValue","plugins","instantiate","watch","imgs","totalCount","progressedCount","successedCount","faileredCount","total","successed","failered","progress","isLoaded","progressed","isCompleted","naturalWidth","loaded","addBackgroundImage","elm1","Image","childImgs","background","viewer","_load","border","padding","_init","dispose","images","imagesLoaded","imagesViewer","preload","urls","VisualElement","_construct","_elm","elmx","batch","action","partial","delegate","HTMLElement","_delegator","method","pluginKlasses","pluginName","pair","instanceDataName","pluginInstance","destroy","pluginKlass","Plugin","Evented","inherit","_initOptions","constructor","defaults","ctors","superclass","hasOwnProperty","Object","defineProperty","_destroy","noop","_delay","instance","curOption","pop","_setOptions","_setOption","domNode","shortcutName","extfn","methodName","shortcutter","args2","scriptsByUrl","scriptElementsById","scripter","loadJavaScript","script","loadedCallbacks","errorCallbacks","callbacks","deleteJavaScript","main"],"mappings":"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","file":"../skylark-utils-dom.js","sourcesContent":["define('skylark-utils-dom/skylark',[\"skylark-langx/skylark\"], function(skylark) {\r\n    return skylark;\r\n});\r\n\ndefine('skylark-utils-dom/dom',[\"./skylark\"], function(skylark) {\r\n\treturn skylark.dom = skylark.attach(\"utils.dom\",{});\r\n});\r\n\ndefine('skylark-utils-dom/langx',[\r\n    \"skylark-langx/langx\"\r\n], function(langx) {\r\n    return langx;\r\n});\r\n\ndefine('skylark-utils-dom/browser',[\r\n    \"./dom\",\r\n    \"./langx\"\r\n], function(dom,langx) {\r\n    \"use strict\";\r\n\r\n    var browser = langx.hoster.browser;\r\n \r\n    var checkedCssProperties = {\r\n            \"transitionproperty\": \"TransitionProperty\",\r\n        },\r\n        transEndEventNames = {\r\n          WebkitTransition : 'webkitTransitionEnd',\r\n          MozTransition    : 'transitionend',\r\n          OTransition      : 'oTransitionEnd otransitionend',\r\n          transition       : 'transitionend'\r\n        },\r\n        transEndEventName = null;\r\n\r\n\r\n    var css3PropPrefix = \"\",\r\n        css3StylePrefix = \"\",\r\n        css3EventPrefix = \"\",\r\n\r\n        cssStyles = {},\r\n        cssProps = {},\r\n\r\n        vendorPrefix,\r\n        vendorPrefixRE,\r\n        vendorPrefixesRE = /^(Webkit|webkit|O|Moz|moz|ms)(.*)$/,\r\n\r\n        document = window.document,\r\n        testEl = document.createElement(\"div\"),\r\n\r\n        matchesSelector = testEl.webkitMatchesSelector ||\r\n                          testEl.mozMatchesSelector ||\r\n                          testEl.oMatchesSelector ||\r\n                          testEl.matchesSelector,\r\n\r\n        requestFullScreen = testEl.requestFullscreen || \r\n                            testEl.webkitRequestFullscreen || \r\n                            testEl.mozRequestFullScreen || \r\n                            testEl.msRequestFullscreen,\r\n\r\n        exitFullScreen =  document.exitFullscreen ||\r\n                          document.webkitCancelFullScreen ||\r\n                          document.mozCancelFullScreen ||\r\n                          document.msExitFullscreen,\r\n\r\n        testStyle = testEl.style;\r\n\r\n    for (var name in testStyle) {\r\n        var matched = name.match(vendorPrefixRE || vendorPrefixesRE);\r\n        if (matched) {\r\n            if (!vendorPrefixRE) {\r\n                vendorPrefix = matched[1];\r\n                vendorPrefixRE = new RegExp(\"^(\" + vendorPrefix + \")(.*)$\");\r\n\r\n                css3StylePrefix = vendorPrefix;\r\n                css3PropPrefix = '-' + vendorPrefix.toLowerCase() + '-';\r\n                css3EventPrefix = vendorPrefix.toLowerCase();\r\n            }\r\n\r\n            cssStyles[langx.lowerFirst(matched[2])] = name;\r\n            var cssPropName = langx.dasherize(matched[2]);\r\n            cssProps[cssPropName] = css3PropPrefix + cssPropName;\r\n\r\n            if (transEndEventNames[name]) {\r\n              transEndEventName = transEndEventNames[name];\r\n            }\r\n        }\r\n    }\r\n\r\n    if (!transEndEventName) {\r\n        if (testStyle[\"transition\"] !== undefined) {\r\n            transEndEventName = transEndEventNames[\"transition\"];\r\n        }\r\n    }\r\n\r\n    function normalizeCssEvent(name) {\r\n        return css3EventPrefix ? css3EventPrefix + name : name.toLowerCase();\r\n    }\r\n\r\n    function normalizeCssProperty(name) {\r\n        return cssProps[name] || name;\r\n    }\r\n\r\n    function normalizeStyleProperty(name) {\r\n        return cssStyles[name] || name;\r\n    }\r\n\r\n    langx.mixin(browser, {\r\n        css3PropPrefix: css3PropPrefix,\r\n\r\n        isIE : !!/msie/i.exec( window.navigator.userAgent ),\r\n\r\n        normalizeStyleProperty: normalizeStyleProperty,\r\n\r\n        normalizeCssProperty: normalizeCssProperty,\r\n\r\n        normalizeCssEvent: normalizeCssEvent,\r\n\r\n        matchesSelector: matchesSelector,\r\n\r\n        requestFullScreen : requestFullScreen,\r\n\r\n        exitFullscreen : requestFullScreen,\r\n\r\n        location: function() {\r\n            return window.location;\r\n        },\r\n\r\n        support : {\r\n\r\n        }\r\n\r\n    });\r\n\r\n    if  (transEndEventName) {\r\n        browser.support.transition = {\r\n            end : transEndEventName\r\n        };\r\n    }\r\n\r\n    testEl = null;\r\n\r\n    return dom.browser = browser;\r\n});\r\n\ndefine('skylark-utils-dom/styler',[\r\n    \"./dom\",\r\n    \"./langx\"\r\n], function(dom, langx) {\r\n    var every = Array.prototype.every,\r\n        forEach = Array.prototype.forEach,\r\n        camelCase = langx.camelCase,\r\n        dasherize = langx.dasherize;\r\n\r\n    function maybeAddPx(name, value) {\r\n        return (typeof value == \"number\" && !cssNumber[dasherize(name)]) ? value + \"px\" : value\r\n    }\r\n\r\n    var cssNumber = {\r\n            'column-count': 1,\r\n            'columns': 1,\r\n            'font-weight': 1,\r\n            'line-height': 1,\r\n            'opacity': 1,\r\n            'z-index': 1,\r\n            'zoom': 1\r\n        },\r\n        classReCache = {\r\n\r\n        };\r\n\r\n    function classRE(name) {\r\n        return name in classReCache ?\r\n            classReCache[name] : (classReCache[name] = new RegExp('(^|\\\\s)' + name + '(\\\\s|$)'));\r\n    }\r\n\r\n    // access className property while respecting SVGAnimatedString\r\n    /*\r\n     * Adds the specified class(es) to each element in the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {String} value\r\n     */\r\n    function className(node, value) {\r\n        var klass = node.className || '',\r\n            svg = klass && klass.baseVal !== undefined\r\n\r\n        if (value === undefined) return svg ? klass.baseVal : klass\r\n        svg ? (klass.baseVal = value) : (node.className = value)\r\n    }\r\n\r\n    function disabled(elm, value ) {\r\n        if (arguments.length < 2) {\r\n            return !!this.dom.disabled;\r\n        }\r\n\r\n        elm.disabled = value;\r\n\r\n        return this;\r\n    }\r\n\r\n    var elementDisplay = {};\r\n\r\n    function defaultDisplay(nodeName) {\r\n        var element, display\r\n        if (!elementDisplay[nodeName]) {\r\n            element = document.createElement(nodeName)\r\n            document.body.appendChild(element)\r\n            display = getStyles(element).getPropertyValue(\"display\")\r\n            element.parentNode.removeChild(element)\r\n            display == \"none\" && (display = \"block\")\r\n            elementDisplay[nodeName] = display\r\n        }\r\n        return elementDisplay[nodeName]\r\n    }\r\n    /*\r\n     * Display the matched elements.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function show(elm) {\r\n        styler.css(elm, \"display\", \"\");\r\n        if (styler.css(elm, \"display\") == \"none\") {\r\n            styler.css(elm, \"display\", defaultDisplay(elm.nodeName));\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function isInvisible(elm) {\r\n        return styler.css(elm, \"display\") == \"none\" || styler.css(elm, \"opacity\") == 0;\r\n    }\r\n\r\n    /*\r\n     * Hide the matched elements.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function hide(elm) {\r\n        styler.css(elm, \"display\", \"none\");\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Adds the specified class(es) to each element in the set of matched elements.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function addClass(elm, name) {\r\n        if (!name) return this\r\n        var cls = className(elm),\r\n            names;\r\n        if (langx.isString(name)) {\r\n            names = name.split(/\\s+/g);\r\n        } else {\r\n            names = name;\r\n        }\r\n        names.forEach(function(klass) {\r\n            var re = classRE(klass);\r\n            if (!cls.match(re)) {\r\n                cls += (cls ? \" \" : \"\") + klass;\r\n            }\r\n        });\r\n\r\n        className(elm, cls);\r\n\r\n        return this;\r\n    }\r\n\r\n    function getStyles( elem ) {\r\n\r\n        // Support: IE <=11 only, Firefox <=30 (#15098, #14150)\r\n        // IE throws on elements created in popups\r\n        // FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\r\n        var view = elem.ownerDocument.defaultView;\r\n\r\n        if ( !view || !view.opener ) {\r\n            view = window;\r\n        }\r\n\r\n        return view.getComputedStyle( elem);\r\n    }\r\n\r\n\r\n    /*\r\n     * Get the value of a computed style property for the first element in the set of matched elements or set one or more CSS properties for every matched element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} property\r\n     * @param {Any} value\r\n     */\r\n    function css(elm, property, value) {\r\n        if (arguments.length < 3) {\r\n            var computedStyle,\r\n                computedStyle = getStyles(elm)\r\n            if (langx.isString(property)) {\r\n                return elm.style[camelCase(property)] || computedStyle.getPropertyValue(dasherize(property))\r\n            } else if (langx.isArrayLike(property)) {\r\n                var props = {}\r\n                forEach.call(property, function(prop) {\r\n                    props[prop] = (elm.style[camelCase(prop)] || computedStyle.getPropertyValue(dasherize(prop)))\r\n                })\r\n                return props\r\n            }\r\n        }\r\n\r\n        var css = '';\r\n        if (typeof(property) == 'string') {\r\n            if (!value && value !== 0) {\r\n                elm.style.removeProperty(dasherize(property));\r\n            } else {\r\n                css = dasherize(property) + \":\" + maybeAddPx(property, value)\r\n            }\r\n        } else {\r\n            for (key in property) {\r\n                if (property[key] === undefined) {\r\n                    continue;\r\n                }\r\n                if (!property[key] && property[key] !== 0) {\r\n                    elm.style.removeProperty(dasherize(key));\r\n                } else {\r\n                    css += dasherize(key) + ':' + maybeAddPx(key, property[key]) + ';'\r\n                }\r\n            }\r\n        }\r\n\r\n        elm.style.cssText += ';' + css;\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Determine whether any of the matched elements are assigned the given class.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function hasClass(elm, name) {\r\n        var re = classRE(name);\r\n        return elm.className && elm.className.match(re);\r\n    }\r\n\r\n    /*\r\n     * Remove a single class, multiple classes, or all classes from each element in the set of matched elements.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function removeClass(elm, name) {\r\n        if (name) {\r\n            var cls = className(elm),\r\n                names;\r\n\r\n            if (langx.isString(name)) {\r\n                names = name.split(/\\s+/g);\r\n            } else {\r\n                names = name;\r\n            }\r\n\r\n            names.forEach(function(klass) {\r\n                var re = classRE(klass);\r\n                if (cls.match(re)) {\r\n                    cls = cls.replace(re, \" \");\r\n                }\r\n            });\r\n\r\n            className(elm, cls.trim());\r\n        } else {\r\n            className(elm, \"\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Add or remove one or more classes from the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     * @param {} when\r\n     */\r\n    function toggleClass(elm, name, when) {\r\n        var self = this;\r\n        name.split(/\\s+/g).forEach(function(klass) {\r\n            if (when === undefined) {\r\n                when = !self.hasClass(elm, klass);\r\n            }\r\n            if (when) {\r\n                self.addClass(elm, klass);\r\n            } else {\r\n                self.removeClass(elm, klass)\r\n            }\r\n        });\r\n\r\n        return self;\r\n    }\r\n\r\n    var styler = function() {\r\n        return styler;\r\n    };\r\n\r\n    langx.mixin(styler, {\r\n        autocssfix: false,\r\n        cssHooks: {\r\n\r\n        },\r\n\r\n        addClass: addClass,\r\n        className: className,\r\n        css: css,\r\n        disabled : disabled,        \r\n        hasClass: hasClass,\r\n        hide: hide,\r\n        isInvisible: isInvisible,\r\n        removeClass: removeClass,\r\n        show: show,\r\n        toggleClass: toggleClass\r\n    });\r\n\r\n    return dom.styler = styler;\r\n});\ndefine('skylark-utils-dom/noder',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./styler\"\r\n], function(dom, langx, browser, styler) {\r\n    var isIE = !!navigator.userAgent.match(/Trident/g) || !!navigator.userAgent.match(/MSIE/g),\r\n        fragmentRE = /^\\s*<(\\w+|!)[^>]*>/,\r\n        singleTagRE = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\r\n        div = document.createElement(\"div\"),\r\n        table = document.createElement('table'),\r\n        tableBody = document.createElement('tbody'),\r\n        tableRow = document.createElement('tr'),\r\n        containers = {\r\n            'tr': tableBody,\r\n            'tbody': table,\r\n            'thead': table,\r\n            'tfoot': table,\r\n            'td': tableRow,\r\n            'th': tableRow,\r\n            '*': div\r\n        },\r\n        rootNodeRE = /^(?:body|html)$/i,\r\n        map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    function ensureNodes(nodes, copyByClone) {\r\n        if (!langx.isArrayLike(nodes)) {\r\n            nodes = [nodes];\r\n        }\r\n        if (copyByClone) {\r\n            nodes = map.call(nodes, function(node) {\r\n                return node.cloneNode(true);\r\n            });\r\n        }\r\n        return langx.flatten(nodes);\r\n    }\r\n\r\n    function nodeName(elm, chkName) {\r\n        var name = elm.nodeName && elm.nodeName.toLowerCase();\r\n        if (chkName !== undefined) {\r\n            return name === chkName.toLowerCase();\r\n        }\r\n        return name;\r\n    };\r\n\r\n\r\n    function activeElement(doc) {\r\n        doc = doc || document;\r\n        var el;\r\n\r\n        // Support: IE 9 only\r\n        // IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\r\n        try {\r\n            el = doc.activeElement;\r\n        } catch ( error ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        // Support: IE 9 - 11 only\r\n        // IE may return null instead of an element\r\n        // Interestingly, this only seems to occur when NOT in an iframe\r\n        if ( !el ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        // Support: IE 11 only\r\n        // IE11 returns a seemingly empty object in some cases when accessing\r\n        // document.activeElement from an <iframe>\r\n        if ( !el.nodeName ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        return el;\r\n    };\r\n\r\n    function enhancePlaceContent(placing,node) {\r\n        if (langx.isFunction(placing)) {\r\n            return placing.apply(node,[]);\r\n        }\r\n        if (langx.isArrayLike(placing)) {\r\n            var neddsFlattern;\r\n            for (var i=0;i<placing.length;i++) {\r\n                if (langx.isFunction(placing[i])) {\r\n                    placing[i] = placing[i].apply(node,[]);\r\n                    if (langx.isArrayLike(placing[i])) {\r\n                        neddsFlattern = true;\r\n                    }\r\n                }\r\n            }\r\n            if (neddsFlattern) {\r\n                placing = langx.flatten(placing);\r\n            }\r\n        }\r\n        return placing;\r\n    }\r\n    function after(node, placing, copyByClone) {\r\n        placing = enhancePlaceContent(placing,node);\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone),\r\n                refNode = refNode.nextSibling;\r\n\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                if (refNode) {\r\n                    parent.insertBefore(nodes[i], refNode);\r\n                } else {\r\n                    parent.appendChild(nodes[i]);\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function append(node, placing, copyByClone) {\r\n        placing = enhancePlaceContent(placing,node);\r\n        var parentNode = node,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            parentNode.appendChild(nodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function before(node, placing, copyByClone) {\r\n        placing = enhancePlaceContent(placing,node);\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone);\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                parent.insertBefore(nodes[i], refNode);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    /*   \r\n     * Get the children of the specified node, including text and comment nodes.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function contents(elm) {\r\n        if (nodeName(elm, \"iframe\")) {\r\n            return elm.contentDocument;\r\n        }\r\n        return elm.childNodes;\r\n    }\r\n\r\n    /*   \r\n     * Create a element and set attributes on it.\r\n     * @param {HTMLElement} tag\r\n     * @param {props} props\r\n     * @param } parent\r\n     */\r\n    function createElement(tag, props, parent) {\r\n        var node = document.createElement(tag);\r\n        if (props) {\r\n            for (var name in props) {\r\n                node.setAttribute(name, props[name]);\r\n            }\r\n        }\r\n        if (parent) {\r\n            append(parent, node);\r\n        }\r\n        return node;\r\n    }\r\n\r\n    /*   \r\n     * Create a DocumentFragment from the HTML fragment.\r\n     * @param {String} html\r\n     */\r\n    function createFragment(html) {\r\n        // A special case optimization for a single tag\r\n        html = langx.trim(html);\r\n        if (singleTagRE.test(html)) {\r\n            return [createElement(RegExp.$1)];\r\n        }\r\n\r\n        var name = fragmentRE.test(html) && RegExp.$1\r\n        if (!(name in containers)) {\r\n            name = \"*\"\r\n        }\r\n        var container = containers[name];\r\n        container.innerHTML = \"\" + html;\r\n        dom = slice.call(container.childNodes);\r\n\r\n        dom.forEach(function(node) {\r\n            container.removeChild(node);\r\n        })\r\n\r\n        return dom;\r\n    }\r\n\r\n    /*   \r\n     * Create a deep copy of the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {Boolean} deep\r\n     */\r\n    function clone(node, deep) {\r\n        var self = this,\r\n            clone;\r\n\r\n        // TODO: Add feature detection here in the future\r\n        if (!isIE || node.nodeType !== 1 || deep) {\r\n            return node.cloneNode(deep);\r\n        }\r\n\r\n        // Make a HTML5 safe shallow copy\r\n        if (!deep) {\r\n            clone = document.createElement(node.nodeName);\r\n\r\n            // Copy attribs\r\n            each(self.getAttribs(node), function(attr) {\r\n                self.setAttrib(clone, attr.nodeName, self.getAttrib(node, attr.nodeName));\r\n            });\r\n\r\n            return clone;\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node .\r\n     * @param {String} node\r\n     * @param {Node} child\r\n     */\r\n    function contains(node, child) {\r\n        return isChildOf(child, node);\r\n    }\r\n\r\n    /*   \r\n     * Create a new Text node.\r\n     * @param {String} text\r\n     * @param {Node} child\r\n     */\r\n    function createTextNode(text) {\r\n        return document.createTextNode(text);\r\n    }\r\n\r\n    /*   \r\n     * Get the current document object.\r\n     */\r\n    function doc() {\r\n        return document;\r\n    }\r\n\r\n    /*   \r\n     * Remove all child nodes of the set of matched elements from the DOM.\r\n     * @param {Object} node\r\n     */\r\n    function empty(node) {\r\n        while (node.hasChildNodes()) {\r\n            var child = node.firstChild;\r\n            node.removeChild(child);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    var fulledEl = null;\r\n\r\n    function fullScreen(el) {\r\n        if (el === false) {\r\n            browser.exitFullScreen.apply(document);\r\n        } else if (el) {\r\n            browser.requestFullScreen.apply(el);\r\n            fulledEl = el;\r\n        } else {\r\n            return (\r\n                document.fullscreenElement ||\r\n                document.webkitFullscreenElement ||\r\n                document.mozFullScreenElement ||\r\n                document.msFullscreenElement\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    // Selectors\r\n    function focusable( element, hasTabindex ) {\r\n        var map, mapName, img, focusableIfVisible, fieldset,\r\n            nodeName = element.nodeName.toLowerCase();\r\n\r\n        if ( \"area\" === nodeName ) {\r\n            map = element.parentNode;\r\n            mapName = map.name;\r\n            if ( !element.href || !mapName || map.nodeName.toLowerCase() !== \"map\" ) {\r\n                return false;\r\n            }\r\n            img = $( \"img[usemap='#\" + mapName + \"']\" );\r\n            return img.length > 0 && img.is( \":visible\" );\r\n        }\r\n\r\n        if ( /^(input|select|textarea|button|object)$/.test( nodeName ) ) {\r\n            focusableIfVisible = !element.disabled;\r\n\r\n            if ( focusableIfVisible ) {\r\n\r\n                // Form controls within a disabled fieldset are disabled.\r\n                // However, controls within the fieldset's legend do not get disabled.\r\n                // Since controls generally aren't placed inside legends, we skip\r\n                // this portion of the check.\r\n                fieldset = $( element ).closest( \"fieldset\" )[ 0 ];\r\n                if ( fieldset ) {\r\n                    focusableIfVisible = !fieldset.disabled;\r\n                }\r\n            }\r\n        } else if ( \"a\" === nodeName ) {\r\n            focusableIfVisible = element.href || hasTabindex;\r\n        } else {\r\n            focusableIfVisible = hasTabindex;\r\n        }\r\n\r\n        return focusableIfVisible && $( element ).is( \":visible\" ) && visible( $( element ) );\r\n    };\r\n\r\n\r\n   var rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/gi;\r\n \r\n    /*   \r\n     * Get the HTML contents of the first element in the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {String} html\r\n     */\r\n    function html(node, html) {\r\n        if (html === undefined) {\r\n            return node.innerHTML;\r\n        } else {\r\n            this.empty(node);\r\n            html = html || \"\";\r\n            if (langx.isString(html)) {\r\n                html = html.replace( rxhtmlTag, \"<$1></$2>\" );\r\n            }\r\n            if (langx.isString(html) || langx.isNumber(html)) {               \r\n                node.innerHTML = html;\r\n            } else if (langx.isArrayLike(html)) {\r\n                for (var i = 0; i < html.length; i++) {\r\n                    node.appendChild(html[i]);\r\n                }\r\n            } else {\r\n                node.appendChild(html);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node.\r\n     * @param {Node} node\r\n     * @param {Node} parent\r\n     * @param {Node} directly\r\n     */\r\n    function isChildOf(node, parent, directly) {\r\n        if (directly) {\r\n            return node.parentNode === parent;\r\n        }\r\n        if (document.documentElement.contains) {\r\n            return parent.contains(node);\r\n        }\r\n        while (node) {\r\n            if (parent === node) {\r\n                return true;\r\n            }\r\n\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is a document.\r\n     * @param {Node} node\r\n     */\r\n    function isDocument(node) {\r\n        return node != null && node.nodeType == node.DOCUMENT_NODE\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is in the document\r\n     * @param {Node} node\r\n     */\r\n    function isInDocument(node) {\r\n      return (node === document.body) ? true : document.body.contains(node);\r\n    }        \r\n\r\n    /*   \r\n     * Get the owner document object for the specified element.\r\n     * @param {Node} elm\r\n     */\r\n    function ownerDoc(elm) {\r\n        if (!elm) {\r\n            return document;\r\n        }\r\n\r\n        if (elm.nodeType == 9) {\r\n            return elm;\r\n        }\r\n\r\n        return elm.ownerDocument;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     */\r\n    function ownerWindow(elm) {\r\n        var doc = ownerDoc(elm);\r\n        return doc.defaultView || doc.parentWindow;\r\n    }\r\n\r\n    /*   \r\n     * insert one or more nodes as the first children of the specified node.\r\n     * @param {Node} node\r\n     * @param {Node or ArrayLike} placing\r\n     * @param {Boolean Optional} copyByClone\r\n     */\r\n    function prepend(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            refNode = parentNode.firstChild,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            if (refNode) {\r\n                parentNode.insertBefore(nodes[i], refNode);\r\n            } else {\r\n                parentNode.appendChild(nodes[i]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     */\r\n    function offsetParent(elm) {\r\n        var parent = elm.offsetParent || document.body;\r\n        while (parent && !rootNodeRE.test(parent.nodeName) && styler.css(parent, \"position\") == \"static\") {\r\n            parent = parent.offsetParent;\r\n        }\r\n        return parent;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     * @param {Node} params\r\n     */\r\n    function overlay(elm, params) {\r\n        var overlayDiv = createElement(\"div\", params);\r\n        styler.css(overlayDiv, {\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            zIndex: 0x7FFFFFFF,\r\n            opacity: 0.7\r\n        });\r\n        elm.appendChild(overlayDiv);\r\n        return overlayDiv;\r\n\r\n    }\r\n\r\n    /*   \r\n     * Remove the set of matched elements from the DOM.\r\n     * @param {Node} node\r\n     */\r\n    function remove(node) {\r\n        if (node && node.parentNode) {\r\n            try {\r\n                node.parentNode.removeChild(node);\r\n            } catch (e) {\r\n                console.warn(\"The node is already removed\", e);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function removeChild(node,children) {\r\n        if (!langx.isArrayLike(children)) {\r\n            children = [children];\r\n        }\r\n        for (var i=0;i<children.length;i++) {\r\n            node.removeChild(children[i]);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function scrollParent( elm, includeHidden ) {\r\n        var position = styler.css(elm,\"position\" ),\r\n            excludeStaticParent = position === \"absolute\",\r\n            overflowRegex = includeHidden ? /(auto|scroll|hidden)/ : /(auto|scroll)/,\r\n            scrollParent = this.parents().filter( function() {\r\n                var parent = $( this );\r\n                if ( excludeStaticParent && parent.css( \"position\" ) === \"static\" ) {\r\n                    return false;\r\n                }\r\n                return overflowRegex.test( parent.css( \"overflow\" ) + parent.css( \"overflow-y\" ) +\r\n                    parent.css( \"overflow-x\" ) );\r\n            } ).eq( 0 );\r\n\r\n        return position === \"fixed\" || !scrollParent.length ?\r\n            $( this[ 0 ].ownerDocument || document ) :\r\n            scrollParent;\r\n    };\r\n\r\n        /*   \r\n     * Replace an old node with the specified node.\r\n     * @param {Node} node\r\n     * @param {Node} oldNode\r\n     */\r\n    function replace(node, oldNode) {\r\n        oldNode.parentNode.replaceChild(node, oldNode);\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Replace an old node with the specified node.\r\n     * @param {HTMLElement} elm\r\n     * @param {Node} params\r\n     */\r\n    function throb(elm, params) {\r\n        params = params || {};\r\n        var self = this,\r\n            text = params.text,\r\n            style = params.style,\r\n            time = params.time,\r\n            callback = params.callback,\r\n            timer,\r\n\r\n            throbber = this.createElement(\"div\", {\r\n                \"class\": params.className || \"throbber\"\r\n            }),\r\n            _overlay = overlay(throbber, {\r\n                \"class\": 'overlay fade'\r\n            }),\r\n            throb = this.createElement(\"div\", {\r\n                \"class\": \"throb\"\r\n            }),\r\n            textNode = this.createTextNode(text || \"\"),\r\n            remove = function() {\r\n                if (timer) {\r\n                    clearTimeout(timer);\r\n                    timer = null;\r\n                }\r\n                if (throbber) {\r\n                    self.remove(throbber);\r\n                    throbber = null;\r\n                }\r\n            },\r\n            update = function(params) {\r\n                if (params && params.text && throbber) {\r\n                    textNode.nodeValue = params.text;\r\n                }\r\n            };\r\n        if (params.style) {\r\n            styler.css(throbber,params.style);\r\n        }\r\n        throb.appendChild(textNode);\r\n        throbber.appendChild(throb);\r\n        elm.appendChild(throbber);\r\n        var end = function() {\r\n            remove();\r\n            if (callback) callback();\r\n        };\r\n        if (time) {\r\n            timer = setTimeout(end, time);\r\n        }\r\n\r\n        return {\r\n            remove: remove,\r\n            update: update\r\n        };\r\n    }\r\n\r\n\r\n    /*   \r\n     * traverse the specified node and its descendants, perform the callback function on each\r\n     * @param {Node} node\r\n     * @param {Function} fn\r\n     */\r\n    function traverse(node, fn) {\r\n        fn(node)\r\n        for (var i = 0, len = node.childNodes.length; i < len; i++) {\r\n            traverse(node.childNodes[i], fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} node\r\n     */\r\n    function reverse(node) {\r\n        var firstChild = node.firstChild;\r\n        for (var i = node.children.length - 1; i > 0; i--) {\r\n            if (i > 0) {\r\n                var child = node.children[i];\r\n                node.insertBefore(child, firstChild);\r\n            }\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Wrap an HTML structure around each element in the set of matched elements.\r\n     * @param {Node} node\r\n     * @param {Node} wrapperNode\r\n     */\r\n    function wrapper(node, wrapperNode) {\r\n        if (langx.isString(wrapperNode)) {\r\n            wrapperNode = this.createFragment(wrapperNode).firstChild;\r\n        }\r\n        node.parentNode.insertBefore(wrapperNode, node);\r\n        wrapperNode.appendChild(node);\r\n    }\r\n\r\n    /*   \r\n     * Wrap an HTML structure around the content of each element in the set of matched\r\n     * @param {Node} node\r\n     * @param {Node} wrapperNode\r\n     */\r\n    function wrapperInner(node, wrapperNode) {\r\n        var childNodes = slice.call(node.childNodes);\r\n        node.appendChild(wrapperNode);\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            wrapperNode.appendChild(childNodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Remove the parents of the set of matched elements from the DOM, leaving the matched\r\n     * @param {Node} node\r\n     */\r\n    function unwrap(node) {\r\n        var child, parent = node.parentNode;\r\n        if (parent) {\r\n            if (this.isDoc(parent.parentNode)) return;\r\n            parent.parentNode.insertBefore(node, parent);\r\n        }\r\n    }\r\n\r\n    function noder() {\r\n        return noder;\r\n    }\r\n\r\n    langx.mixin(noder, {\r\n        active  : activeElement,\r\n\r\n        blur : function(el) {\r\n            el.blur();\r\n        },\r\n\r\n        body: function() {\r\n            return document.body;\r\n        },\r\n\r\n        clone: clone,\r\n        contents: contents,\r\n\r\n        createElement: createElement,\r\n\r\n        createFragment: createFragment,\r\n\r\n        contains: contains,\r\n\r\n        createTextNode: createTextNode,\r\n\r\n        doc: doc,\r\n\r\n        empty: empty,\r\n\r\n        fullScreen: fullScreen,\r\n\r\n        focusable: focusable,\r\n\r\n        html: html,\r\n\r\n        isChildOf: isChildOf,\r\n\r\n        isDocument: isDocument,\r\n\r\n        isInDocument: isInDocument,\r\n\r\n        isWindow: langx.isWindow,\r\n\r\n        nodeName : nodeName,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        ownerDoc: ownerDoc,\r\n\r\n        ownerWindow: ownerWindow,\r\n\r\n        after: after,\r\n\r\n        before: before,\r\n\r\n        prepend: prepend,\r\n\r\n        append: append,\r\n\r\n        remove: remove,\r\n\r\n        removeChild : removeChild,\r\n\r\n        replace: replace,\r\n\r\n        throb: throb,\r\n\r\n        traverse: traverse,\r\n\r\n        reverse: reverse,\r\n\r\n        wrapper: wrapper,\r\n\r\n        wrapperInner: wrapperInner,\r\n\r\n        unwrap: unwrap\r\n    });\r\n\r\n    return dom.noder = noder;\r\n});\ndefine('skylark-utils-dom/css',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./noder\"\r\n], function(dom, langx, noder) {\r\n    \"use strict\";\r\n\r\n    var head = document.getElementsByTagName(\"head\")[0],\r\n        count = 0,\r\n        sheetsByUrl = {},\r\n        sheetsById = {},\r\n        defaultSheetId = _createStyleSheet(),\r\n        defaultSheet = sheetsById[defaultSheetId],\r\n        rulesPropName = (\"cssRules\" in defaultSheet) ? \"cssRules\" : \"rules\",\r\n        insertRuleFunc,\r\n        deleteRuleFunc = defaultSheet.deleteRule || defaultSheet.removeRule;\r\n\r\n    if (defaultSheet.insertRule) {\r\n        var _insertRule = defaultSheet.insertRule;\r\n        insertRuleFunc = function(selector, css, index) {\r\n            _insertRule.call(this, selector + \"{\" + css + \"}\", index);\r\n        };\r\n    } else {\r\n        insertRuleFunc = defaultSheet.addRule;\r\n    }\r\n\r\n    function normalizeSelector(selectorText) {\r\n        var selector = [],\r\n            last, len;\r\n        last = defaultSheet[rulesPropName].length;\r\n        insertRuleFunc.call(defaultSheet, selectorText, ';');\r\n        len = defaultSheet[rulesPropName].length;\r\n        for (var i = len - 1; i >= last; i--) {\r\n            selector.push(_sheet[_rules][i].selectorText);\r\n            deleteRuleFunc.call(defaultSheet, i);\r\n        }\r\n        return selector.reverse().join(', ');\r\n    }\r\n\r\n    /*\r\n     * create a stylesheet element.\r\n     * @param {Boolean} external\r\n     * @param {Object} options\r\n     * @param {String} [options.media = null]\r\n     */\r\n    function _createStyleSheet(external,options ) {\r\n        var node,\r\n            props = {\r\n                type : \"text/css\"\r\n            },\r\n            id = (count++);\r\n\r\n        options = options || {};\r\n        if (options.media) {\r\n            props.media = options.media;\r\n        }\r\n\r\n        if (external) {\r\n            node = noder.create(\"link\",langx.mixin(props,{\r\n                rel  : \"stylesheet\",\r\n                async : false\r\n            }));\r\n        } else {\r\n            node = noder.createElement(\"style\",props);\r\n        }\r\n\r\n        noder.append(head,node);\r\n        sheetsById[id] = {\r\n            id : id,\r\n            node :node\r\n        };\r\n\r\n        return id;\r\n    }\r\n\r\n    function createStyleSheet(css,options) {\r\n        if (!options) {\r\n            options = {};\r\n        }\r\n        var sheetId = _createStyleSheet(false,options);\r\n        if (css) {\r\n            addSheetRules(sheetId,css);\r\n        }\r\n\r\n        return sheetId;\r\n    }\r\n\r\n    function loadStyleSheet(url, options,loadedCallback, errorCallback) {\r\n        if (langx.isFunction(options)) {\r\n            errorCallback = loadedCallback;\r\n            loadedCallback = options;\r\n            options = {};\r\n        }\r\n        var sheet = sheetsByUrl[url];\r\n        if (!sheet) {\r\n            var sheetId = _createStyleSheet(true,options);\r\n\r\n            sheet = sheetsByUrl[url] = sheetsById[sheetId];\r\n            langx.mixin(sheet,{\r\n                state: 0, //0:unload,1:loaded,-1:loaderror\r\n                url : url,\r\n                deferred : new langx.Deferred()\r\n            });\r\n\r\n            var node = sheet.node;\r\n\r\n            startTime = new Date().getTime();\r\n\r\n            node.onload = function() {\r\n                sheet.state = 1;\r\n                sheet.deferred.resolve(sheet.id);\r\n            },\r\n            node.onerror = function(e) {\r\n                sheet.state = -1;\r\n                sheet.deferred.reject(e);\r\n            };\r\n\r\n            node.href = sheet.url;\r\n        }\r\n        if (loadedCallback || errorCallback) {\r\n            sheet.deferred.promise.then(loadedCallback,errorCallback);\r\n        }\r\n        return sheet.id;\r\n    }\r\n\r\n    function deleteSheetRule(sheetId, rule) {\r\n        var sheet = sheetsById[sheetId];\r\n        if (langx.isNumber(rule)) {\r\n            deleteRuleFunc.call(sheet, rule);\r\n        } else {\r\n            langx.each(sheet[rulesPropName], function(i, _rule) {\r\n                if (rule === _rule) {\r\n                    deleteRuleFunc.call(sheet, i);\r\n                    return false;\r\n                }\r\n            });\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function deleteRule(rule) {\r\n        deleteSheetRule(defaultSheetId, rule);\r\n        return this;\r\n    }\r\n\r\n    function removeStyleSheet(sheetId) {\r\n        if (sheetId === defaultSheetId) {\r\n            throw new Error(\"The default stylesheet can not be deleted\");\r\n        }\r\n        var sheet = sheetsById[sheetId];\r\n        delete sheetsById[sheetId];\r\n\r\n        noder.remove(sheet.node);\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * insert a rule to the default stylesheet.\r\n     * @param {String} selector\r\n     * @param {String} css\r\n     * @param {Number} index \r\n     */\r\n    function insertRule(selector, css, index) {\r\n        return this.insertSheetRule(defaultSheetId, selector, css, index);\r\n    }\r\n\r\n    /*\r\n     * Add rules to the default stylesheet.\r\n     * @param {Object} rules\r\n     */\r\n    function addRules(rules) {\r\n        return this.addRules(defaultSheetId,rules);\r\n    }\r\n\r\n    /*\r\n     * insert a rule to the stylesheet specified by sheetId.\r\n     * @param {Number} sheetId  \r\n     * @param {String} selector\r\n     * @param {String} css\r\n     * @param {Number} index \r\n     */\r\n    function insertSheetRule(sheetId, selector, css, index) {\r\n        if (!selector || !css) {\r\n            return -1;\r\n        }\r\n\r\n        var sheet = sheetsById[sheetId];\r\n        index = index || sheet[rulesPropName].length;\r\n\r\n        return insertRuleFunc.call(sheet, selector, css, index);\r\n    }\r\n\r\n    /*\r\n     * Add  rules to stylesheet.\r\n     * @param {Number} sheetId  \r\n     * @param {Object|String} rules\r\n     * @return this\r\n     * @example insertSheetRules(sheetId,{\r\n     * \r\n     * });\r\n     */\r\n    function addSheetRules(sheetId,rules) {\r\n        var sheet = sheetsById[sheetId],\r\n            css;\r\n        if (langx.isString(rules)) {\r\n            css = rules;\r\n        } else {\r\n            css = toString(rules);\r\n        }\r\n\r\n        noder.append(sheet.node,noder.createTextNode(css));\r\n        \r\n        return this;\r\n    }\r\n\r\n    function isAtRule(str) {\r\n        return str.startsWith(\"@\");\r\n    }\r\n\r\n    function toString(json){\r\n        var adjust = function(parentName,name,depth) {\r\n            if (parentName) {\r\n                if (isAtRule(parentName)) {\r\n                    depth += 1;\r\n                } else {\r\n                    name =  parentName + \" \" + name;\r\n                }                \r\n            }\r\n            return {\r\n                name : name,\r\n                depth : depth\r\n            }\r\n        };\r\n\r\n        var strNode = function (name, values, depth) {\r\n            var str = \"\",\r\n                atFlg = isAtRule(name);\r\n\r\n\r\n            if (isAtRule(name)) {\r\n                // at rule\r\n                if (langx.isString(values)) {\r\n                    // an at rule without block\r\n                    // ex: (1) @charset 'utf8';\r\n                    str = css.SPACE.repeat(depth) + name.trim() + \" \\\"\" + values.trim() + \" \\\";\\n\";\r\n                } else {\r\n                    // an at rule with block, ex :\r\n                    //  @media 'screen' {\r\n                    //  }\r\n                    str += css.SPACE.repeat(depth) + name.trim() + \" {\\n\";\r\n                    str += strNode(\"\",values,depth+1);\r\n                    str += css.SPACE.repeat(depth) + \" }\\n\";\r\n                }\r\n            } else {\r\n                // a selector or a property\r\n                if (langx.isString(values)) {\r\n                    // a css property \r\n                    // ex : (1) font-color : red;\r\n                    str = css.SPACE.repeat(depth) + name.trim() ;\r\n                    if (atFlg) {\r\n                        str = str +  \" \\\"\" + values.trim() + \" \\\";\\n\";\r\n                    } else {\r\n                        str = str + ': ' + values.trim() + \";\\n\";\r\n                    }\r\n\r\n                } else {\r\n                    // a selector rule \r\n                    // ex : (1) .class1 : {\r\n                    //            font-color : red;\r\n                    //          }\r\n                    if (langx.isArray(values)) {\r\n                        // array for ordering\r\n                        for (var n =0; n<values.length; n ++) {\r\n                           str +=  strNode(name,values[n],depth);\r\n                        }\r\n                    } else {\r\n                        // plain object\r\n\r\n                        if (name) {\r\n                            str += css.SPACE.repeat(depth) + name.trim() + \" {\\n\";\r\n\r\n                            for (var n in values) {\r\n                                var value =values[n];\r\n                                if (langx.isString(value)) {\r\n                                    // css property\r\n                                    str += strNode(n,value,depth+1)\r\n                                }\r\n                            }\r\n\r\n                            str += css.SPACE.repeat(depth) + \"}\\n\";\r\n                        }\r\n\r\n                        for (var n in values) {\r\n                            var value =values[n];\r\n                            if (!langx.isString(value)) {\r\n                                var adjusted = adjust(name,n,depth);\r\n                                str +=  strNode(adjusted.name,value,adjusted.depth);\r\n                            } \r\n                        }\r\n\r\n                    }\r\n                }\r\n            }   \r\n\r\n            return str;\r\n        };\r\n\r\n\r\n        return strNode(\"\",json,0);\r\n    }\r\n \r\n\r\n    function css() {\r\n        return css;\r\n    }\r\n\r\n    langx.mixin(css, {\r\n        SPACE : \"\\t\",\r\n\r\n        addRules : addRules,\r\n\r\n        addSheetRules : addSheetRules,\r\n\r\n        createStyleSheet: createStyleSheet,\r\n\r\n        deleteSheetRule : deleteSheetRule,\r\n\r\n        deleteRule : deleteRule,\r\n\r\n        insertRule : insertRule,\r\n\r\n        insertSheetRule : insertSheetRule,\r\n\r\n        loadStyleSheet : loadStyleSheet,\r\n\r\n        removeStyleSheet : removeStyleSheet,\r\n\r\n        toString : toString\r\n    });\r\n\r\n    return dom.css = css;\r\n});\r\n\ndefine('skylark-utils-dom/finder',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./noder\"\r\n], function(dom, langx, browser, noder, velm) {\r\n    var local = {},\r\n        filter = Array.prototype.filter,\r\n        slice = Array.prototype.slice,\r\n        nativeMatchesSelector = browser.matchesSelector;\r\n\r\n    /*\r\n    ---\r\n    name: Slick.Parser\r\n    description: Standalone CSS3 Selector parser\r\n    provides: Slick.Parser\r\n    ...\r\n    */\r\n    ;\r\n    (function() {\r\n\r\n        var parsed,\r\n            separatorIndex,\r\n            combinatorIndex,\r\n            reversed,\r\n            cache = {},\r\n            reverseCache = {},\r\n            reUnescape = /\\\\/g;\r\n\r\n        var parse = function(expression, isReversed) {\r\n            if (expression == null) return null;\r\n            if (expression.Slick === true) return expression;\r\n            expression = ('' + expression).replace(/^\\s+|\\s+$/g, '');\r\n            reversed = !!isReversed;\r\n            var currentCache = (reversed) ? reverseCache : cache;\r\n            if (currentCache[expression]) return currentCache[expression];\r\n            parsed = {\r\n                Slick: true,\r\n                expressions: [],\r\n                raw: expression,\r\n                reverse: function() {\r\n                    return parse(this.raw, true);\r\n                }\r\n            };\r\n            separatorIndex = -1;\r\n            while (expression != (expression = expression.replace(regexp, parser)));\r\n            parsed.length = parsed.expressions.length;\r\n            return currentCache[parsed.raw] = (reversed) ? reverse(parsed) : parsed;\r\n        };\r\n\r\n        var reverseCombinator = function(combinator) {\r\n            if (combinator === '!') return ' ';\r\n            else if (combinator === ' ') return '!';\r\n            else if ((/^!/).test(combinator)) return combinator.replace(/^!/, '');\r\n            else return '!' + combinator;\r\n        };\r\n\r\n        var reverse = function(expression) {\r\n            var expressions = expression.expressions;\r\n            for (var i = 0; i < expressions.length; i++) {\r\n                var exp = expressions[i];\r\n                var last = {\r\n                    parts: [],\r\n                    tag: '*',\r\n                    combinator: reverseCombinator(exp[0].combinator)\r\n                };\r\n\r\n                for (var j = 0; j < exp.length; j++) {\r\n                    var cexp = exp[j];\r\n                    if (!cexp.reverseCombinator) cexp.reverseCombinator = ' ';\r\n                    cexp.combinator = cexp.reverseCombinator;\r\n                    delete cexp.reverseCombinator;\r\n                }\r\n\r\n                exp.reverse().push(last);\r\n            }\r\n            return expression;\r\n        };\r\n\r\n        var escapeRegExp = (function() {\r\n            // Credit: XRegExp 0.6.1 (c) 2007-2008 Steven Levithan <http://stevenlevithan.com/regex/xregexp/> MIT License\r\n            var from = /(?=[\\-\\[\\]{}()*+?.\\\\\\^$|,#\\s])/g,\r\n                to = '\\\\';\r\n            return function(string) {\r\n                return string.replace(from, to)\r\n            }\r\n        }())\r\n\r\n        var regexp = new RegExp(\r\n            \"^(?:\\\\s*(,)\\\\s*|\\\\s*(<combinator>+)\\\\s*|(\\\\s+)|(<unicode>+|\\\\*)|\\\\#(<unicode>+)|\\\\.(<unicode>+)|\\\\[\\\\s*(<unicode1>+)(?:\\\\s*([*^$!~|]?=)(?:\\\\s*(?:([\\\"']?)(.*?)\\\\9)))?\\\\s*\\\\](?!\\\\])|(:+)(<unicode>+)(?:\\\\((?:(?:([\\\"'])([^\\\\13]*)\\\\13)|((?:\\\\([^)]+\\\\)|[^()]*)+))\\\\))?)\"\r\n            .replace(/<combinator>/, '[' + escapeRegExp(\">+~`!@$%^&={}\\\\;</\") + ']')\r\n            .replace(/<unicode>/g, '(?:[\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n            .replace(/<unicode1>/g, '(?:[:\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n        );\r\n\r\n        function parser(\r\n            rawMatch,\r\n\r\n            separator,\r\n            combinator,\r\n            combinatorChildren,\r\n\r\n            tagName,\r\n            id,\r\n            className,\r\n\r\n            attributeKey,\r\n            attributeOperator,\r\n            attributeQuote,\r\n            attributeValue,\r\n\r\n            pseudoMarker,\r\n            pseudoClass,\r\n            pseudoQuote,\r\n            pseudoClassQuotedValue,\r\n            pseudoClassValue\r\n        ) {\r\n            if (separator || separatorIndex === -1) {\r\n                parsed.expressions[++separatorIndex] = [];\r\n                combinatorIndex = -1;\r\n                if (separator) return '';\r\n            }\r\n\r\n            if (combinator || combinatorChildren || combinatorIndex === -1) {\r\n                combinator = combinator || ' ';\r\n                var currentSeparator = parsed.expressions[separatorIndex];\r\n                if (reversed && currentSeparator[combinatorIndex])\r\n                    currentSeparator[combinatorIndex].reverseCombinator = reverseCombinator(combinator);\r\n                currentSeparator[++combinatorIndex] = {\r\n                    combinator: combinator,\r\n                    tag: '*'\r\n                };\r\n            }\r\n\r\n            var currentParsed = parsed.expressions[separatorIndex][combinatorIndex];\r\n\r\n            if (tagName) {\r\n                currentParsed.tag = tagName.replace(reUnescape, '');\r\n\r\n            } else if (id) {\r\n                currentParsed.id = id.replace(reUnescape, '');\r\n\r\n            } else if (className) {\r\n                className = className.replace(reUnescape, '');\r\n\r\n                if (!currentParsed.classList) currentParsed.classList = [];\r\n                if (!currentParsed.classes) currentParsed.classes = [];\r\n                currentParsed.classList.push(className);\r\n                currentParsed.classes.push({\r\n                    value: className,\r\n                    regexp: new RegExp('(^|\\\\s)' + escapeRegExp(className) + '(\\\\s|$)')\r\n                });\r\n\r\n            } else if (pseudoClass) {\r\n                pseudoClassValue = pseudoClassValue || pseudoClassQuotedValue;\r\n                pseudoClassValue = pseudoClassValue ? pseudoClassValue.replace(reUnescape, '') : null;\r\n\r\n                if (!currentParsed.pseudos) currentParsed.pseudos = [];\r\n                currentParsed.pseudos.push({\r\n                    key: pseudoClass.replace(reUnescape, ''),\r\n                    value: pseudoClassValue,\r\n                    type: pseudoMarker.length == 1 ? 'class' : 'element'\r\n                });\r\n\r\n            } else if (attributeKey) {\r\n                attributeKey = attributeKey.replace(reUnescape, '');\r\n                attributeValue = (attributeValue || '').replace(reUnescape, '');\r\n\r\n                var test, regexp;\r\n\r\n                switch (attributeOperator) {\r\n                    case '^=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue));\r\n                        break;\r\n                    case '$=':\r\n                        regexp = new RegExp(escapeRegExp(attributeValue) + '$');\r\n                        break;\r\n                    case '~=':\r\n                        regexp = new RegExp('(^|\\\\s)' + escapeRegExp(attributeValue) + '(\\\\s|$)');\r\n                        break;\r\n                    case '|=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue) + '(-|$)');\r\n                        break;\r\n                    case '=':\r\n                        test = function(value) {\r\n                            return attributeValue == value;\r\n                        };\r\n                        break;\r\n                    case '*=':\r\n                        test = function(value) {\r\n                            return value && value.indexOf(attributeValue) > -1;\r\n                        };\r\n                        break;\r\n                    case '!=':\r\n                        test = function(value) {\r\n                            return attributeValue != value;\r\n                        };\r\n                        break;\r\n                    default:\r\n                        test = function(value) {\r\n                            return !!value;\r\n                        };\r\n                }\r\n\r\n                if (attributeValue == '' && (/^[*$^]=$/).test(attributeOperator)) test = function() {\r\n                    return false;\r\n                };\r\n\r\n                if (!test) test = function(value) {\r\n                    return value && regexp.test(value);\r\n                };\r\n\r\n                if (!currentParsed.attributes) currentParsed.attributes = [];\r\n                currentParsed.attributes.push({\r\n                    key: attributeKey,\r\n                    operator: attributeOperator,\r\n                    value: attributeValue,\r\n                    test: test\r\n                });\r\n\r\n            }\r\n\r\n            return '';\r\n        };\r\n\r\n        // Slick NS\r\n\r\n        var Slick = (this.Slick || {});\r\n\r\n        Slick.parse = function(expression) {\r\n            return parse(expression);\r\n        };\r\n\r\n        Slick.escapeRegExp = escapeRegExp;\r\n\r\n        if (!this.Slick) this.Slick = Slick;\r\n\r\n    }).apply(local);\r\n\r\n\r\n    var simpleClassSelectorRE = /^\\.([\\w-]*)$/,\r\n        simpleIdSelectorRE = /^#([\\w-]*)$/,\r\n        rinputs = /^(?:input|select|textarea|button)$/i,\r\n        rheader = /^h\\d$/i,\r\n        slice = Array.prototype.slice;\r\n\r\n\r\n    local.parseSelector = local.Slick.parse;\r\n\r\n\r\n    var pseudos = local.pseudos = {\r\n        // custom pseudos\r\n        \"button\": function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === \"button\" || name === \"button\";\r\n        },\r\n\r\n        'checked': function(elm) {\r\n            return !!elm.checked;\r\n        },\r\n\r\n        'contains': function(elm, idx, nodes, text) {\r\n            if ($(this).text().indexOf(text) > -1) return this\r\n        },\r\n\r\n        'disabled': function(elm) {\r\n            return !!elm.disabled;\r\n        },\r\n\r\n        'enabled': function(elm) {\r\n            return !elm.disabled;\r\n        },\r\n\r\n        'eq': function(elm, idx, nodes, value) {\r\n            return (idx == value);\r\n        },\r\n\r\n        'even': function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 0;\r\n        },\r\n\r\n        'focus': function(elm) {\r\n            return document.activeElement === elm && (elm.href || elm.type || elm.tabindex);\r\n        },\r\n\r\n        'focusable': function( elm ) {\r\n            return noder.focusable(elm, elm.tabindex != null );\r\n        },\r\n\r\n        'first': function(elm, idx) {\r\n            return (idx === 0);\r\n        },\r\n\r\n        'gt': function(elm, idx, nodes, value) {\r\n            return (idx > value);\r\n        },\r\n\r\n        'has': function(elm, idx, nodes, sel) {\r\n            return find(elm, sel);\r\n        },\r\n\r\n        // Element/input types\r\n        \"header\": function(elem) {\r\n            return rheader.test(elem.nodeName);\r\n        },\r\n\r\n        'hidden': function(elm) {\r\n            return !local.pseudos[\"visible\"](elm);\r\n        },\r\n\r\n        \"input\": function(elem) {\r\n            return rinputs.test(elem.nodeName);\r\n        },\r\n\r\n        'last': function(elm, idx, nodes) {\r\n            return (idx === nodes.length - 1);\r\n        },\r\n\r\n        'lt': function(elm, idx, nodes, value) {\r\n            return (idx < value);\r\n        },\r\n\r\n        'not': function(elm, idx, nodes, sel) {\r\n            return !matches(elm, sel);\r\n        },\r\n\r\n        'odd': function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 1;\r\n        },\r\n\r\n        /*   \r\n         * Get the parent of each element in the current set of matched elements.\r\n         * @param {Object} elm\r\n         */\r\n        'parent': function(elm) {\r\n            return !!elm.parentNode;\r\n        },\r\n\r\n        'selected': function(elm) {\r\n            return !!elm.selected;\r\n        },\r\n\r\n        'tabbable': function(elm) {\r\n            var tabIndex = elm.tabindex,\r\n                hasTabindex = tabIndex != null;\r\n            return ( !hasTabindex || tabIndex >= 0 ) && noder.focusable( element, hasTabindex );\r\n        },\r\n\r\n        'text': function(elm) {\r\n            return elm.type === \"text\";\r\n        },\r\n\r\n        'visible': function(elm) {\r\n            return elm.offsetWidth && elm.offsetWidth\r\n        }\r\n    };\r\n\r\n    [\"first\", \"eq\", \"last\"].forEach(function(item) {\r\n        pseudos[item].isArrayFilter = true;\r\n    });\r\n\r\n\r\n\r\n    pseudos[\"nth\"] = pseudos[\"eq\"];\r\n\r\n    function createInputPseudo(type) {\r\n        return function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === type;\r\n        };\r\n    }\r\n\r\n    function createButtonPseudo(type) {\r\n        return function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return (name === \"input\" || name === \"button\") && elem.type === type;\r\n        };\r\n    }\r\n\r\n    // Add button/input type pseudos\r\n    for (i in {\r\n        radio: true,\r\n        checkbox: true,\r\n        file: true,\r\n        password: true,\r\n        image: true\r\n    }) {\r\n        pseudos[i] = createInputPseudo(i);\r\n    }\r\n    for (i in {\r\n        submit: true,\r\n        reset: true\r\n    }) {\r\n        pseudos[i] = createButtonPseudo(i);\r\n    }\r\n\r\n\r\n    local.divide = function(cond) {\r\n        var nativeSelector = \"\",\r\n            customPseudos = [],\r\n            tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos;\r\n\r\n\r\n        if (id = cond.id) {\r\n            nativeSelector += (\"#\" + id);\r\n        }\r\n        if (classes = cond.classes) {\r\n            for (var i = classes.length; i--;) {\r\n                nativeSelector += (\".\" + classes[i].value);\r\n            }\r\n        }\r\n        if (attributes = cond.attributes) {\r\n            for (var i = 0; i < attributes.length; i++) {\r\n                if (attributes[i].operator) {\r\n                    nativeSelector += (\"[\" + attributes[i].key + attributes[i].operator + JSON.stringify(attributes[i].value) + \"]\");\r\n                } else {\r\n                    nativeSelector += (\"[\" + attributes[i].key + \"]\");\r\n                }\r\n            }\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (this.pseudos[part.key]) {\r\n                    customPseudos.push(part);\r\n                } else {\r\n                    if (part.value !== undefined) {\r\n                        nativeSelector += (\":\" + part.key + \"(\" + JSON.stringify(part))\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (tag = cond.tag) {\r\n            if (tag !== \"*\") {\r\n                nativeSelector = tag.toUpperCase() + nativeSelector;\r\n            }\r\n        }\r\n\r\n        if (!nativeSelector) {\r\n            nativeSelector = \"*\";\r\n        }\r\n\r\n        return {\r\n            nativeSelector: nativeSelector,\r\n            customPseudos: customPseudos\r\n        }\r\n\r\n    };\r\n\r\n    local.check = function(node, cond, idx, nodes, arrayFilte) {\r\n        var tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos,\r\n\r\n            i, part, cls, pseudo;\r\n\r\n        if (!arrayFilte) {\r\n            if (tag = cond.tag) {\r\n                var nodeName = node.nodeName.toUpperCase();\r\n                if (tag == '*') {\r\n                    if (nodeName < '@') return false; // Fix for comment nodes and closed nodes\r\n                } else {\r\n                    if (nodeName != (tag || \"\").toUpperCase()) return false;\r\n                }\r\n            }\r\n\r\n            if (id = cond.id) {\r\n                if (node.getAttribute('id') != id) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n\r\n            if (classes = cond.classes) {\r\n                for (i = classes.length; i--;) {\r\n                    cls = node.getAttribute('class');\r\n                    if (!(cls && classes[i].regexp.test(cls))) return false;\r\n                }\r\n            }\r\n\r\n            if (attributes = cond.attributes) {\r\n                for (i = attributes.length; i--;) {\r\n                    part = attributes[i];\r\n                    if (part.operator ? !part.test(node.getAttribute(part.key)) : !node.hasAttribute(part.key)) return false;\r\n                }\r\n            }\r\n\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (pseudo = this.pseudos[part.key]) {\r\n                    if ((arrayFilte && pseudo.isArrayFilter) || (!arrayFilte && !pseudo.isArrayFilter)) {\r\n                        if (!pseudo(node, idx, nodes, part.value)) {\r\n                            return false;\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (!arrayFilte && !nativeMatchesSelector.call(node, part.key)) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    local.match = function(node, selector) {\r\n\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            parsed = selector;\r\n        }\r\n\r\n        if (!parsed) {\r\n            return true;\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            simpleExpCounter = 0,\r\n            i,\r\n            currentExpression;\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n                if (this.check(node, exp)) {\r\n                    return true;\r\n                }\r\n                simpleExpCounter++;\r\n            }\r\n        }\r\n\r\n        if (simpleExpCounter == parsed.length) {\r\n            return false;\r\n        }\r\n\r\n        var nodes = this.query(document, parsed),\r\n            item;\r\n        for (i = 0; item = nodes[i++];) {\r\n            if (item === node) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n\r\n    local.filterSingle = function(nodes, exp) {\r\n        var matchs = filter.call(nodes, function(node, idx) {\r\n            return local.check(node, exp, idx, nodes, false);\r\n        });\r\n\r\n        matchs = filter.call(matchs, function(node, idx) {\r\n            return local.check(node, exp, idx, matchs, true);\r\n        });\r\n        return matchs;\r\n    };\r\n\r\n    local.filter = function(nodes, selector) {\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            return local.filterSingle(nodes, selector);\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            i,\r\n            currentExpression,\r\n            ret = [];\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n\r\n                var matchs = local.filterSingle(nodes, exp);\r\n\r\n                ret = langx.uniq(ret.concat(matchs));\r\n            } else {\r\n                throw new Error(\"not supported selector:\" + selector);\r\n            }\r\n        }\r\n\r\n        return ret;\r\n\r\n    };\r\n\r\n    local.combine = function(elm, bit) {\r\n        var op = bit.combinator,\r\n            cond = bit,\r\n            node1,\r\n            nodes = [];\r\n\r\n        switch (op) {\r\n            case '>': // direct children\r\n                nodes = children(elm, cond);\r\n                break;\r\n            case '+': // next sibling\r\n                node1 = nextSibling(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '^': // first child\r\n                node1 = firstChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '~': // next siblings\r\n                nodes = nextSiblings(elm, cond);\r\n                break;\r\n            case '++': // next sibling and previous sibling\r\n                var prev = previousSibling(elm, cond, true),\r\n                    next = nextSibling(elm, cond, true);\r\n                if (prev) {\r\n                    nodes.push(prev);\r\n                }\r\n                if (next) {\r\n                    nodes.push(next);\r\n                }\r\n                break;\r\n            case '~~': // next siblings and previous siblings\r\n                nodes = siblings(elm, cond);\r\n                break;\r\n            case '!': // all parent nodes up to document\r\n                nodes = ancestors(elm, cond);\r\n                break;\r\n            case '!>': // direct parent (one level)\r\n                node1 = parent(elm, cond);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!+': // previous sibling\r\n                nodes = previousSibling(elm, cond, true);\r\n                break;\r\n            case '!^': // last child\r\n                node1 = lastChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!~': // previous siblings\r\n                nodes = previousSiblings(elm, cond);\r\n                break;\r\n            default:\r\n                var divided = this.divide(bit);\r\n                nodes = slice.call(elm.querySelectorAll(divided.nativeSelector));\r\n                if (divided.customPseudos) {\r\n                    for (var i = divided.customPseudos.length - 1; i >= 0; i--) {\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes, false)\r\n                        });\r\n\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes, true)\r\n                        });\r\n                    }\r\n                }\r\n                break;\r\n\r\n        }\r\n        return nodes;\r\n    }\r\n\r\n    local.query = function(node, selector, single) {\r\n\r\n\r\n        var parsed = this.Slick.parse(selector);\r\n\r\n        var\r\n            founds = [],\r\n            currentExpression, currentBit,\r\n            expressions = parsed.expressions;\r\n\r\n        for (var i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            var currentItems = [node],\r\n                found;\r\n            for (var j = 0;\r\n                (currentBit = currentExpression[j]); j++) {\r\n                found = langx.map(currentItems, function(item, i) {\r\n                    return local.combine(item, currentBit)\r\n                });\r\n                if (found) {\r\n                    currentItems = found;\r\n                }\r\n            }\r\n            if (found) {\r\n                founds = founds.concat(found);\r\n            }\r\n        }\r\n\r\n        return founds;\r\n    }\r\n\r\n    /*\r\n     * Get the nearest ancestor of the specified element,optional matched by a selector.\r\n     * @param {HTMLElement} node\r\n     * @param {String Optional } selector\r\n     * @param {Object} root\r\n     */\r\n    function ancestor(node, selector, root) {\r\n        var rootIsSelector = root && langx.isString(root);\r\n        while (node = node.parentNode) {\r\n            if (matches(node, selector)) {\r\n                return node;\r\n            }\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node, root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the ancestors of the specitied element , optionally filtered by a selector.\r\n     * @param {HTMLElement} node\r\n     * @param {String Optional } selector\r\n     * @param {Object} root\r\n     */\r\n    function ancestors(node, selector, root) {\r\n        var ret = [],\r\n            rootIsSelector = root && langx.isString(root);\r\n        while ((node = node.parentNode) && (node.nodeType !== 9)) {\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node, root)) {\r\n                        break;\r\n                    }\r\n                } else if (langx.isArrayLike(root)) {\r\n                    if (langx.inArray(node,root)>-1) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            }\r\n            ret.push(node); // TODO\r\n        }\r\n\r\n        if (selector) {\r\n            ret = local.filter(ret, selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Returns a element by its ID.\r\n     * @param {string} id\r\n     */\r\n    function byId(id, doc) {\r\n        doc = doc || noder.doc();\r\n        return doc.getElementById(id);\r\n    }\r\n\r\n    /*\r\n     * Get the children of the specified element , optionally filtered by a selector.\r\n     * @param {string} node\r\n     * @param {String optionlly} selector\r\n     */\r\n    function children(node, selector) {\r\n        var childNodes = node.childNodes,\r\n            ret = [];\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            var node = childNodes[i];\r\n            if (node.nodeType == 1) {\r\n                ret.push(node);\r\n            }\r\n        }\r\n        if (selector) {\r\n            ret = local.filter(ret, selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function closest(node, selector) {\r\n        while (node && !(matches(node, selector))) {\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    /*\r\n     * Get the decendant of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function descendants(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return slice.call(elm.querySelectorAll(selector));\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        return local.query(elm, selector);\r\n    }\r\n\r\n    /*\r\n     * Get the nearest decendent of the specified element,optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function descendant(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return elm.querySelector(selector);\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        var nodes = local.query(elm, selector);\r\n        if (nodes.length > 0) {\r\n            return nodes[0];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the descendants of each element in the current set of matched elements, filtered by a selector, jQuery object, or element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function find(elm, selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        if (matches(elm, selector)) {\r\n            return elm;\r\n        } else {\r\n            return descendant(elm, selector);\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the findAll of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function findAll(elm, selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        return descendants(elm, selector);\r\n    }\r\n\r\n    /*\r\n     * Get the first child of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {String} first\r\n     */\r\n    function firstChild(elm, selector, first) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[0];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (first) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the last child of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {String } last\r\n     */\r\n    function lastChild(elm, selector, last) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[childNodes.length - 1];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (last) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Check the specified element against a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function matches(elm, selector) {\r\n        if (!selector || !elm || elm.nodeType !== 1) {\r\n            return false\r\n        }\r\n\r\n        if (langx.isString(selector)) {\r\n            try {\r\n                return nativeMatchesSelector.call(elm, selector.replace(/\\[([^=]+)=\\s*([^'\"\\]]+?)\\s*\\]/g, '[$1=\"$2\"]'));\r\n            } catch (matchError) {\r\n                //console.log(matchError);\r\n            }\r\n            return local.match(elm, selector);\r\n        } else if (langx.isArrayLike(selector)) {\r\n            return langx.inArray(elm, selector) > -1;\r\n        } else if (langx.isPlainObject(selector)) {\r\n            return local.check(elm, selector);\r\n        } else {\r\n            return elm === selector;\r\n        }\r\n\r\n    }\r\n\r\n    /*\r\n     * Get the nearest next sibing of the specitied element , optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {Boolean Optional} adjacent\r\n     */\r\n    function nextSibling(elm, selector, adjacent) {\r\n        var node = elm.nextSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the next siblings of the specified element , optional filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function nextSiblings(elm, selector) {\r\n        var node = elm.nextSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Get the parent element of the specified element. if a selector is provided, it retrieves the parent element only if it matches that selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function parent(elm, selector) {\r\n        var node = elm.parentNode;\r\n        if (node && (!selector || matches(node, selector))) {\r\n            return node;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get hte nearest previous sibling of the specified element ,optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {Boolean Optional } adjacent\r\n     */\r\n    function previousSibling(elm, selector, adjacent) {\r\n        var node = elm.previousSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get all preceding siblings of each element in the set of matched elements, optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function previousSiblings(elm, selector) {\r\n        var node = elm.previousSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Selects all sibling elements that follow after the “prev” element, have the same parent, and match the filtering “siblings” selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function siblings(elm, selector) {\r\n        var node = elm.parentNode.firstChild,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1 && node !== elm) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    var finder = function() {\r\n        return finder;\r\n    };\r\n\r\n    langx.mixin(finder, {\r\n\r\n        ancestor: ancestor,\r\n\r\n        ancestors: ancestors,\r\n\r\n        byId: byId,\r\n\r\n        children: children,\r\n\r\n        closest: closest,\r\n\r\n        descendant: descendant,\r\n\r\n        descendants: descendants,\r\n\r\n        find: find,\r\n\r\n        findAll: findAll,\r\n\r\n        firstChild: firstChild,\r\n\r\n        lastChild: lastChild,\r\n\r\n        matches: matches,\r\n\r\n        nextSibling: nextSibling,\r\n\r\n        nextSiblings: nextSiblings,\r\n\r\n        parent: parent,\r\n\r\n        previousSibling,\r\n\r\n        previousSiblings,\r\n\r\n        pseudos: local.pseudos,\r\n\r\n        siblings: siblings\r\n    });\r\n\r\n    return dom.finder = finder;\r\n});\ndefine('skylark-utils-dom/datax',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./finder\",\r\n    \"./noder\"\r\n], function(dom, langx, finder,noder) {\r\n    var map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        camelCase = langx.camelCase,\r\n        deserializeValue = langx.deserializeValue,\r\n\r\n        capitalRE = /([A-Z])/g,\r\n        propMap = {\r\n            'tabindex': 'tabIndex',\r\n            'readonly': 'readOnly',\r\n            'for': 'htmlFor',\r\n            'class': 'className',\r\n            'maxlength': 'maxLength',\r\n            'cellspacing': 'cellSpacing',\r\n            'cellpadding': 'cellPadding',\r\n            'rowspan': 'rowSpan',\r\n            'colspan': 'colSpan',\r\n            'usemap': 'useMap',\r\n            'frameborder': 'frameBorder',\r\n            'contenteditable': 'contentEditable'\r\n        };\r\n\r\n    // Strip and collapse whitespace according to HTML spec\r\n    function stripAndCollapse( value ) {\r\n      var tokens = value.match( /[^\\x20\\t\\r\\n\\f]+/g ) || [];\r\n      return tokens.join( \" \" );\r\n    }\r\n\r\n\r\n    var valHooks = {\r\n      option: {\r\n        get: function( elem ) {\r\n          var val = elem.getAttribute( \"value\" );\r\n          return val != null ?  val :  stripAndCollapse(text( elem ) );\r\n        }\r\n      },\r\n      select: {\r\n        get: function( elem ) {\r\n          var value, option, i,\r\n            options = elem.options,\r\n            index = elem.selectedIndex,\r\n            one = elem.type === \"select-one\",\r\n            values = one ? null : [],\r\n            max = one ? index + 1 : options.length;\r\n\r\n          if ( index < 0 ) {\r\n            i = max;\r\n\r\n          } else {\r\n            i = one ? index : 0;\r\n          }\r\n\r\n          // Loop through all the selected options\r\n          for ( ; i < max; i++ ) {\r\n            option = options[ i ];\r\n\r\n            if ( option.selected &&\r\n\r\n                // Don't return options that are disabled or in a disabled optgroup\r\n                !option.disabled &&\r\n                ( !option.parentNode.disabled ||\r\n                  !noder.nodeName( option.parentNode, \"optgroup\" ) ) ) {\r\n\r\n              // Get the specific value for the option\r\n              value = val(option);\r\n\r\n              // We don't need an array for one selects\r\n              if ( one ) {\r\n                return value;\r\n              }\r\n\r\n              // Multi-Selects return an array\r\n              values.push( value );\r\n            }\r\n          }\r\n\r\n          return values;\r\n        },\r\n\r\n        set: function( elem, value ) {\r\n          var optionSet, option,\r\n            options = elem.options,\r\n            values = langx.makeArray( value ),\r\n            i = options.length;\r\n\r\n          while ( i-- ) {\r\n            option = options[ i ];\r\n\r\n            /* eslint-disable no-cond-assign */\r\n\r\n            if ( option.selected =\r\n              langx.inArray( valHooks.option.get( option ), values ) > -1\r\n            ) {\r\n              optionSet = true;\r\n            }\r\n\r\n            /* eslint-enable no-cond-assign */\r\n          }\r\n\r\n          // Force browsers to behave consistently when non-matching value is set\r\n          if ( !optionSet ) {\r\n            elem.selectedIndex = -1;\r\n          }\r\n          return values;\r\n        }\r\n      }\r\n    };\r\n\r\n\r\n    // Radios and checkboxes getter/setter\r\n    langx.each( [ \"radio\", \"checkbox\" ], function() {\r\n      valHooks[ this ] = {\r\n        set: function( elem, value ) {\r\n          if ( langx.isArray( value ) ) {\r\n            return ( elem.checked = langx.inArray( val(elem), value ) > -1 );\r\n          }\r\n        }\r\n      };\r\n    });\r\n\r\n\r\n\r\n    /*\r\n     * Set property values\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n\r\n    function setAttribute(elm, name, value) {\r\n        if (value == null) {\r\n            elm.removeAttribute(name);\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n        }\r\n    }\r\n\r\n    function aria(elm, name, value) {\r\n        return this.attr(elm, \"aria-\" + name, value);\r\n    }\r\n\r\n    /*\r\n     * Set property values\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n\r\n    function attr(elm, name, value) {\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var attrName in name) {\r\n                    attr(elm, attrName, name[attrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                if (elm.hasAttribute && elm.hasAttribute(name)) {\r\n                    return elm.getAttribute(name);\r\n                }\r\n            }\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n            return this;\r\n        }\r\n    }\r\n\r\n\r\n    /*\r\n     *  Read all \"data-*\" attributes from a node\r\n     * @param {Object} elm  \r\n     */\r\n\r\n    function _attributeData(elm) {\r\n        var store = {}\r\n        langx.each(elm.attributes || [], function(i, attr) {\r\n            if (attr.name.indexOf('data-') == 0) {\r\n                store[camelCase(attr.name.replace('data-', ''))] = deserializeValue(attr.value);\r\n            }\r\n        })\r\n        return store;\r\n    }\r\n\r\n    function _store(elm, confirm) {\r\n        var store = elm[\"_$_store\"];\r\n        if (!store && confirm) {\r\n            store = elm[\"_$_store\"] = _attributeData(elm);\r\n        }\r\n        return store;\r\n    }\r\n\r\n    function _getData(elm, name) {\r\n        if (name === undefined) {\r\n            return _store(elm, true);\r\n        } else {\r\n            var store = _store(elm);\r\n            if (store) {\r\n                if (name in store) {\r\n                    return store[name];\r\n                }\r\n                var camelName = camelCase(name);\r\n                if (camelName in store) {\r\n                    return store[camelName];\r\n                }\r\n            }\r\n            var attrName = 'data-' + name.replace(capitalRE, \"-$1\").toLowerCase()\r\n            return attr(elm, attrName);\r\n        }\r\n\r\n    }\r\n\r\n    function _setData(elm, name, value) {\r\n        var store = _store(elm, true);\r\n        store[camelCase(name)] = value;\r\n    }\r\n\r\n\r\n    /*\r\n     * xxx\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n    function data(elm, name, value) {\r\n\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var dataAttrName in name) {\r\n                    _setData(elm, dataAttrName, name[dataAttrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                return _getData(elm, name);\r\n            }\r\n        } else {\r\n            _setData(elm, name, value);\r\n            return this;\r\n        }\r\n    } \r\n    /*\r\n     * Remove from the element all items that have not yet been run. \r\n     * @param {Object} elm  \r\n     */\r\n\r\n    function cleanData(elm) {\r\n        if (elm[\"_$_store\"]) {\r\n            delete elm[\"_$_store\"];\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Remove a previously-stored piece of data. \r\n     * @param {Object} elm  \r\n     * @param {Array} names\r\n     */\r\n    function removeData(elm, names) {\r\n        if (names) {\r\n            if (langx.isString(names)) {\r\n                names = names.split(/\\s+/);\r\n            }\r\n            var store = _store(elm, true);\r\n            names.forEach(function(name) {\r\n                delete store[name];\r\n            });            \r\n        } else {\r\n            cleanData(elm);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * xxx \r\n     * @param {Object} elm  \r\n     * @param {Array} names\r\n     */\r\n    function pluck(nodes, property) {\r\n        return map.call(nodes, function(elm) {\r\n            return elm[property];\r\n        });\r\n    }\r\n\r\n    /*\r\n     * Get or set the value of an property for the specified element.\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n    function prop(elm, name, value) {\r\n        name = propMap[name] || name;\r\n        if (value === undefined) {\r\n            return elm[name];\r\n        } else {\r\n            elm[name] = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * remove Attributes  \r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     */\r\n    function removeAttr(elm, name) {\r\n        name.split(' ').forEach(function(attr) {\r\n            setAttribute(elm, attr);\r\n        });\r\n        return this;\r\n    }\r\n\r\n\r\n    /*\r\n     * Remove the value of a property for the first element in the set of matched elements or set one or more properties for every matched element.\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     */\r\n    function removeProp(elm, name) {\r\n        name.split(' ').forEach(function(prop) {\r\n            delete elm[prop];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Get the combined text contents of each element in the set of matched elements, including their descendants, or set the text contents of the matched elements.  \r\n     * @param {Object} elm  \r\n     * @param {String} txt\r\n     */\r\n    function text(elm, txt) {\r\n        if (txt === undefined) {\r\n            return elm.textContent;\r\n        } else {\r\n            elm.textContent = txt == null ? '' : '' + txt;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Get the current value of the first element in the set of matched elements or set the value of every matched element.\r\n     * @param {Object} elm  \r\n     * @param {String} value\r\n     */\r\n    function val(elm, value) {\r\n        var hooks = valHooks[ elm.type ] || valHooks[ elm.nodeName.toLowerCase() ];\r\n        if (value === undefined) {\r\n/*\r\n            if (elm.multiple) {\r\n                // select multiple values\r\n                var selectedOptions = filter.call(finder.find(elm, \"option\"), (function(option) {\r\n                    return option.selected;\r\n                }));\r\n                return pluck(selectedOptions, \"value\");\r\n            } else {\r\n                if (/input|textarea/i.test(elm.tagName)) {\r\n                  return elm.value;\r\n                }\r\n                return text(elm);\r\n            }\r\n*/\r\n\r\n          if ( hooks &&  \"get\" in hooks &&  ( ret = hooks.get( elm, \"value\" ) ) !== undefined ) {\r\n            return ret;\r\n          }\r\n\r\n          ret = elm.value;\r\n\r\n          // Handle most common string cases\r\n          if ( typeof ret === \"string\" ) {\r\n            return ret.replace( /\\r/g, \"\" );\r\n          }\r\n\r\n          // Handle cases where value is null/undef or number\r\n          return ret == null ? \"\" : ret;\r\n\r\n        } else {\r\n/*          \r\n            if (/input|textarea/i.test(elm.tagName)) {\r\n              elm.value = value;\r\n            } else {\r\n              text(elm,value);\r\n            }\r\n            return this;\r\n*/\r\n          // Treat null/undefined as \"\"; convert numbers to string\r\n          if ( value == null ) {\r\n            value = \"\";\r\n\r\n          } else if ( typeof value === \"number\" ) {\r\n            value += \"\";\r\n\r\n          } else if ( langx.isArray( value ) ) {\r\n            value = langx.map( value, function( value1 ) {\r\n              return value1 == null ? \"\" : value1 + \"\";\r\n            } );\r\n          }\r\n\r\n          // If set returns undefined, fall back to normal setting\r\n          if ( !hooks || !( \"set\" in hooks ) || hooks.set( elm, value, \"value\" ) === undefined ) {\r\n            elm.value = value;\r\n          }\r\n        }      \r\n    }\r\n\r\n\r\n    finder.pseudos.data = function( elem, i, match,dataName ) {\r\n        return !!data( elem, dataName || match[3]);\r\n    };\r\n   \r\n\r\n    function datax() {\r\n        return datax;\r\n    }\r\n\r\n    langx.mixin(datax, {\r\n        aria: aria,\r\n\r\n        attr: attr,\r\n\r\n        cleanData: cleanData,\r\n\r\n        data: data,\r\n\r\n        pluck: pluck,\r\n\r\n        prop: prop,\r\n\r\n        removeAttr: removeAttr,\r\n\r\n        removeData: removeData,\r\n\r\n        removeProp: removeProp,\r\n\r\n        text: text,\r\n\r\n        val: val,\r\n\r\n        valHooks : valHooks\r\n    });\r\n\r\n    return dom.datax = datax;\r\n});\ndefine('skylark-utils-dom/eventer',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./finder\",\r\n    \"./noder\",\r\n    \"./datax\"\r\n], function(dom, langx, browser, finder, noder, datax) {\r\n    var mixin = langx.mixin,\r\n        each = langx.each,\r\n        slice = Array.prototype.slice,\r\n        uid = langx.uid,\r\n        ignoreProperties = /^([A-Z]|returnValue$|layer[XY]$)/,\r\n        eventMethods = {\r\n            preventDefault: \"isDefaultPrevented\",\r\n            stopImmediatePropagation: \"isImmediatePropagationStopped\",\r\n            stopPropagation: \"isPropagationStopped\"\r\n        },\r\n        readyRE = /complete|loaded|interactive/;\r\n\r\n    function compatible(event, source) {\r\n        if (source || !event.isDefaultPrevented) {\r\n            if (!source) {\r\n                source = event;\r\n            }\r\n\r\n            langx.each(eventMethods, function(name, predicate) {\r\n                var sourceMethod = source[name];\r\n                event[name] = function() {\r\n                    this[predicate] = langx.returnTrue;\r\n                    return sourceMethod && sourceMethod.apply(source, arguments);\r\n                }\r\n                event[predicate] = langx.returnFalse;\r\n            });\r\n        }\r\n        return event;\r\n    }\r\n\r\n    function parse(event) {\r\n        var segs = (\"\" + event).split(\".\");\r\n        return {\r\n            type: segs[0],\r\n            ns: segs.slice(1).sort().join(\" \")\r\n        };\r\n    }\r\n\r\n    //create a custom dom event\r\n    var createEvent = (function() {\r\n        var EventCtors = [\r\n                window[\"CustomEvent\"], // 0 default\r\n                window[\"CompositionEvent\"], // 1\r\n                window[\"DragEvent\"], // 2\r\n                window[\"Event\"], // 3\r\n                window[\"FocusEvent\"], // 4\r\n                window[\"KeyboardEvent\"], // 5\r\n                window[\"MessageEvent\"], // 6\r\n                window[\"MouseEvent\"], // 7\r\n                window[\"MouseScrollEvent\"], // 8\r\n                window[\"MouseWheelEvent\"], // 9\r\n                window[\"MutationEvent\"], // 10\r\n                window[\"ProgressEvent\"], // 11\r\n                window[\"TextEvent\"], // 12\r\n                window[\"TouchEvent\"], // 13\r\n                window[\"UIEvent\"], // 14\r\n                window[\"WheelEvent\"], // 15\r\n                window[\"ClipboardEvent\"] // 16\r\n            ],\r\n            NativeEvents = {\r\n                \"compositionstart\": 1, // CompositionEvent\r\n                \"compositionend\": 1, // CompositionEvent\r\n                \"compositionupdate\": 1, // CompositionEvent\r\n\r\n                \"beforecopy\": 16, // ClipboardEvent\r\n                \"beforecut\": 16, // ClipboardEvent\r\n                \"beforepaste\": 16, // ClipboardEvent\r\n                \"copy\": 16, // ClipboardEvent\r\n                \"cut\": 16, // ClipboardEvent\r\n                \"paste\": 16, // ClipboardEvent\r\n\r\n                \"drag\": 2, // DragEvent\r\n                \"dragend\": 2, // DragEvent\r\n                \"dragenter\": 2, // DragEvent\r\n                \"dragexit\": 2, // DragEvent\r\n                \"dragleave\": 2, // DragEvent\r\n                \"dragover\": 2, // DragEvent\r\n                \"dragstart\": 2, // DragEvent\r\n                \"drop\": 2, // DragEvent\r\n\r\n                \"abort\": 3, // Event\r\n                \"change\": 3, // Event\r\n                \"error\": 3, // Event\r\n                \"selectionchange\": 3, // Event\r\n                \"submit\": 3, // Event\r\n                \"reset\": 3, // Event\r\n\r\n                \"focus\": 4, // FocusEvent\r\n                \"blur\": 4, // FocusEvent\r\n                \"focusin\": 4, // FocusEvent\r\n                \"focusout\": 4, // FocusEvent\r\n\r\n                \"keydown\": 5, // KeyboardEvent\r\n                \"keypress\": 5, // KeyboardEvent\r\n                \"keyup\": 5, // KeyboardEvent\r\n\r\n                \"message\": 6, // MessageEvent\r\n\r\n                \"click\": 7, // MouseEvent\r\n                \"contextmenu\": 7, // MouseEvent\r\n                \"dblclick\": 7, // MouseEvent\r\n                \"mousedown\": 7, // MouseEvent\r\n                \"mouseup\": 7, // MouseEvent\r\n                \"mousemove\": 7, // MouseEvent\r\n                \"mouseover\": 7, // MouseEvent\r\n                \"mouseout\": 7, // MouseEvent\r\n                \"mouseenter\": 7, // MouseEvent\r\n                \"mouseleave\": 7, // MouseEvent\r\n\r\n\r\n                \"textInput\": 12, // TextEvent\r\n\r\n                \"touchstart\": 13, // TouchEvent\r\n                \"touchmove\": 13, // TouchEvent\r\n                \"touchend\": 13, // TouchEvent\r\n\r\n                \"load\": 14, // UIEvent\r\n                \"resize\": 14, // UIEvent\r\n                \"select\": 14, // UIEvent\r\n                \"scroll\": 14, // UIEvent\r\n                \"unload\": 14, // UIEvent,\r\n\r\n                \"wheel\": 15 // WheelEvent\r\n            };\r\n\r\n        function getEventCtor(type) {\r\n            var idx = NativeEvents[type];\r\n            if (!idx) {\r\n                idx = 0;\r\n            }\r\n            return EventCtors[idx];\r\n        }\r\n\r\n        return function(type, props) {\r\n            //create a custom dom event\r\n\r\n            if (langx.isString(type)) {\r\n                props = props || {};\r\n            } else {\r\n                props = type || {};\r\n                type = props.type || \"\";\r\n            }\r\n            var parsed = parse(type);\r\n            type = parsed.type;\r\n\r\n            props = langx.mixin({\r\n                bubbles: true,\r\n                cancelable: true\r\n            }, props);\r\n\r\n            if (parsed.ns) {\r\n                props.namespace = parsed.ns;\r\n            }\r\n\r\n            var ctor = getEventCtor(type),\r\n                e = new ctor(type, props);\r\n\r\n            langx.safeMixin(e, props);\r\n\r\n            return compatible(e);\r\n        };\r\n    })();\r\n\r\n    function createProxy(src, props) {\r\n        var key,\r\n            proxy = {\r\n                originalEvent: src\r\n            };\r\n        for (key in src) {\r\n            if (key !== \"keyIdentifier\" && !ignoreProperties.test(key) && src[key] !== undefined) {\r\n                proxy[key] = src[key];\r\n            }\r\n        }\r\n        if (props) {\r\n            langx.mixin(proxy, props);\r\n        }\r\n        return compatible(proxy, src);\r\n    }\r\n\r\n    var\r\n        specialEvents = {},\r\n        focusinSupported = \"onfocusin\" in window,\r\n        focus = { focus: \"focusin\", blur: \"focusout\" },\r\n        hover = { mouseenter: \"mouseover\", mouseleave: \"mouseout\" },\r\n        realEvent = function(type) {\r\n            return hover[type] || (focusinSupported && focus[type]) || type;\r\n        },\r\n        handlers = {},\r\n        EventBindings = langx.klass({\r\n            init: function(target, event) {\r\n                this._target = target;\r\n                this._event = event;\r\n                this._bindings = [];\r\n            },\r\n\r\n            add: function(fn, options) {\r\n                var bindings = this._bindings,\r\n                    binding = {\r\n                        fn: fn,\r\n                        options: langx.mixin({}, options)\r\n                    };\r\n\r\n                bindings.push(binding);\r\n\r\n                var self = this;\r\n                if (!self._listener) {\r\n                    self._listener = function(domEvt) {\r\n                        var elm = this,\r\n                            e = createProxy(domEvt),\r\n                            args = domEvt._args,\r\n                            bindings = self._bindings,\r\n                            ns = e.namespace;\r\n\r\n                        if (langx.isDefined(args)) {\r\n                            args = [e].concat(args);\r\n                        } else {\r\n                            args = [e];\r\n                        }\r\n\r\n                        langx.each(bindings, function(idx, binding) {\r\n                            var match = elm;\r\n                            if (e.isImmediatePropagationStopped && e.isImmediatePropagationStopped()) {\r\n                                return false;\r\n                            }\r\n                            var fn = binding.fn,\r\n                                options = binding.options || {},\r\n                                selector = options.selector,\r\n                                one = options.one,\r\n                                data = options.data;\r\n\r\n                            if (ns && ns != options.ns && options.ns.indexOf(ns) === -1) {\r\n                                return;\r\n                            }\r\n                            if (selector) {\r\n                                match = finder.closest(e.target, selector);\r\n                                if (match && match !== elm) {\r\n                                    langx.mixin(e, {\r\n                                        currentTarget: match,\r\n                                        liveFired: elm\r\n                                    });\r\n                                } else {\r\n                                    return;\r\n                                }\r\n                            }\r\n\r\n                            var originalEvent = self._event;\r\n                            if (originalEvent in hover) {\r\n                                var related = e.relatedTarget;\r\n                                if (related && (related === match || noder.contains(match, related))) {\r\n                                    return;\r\n                                }\r\n                            }\r\n\r\n                            if (langx.isDefined(data)) {\r\n                                e.data = data;\r\n                            }\r\n\r\n                            if (one) {\r\n                                self.remove(fn, options);\r\n                            }\r\n\r\n                            var result = fn.apply(match, args);\r\n\r\n                            if (result === false) {\r\n                                e.preventDefault();\r\n                                e.stopPropagation();\r\n                            }\r\n                        });;\r\n                    };\r\n\r\n                    var event = self._event;\r\n                    /*\r\n                                        if (event in hover) {\r\n                                            var l = self._listener;\r\n                                            self._listener = function(e) {\r\n                                                var related = e.relatedTarget;\r\n                                                if (!related || (related !== this && !noder.contains(this, related))) {\r\n                                                    return l.apply(this, arguments);\r\n                                                }\r\n                                            }\r\n                                        }\r\n                    */\r\n\r\n                    if (self._target.addEventListener) {\r\n                        self._target.addEventListener(realEvent(event), self._listener, false);\r\n                    } else {\r\n                        console.warn(\"invalid eventer object\", self._target);\r\n                    }\r\n                }\r\n\r\n            },\r\n            remove: function(fn, options) {\r\n                options = langx.mixin({}, options);\r\n\r\n                function matcherFor(ns) {\r\n                    return new RegExp(\"(?:^| )\" + ns.replace(\" \", \" .* ?\") + \"(?: |$)\");\r\n                }\r\n                var matcher;\r\n                if (options.ns) {\r\n                    matcher = matcherFor(options.ns);\r\n                }\r\n\r\n                this._bindings = this._bindings.filter(function(binding) {\r\n                    var removing = (!fn || fn === binding.fn) &&\r\n                        (!matcher || matcher.test(binding.options.ns)) &&\r\n                        (!options.selector || options.selector == binding.options.selector);\r\n\r\n                    return !removing;\r\n                });\r\n                if (this._bindings.length == 0) {\r\n                    if (this._target.removeEventListener) {\r\n                        this._target.removeEventListener(realEvent(this._event), this._listener, false);\r\n                    }\r\n                    this._listener = null;\r\n                }\r\n            }\r\n        }),\r\n        EventsHandler = langx.klass({\r\n            init: function(elm) {\r\n                this._target = elm;\r\n                this._handler = {};\r\n            },\r\n\r\n            // add a event listener\r\n            // selector Optional\r\n            register: function(event, callback, options) {\r\n                // Seperate the event from the namespace\r\n                var parsed = parse(event),\r\n                    event = parsed.type,\r\n                    specialEvent = specialEvents[event],\r\n                    bindingEvent = specialEvent && (specialEvent.bindType || specialEvent.bindEventName);\r\n\r\n                var events = this._handler;\r\n\r\n                // Check if there is already a handler for this event\r\n                if (events[event] === undefined) {\r\n                    events[event] = new EventBindings(this._target, bindingEvent || event);\r\n                }\r\n\r\n                // Register the new callback function\r\n                events[event].add(callback, langx.mixin({\r\n                    ns: parsed.ns\r\n                }, options)); // options:{selector:xxx}\r\n            },\r\n\r\n            // remove a event listener\r\n            unregister: function(event, fn, options) {\r\n                // Check for parameter validtiy\r\n                var events = this._handler,\r\n                    parsed = parse(event);\r\n                event = parsed.type;\r\n\r\n                if (event) {\r\n                    var listener = events[event];\r\n\r\n                    if (listener) {\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                } else {\r\n                    //remove all events\r\n                    for (event in events) {\r\n                        var listener = events[event];\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                }\r\n            }\r\n        }),\r\n\r\n        findHandler = function(elm) {\r\n            var id = uid(elm),\r\n                handler = handlers[id];\r\n            if (!handler) {\r\n                handler = handlers[id] = new EventsHandler(elm);\r\n            }\r\n            return handler;\r\n        };\r\n\r\n    /*   \r\n     * Remove an event handler for one or more events from the specified element.\r\n     * @param {HTMLElement} elm  \r\n     * @param {String} events\r\n     * @param {String　Optional } selector\r\n     * @param {Function} callback\r\n     */\r\n    function off(elm, events, selector, callback) {\r\n        var $this = this\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                off(elm, type, selector, fn);\r\n            })\r\n            return $this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback) && callback !== false) {\r\n            callback = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        if (events) events.forEach(function(event) {\r\n\r\n            handler.unregister(event, callback, {\r\n                selector: selector,\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Attach an event handler function for one or more events to the selected elements.\r\n     * @param {HTMLElement} elm  \r\n     * @param {String} events\r\n     * @param {String　Optional} selector\r\n     * @param {Anything Optional} data\r\n     * @param {Function} callback\r\n     * @param {Boolean　Optional} one\r\n     */\r\n    function on(elm, events, selector, data, callback, one) {\r\n\r\n        var autoRemove, delegator;\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                on(elm, type, selector, data, fn, one);\r\n            });\r\n            return this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n            callback = data;\r\n            data = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (langx.isFunction(data)) {\r\n            callback = data;\r\n            data = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        events.forEach(function(event) {\r\n            if (event == \"ready\") {\r\n                return ready(callback);\r\n            }\r\n            handler.register(event, callback, {\r\n                data: data,\r\n                selector: selector,\r\n                one: !!one\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Attach a handler to an event for the elements. The handler is executed at most once per \r\n     * @param {HTMLElement} elm  \r\n     * @param {String} event\r\n     * @param {String　Optional} selector\r\n     * @param {Anything Optional} data\r\n     * @param {Function} callback\r\n     */\r\n    function one(elm, events, selector, data, callback) {\r\n        on(elm, events, selector, data, callback, 1);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Prevents propagation and clobbers the default action of the passed event. The same as calling event.preventDefault() and event.stopPropagation(). \r\n     * @param {String} event\r\n     */\r\n    function stop(event) {\r\n        if (window.document.all) {\r\n            event.keyCode = 0;\r\n        }\r\n        if (event.preventDefault) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        return this;\r\n    }\r\n    /*   \r\n     * Execute all handlers and behaviors attached to the matched elements for the given event  \r\n     * @param {String} evented\r\n     * @param {String} type\r\n     * @param {Array or PlainObject } args\r\n     */\r\n    function trigger(evented, type, args) {\r\n        var e;\r\n        if (type instanceof Event) {\r\n            e = type;\r\n        } else {\r\n            e = createEvent(type, args);\r\n        }\r\n        e._args = args;\r\n\r\n        var fn = (evented.dispatchEvent || evented.trigger);\r\n        if (fn) {\r\n            fn.call(evented, e);\r\n        } else {\r\n            console.warn(\"The evented parameter is not a eventable object\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n    /*   \r\n     * Specify a function to execute when the DOM is fully loaded.  \r\n     * @param {Function} callback\r\n     */\r\n    function ready(callback) {\r\n        // need to check if document.body exists for IE as that browser reports\r\n        // document ready when it hasn't yet created the body elm\r\n        if (readyRE.test(document.readyState) && document.body) {\r\n            langx.defer(callback);\r\n        } else {\r\n            document.addEventListener('DOMContentLoaded', callback, false);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    var keyCodeLookup = {\r\n        \"backspace\": 8,\r\n        \"comma\": 188,\r\n        \"delete\": 46,\r\n        \"down\": 40,\r\n        \"end\": 35,\r\n        \"enter\": 13,\r\n        \"escape\": 27,\r\n        \"home\": 36,\r\n        \"left\": 37,\r\n        \"page_down\": 34,\r\n        \"page_up\": 33,\r\n        \"period\": 190,\r\n        \"right\": 39,\r\n        \"space\": 32,\r\n        \"tab\": 9,\r\n        \"up\": 38\r\n    };\r\n    //example:\r\n    //shortcuts(elm).add(\"CTRL+ALT+SHIFT+X\",function(){console.log(\"test!\")});\r\n    function shortcuts(elm) {\r\n\r\n        var registry = datax.data(elm, \"shortcuts\");\r\n        if (!registry) {\r\n            registry = {};\r\n            datax.data(elm, \"shortcuts\", registry);\r\n            var run = function(shortcut, event) {\r\n                var n = event.metaKey || event.ctrlKey;\r\n                if (shortcut.ctrl == n && shortcut.alt == event.altKey && shortcut.shift == event.shiftKey) {\r\n                    if (event.keyCode == shortcut.keyCode || event.charCode && event.charCode == shortcut.charCode) {\r\n                        event.preventDefault();\r\n                        if (\"keydown\" == event.type) {\r\n                            shortcut.fn(event);\r\n                        }\r\n                        return true;\r\n                    }\r\n                }\r\n            };\r\n            on(elm, \"keyup keypress keydown\", function(event) {\r\n                if (!(/INPUT|TEXTAREA/.test(event.target.nodeName))) {\r\n                    for (var key in registry) {\r\n                        run(registry[key], event);\r\n                    }\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        return {\r\n            add: function(pattern, fn) {\r\n                var shortcutKeys;\r\n                if (pattern.indexOf(\",\") > -1) {\r\n                    shortcutKeys = pattern.toLowerCase().split(\",\");\r\n                } else {\r\n                    shortcutKeys = pattern.toLowerCase().split(\" \");\r\n                }\r\n                shortcutKeys.forEach(function(shortcutKey) {\r\n                    var setting = {\r\n                        fn: fn,\r\n                        alt: false,\r\n                        ctrl: false,\r\n                        shift: false\r\n                    };\r\n                    shortcutKey.split(\"+\").forEach(function(key) {\r\n                        switch (key) {\r\n                            case \"alt\":\r\n                            case \"ctrl\":\r\n                            case \"shift\":\r\n                                setting[key] = true;\r\n                                break;\r\n                            default:\r\n                                setting.charCode = key.charCodeAt(0);\r\n                                setting.keyCode = keyCodeLookup[key] || key.toUpperCase().charCodeAt(0);\r\n                        }\r\n                    });\r\n                    var regKey = (setting.ctrl ? \"ctrl\" : \"\") + \",\" + (setting.alt ? \"alt\" : \"\") + \",\" + (setting.shift ? \"shift\" : \"\") + \",\" + setting.keyCode;\r\n                    registry[regKey] = setting;\r\n                })\r\n            }\r\n\r\n        };\r\n\r\n    }\r\n\r\n    if (browser.support.transition) {\r\n        specialEvents.transitionEnd = {\r\n//          handle: function (e) {\r\n//            if ($(e.target).is(this)) return e.handleObj.handler.apply(this, arguments)\r\n//          },\r\n          bindType: browser.support.transition.end,\r\n          delegateType: browser.support.transition.end\r\n        }        \r\n    }\r\n\r\n    function eventer() {\r\n        return eventer;\r\n    }\r\n\r\n    langx.mixin(eventer, {\r\n        create: createEvent,\r\n\r\n        keys: keyCodeLookup,\r\n\r\n        off: off,\r\n\r\n        on: on,\r\n\r\n        one: one,\r\n\r\n        proxy: createProxy,\r\n\r\n        ready: ready,\r\n\r\n        shortcuts: shortcuts,\r\n\r\n        special: specialEvents,\r\n\r\n        stop: stop,\r\n\r\n        trigger: trigger\r\n\r\n    });\r\n\r\n    return dom.eventer = eventer;\r\n});\ndefine('skylark-utils-dom/geom',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./styler\"\r\n], function(dom, langx, noder, styler) {\r\n    var rootNodeRE = /^(?:body|html)$/i,\r\n        px = langx.toPixel,\r\n        offsetParent = noder.offsetParent,\r\n        cachedScrollbarWidth;\r\n\r\n    function scrollbarWidth() {\r\n        if (cachedScrollbarWidth !== undefined) {\r\n            return cachedScrollbarWidth;\r\n        }\r\n        var w1, w2,\r\n            div = noder.createFragment(\"<div style=\" +\r\n                \"'display:block;position:absolute;width:200px;height:200px;overflow:hidden;'>\" +\r\n                \"<div style='height:300px;width:auto;'></div></div>\")[0],\r\n            innerDiv = div.childNodes[0];\r\n\r\n        noder.append(document.body, div);\r\n\r\n        w1 = innerDiv.offsetWidth;\r\n\r\n        styler.css(div, \"overflow\", \"scroll\");\r\n\r\n        w2 = innerDiv.offsetWidth;\r\n\r\n        if (w1 === w2) {\r\n            w2 = div[0].clientWidth;\r\n        }\r\n\r\n        noder.remove(div);\r\n\r\n        return (cachedScrollbarWidth = w1 - w2);\r\n    }\r\n    /*\r\n     * Get the widths of each border of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function borderExtents(elm) {\r\n        if (noder.isWindow(elm)) {\r\n            return {\r\n                left : 0,\r\n                top : 0,\r\n                right : 0,\r\n                bottom : 0\r\n            }\r\n        }        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.borderLeftWidth, elm),\r\n            top: px(s.borderTopWidth, elm),\r\n            right: px(s.borderRightWidth, elm),\r\n            bottom: px(s.borderBottomWidth, elm)\r\n        }\r\n    }\r\n\r\n    //viewport coordinate\r\n    /*\r\n     * Get or set the viewport position of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function boundingPosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            return rootNodeRE.test(elm.nodeName) ? { top: 0, left: 0 } : elm.getBoundingClientRect();\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the viewport rect of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function boundingRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            return elm.getBoundingClientRect()\r\n        } else {\r\n            boundingPosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the height of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function clientHeight(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).height;\r\n        } else {\r\n            return clientSize(elm, {\r\n                height: value\r\n            });\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the size of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} dimension\r\n     */\r\n    function clientSize(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            return {\r\n                width: elm.clientWidth,\r\n                height: elm.clientHeight\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width - pex.left - pex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height - pex.top - pex.bottom;\r\n                }\r\n            } else {\r\n                var bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width + bex.left + bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height + bex.top + bex.bottom;\r\n                }\r\n\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n        return {\r\n            width: elm.clientWidth,\r\n            height: elm.clientHeight\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get or set the width of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} dimension\r\n     */\r\n    function clientWidth(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).width;\r\n        } else {\r\n            clientSize(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the rect of the specified element content box.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function contentRect(elm) {\r\n        var cs = clientSize(elm),\r\n            pex = paddingExtents(elm);\r\n\r\n\r\n        //// On Opera, offsetLeft includes the parent's border\r\n        //if(has(\"opera\")){\r\n        //    pe.l += be.l;\r\n        //    pe.t += be.t;\r\n        //}\r\n        return {\r\n            left: pex.left,\r\n            top: pex.top,\r\n            width: cs.width - pex.left - pex.right,\r\n            height: cs.height - pex.top - pex.bottom\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the document size.\r\n     * @param {HTMLDocument} doc\r\n     */\r\n    function getDocumentSize(doc) {\r\n        var documentElement = doc.documentElement,\r\n            body = doc.body,\r\n            max = Math.max,\r\n            scrollWidth = max(documentElement.scrollWidth, body.scrollWidth),\r\n            clientWidth = max(documentElement.clientWidth, body.clientWidth),\r\n            offsetWidth = max(documentElement.offsetWidth, body.offsetWidth),\r\n            scrollHeight = max(documentElement.scrollHeight, body.scrollHeight),\r\n            clientHeight = max(documentElement.clientHeight, body.clientHeight),\r\n            offsetHeight = max(documentElement.offsetHeight, body.offsetHeight);\r\n\r\n        return {\r\n            width: scrollWidth < offsetWidth ? clientWidth : scrollWidth,\r\n            height: scrollHeight < offsetHeight ? clientHeight : scrollHeight\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the document size.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function height(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).height;\r\n        } else {\r\n            size(elm, {\r\n                height: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the widths of each margin of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function marginExtents(elm) {\r\n        if (noder.isWindow(elm)) {\r\n            return {\r\n                left : 0,\r\n                top : 0,\r\n                right : 0,\r\n                bottom : 0\r\n            }\r\n        }\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.marginLeft),\r\n            top: px(s.marginTop),\r\n            right: px(s.marginRight),\r\n            bottom: px(s.marginBottom),\r\n        }\r\n    }\r\n\r\n\r\n    function marginRect(elm) {\r\n        var obj = relativeRect(elm),\r\n            me = marginExtents(elm);\r\n\r\n        return {\r\n            left: obj.left,\r\n            top: obj.top,\r\n            width: obj.width + me.left + me.right,\r\n            height: obj.height + me.top + me.bottom\r\n        };\r\n    }\r\n\r\n\r\n    function marginSize(elm) {\r\n        var obj = size(elm),\r\n            me = marginExtents(elm);\r\n\r\n        return {\r\n            width: obj.width + me.left + me.right,\r\n            height: obj.height + me.top + me.bottom\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the widths of each padding of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function paddingExtents(elm) {\r\n        if (noder.isWindow(elm)) {\r\n            return {\r\n                left : 0,\r\n                top : 0,\r\n                right : 0,\r\n                bottom : 0\r\n            }\r\n        }\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.paddingLeft),\r\n            top: px(s.paddingTop),\r\n            right: px(s.paddingRight),\r\n            bottom: px(s.paddingBottom),\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the document position of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    //coordinate to the document\r\n    function pagePosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset\r\n            }\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = pagePosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the document rect of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function pageRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset,\r\n                width: Math.round(obj.width),\r\n                height: Math.round(obj.height)\r\n            }\r\n        } else {\r\n            pagePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the position of the specified element border box , relative to parent element.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    // coordinate relative to it's parent\r\n    function relativePosition(elm, coords) {\r\n        if (coords == undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingPosition(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top, // - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left, // - mex.left\r\n            }\r\n        } else {\r\n            var props = {\r\n                top: coords.top,\r\n                left: coords.left\r\n            }\r\n\r\n            if (styler.css(elm, \"position\") == \"static\") {\r\n                props['position'] = \"relative\";\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the rect of the specified element border box , relatived to parent element.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function relativeRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingRect(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top, // - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left, // - mex.left,\r\n                width: offset.width,\r\n                height: offset.height\r\n            }\r\n        } else {\r\n            relativePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Scroll the specified element into view.\r\n     * @param {HTMLElement} elm\r\n     * @param {} align\r\n     */\r\n    function scrollIntoView(elm, align) {\r\n        function getOffset(elm, rootElm) {\r\n            var x, y, parent = elm;\r\n\r\n            x = y = 0;\r\n            while (parent && parent != rootElm && parent.nodeType) {\r\n                x += parent.offsetLeft || 0;\r\n                y += parent.offsetTop || 0;\r\n                parent = parent.offsetParent;\r\n            }\r\n\r\n            return { x: x, y: y };\r\n        }\r\n\r\n        var parentElm = elm.parentNode;\r\n        var x, y, width, height, parentWidth, parentHeight;\r\n        var pos = getOffset(elm, parentElm);\r\n\r\n        x = pos.x;\r\n        y = pos.y;\r\n        width = elm.offsetWidth;\r\n        height = elm.offsetHeight;\r\n        parentWidth = parentElm.clientWidth;\r\n        parentHeight = parentElm.clientHeight;\r\n\r\n        if (align == \"end\") {\r\n            x -= parentWidth - width;\r\n            y -= parentHeight - height;\r\n        } else if (align == \"center\") {\r\n            x -= (parentWidth / 2) - (width / 2);\r\n            y -= (parentHeight / 2) - (height / 2);\r\n        }\r\n\r\n        parentElm.scrollLeft = x;\r\n        parentElm.scrollTop = y;\r\n\r\n        return this;\r\n    }\r\n    /*\r\n     * Get or set the current horizontal position of the scroll bar for the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function scrollLeft(elm, value) {\r\n        if (elm.nodeType === 9) {\r\n            elm = elm.defaultView;\r\n        }\r\n        var hasScrollLeft = \"scrollLeft\" in elm;\r\n        if (value === undefined) {\r\n            return hasScrollLeft ? elm.scrollLeft : elm.pageXOffset\r\n        } else {\r\n            if (hasScrollLeft) {\r\n                elm.scrollLeft = value;\r\n            } else {\r\n                elm.scrollTo(value, elm.scrollY);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or the current vertical position of the scroll bar for the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function scrollTop(elm, value) {\r\n        if (elm.nodeType === 9) {\r\n            elm = elm.defaultView;\r\n        }\r\n        var hasScrollTop = \"scrollTop\" in elm;\r\n\r\n        if (value === undefined) {\r\n            return hasScrollTop ? elm.scrollTop : elm.pageYOffset\r\n        } else {\r\n            if (hasScrollTop) {\r\n                elm.scrollTop = value;\r\n            } else {\r\n                elm.scrollTo(elm.scrollX, value);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or set the size of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject}dimension\r\n     */\r\n    function size(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            if (langx.isWindow(elm)) {\r\n                return {\r\n                    width: elm.innerWidth,\r\n                    height: elm.innerHeight\r\n                }\r\n\r\n            } else if (langx.isDocument(elm)) {\r\n                return getDocumentSize(document);\r\n            } else {\r\n                return {\r\n                    width: elm.offsetWidth,\r\n                    height: elm.offsetHeight\r\n                }\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm),\r\n                    bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined && props.width !== \"\" && props.width !== null) {\r\n                    props.width = props.width - pex.left - pex.right - bex.left - bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined && props.height !== \"\" && props.height !== null) {\r\n                    props.height = props.height - pex.top - pex.bottom - bex.top - bex.bottom;\r\n                }\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or set the size of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function width(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).width;\r\n        } else {\r\n            size(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function geom() {\r\n        return geom;\r\n    }\r\n\r\n    langx.mixin(geom, {\r\n        borderExtents: borderExtents,\r\n        //viewport coordinate\r\n        boundingPosition: boundingPosition,\r\n\r\n        boundingRect: boundingRect,\r\n\r\n        clientHeight: clientHeight,\r\n\r\n        clientSize: clientSize,\r\n\r\n        clientWidth: clientWidth,\r\n\r\n        contentRect: contentRect,\r\n\r\n        getDocumentSize: getDocumentSize,\r\n\r\n        height: height,\r\n\r\n        marginExtents: marginExtents,\r\n\r\n        marginRect: marginRect,\r\n\r\n        marginSize: marginSize,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        paddingExtents: paddingExtents,\r\n\r\n        //coordinate to the document\r\n        pagePosition: pagePosition,\r\n\r\n        pageRect: pageRect,\r\n\r\n        // coordinate relative to it's parent\r\n        relativePosition: relativePosition,\r\n\r\n        relativeRect: relativeRect,\r\n\r\n        scrollbarWidth: scrollbarWidth,\r\n\r\n        scrollIntoView: scrollIntoView,\r\n\r\n        scrollLeft: scrollLeft,\r\n\r\n        scrollTop: scrollTop,\r\n\r\n        size: size,\r\n\r\n        width: width\r\n    });\r\n\r\n    ( function() {\r\n        var max = Math.max,\r\n            abs = Math.abs,\r\n            rhorizontal = /left|center|right/,\r\n            rvertical = /top|center|bottom/,\r\n            roffset = /[\\+\\-]\\d+(\\.[\\d]+)?%?/,\r\n            rposition = /^\\w+/,\r\n            rpercent = /%$/;\r\n\r\n        function getOffsets( offsets, width, height ) {\r\n            return [\r\n                parseFloat( offsets[ 0 ] ) * ( rpercent.test( offsets[ 0 ] ) ? width / 100 : 1 ),\r\n                parseFloat( offsets[ 1 ] ) * ( rpercent.test( offsets[ 1 ] ) ? height / 100 : 1 )\r\n            ];\r\n        }\r\n\r\n        function parseCss( element, property ) {\r\n            return parseInt( styler.css( element, property ), 10 ) || 0;\r\n        }\r\n\r\n        function getDimensions( raw ) {\r\n            if ( raw.nodeType === 9 ) {\r\n                return {\r\n                    size: size(raw),\r\n                    offset: { top: 0, left: 0 }\r\n                };\r\n            }\r\n            if ( noder.isWindow( raw ) ) {\r\n                return {\r\n                    size: size(raw),\r\n                    offset: { \r\n                        top: scrollTop(raw), \r\n                        left: scrollLeft(raw) \r\n                    }\r\n                };\r\n            }\r\n            if ( raw.preventDefault ) {\r\n                return {\r\n                    size : {\r\n                        width: 0,\r\n                        height: 0\r\n                    },\r\n                    offset: { \r\n                        top: raw.pageY, \r\n                        left: raw.pageX \r\n                    }\r\n                };\r\n            }\r\n            return {\r\n                size: size(raw),\r\n                offset: pagePosition(raw)\r\n            };\r\n        }\r\n\r\n        function getScrollInfo( within ) {\r\n            var overflowX = within.isWindow || within.isDocument ? \"\" :\r\n                    styler.css(within.element,\"overflow-x\" ),\r\n                overflowY = within.isWindow || within.isDocument ? \"\" :\r\n                    styler.css(within.element,\"overflow-y\" ),\r\n                hasOverflowX = overflowX === \"scroll\" ||\r\n                    ( overflowX === \"auto\" && within.width < scrollWidth(within.element) ),\r\n                hasOverflowY = overflowY === \"scroll\" ||\r\n                    ( overflowY === \"auto\" && within.height < scrollHeight(within.element));\r\n            return {\r\n                width: hasOverflowY ? scrollbarWidth() : 0,\r\n                height: hasOverflowX ? scrollbarWidth() : 0\r\n            };\r\n        }\r\n\r\n        function getWithinInfo( element ) {\r\n            var withinElement = element || window,\r\n                isWindow = noder.isWindow( withinElement),\r\n                isDocument = !!withinElement && withinElement.nodeType === 9,\r\n                hasOffset = !isWindow && !isDocument,\r\n                msize = marginSize(withinElement);\r\n            return {\r\n                element: withinElement,\r\n                isWindow: isWindow,\r\n                isDocument: isDocument,\r\n                offset: hasOffset ? pagePosition(element) : { left: 0, top: 0 },\r\n                scrollLeft: scrollLeft(withinElement),\r\n                scrollTop: scrollTop(withinElement),\r\n                width: msize.width,\r\n                height: msize.height\r\n            };\r\n        }\r\n\r\n        function posit(elm,options ) {\r\n            // Make a copy, we don't want to modify arguments\r\n            options = langx.extend( {}, options );\r\n\r\n            var atOffset, targetWidth, targetHeight, targetOffset, basePosition, dimensions,\r\n                target = options.of,\r\n                within = getWithinInfo( options.within ),\r\n                scrollInfo = getScrollInfo( within ),\r\n                collision = ( options.collision || \"flip\" ).split( \" \" ),\r\n                offsets = {};\r\n\r\n            dimensions = getDimensions( target );\r\n            if ( target.preventDefault ) {\r\n\r\n                // Force left top to allow flipping\r\n                options.at = \"left top\";\r\n            }\r\n            targetWidth = dimensions.size.width;\r\n            targetHeight = dimensions.size.height;\r\n            targetOffset = dimensions.offset;\r\n\r\n            // Clone to reuse original targetOffset later\r\n            basePosition = langx.extend( {}, targetOffset );\r\n\r\n            // Force my and at to have valid horizontal and vertical positions\r\n            // if a value is missing or invalid, it will be converted to center\r\n            langx.each( [ \"my\", \"at\" ], function() {\r\n                var pos = ( options[ this ] || \"\" ).split( \" \" ),\r\n                    horizontalOffset,\r\n                    verticalOffset;\r\n\r\n                if ( pos.length === 1 ) {\r\n                    pos = rhorizontal.test( pos[ 0 ] ) ?\r\n                        pos.concat( [ \"center\" ] ) :\r\n                        rvertical.test( pos[ 0 ] ) ?\r\n                            [ \"center\" ].concat( pos ) :\r\n                            [ \"center\", \"center\" ];\r\n                }\r\n                pos[ 0 ] = rhorizontal.test( pos[ 0 ] ) ? pos[ 0 ] : \"center\";\r\n                pos[ 1 ] = rvertical.test( pos[ 1 ] ) ? pos[ 1 ] : \"center\";\r\n\r\n                // Calculate offsets\r\n                horizontalOffset = roffset.exec( pos[ 0 ] );\r\n                verticalOffset = roffset.exec( pos[ 1 ] );\r\n                offsets[ this ] = [\r\n                    horizontalOffset ? horizontalOffset[ 0 ] : 0,\r\n                    verticalOffset ? verticalOffset[ 0 ] : 0\r\n                ];\r\n\r\n                // Reduce to just the positions without the offsets\r\n                options[ this ] = [\r\n                    rposition.exec( pos[ 0 ] )[ 0 ],\r\n                    rposition.exec( pos[ 1 ] )[ 0 ]\r\n                ];\r\n            } );\r\n\r\n            // Normalize collision option\r\n            if ( collision.length === 1 ) {\r\n                collision[ 1 ] = collision[ 0 ];\r\n            }\r\n\r\n            if ( options.at[ 0 ] === \"right\" ) {\r\n                basePosition.left += targetWidth;\r\n            } else if ( options.at[ 0 ] === \"center\" ) {\r\n                basePosition.left += targetWidth / 2;\r\n            }\r\n\r\n            if ( options.at[ 1 ] === \"bottom\" ) {\r\n                basePosition.top += targetHeight;\r\n            } else if ( options.at[ 1 ] === \"center\" ) {\r\n                basePosition.top += targetHeight / 2;\r\n            }\r\n\r\n            atOffset = getOffsets( offsets.at, targetWidth, targetHeight );\r\n            basePosition.left += atOffset[ 0 ];\r\n            basePosition.top += atOffset[ 1 ];\r\n\r\n            return ( function(elem) {\r\n                var collisionPosition, using,\r\n                    msize = marginSize(elem),\r\n                    elemWidth = msize.width,\r\n                    elemHeight = msize.height,\r\n                    marginLeft = parseCss( elem, \"marginLeft\" ),\r\n                    marginTop = parseCss( elem, \"marginTop\" ),\r\n                    collisionWidth = elemWidth + marginLeft + parseCss( elem, \"marginRight\" ) +\r\n                        scrollInfo.width,\r\n                    collisionHeight = elemHeight + marginTop + parseCss( elem, \"marginBottom\" ) +\r\n                        scrollInfo.height,\r\n                    position = langx.extend( {}, basePosition ),\r\n                    myOffset = getOffsets( offsets.my, msize.width, msize.height);\r\n\r\n                if ( options.my[ 0 ] === \"right\" ) {\r\n                    position.left -= elemWidth;\r\n                } else if ( options.my[ 0 ] === \"center\" ) {\r\n                    position.left -= elemWidth / 2;\r\n                }\r\n\r\n                if ( options.my[ 1 ] === \"bottom\" ) {\r\n                    position.top -= elemHeight;\r\n                } else if ( options.my[ 1 ] === \"center\" ) {\r\n                    position.top -= elemHeight / 2;\r\n                }\r\n\r\n                position.left += myOffset[ 0 ];\r\n                position.top += myOffset[ 1 ];\r\n\r\n                collisionPosition = {\r\n                    marginLeft: marginLeft,\r\n                    marginTop: marginTop\r\n                };\r\n\r\n                langx.each( [ \"left\", \"top\" ], function( i, dir ) {\r\n                    if ( positions[ collision[ i ] ] ) {\r\n                        positions[ collision[ i ] ][ dir ]( position, {\r\n                            targetWidth: targetWidth,\r\n                            targetHeight: targetHeight,\r\n                            elemWidth: elemWidth,\r\n                            elemHeight: elemHeight,\r\n                            collisionPosition: collisionPosition,\r\n                            collisionWidth: collisionWidth,\r\n                            collisionHeight: collisionHeight,\r\n                            offset: [ atOffset[ 0 ] + myOffset[ 0 ], atOffset [ 1 ] + myOffset[ 1 ] ],\r\n                            my: options.my,\r\n                            at: options.at,\r\n                            within: within,\r\n                            elem: elem\r\n                        } );\r\n                    }\r\n                } );\r\n\r\n                if ( options.using ) {\r\n\r\n                    // Adds feedback as second argument to using callback, if present\r\n                    using = function( props ) {\r\n                        var left = targetOffset.left - position.left,\r\n                            right = left + targetWidth - elemWidth,\r\n                            top = targetOffset.top - position.top,\r\n                            bottom = top + targetHeight - elemHeight,\r\n                            feedback = {\r\n                                target: {\r\n                                    element: target,\r\n                                    left: targetOffset.left,\r\n                                    top: targetOffset.top,\r\n                                    width: targetWidth,\r\n                                    height: targetHeight\r\n                                },\r\n                                element: {\r\n                                    element: elem,\r\n                                    left: position.left,\r\n                                    top: position.top,\r\n                                    width: elemWidth,\r\n                                    height: elemHeight\r\n                                },\r\n                                horizontal: right < 0 ? \"left\" : left > 0 ? \"right\" : \"center\",\r\n                                vertical: bottom < 0 ? \"top\" : top > 0 ? \"bottom\" : \"middle\"\r\n                            };\r\n                        if ( targetWidth < elemWidth && abs( left + right ) < targetWidth ) {\r\n                            feedback.horizontal = \"center\";\r\n                        }\r\n                        if ( targetHeight < elemHeight && abs( top + bottom ) < targetHeight ) {\r\n                            feedback.vertical = \"middle\";\r\n                        }\r\n                        if ( max( abs( left ), abs( right ) ) > max( abs( top ), abs( bottom ) ) ) {\r\n                            feedback.important = \"horizontal\";\r\n                        } else {\r\n                            feedback.important = \"vertical\";\r\n                        }\r\n                        options.using.call( this, props, feedback );\r\n                    };\r\n                }\r\n\r\n                pagePosition(elem, langx.extend( position, { using: using } ));\r\n            })(elm);\r\n        }\r\n\r\n        var positions = {\r\n            fit: {\r\n                left: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.isWindow ? within.scrollLeft : within.offset.left,\r\n                        outerWidth = within.width,\r\n                        collisionPosLeft = position.left - data.collisionPosition.marginLeft,\r\n                        overLeft = withinOffset - collisionPosLeft,\r\n                        overRight = collisionPosLeft + data.collisionWidth - outerWidth - withinOffset,\r\n                        newOverRight;\r\n\r\n                    // Element is wider than within\r\n                    if ( data.collisionWidth > outerWidth ) {\r\n\r\n                        // Element is initially over the left side of within\r\n                        if ( overLeft > 0 && overRight <= 0 ) {\r\n                            newOverRight = position.left + overLeft + data.collisionWidth - outerWidth -\r\n                                withinOffset;\r\n                            position.left += overLeft - newOverRight;\r\n\r\n                        // Element is initially over right side of within\r\n                        } else if ( overRight > 0 && overLeft <= 0 ) {\r\n                            position.left = withinOffset;\r\n\r\n                        // Element is initially over both left and right sides of within\r\n                        } else {\r\n                            if ( overLeft > overRight ) {\r\n                                position.left = withinOffset + outerWidth - data.collisionWidth;\r\n                            } else {\r\n                                position.left = withinOffset;\r\n                            }\r\n                        }\r\n\r\n                    // Too far left -> align with left edge\r\n                    } else if ( overLeft > 0 ) {\r\n                        position.left += overLeft;\r\n\r\n                    // Too far right -> align with right edge\r\n                    } else if ( overRight > 0 ) {\r\n                        position.left -= overRight;\r\n\r\n                    // Adjust based on position and margin\r\n                    } else {\r\n                        position.left = max( position.left - collisionPosLeft, position.left );\r\n                    }\r\n                },\r\n                top: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.isWindow ? within.scrollTop : within.offset.top,\r\n                        outerHeight = data.within.height,\r\n                        collisionPosTop = position.top - data.collisionPosition.marginTop,\r\n                        overTop = withinOffset - collisionPosTop,\r\n                        overBottom = collisionPosTop + data.collisionHeight - outerHeight - withinOffset,\r\n                        newOverBottom;\r\n\r\n                    // Element is taller than within\r\n                    if ( data.collisionHeight > outerHeight ) {\r\n\r\n                        // Element is initially over the top of within\r\n                        if ( overTop > 0 && overBottom <= 0 ) {\r\n                            newOverBottom = position.top + overTop + data.collisionHeight - outerHeight -\r\n                                withinOffset;\r\n                            position.top += overTop - newOverBottom;\r\n\r\n                        // Element is initially over bottom of within\r\n                        } else if ( overBottom > 0 && overTop <= 0 ) {\r\n                            position.top = withinOffset;\r\n\r\n                        // Element is initially over both top and bottom of within\r\n                        } else {\r\n                            if ( overTop > overBottom ) {\r\n                                position.top = withinOffset + outerHeight - data.collisionHeight;\r\n                            } else {\r\n                                position.top = withinOffset;\r\n                            }\r\n                        }\r\n\r\n                    // Too far up -> align with top\r\n                    } else if ( overTop > 0 ) {\r\n                        position.top += overTop;\r\n\r\n                    // Too far down -> align with bottom edge\r\n                    } else if ( overBottom > 0 ) {\r\n                        position.top -= overBottom;\r\n\r\n                    // Adjust based on position and margin\r\n                    } else {\r\n                        position.top = max( position.top - collisionPosTop, position.top );\r\n                    }\r\n                }\r\n            },\r\n            flip: {\r\n                left: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.offset.left + within.scrollLeft,\r\n                        outerWidth = within.width,\r\n                        offsetLeft = within.isWindow ? within.scrollLeft : within.offset.left,\r\n                        collisionPosLeft = position.left - data.collisionPosition.marginLeft,\r\n                        overLeft = collisionPosLeft - offsetLeft,\r\n                        overRight = collisionPosLeft + data.collisionWidth - outerWidth - offsetLeft,\r\n                        myOffset = data.my[ 0 ] === \"left\" ?\r\n                            -data.elemWidth :\r\n                            data.my[ 0 ] === \"right\" ?\r\n                                data.elemWidth :\r\n                                0,\r\n                        atOffset = data.at[ 0 ] === \"left\" ?\r\n                            data.targetWidth :\r\n                            data.at[ 0 ] === \"right\" ?\r\n                                -data.targetWidth :\r\n                                0,\r\n                        offset = -2 * data.offset[ 0 ],\r\n                        newOverRight,\r\n                        newOverLeft;\r\n\r\n                    if ( overLeft < 0 ) {\r\n                        newOverRight = position.left + myOffset + atOffset + offset + data.collisionWidth -\r\n                            outerWidth - withinOffset;\r\n                        if ( newOverRight < 0 || newOverRight < abs( overLeft ) ) {\r\n                            position.left += myOffset + atOffset + offset;\r\n                        }\r\n                    } else if ( overRight > 0 ) {\r\n                        newOverLeft = position.left - data.collisionPosition.marginLeft + myOffset +\r\n                            atOffset + offset - offsetLeft;\r\n                        if ( newOverLeft > 0 || abs( newOverLeft ) < overRight ) {\r\n                            position.left += myOffset + atOffset + offset;\r\n                        }\r\n                    }\r\n                },\r\n                top: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.offset.top + within.scrollTop,\r\n                        outerHeight = within.height,\r\n                        offsetTop = within.isWindow ? within.scrollTop : within.offset.top,\r\n                        collisionPosTop = position.top - data.collisionPosition.marginTop,\r\n                        overTop = collisionPosTop - offsetTop,\r\n                        overBottom = collisionPosTop + data.collisionHeight - outerHeight - offsetTop,\r\n                        top = data.my[ 1 ] === \"top\",\r\n                        myOffset = top ?\r\n                            -data.elemHeight :\r\n                            data.my[ 1 ] === \"bottom\" ?\r\n                                data.elemHeight :\r\n                                0,\r\n                        atOffset = data.at[ 1 ] === \"top\" ?\r\n                            data.targetHeight :\r\n                            data.at[ 1 ] === \"bottom\" ?\r\n                                -data.targetHeight :\r\n                                0,\r\n                        offset = -2 * data.offset[ 1 ],\r\n                        newOverTop,\r\n                        newOverBottom;\r\n                    if ( overTop < 0 ) {\r\n                        newOverBottom = position.top + myOffset + atOffset + offset + data.collisionHeight -\r\n                            outerHeight - withinOffset;\r\n                        if ( newOverBottom < 0 || newOverBottom < abs( overTop ) ) {\r\n                            position.top += myOffset + atOffset + offset;\r\n                        }\r\n                    } else if ( overBottom > 0 ) {\r\n                        newOverTop = position.top - data.collisionPosition.marginTop + myOffset + atOffset +\r\n                            offset - offsetTop;\r\n                        if ( newOverTop > 0 || abs( newOverTop ) < overBottom ) {\r\n                            position.top += myOffset + atOffset + offset;\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            flipfit: {\r\n                left: function() {\r\n                    positions.flip.left.apply( this, arguments );\r\n                    positions.fit.left.apply( this, arguments );\r\n                },\r\n                top: function() {\r\n                    positions.flip.top.apply( this, arguments );\r\n                    positions.fit.top.apply( this, arguments );\r\n                }\r\n            }\r\n        };\r\n\r\n        geom.posit = posit;\r\n    })();\r\n\r\n    return dom.geom = geom;\r\n});\ndefine('skylark-utils-dom/fx',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./eventer\"\r\n], function(dom, langx, browser, geom, styler, eventer) {\r\n    var animationName,\r\n        animationDuration,\r\n        animationTiming,\r\n        animationDelay,\r\n        transitionProperty,\r\n        transitionDuration,\r\n        transitionTiming,\r\n        transitionDelay,\r\n\r\n        animationEnd = browser.normalizeCssEvent('AnimationEnd'),\r\n        transitionEnd = browser.normalizeCssEvent('TransitionEnd'),\r\n\r\n        supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i,\r\n        transform = browser.css3PropPrefix + \"transform\",\r\n        cssReset = {};\r\n\r\n\r\n    cssReset[animationName = browser.normalizeCssProperty(\"animation-name\")] =\r\n        cssReset[animationDuration = browser.normalizeCssProperty(\"animation-duration\")] =\r\n        cssReset[animationDelay = browser.normalizeCssProperty(\"animation-delay\")] =\r\n        cssReset[animationTiming = browser.normalizeCssProperty(\"animation-timing-function\")] = \"\";\r\n\r\n    cssReset[transitionProperty = browser.normalizeCssProperty(\"transition-property\")] =\r\n        cssReset[transitionDuration = browser.normalizeCssProperty(\"transition-duration\")] =\r\n        cssReset[transitionDelay = browser.normalizeCssProperty(\"transition-delay\")] =\r\n        cssReset[transitionTiming = browser.normalizeCssProperty(\"transition-timing-function\")] = \"\";\r\n\r\n\r\n\r\n    /*   \r\n     * Perform a custom animation of a set of CSS properties.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} properties\r\n     * @param {String} ease\r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     * @param {Number or String} delay\r\n     */\r\n    function animate(elm, properties, duration, ease, callback, delay) {\r\n        var key,\r\n            cssValues = {},\r\n            cssProperties = [],\r\n            transforms = \"\",\r\n            that = this,\r\n            endEvent,\r\n            wrappedCallback,\r\n            fired = false,\r\n            hasScrollTop = false,\r\n            resetClipAuto = false;\r\n\r\n        if (langx.isPlainObject(duration)) {\r\n            ease = duration.easing;\r\n            callback = duration.complete;\r\n            delay = duration.delay;\r\n            duration = duration.duration;\r\n        }\r\n\r\n        if (langx.isString(duration)) {\r\n            duration = fx.speeds[duration];\r\n        }\r\n        if (duration === undefined) {\r\n            duration = fx.speeds.normal;\r\n        }\r\n        duration = duration / 1000;\r\n        if (fx.off) {\r\n            duration = 0;\r\n        }\r\n\r\n        if (langx.isFunction(ease)) {\r\n            callback = ease;\r\n            eace = \"swing\";\r\n        } else {\r\n            ease = ease || \"swing\";\r\n        }\r\n\r\n        if (delay) {\r\n            delay = delay / 1000;\r\n        } else {\r\n            delay = 0;\r\n        }\r\n\r\n        if (langx.isString(properties)) {\r\n            // keyframe animation\r\n            cssValues[animationName] = properties;\r\n            cssValues[animationDuration] = duration + \"s\";\r\n            cssValues[animationTiming] = ease;\r\n            endEvent = animationEnd;\r\n        } else {\r\n            // CSS transitions\r\n            for (key in properties) {\r\n                var v = properties[key];\r\n                if (supportedTransforms.test(key)) {\r\n                    transforms += key + \"(\" + v + \") \";\r\n                } else {\r\n                    if (key === \"scrollTop\") {\r\n                        hasScrollTop = true;\r\n                    }\r\n                    if (key == \"clip\" && langx.isPlainObject(v)) {\r\n                        cssValues[key] = \"rect(\" + v.top+\"px,\"+ v.right +\"px,\"+ v.bottom +\"px,\"+ v.left+\"px)\";\r\n                        if (styler.css(elm,\"clip\") == \"auto\") {\r\n                            var size = geom.size(elm);\r\n                            styler.css(elm,\"clip\",\"rect(\"+\"0px,\"+ size.width +\"px,\"+ size.height +\"px,\"+\"0px)\");  \r\n                            resetClipAuto = true;\r\n                        }\r\n\r\n                    } else {\r\n                        cssValues[key] = v;\r\n                    }\r\n                    cssProperties.push(langx.dasherize(key));\r\n                }\r\n            }\r\n            endEvent = transitionEnd;\r\n        }\r\n\r\n        if (transforms) {\r\n            cssValues[transform] = transforms;\r\n            cssProperties.push(transform);\r\n        }\r\n\r\n        if (duration > 0 && langx.isPlainObject(properties)) {\r\n            cssValues[transitionProperty] = cssProperties.join(\", \");\r\n            cssValues[transitionDuration] = duration + \"s\";\r\n            cssValues[transitionDelay] = delay + \"s\";\r\n            cssValues[transitionTiming] = ease;\r\n        }\r\n\r\n        wrappedCallback = function(event) {\r\n            fired = true;\r\n            if (event) {\r\n                if (event.target !== event.currentTarget) {\r\n                    return // makes sure the event didn't bubble from \"below\"\r\n                }\r\n                eventer.off(event.target, endEvent, wrappedCallback)\r\n            } else {\r\n                eventer.off(elm, animationEnd, wrappedCallback) // triggered by setTimeout\r\n            }\r\n            styler.css(elm, cssReset);\r\n            if (resetClipAuto) {\r\n //               styler.css(elm,\"clip\",\"auto\");\r\n            }\r\n            callback && callback.call(this);\r\n        };\r\n\r\n        if (duration > 0) {\r\n            eventer.on(elm, endEvent, wrappedCallback);\r\n            // transitionEnd is not always firing on older Android phones\r\n            // so make sure it gets fired\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, ((duration + delay) * 1000) + 25)();\r\n        }\r\n\r\n        // trigger page reflow so new elements can animate\r\n        elm.clientLeft;\r\n\r\n        styler.css(elm, cssValues);\r\n\r\n        if (duration <= 0) {\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, 0)();\r\n        }\r\n\r\n        if (hasScrollTop) {\r\n            scrollToTop(elm, properties[\"scrollTop\"], duration, callback);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display an element.\r\n     * @param {Object} elm  \r\n     * @param {String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function show(elm, speed, callback) {\r\n        styler.show(elm);\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            styler.css(elm, \"opacity\", 0)\r\n            animate(elm, { opacity: 1, scale: \"1,1\" }, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Hide an element.\r\n     * @param {Object} elm  \r\n     * @param {String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function hide(elm, speed, callback) {\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            animate(elm, { opacity: 0, scale: \"0,0\" }, speed, function() {\r\n                styler.hide(elm);\r\n                if (callback) {\r\n                    callback.call(elm);\r\n                }\r\n            });\r\n        } else {\r\n            styler.hide(elm);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Set the vertical position of the scroll bar for an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} pos\r\n     * @param {Number or String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function scrollToTop(elm, pos, speed, callback) {\r\n        var scrollFrom = parseInt(elm.scrollTop),\r\n            i = 0,\r\n            runEvery = 5, // run every 5ms\r\n            freq = speed * 1000 / runEvery,\r\n            scrollTo = parseInt(pos);\r\n\r\n        var interval = setInterval(function() {\r\n            i++;\r\n\r\n            if (i <= freq) elm.scrollTop = (scrollTo - scrollFrom) / freq * i + scrollFrom;\r\n\r\n            if (i >= freq + 1) {\r\n                clearInterval(interval);\r\n                if (callback) langx.debounce(callback, 1000)();\r\n            }\r\n        }, runEvery);\r\n    }\r\n\r\n    /*   \r\n     * Display or hide an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function toggle(elm, speed, callback) {\r\n        if (styler.isInvisible(elm)) {\r\n            show(elm, speed, callback);\r\n        } else {\r\n            hide(elm, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Adjust the opacity of an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {Number or String} opacity\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeTo(elm, speed, opacity, easing, callback) {\r\n        animate(elm, { opacity: opacity }, speed, easing, callback);\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Display an element by fading them to opaque.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeIn(elm, speed, easing, callback) {\r\n        var target = styler.css(elm, \"opacity\");\r\n        if (target > 0) {\r\n            styler.css(elm, \"opacity\", 0);\r\n        } else {\r\n            target = 1;\r\n        }\r\n        styler.show(elm);\r\n\r\n        fadeTo(elm, speed, target, easing, callback);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Hide an element by fading them to transparent.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeOut(elm, speed, easing, callback) {\r\n        var _elm = elm,\r\n            complete,\r\n            opacity = styler.css(elm,\"opacity\"),\r\n            options = {};\r\n\r\n        if (langx.isPlainObject(speed)) {\r\n            options.easing = speed.easing;\r\n            options.duration = speed.duration;\r\n            complete = speed.complete;\r\n        } else {\r\n            options.duration = speed;\r\n            if (callback) {\r\n                complete = callback;\r\n                options.easing = easing;\r\n            } else {\r\n                complete = easing;\r\n            }\r\n        }\r\n        options.complete = function() {\r\n            styler.css(elm,\"opacity\",opacity);\r\n            styler.hide(elm);\r\n            if (complete) {\r\n                complete.call(elm);\r\n            }\r\n        }\r\n\r\n        fadeTo(elm, options, 0);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display or hide an element by animating its opacity.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} ceasing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeToggle(elm, speed, ceasing, allback) {\r\n        if (styler.isInvisible(elm)) {\r\n            fadeIn(elm, speed, easing, callback);\r\n        } else {\r\n            fadeOut(elm, speed, easing, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideDown(elm, duration, callback) {\r\n\r\n        // get the element position to restore it then\r\n        var position = styler.css(elm, 'position');\r\n\r\n        // show element if it is hidden\r\n        show(elm);\r\n\r\n        // place it so it displays as usually but hidden\r\n        styler.css(elm, {\r\n            position: 'absolute',\r\n            visibility: 'hidden'\r\n        });\r\n\r\n        // get naturally height, margin, padding\r\n        var marginTop = styler.css(elm, 'margin-top');\r\n        var marginBottom = styler.css(elm, 'margin-bottom');\r\n        var paddingTop = styler.css(elm, 'padding-top');\r\n        var paddingBottom = styler.css(elm, 'padding-bottom');\r\n        var height = styler.css(elm, 'height');\r\n\r\n        // set initial css for animation\r\n        styler.css(elm, {\r\n            position: position,\r\n            visibility: 'visible',\r\n            overflow: 'hidden',\r\n            height: 0,\r\n            marginTop: 0,\r\n            marginBottom: 0,\r\n            paddingTop: 0,\r\n            paddingBottom: 0\r\n        });\r\n\r\n        // animate to gotten height, margin and padding\r\n        animate(elm, {\r\n            height: height,\r\n            marginTop: marginTop,\r\n            marginBottom: marginBottom,\r\n            paddingTop: paddingTop,\r\n            paddingBottom: paddingBottom\r\n        }, {\r\n            duration: duration,\r\n            complete: function() {\r\n                if (callback) {\r\n                    callback.apply(elm);\r\n                }\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Hide an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideUp(elm, duration, callback) {\r\n        // active the function only if the element is visible\r\n        if (geom.height(elm) > 0) {\r\n\r\n            // get the element position to restore it then\r\n            var position = styler.css(elm, 'position');\r\n\r\n            // get the element height, margin and padding to restore them then\r\n            var height = styler.css(elm, 'height');\r\n            var marginTop = styler.css(elm, 'margin-top');\r\n            var marginBottom = styler.css(elm, 'margin-bottom');\r\n            var paddingTop = styler.css(elm, 'padding-top');\r\n            var paddingBottom = styler.css(elm, 'padding-bottom');\r\n\r\n            // set initial css for animation\r\n            styler.css(elm, {\r\n                visibility: 'visible',\r\n                overflow: 'hidden',\r\n                height: height,\r\n                marginTop: marginTop,\r\n                marginBottom: marginBottom,\r\n                paddingTop: paddingTop,\r\n                paddingBottom: paddingBottom\r\n            });\r\n\r\n            // animate element height, margin and padding to zero\r\n            animate(elm, {\r\n                height: 0,\r\n                marginTop: 0,\r\n                marginBottom: 0,\r\n                paddingTop: 0,\r\n                paddingBottom: 0\r\n            }, {\r\n                // callback : restore the element position, height, margin and padding to original values\r\n                duration: duration,\r\n                queue: false,\r\n                complete: function() {\r\n                    hide(elm);\r\n                    styler.css(elm, {\r\n                        visibility: 'visible',\r\n                        overflow: 'hidden',\r\n                        height: height,\r\n                        marginTop: marginTop,\r\n                        marginBottom: marginBottom,\r\n                        paddingTop: paddingTop,\r\n                        paddingBottom: paddingBottom\r\n                    });\r\n                    if (callback) {\r\n                        callback.apply(elm);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Display or hide an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideToggle(elm, duration, callback) {\r\n\r\n        // if the element is hidden, slideDown !\r\n        if (geom.height(elm) == 0) {\r\n            slideDown(elm, duration, callback);\r\n        }\r\n        // if the element is visible, slideUp !\r\n        else {\r\n            slideUp(elm, duration, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function emulateTransitionEnd(elm,duration) {\r\n        var called = false;\r\n        eventer.one(elm,'transitionEnd', function () { \r\n            called = true;\r\n        })\r\n        var callback = function () { \r\n            if (!called) {\r\n                eventer.trigger(elm,browser.support.transition.end) \r\n            }\r\n        };\r\n        setTimeout(callback, duration);\r\n        \r\n        return this;\r\n    } \r\n\r\n    function fx() {\r\n        return fx;\r\n    }\r\n\r\n    langx.mixin(fx, {\r\n        off: false,\r\n\r\n        speeds: {\r\n            normal: 400,\r\n            fast: 200,\r\n            slow: 600\r\n        },\r\n\r\n        animate,\r\n        emulateTransitionEnd,\r\n        fadeIn,\r\n        fadeOut,\r\n        fadeTo,\r\n        fadeToggle,\r\n        hide,\r\n        scrollToTop,\r\n\r\n        slideDown,\r\n        slideToggle,\r\n        slideUp,\r\n        show,\r\n        toggle\r\n    });\r\n\r\n    return dom.fx = fx;\r\n});\ndefine('skylark-utils-dom/transforms',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./datax\",\r\n    \"./styler\"\r\n], function(dom,langx,browser,datax,styler) {\r\n  var css3Transform = browser.normalizeCssProperty(\"transform\");\r\n\r\n  function getMatrix(radian, x, y) {\r\n    var Cos = Math.cos(radian), Sin = Math.sin(radian);\r\n    return {\r\n      M11: Cos * x, \r\n      M12: -Sin * y,\r\n      M21: Sin * x, \r\n      M22: Cos * y\r\n    };\r\n  }\r\n\r\n  function getZoom(scale, zoom) {\r\n      return scale > 0 && scale > -zoom ? zoom :\r\n        scale < 0 && scale < zoom ? -zoom : 0;\r\n  }\r\n\r\n    function change(el,d) {\r\n      var matrix = getMatrix(d.radian, d.y, d.x);\r\n      styler.css(el,css3Transform, \"matrix(\"\r\n        + matrix.M11.toFixed(16) + \",\" + matrix.M21.toFixed(16) + \",\"\r\n        + matrix.M12.toFixed(16) + \",\" + matrix.M22.toFixed(16) + \", 0, 0)\"\r\n      );      \r\n  }\r\n\r\n  function transformData(el,d) {\r\n    if (d) {\r\n      datax.data(el,\"transform\",d);\r\n    } else {\r\n      d = datax.data(el,\"transform\") || {};\r\n      d.radian = d.radian || 0;\r\n      d.x = d.x || 1;\r\n      d.y = d.y || 1;\r\n      d.zoom = d.zoom || 1;\r\n      return d;     \r\n    }\r\n  }\r\n\r\n  var calcs = {\r\n    //Vertical flip\r\n    vertical : function (d) {\r\n        d.radian = Math.PI - d.radian; \r\n        d.y *= -1;\r\n    },\r\n\r\n   //Horizontal flip\r\n    horizontal : function (d) {\r\n        d.radian = Math.PI - d.radian; \r\n        d.x *= -1;\r\n    },\r\n\r\n    //Rotate according to angle\r\n    rotate : function (d,degress) {\r\n        d.radian = degress * Math.PI / 180;; \r\n    },\r\n\r\n    //Turn left 90 degrees\r\n    left : function (d) {\r\n        d.radian -= Math.PI / 2; \r\n    },\r\n\r\n    //Turn right 90 degrees\r\n    right : function (d) {\r\n        d.radian += Math.PI / 2; \r\n    },\r\n \r\n    //zoom\r\n    scale: function (d,zoom) {\r\n        var hZoom = getZoom(d.y, zoom), vZoom = getZoom(d.x, zoom);\r\n        if (hZoom && vZoom) {\r\n          d.y += hZoom; \r\n          d.x += vZoom;\r\n        }\r\n    }, \r\n\r\n    //zoom in\r\n    zoomin: function (d) { \r\n      calcs.scale(d,0.1); \r\n    },\r\n    \r\n    //zoom out\r\n    zoomout: function (d) { \r\n      calcs.scale(d,-0.1); \r\n    }\r\n\r\n  };\r\n  \r\n  \r\n  function _createApiMethod(calcFunc) {\r\n    return function() {\r\n      var args = langx.makeArray(arguments),\r\n        el = args.shift(),\r\n          d = transformData(el);\r\n        args.unshift(d);\r\n        calcFunc.apply(this,args)\r\n        change(el,d);\r\n        transformData(el,d);\r\n    }\r\n  }\r\n  \r\n  function transforms() {\r\n    return transforms;\r\n  }\r\n\r\n  [\"vertical\",\"horizontal\",\"rotate\",\"left\",\"right\",\"scale\",\"zoom\",\"zoomin\",\"zoomout\"].forEach(function(name){\r\n    transforms[name] = _createApiMethod(calcs[name]);\r\n  });\r\n\r\n  langx.mixin(transforms, {\r\n    reset : function(el) {\r\n      var d = {\r\n        x : 1,\r\n        y : 1,\r\n        radian : 0,\r\n      }\r\n      change(el,d);\r\n      transformData(el,d);\r\n    }\r\n  });\r\n\r\n\r\n  return dom.transforms = transforms;\r\n});\r\n\ndefine('skylark-utils-dom/query',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./eventer\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./fx\"\r\n], function(dom, langx, noder, datax, eventer, finder, geom, styler, fx) {\r\n    var some = Array.prototype.some,\r\n        push = Array.prototype.push,\r\n        every = Array.prototype.every,\r\n        concat = Array.prototype.concat,\r\n        slice = Array.prototype.slice,\r\n        map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        forEach = Array.prototype.forEach,\r\n        indexOf = Array.prototype.indexOf,\r\n        sort = Array.prototype.sort,\r\n        isQ;\r\n\r\n    var rquickExpr = /^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)/;\r\n\r\n    var funcArg = langx.funcArg,\r\n        isArrayLike = langx.isArrayLike,\r\n        isString = langx.isString,\r\n        uniq = langx.uniq,\r\n        isFunction = langx.isFunction;\r\n\r\n    var type = langx.type,\r\n        isArray = langx.isArray,\r\n\r\n        isWindow = langx.isWindow,\r\n\r\n        isDocument = langx.isDocument,\r\n\r\n        isObject = langx.isObject,\r\n\r\n        isPlainObject = langx.isPlainObject,\r\n\r\n        compact = langx.compact,\r\n\r\n        flatten = langx.flatten,\r\n\r\n        camelCase = langx.camelCase,\r\n\r\n        dasherize = langx.dasherize,\r\n        children = finder.children;\r\n\r\n    function wrapper_map(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = langx.map(self, function(elem, idx) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n            return query(uniq(result));\r\n        }\r\n    }\r\n\r\n    function wrapper_selector(func, context, last) {\r\n        return function(selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                //if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem] : [elem, selector]);\r\n                //}\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper_selector_until(func, context, last) {\r\n        return function(util, selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            //if (selector === undefined) { //TODO : needs confirm?\r\n            //    selector = util;\r\n            //    util = undefined;\r\n            //}\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) { // TODO\r\n                //if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem, util] : [elem, selector, util]);\r\n                //}\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function wrapper_every_act(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            this.each(function(idx,node) {\r\n                func.apply(context, [this].concat(params));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_every_act_firstArgFunc(func, context, oldValueFunc) {\r\n        return function(arg1) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            forEach.call(self, function(elem, idx) {\r\n                var newArg1 = funcArg(elem, arg1, idx, oldValueFunc(elem));\r\n                func.apply(context, [elem, arg1].concat(params.slice(1)));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_some_chk(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            return some.call(self, function(elem) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n        }\r\n    }\r\n\r\n    function wrapper_name_value(func, context, oldValueFunc) {\r\n        return function(name, value) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n\r\n            if (langx.isPlainObject(name) || langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem, name));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem].concat(params));\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0], name]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    function wrapper_value(func, context, oldValueFunc) {\r\n        return function(value) {\r\n            var self = this;\r\n\r\n            if (langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem, newValue]);\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0]]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    var NodeList = langx.klass({\r\n        klassName: \"SkNodeList\",\r\n        init: function(selector, context) {\r\n            var self = this,\r\n                match, nodes, node, props;\r\n\r\n            if (selector) {\r\n                self.context = context = context || noder.doc();\r\n\r\n                if (isString(selector)) {\r\n                    // a html string or a css selector is expected\r\n                    self.selector = selector;\r\n\r\n                    if (selector.charAt(0) === \"<\" && selector.charAt(selector.length - 1) === \">\" && selector.length >= 3) {\r\n                        match = [null, selector, null];\r\n                    } else {\r\n                        match = rquickExpr.exec(selector);\r\n                    }\r\n\r\n                    if (match) {\r\n                        if (match[1]) {\r\n                            // if selector is html\r\n                            nodes = noder.createFragment(selector);\r\n\r\n                            if (langx.isPlainObject(context)) {\r\n                                props = context;\r\n                            }\r\n\r\n                        } else {\r\n                            node = finder.byId(match[2], noder.ownerDoc(context));\r\n\r\n                            if (node) {\r\n                                // if selector is id\r\n                                nodes = [node];\r\n                            }\r\n\r\n                        }\r\n                    } else {\r\n                        // if selector is css selector\r\n                        if (langx.isString(context)) {\r\n                            context = finder.find(context);\r\n                        }\r\n\r\n                        nodes = finder.descendants(context, selector);\r\n                    }\r\n                } else {\r\n                    if (selector !== window && isArrayLike(selector)) {\r\n                        // a dom node array is expected\r\n                        nodes = selector;\r\n                    } else {\r\n                        // a dom node is expected\r\n                        nodes = [selector];\r\n                    }\r\n                    //self.add(selector, false);\r\n                }\r\n            }\r\n\r\n\r\n            if (nodes) {\r\n\r\n                push.apply(self, nodes);\r\n\r\n                if (props) {\r\n                    for ( var name  in props ) {\r\n                        // Properties of context are called as methods if possible\r\n                        if ( langx.isFunction( this[ name ] ) ) {\r\n                            this[ name ]( props[ name ] );\r\n                        } else {\r\n                            this.attr( name, props[ name ] );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return self;\r\n        }\r\n    });\r\n\r\n    var query = (function() {\r\n        isQ = function(object) {\r\n            return object instanceof NodeList;\r\n        }\r\n        init = function(selector, context) {\r\n            return new NodeList(selector, context);\r\n        }\r\n\r\n        var $ = function(selector, context) {\r\n            if (isFunction(selector)) {\r\n                eventer.ready(function() {\r\n                    selector($);\r\n                });\r\n            } else if (isQ(selector)) {\r\n                return selector;\r\n            } else {\r\n                if (context && isQ(context) && isString(selector)) {\r\n                    return context.find(selector);\r\n                }\r\n                return init(selector, context);\r\n            }\r\n        };\r\n\r\n        $.fn = NodeList.prototype;\r\n        langx.mixin($.fn, {\r\n            // `map` and `slice` in the jQuery API work differently\r\n            // from their array counterparts\r\n            length : 0,\r\n\r\n            map: function(fn) {\r\n                return $(uniq(langx.map(this, function(el, i) {\r\n                    return fn.call(el, i, el)\r\n                })));\r\n            },\r\n\r\n            slice: function() {\r\n                return $(slice.apply(this, arguments))\r\n            },\r\n\r\n            forEach: function() {\r\n                return forEach.apply(this,arguments);\r\n            },\r\n\r\n            get: function(idx) {\r\n                return idx === undefined ? slice.call(this) : this[idx >= 0 ? idx : idx + this.length]\r\n            },\r\n\r\n            indexOf: function() {\r\n                return indexOf.apply(this,arguments);\r\n            },\r\n\r\n            sort : function() {\r\n                return sort.apply(this,arguments);\r\n            },\r\n\r\n            toArray: function() {\r\n                return slice.call(this);\r\n            },\r\n\r\n            size: function() {\r\n                return this.length\r\n            },\r\n\r\n            //remove: wrapper_every_act(noder.remove, noder),\r\n            remove : function(selector) {\r\n                if (selector) {\r\n                    return this.find(selector).remove();\r\n                }\r\n                this.each(function(i,node){\r\n                    noder.remove(node);\r\n                });\r\n                return this;\r\n            },\r\n\r\n            each: function(callback) {\r\n                langx.each(this, callback);\r\n                return this;\r\n            },\r\n\r\n            filter: function(selector) {\r\n                if (isFunction(selector)) return this.not(this.not(selector))\r\n                return $(filter.call(this, function(element) {\r\n                    return finder.matches(element, selector)\r\n                }))\r\n            },\r\n\r\n            add: function(selector, context) {\r\n                return $(uniq(this.toArray().concat($(selector, context).toArray())));\r\n            },\r\n\r\n            is: function(selector) {\r\n                if (this.length > 0) {\r\n                    var self = this;\r\n                    if (langx.isString(selector)) {\r\n                        return some.call(self,function(elem) {\r\n                            return finder.matches(elem, selector);\r\n                        });\r\n                    } else if (langx.isArrayLike(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return langx.inArray(elem, selector) > -1;\r\n                        });\r\n                    } else if (langx.isHtmlNode(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return elem ==  selector;\r\n                        });\r\n                    }\r\n                }\r\n                return false;\r\n            },\r\n            \r\n            not: function(selector) {\r\n                var nodes = []\r\n                if (isFunction(selector) && selector.call !== undefined)\r\n                    this.each(function(idx,node) {\r\n                        if (!selector.call(this, idx,node)) nodes.push(this)\r\n                    })\r\n                else {\r\n                    var excludes = typeof selector == 'string' ? this.filter(selector) :\r\n                        (isArrayLike(selector) && isFunction(selector.item)) ? slice.call(selector) : $(selector)\r\n                    this.forEach(function(el) {\r\n                        if (excludes.indexOf(el) < 0) nodes.push(el)\r\n                    })\r\n                }\r\n                return $(nodes)\r\n            },\r\n\r\n            has: function(selector) {\r\n                return this.filter(function() {\r\n                    return isObject(selector) ?\r\n                        noder.contains(this, selector) :\r\n                        $(this).find(selector).size()\r\n                })\r\n            },\r\n\r\n            eq: function(idx) {\r\n                return idx === -1 ? this.slice(idx) : this.slice(idx, +idx + 1);\r\n            },\r\n\r\n            first: function() {\r\n                return this.eq(0);\r\n            },\r\n\r\n            last: function() {\r\n                return this.eq(-1);\r\n            },\r\n\r\n            find: wrapper_selector(finder.descendants, finder),\r\n\r\n            closest: wrapper_selector(finder.closest, finder),\r\n            /*\r\n                        closest: function(selector, context) {\r\n                            var node = this[0],\r\n                                collection = false\r\n                            if (typeof selector == 'object') collection = $(selector)\r\n                            while (node && !(collection ? collection.indexOf(node) >= 0 : finder.matches(node, selector)))\r\n                                node = node !== context && !isDocument(node) && node.parentNode\r\n                            return $(node)\r\n                        },\r\n            */\r\n\r\n\r\n            parents: wrapper_selector(finder.ancestors, finder),\r\n\r\n            parentsUntil: wrapper_selector_until(finder.ancestors, finder),\r\n\r\n\r\n            parent: wrapper_selector(finder.parent, finder),\r\n\r\n            children: wrapper_selector(finder.children, finder),\r\n\r\n            contents: wrapper_map(noder.contents, noder),\r\n\r\n            empty: wrapper_every_act(noder.empty, noder),\r\n\r\n            // `pluck` is borrowed from Prototype.js\r\n            pluck: function(property) {\r\n                return langx.map(this, function(el) {\r\n                    return el[property]\r\n                })\r\n            },\r\n\r\n            pushStack : function(elms) {\r\n                var ret = $(elms);\r\n                ret.prevObject = this;\r\n                return ret;\r\n            },\r\n            \r\n            replaceWith: function(newContent) {\r\n                return this.before(newContent).remove();\r\n            },\r\n\r\n            wrap: function(structure) {\r\n                var func = isFunction(structure)\r\n                if (this[0] && !func)\r\n                    var dom = $(structure).get(0),\r\n                        clone = dom.parentNode || this.length > 1\r\n\r\n                return this.each(function(index,node) {\r\n                    $(this).wrapAll(\r\n                        func ? structure.call(this, index,node) :\r\n                        clone ? dom.cloneNode(true) : dom\r\n                    )\r\n                })\r\n            },\r\n\r\n            wrapAll: function(wrappingElement) {\r\n                if (this[0]) {\r\n                    $(this[0]).before(wrappingElement = $(wrappingElement));\r\n                    var children;\r\n                    // drill down to the inmost element\r\n                    while ((children = wrappingElement.children()).length) {\r\n                        wrappingElement = children.first();\r\n                    }\r\n                    $(wrappingElement).append(this);\r\n                }\r\n                return this\r\n            },\r\n\r\n            wrapInner: function(wrappingElement) {\r\n                var func = isFunction(wrappingElement)\r\n                return this.each(function(index,node) {\r\n                    var self = $(this),\r\n                        contents = self.contents(),\r\n                        dom = func ? wrappingElement.call(this, index,node) : wrappingElement\r\n                    contents.length ? contents.wrapAll(dom) : self.append(dom)\r\n                })\r\n            },\r\n\r\n            unwrap: function(selector) {\r\n                if (this.parent().children().length === 0) {\r\n                    // remove dom without text\r\n                    this.parent(selector).not(\"body\").each(function() {\r\n                        $(this).replaceWith(document.createTextNode(this.childNodes[0].textContent));\r\n                    });\r\n                } else {\r\n                    this.parent().each(function() {\r\n                        $(this).replaceWith($(this).children())\r\n                    });\r\n                }\r\n                return this\r\n            },\r\n\r\n            clone: function() {\r\n                return this.map(function() {\r\n                    return this.cloneNode(true)\r\n                })\r\n            },\r\n\r\n            hide: wrapper_every_act(fx.hide, fx),\r\n\r\n            toggle: function(setting) {\r\n                return this.each(function() {\r\n                    var el = $(this);\r\n                    (setting === undefined ? el.css(\"display\") == \"none\" : setting) ? el.show(): el.hide()\r\n                })\r\n            },\r\n\r\n            prev: function(selector) {\r\n                return $(this.pluck('previousElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            prevAll: wrapper_selector(finder.previousSiblings, finder),\r\n\r\n            next: function(selector) {\r\n                return $(this.pluck('nextElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            nextAll: wrapper_selector(finder.nextSiblings, finder),\r\n\r\n            siblings: wrapper_selector(finder.siblings, finder),\r\n\r\n            html: wrapper_value(noder.html, noder, noder.html),\r\n\r\n            text: wrapper_value(datax.text, datax, datax.text),\r\n\r\n            attr: wrapper_name_value(datax.attr, datax, datax.attr),\r\n\r\n            removeAttr: wrapper_every_act(datax.removeAttr, datax),\r\n\r\n            prop: wrapper_name_value(datax.prop, datax, datax.prop),\r\n\r\n            removeProp: wrapper_every_act(datax.removeProp, datax),\r\n\r\n            data: wrapper_name_value(datax.data, datax, datax.data),\r\n\r\n            removeData: wrapper_every_act(datax.removeData, datax),\r\n\r\n            val: wrapper_value(datax.val, datax, datax.val),\r\n\r\n            offset: wrapper_value(geom.pagePosition, geom, geom.pagePosition),\r\n\r\n            style: wrapper_name_value(styler.css, styler),\r\n\r\n            css: wrapper_name_value(styler.css, styler),\r\n\r\n            index: function(elem) {\r\n                if (elem) {\r\n                    return this.indexOf($(elem)[0]);\r\n                } else {\r\n                    return this.parent().children().indexOf(this[0]);\r\n                }\r\n            },\r\n\r\n            //hasClass(name)\r\n            hasClass: wrapper_some_chk(styler.hasClass, styler),\r\n\r\n            //addClass(name)\r\n            addClass: wrapper_every_act_firstArgFunc(styler.addClass, styler, styler.className),\r\n\r\n            //removeClass(name)\r\n            removeClass: wrapper_every_act_firstArgFunc(styler.removeClass, styler, styler.className),\r\n\r\n            //toogleClass(name,when)\r\n            toggleClass: wrapper_every_act_firstArgFunc(styler.toggleClass, styler, styler.className),\r\n\r\n            scrollTop: wrapper_value(geom.scrollTop, geom),\r\n\r\n            scrollLeft: wrapper_value(geom.scrollLeft, geom),\r\n\r\n            position: function(options) {\r\n                if (!this.length) return\r\n\r\n                if (options) {\r\n                    if (options.of && options.of.length) {\r\n                        options = langx.clone(options);\r\n                        options.of = options.of[0];\r\n                    }\r\n                    return this.each( function() {\r\n                        geom.posit(this,options);\r\n                    });\r\n                } else {\r\n                    var elem = this[0];\r\n\r\n                    return geom.relativePosition(elem);\r\n\r\n                }             \r\n            },\r\n\r\n            offsetParent: wrapper_map(geom.offsetParent, geom)\r\n        });\r\n\r\n        // for now\r\n        $.fn.detach = $.fn.remove;\r\n\r\n        $.fn.hover = function(fnOver, fnOut) {\r\n            return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);\r\n        };\r\n\r\n        $.fn.size = wrapper_value(geom.size, geom);\r\n\r\n        $.fn.width = wrapper_value(geom.width, geom, geom.width);\r\n\r\n        $.fn.height = wrapper_value(geom.height, geom, geom.height);\r\n\r\n        $.fn.clientSize = wrapper_value(geom.clientSize, geom.clientSize);\r\n\r\n        ['width', 'height'].forEach(function(dimension) {\r\n            var offset, Dimension = dimension.replace(/./, function(m) {\r\n                return m[0].toUpperCase()\r\n            });\r\n\r\n            $.fn['outer' + Dimension] = function(margin, value) {\r\n                if (arguments.length) {\r\n                    if (typeof margin !== 'boolean') {\r\n                        value = margin;\r\n                        margin = false;\r\n                    }\r\n                } else {\r\n                    margin = false;\r\n                    value = undefined;\r\n                }\r\n\r\n                if (value === undefined) {\r\n                    var el = this[0];\r\n                    if (!el) {\r\n                        return undefined;\r\n                    }\r\n                    var cb = geom.size(el);\r\n                    if (margin) {\r\n                        var me = geom.marginExtents(el);\r\n                        cb.width = cb.width + me.left + me.right;\r\n                        cb.height = cb.height + me.top + me.bottom;\r\n                    }\r\n                    return dimension === \"width\" ? cb.width : cb.height;\r\n                } else {\r\n                    return this.each(function(idx, el) {\r\n                        var mb = {};\r\n                        var me = geom.marginExtents(el);\r\n                        if (dimension === \"width\") {\r\n                            mb.width = value;\r\n                            if (margin) {\r\n                                mb.width = mb.width - me.left - me.right\r\n                            }\r\n                        } else {\r\n                            mb.height = value;\r\n                            if (margin) {\r\n                                mb.height = mb.height - me.top - me.bottom;\r\n                            }\r\n                        }\r\n                        geom.size(el, mb);\r\n                    })\r\n\r\n                }\r\n            };\r\n        })\r\n\r\n        $.fn.innerWidth = wrapper_value(geom.clientWidth, geom, geom.clientWidth);\r\n\r\n        $.fn.innerHeight = wrapper_value(geom.clientHeight, geom, geom.clientHeight);\r\n\r\n        var traverseNode = noder.traverse;\r\n\r\n        function wrapper_node_operation(func, context, oldValueFunc) {\r\n            return function(html) {\r\n                var argType, nodes = langx.map(arguments, function(arg) {\r\n                    argType = type(arg)\r\n                    return argType == \"function\" || argType == \"object\" || argType == \"array\" || arg == null ?\r\n                        arg : noder.createFragment(arg)\r\n                });\r\n                if (nodes.length < 1) {\r\n                    return this\r\n                }\r\n                this.each(function(idx) {\r\n                    func.apply(context, [this, nodes, idx > 0]);\r\n                });\r\n                return this;\r\n            }\r\n        }\r\n\r\n\r\n        $.fn.after = wrapper_node_operation(noder.after, noder);\r\n\r\n        $.fn.prepend = wrapper_node_operation(noder.prepend, noder);\r\n\r\n        $.fn.before = wrapper_node_operation(noder.before, noder);\r\n\r\n        $.fn.append = wrapper_node_operation(noder.append, noder);\r\n\r\n\r\n        langx.each( {\r\n            appendTo: \"append\",\r\n            prependTo: \"prepend\",\r\n            insertBefore: \"before\",\r\n            insertAfter: \"after\",\r\n            replaceAll: \"replaceWith\"\r\n        }, function( name, original ) {\r\n            $.fn[ name ] = function( selector ) {\r\n                var elems,\r\n                    ret = [],\r\n                    insert = $( selector ),\r\n                    last = insert.length - 1,\r\n                    i = 0;\r\n\r\n                for ( ; i <= last; i++ ) {\r\n                    elems = i === last ? this : this.clone( true );\r\n                    $( insert[ i ] )[ original ]( elems );\r\n\r\n                    // Support: Android <=4.0 only, PhantomJS 1 only\r\n                    // .get() because push.apply(_, arraylike) throws on ancient WebKit\r\n                    push.apply( ret, elems.get() );\r\n                }\r\n\r\n                return this.pushStack( ret );\r\n            };\r\n        } );\r\n\r\n/*\r\n        $.fn.insertAfter = function(html) {\r\n            $(html).after(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.insertBefore = function(html) {\r\n            $(html).before(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.appendTo = function(html) {\r\n            $(html).append(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.prependTo = function(html) {\r\n            $(html).prepend(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.replaceAll = function(selector) {\r\n            $(selector).replaceWith(this);\r\n            return this;\r\n        };\r\n*/\r\n        return $;\r\n    })();\r\n\r\n    (function($) {\r\n        $.fn.on = wrapper_every_act(eventer.on, eventer);\r\n\r\n        $.fn.off = wrapper_every_act(eventer.off, eventer);\r\n\r\n        $.fn.trigger = wrapper_every_act(eventer.trigger, eventer);\r\n\r\n        ('focusin focusout focus blur load resize scroll unload click dblclick ' +\r\n            'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave ' +\r\n            'change select keydown keypress keyup error transitionEnd').split(' ').forEach(function(event) {\r\n            $.fn[event] = function(data, callback) {\r\n                return (0 in arguments) ?\r\n                    this.on(event, data, callback) :\r\n                    this.trigger(event)\r\n            }\r\n        });\r\n\r\n        $.fn.one = function(event, selector, data, callback) {\r\n            if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n                callback = data;\r\n                data = selector;\r\n                selector = null;\r\n            }\r\n\r\n            if (langx.isFunction(data)) {\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            return this.on(event, selector, data, callback, 1)\r\n        };\r\n\r\n        $.fn.animate = wrapper_every_act(fx.animate, fx);\r\n        $.fn.emulateTransitionEnd = wrapper_every_act(fx.emulateTransitionEnd, fx);\r\n\r\n        $.fn.show = wrapper_every_act(fx.show, fx);\r\n        $.fn.hide = wrapper_every_act(fx.hide, fx);\r\n        $.fn.toogle = wrapper_every_act(fx.toogle, fx);\r\n        $.fn.fadeTo = wrapper_every_act(fx.fadeTo, fx);\r\n        $.fn.fadeIn = wrapper_every_act(fx.fadeIn, fx);\r\n        $.fn.fadeOut = wrapper_every_act(fx.fadeOut, fx);\r\n        $.fn.fadeToggle = wrapper_every_act(fx.fadeToggle, fx);\r\n\r\n        $.fn.slideDown = wrapper_every_act(fx.slideDown, fx);\r\n        $.fn.slideToggle = wrapper_every_act(fx.slideToggle, fx);\r\n        $.fn.slideUp = wrapper_every_act(fx.slideUp, fx);\r\n\r\n        $.fn.scrollParent = function( includeHidden ) {\r\n            var position = this.css( \"position\" ),\r\n                excludeStaticParent = position === \"absolute\",\r\n                overflowRegex = includeHidden ? /(auto|scroll|hidden)/ : /(auto|scroll)/,\r\n                scrollParent = this.parents().filter( function() {\r\n                    var parent = $( this );\r\n                    if ( excludeStaticParent && parent.css( \"position\" ) === \"static\" ) {\r\n                        return false;\r\n                    }\r\n                    return overflowRegex.test( parent.css( \"overflow\" ) + parent.css( \"overflow-y\" ) +\r\n                        parent.css( \"overflow-x\" ) );\r\n                } ).eq( 0 );\r\n\r\n            return position === \"fixed\" || !scrollParent.length ?\r\n                $( this[ 0 ].ownerDocument || document ) :\r\n                scrollParent;\r\n        };\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.end = function() {\r\n            return this.prevObject || $()\r\n        }\r\n\r\n        $.fn.andSelf = function() {\r\n            return this.add(this.prevObject || $())\r\n        }\r\n\r\n        $.fn.addBack = function(selector) {\r\n            if (this.prevObject) {\r\n                if (selector) {\r\n                    return this.add(this.prevObject.filter(selector));\r\n                } else {\r\n                    return this.add(this.prevObject);\r\n                }\r\n            } else {\r\n                return this;\r\n            }\r\n        }\r\n\r\n        'filter,add,not,eq,first,last,find,closest,parents,parent,children,siblings,prev,prevAll,next,nextAll'.split(',').forEach(function(property) {\r\n            var fn = $.fn[property]\r\n            $.fn[property] = function() {\r\n                var ret = fn.apply(this, arguments)\r\n                ret.prevObject = this\r\n                return ret\r\n            }\r\n        })\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.query = $.fn.find;\r\n\r\n        $.fn.place = function(refNode, position) {\r\n            // summary:\r\n            //      places elements of this node list relative to the first element matched\r\n            //      by queryOrNode. Returns the original NodeList. See: `dojo/dom-construct.place`\r\n            // queryOrNode:\r\n            //      may be a string representing any valid CSS3 selector or a DOM node.\r\n            //      In the selector case, only the first matching element will be used\r\n            //      for relative positioning.\r\n            // position:\r\n            //      can be one of:\r\n            //\r\n            //      -   \"last\" (default)\r\n            //      -   \"first\"\r\n            //      -   \"before\"\r\n            //      -   \"after\"\r\n            //      -   \"only\"\r\n            //      -   \"replace\"\r\n            //\r\n            //      or an offset in the childNodes\r\n            if (langx.isString(refNode)) {\r\n                refNode = finder.descendant(refNode);\r\n            } else if (isQ(refNode)) {\r\n                refNode = refNode[0];\r\n            }\r\n            return this.each(function(i, node) {\r\n                switch (position) {\r\n                    case \"before\":\r\n                        noder.before(refNode, node);\r\n                        break;\r\n                    case \"after\":\r\n                        noder.after(refNode, node);\r\n                        break;\r\n                    case \"replace\":\r\n                        noder.replace(refNode, node);\r\n                        break;\r\n                    case \"only\":\r\n                        noder.empty(refNode);\r\n                        noder.append(refNode, node);\r\n                        break;\r\n                    case \"first\":\r\n                        noder.prepend(refNode, node);\r\n                        break;\r\n                        // else fallthrough...\r\n                    default: // aka: last\r\n                        noder.append(refNode, node);\r\n                }\r\n            });\r\n        };\r\n\r\n        $.fn.addContent = function(content, position) {\r\n            if (content.template) {\r\n                content = langx.substitute(content.template, content);\r\n            }\r\n            return this.append(content);\r\n        };\r\n\r\n        $.fn.replaceClass = function(newClass, oldClass) {\r\n            this.removeClass(oldClass);\r\n            this.addClass(newClass);\r\n            return this;\r\n        };\r\n\r\n        $.fn.replaceClass = function(newClass, oldClass) {\r\n            this.removeClass(oldClass);\r\n            this.addClass(newClass);\r\n            return this;\r\n        };\r\n\r\n        $.fn.disableSelection = ( function() {\r\n            var eventType = \"onselectstart\" in document.createElement( \"div\" ) ?\r\n                \"selectstart\" :\r\n                \"mousedown\";\r\n\r\n            return function() {\r\n                return this.on( eventType + \".ui-disableSelection\", function( event ) {\r\n                    event.preventDefault();\r\n                } );\r\n            };\r\n        } )();\r\n\r\n        $.fn.enableSelection = function() {\r\n            return this.off( \".ui-disableSelection\" );\r\n        };\r\n       \r\n\r\n    })(query);\r\n\r\n    query.fn.plugin = function(name,options) {\r\n        var args = slice.call( arguments, 1 ),\r\n            self = this,\r\n            returnValue = this;\r\n\r\n        this.each(function(){\r\n            returnValue = plugins.instantiate.apply(self,[this,name].concat(args));\r\n        });\r\n        return returnValue;\r\n    };\r\n\r\n    return dom.query = query;\r\n\r\n});\ndefine('skylark-utils-dom/images',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./eventer\",\r\n    \"./noder\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./datax\",\r\n    \"./transforms\",\r\n    \"./query\"\r\n], function(dom,langx,eventer,noder,finder,geom,styler,datax,transforms,$) {\r\n\r\n  function watch(imgs) {\r\n    if (!langx.isArray(imgs)) {\r\n      imgs = [imgs];\r\n    }\r\n    var totalCount = imgs.length,\r\n        progressedCount = 0,\r\n        successedCount = 0,\r\n        faileredCount = 0,\r\n        d = new langx.Deferred();\r\n\r\n\r\n    function complete() {\r\n\r\n      d.resolve({\r\n        \"total\" : totalCount,\r\n        \"successed\" : successedCount,\r\n        \"failered\" : faileredCount,\r\n        \"imgs\" : imgs \r\n      });\r\n    }\r\n\r\n    function progress(img,isLoaded) {\r\n\r\n      progressedCount++;\r\n      if (isLoaded) {\r\n        successedCount ++ ; \r\n      } else {\r\n        faileredCount ++ ;\r\n      }\r\n\r\n      // progress event\r\n      d.progress({\r\n        \"img\" : img,\r\n        \"isLoaded\" : isLoaded,\r\n        \"progressed\" : progressedCount,\r\n        \"total\" : totalCount,\r\n        \"imgs\" : imgs \r\n      });\r\n\r\n      // check if completed\r\n      if ( progressedCount == totalCount ) {\r\n        complete();\r\n      }\r\n    }\r\n\r\n    function check() {\r\n      if (!imgs.length ) {\r\n        complete();\r\n        return;\r\n      }\r\n\r\n      imgs.forEach(function(img) {\r\n        if (isCompleted(img)) {\r\n          progress(img,isLoaded(img));\r\n        } else {\r\n          eventer.on(img,{\r\n            \"load\" : function() {\r\n              progress(img,true);\r\n            },\r\n\r\n            \"error\" : function() {\r\n              progress(img,false);\r\n            }\r\n          });      \r\n        }\r\n      });\r\n    }\r\n\r\n    langx.defer(check);\r\n\r\n    d.promise.totalCount = totalCount;\r\n    return d.promise;\r\n  }\r\n\r\n\r\n  function isCompleted(img) {\r\n     return img.complete && img.naturalWidth !== undefined;\r\n  }\r\n\r\n  function isLoaded(img) {\r\n    return img.complete && img.naturalWidth !== 0;\r\n  }\r\n\r\n  function loaded(elm,options) {\r\n    var imgs = [];\r\n\r\n    options = options || {};\r\n\r\n    function addBackgroundImage (elm1) {\r\n\r\n      var reURL = /url\\((['\"])?(.*?)\\1\\)/gi;\r\n      var matches = reURL.exec( styler.css(elm1,\"background-image\"));\r\n      var url = matches && matches[2];\r\n      if ( url ) {\r\n        var img = new Image();\r\n        img.src = url;\r\n        imgs.push(img);\r\n      }\r\n    }\r\n\r\n    // filter siblings\r\n    if ( elm.nodeName == 'IMG' ) {\r\n      imgs.push( elm );\r\n    } else {\r\n      // find children\r\n      var childImgs = finder.findAll(elm,'img');\r\n      // concat childElems to filterFound array\r\n      for ( var i=0; i < childImgs.length; i++ ) {\r\n        imgs.push(childImgs[i]);\r\n      }\r\n\r\n      // get background image on element\r\n      if ( options.background === true ) {\r\n        addBackgroundImage(elm);\r\n      } else  if ( typeof options.background == 'string' ) {\r\n        var children = finder.findAll(elm, options.background );\r\n        for ( i=0; i < children.length; i++ ) {\r\n          addBackgroundImage( children[i] );\r\n        }\r\n      }\r\n    }\r\n\r\n    return watch(imgs);\r\n  }\r\n\r\n  function preload(urls,options) {\r\n      if (langx.isString(urls)) {\r\n        urls = [urls];\r\n      }\r\n      var images = [];\r\n\r\n      urls.forEach(function(url){\r\n        var img = new Image();\r\n        img.src = url;\r\n        images.push(img);\r\n      });\r\n\r\n      return watch(images);\r\n  }\r\n\r\n\r\n  $.fn.imagesLoaded = function( options ) {\r\n    return loaded(this,options);\r\n  };\r\n\r\n\r\n  function viewer(el,options) {\r\n    var img ,\r\n        style = {},\r\n        clientSize = geom.clientSize(el),\r\n        loadedCallback = options.loaded,\r\n        faileredCallback = options.failered;\r\n\r\n    function onload() {\r\n        styler.css(img,{//居中\r\n          top: (clientSize.height - img.offsetHeight) / 2 + \"px\",\r\n          left: (clientSize.width - img.offsetWidth) / 2 + \"px\"\r\n        });\r\n\r\n        transforms.reset(img);\r\n\r\n        styler.css(img,{\r\n          visibility: \"visible\"\r\n        });\r\n\r\n        if (loadedCallback) {\r\n          loadedCallback();\r\n        }\r\n    }\r\n\r\n    function onerror() {\r\n\r\n    }\r\n    function _init() {\r\n      style = styler.css(el,[\"position\",\"overflow\"]);\r\n      if (style.position != \"relative\" && style.position != \"absolute\") { \r\n        styler.css(el,\"position\", \"relative\" );\r\n      }\r\n      styler.css(el,\"overflow\", \"hidden\" );\r\n\r\n      img = new Image();\r\n\r\n      styler.css(img,{\r\n        position: \"absolute\",\r\n        border: 0, padding: 0, margin: 0, width: \"auto\", height: \"auto\",\r\n        visibility: \"hidden\"\r\n      });\r\n\r\n      img.onload = onload;\r\n      img.onerror = onerror;\r\n\r\n      noder.append(el,img);\r\n\r\n      if (options.url) {\r\n        _load(options.url);\r\n      }\r\n    }\r\n\r\n    function _load(url) {\r\n        img.style.visibility = \"hidden\";\r\n        img.src = url;\r\n    }\r\n\r\n    function _dispose() {\r\n        noder.remove(img);\r\n        styler.css(el,style);\r\n        img = img.onload = img.onerror = null;\r\n    }\r\n\r\n    _init();\r\n\r\n    var ret =  {\r\n      load : _load,\r\n      dispose : _dispose\r\n    };\r\n\r\n    [\"vertical\",\"horizontal\",\"rotate\",\"left\",\"right\",\"scale\",\"zoom\",\"zoomin\",\"zoomout\",\"reset\"].forEach(\r\n      function(name){\r\n        ret[name] = function() {\r\n          var args = langx.makeArray(arguments);\r\n          args.unshift(img);\r\n          transforms[name].apply(null,args);\r\n        }\r\n      }\r\n    );\r\n\r\n    return ret;\r\n  }\r\n\r\n  $.fn.imagesViewer = function( options ) {\r\n    return viewer(this,options);\r\n  };\r\n\r\n  function images() {\r\n    return images;\r\n  }\r\n\r\n  images.transform = function (el,options) {\r\n  };\r\n\r\n  [\"vertical\",\"horizontal\",\"rotate\",\"left\",\"right\",\"scale\",\"zoom\",\"zoomin\",\"zoomout\",\"reset\"].forEach(\r\n    function(name){\r\n      images.transform[name] = transforms[name];\r\n    }\r\n  );\r\n\r\n\r\n  langx.mixin(images, {\r\n    isCompleted : isCompleted,\r\n\r\n    isLoaded : isLoaded,\r\n\r\n    loaded : loaded,\r\n\r\n    preload : preload,\r\n\r\n    viewer : viewer\r\n  });\r\n\r\n  return dom.images = images;\r\n});\r\n\ndefine('skylark-utils-dom/elmx',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./datax\",\r\n    \"./eventer\",\r\n    \"./finder\",\r\n    \"./fx\",\r\n    \"./geom\",\r\n    \"./noder\",\r\n    \"./styler\",\r\n    \"./query\"\r\n], function(dom, langx, datax, eventer, finder, fx, geom, noder, styler,$) {\r\n    var map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n    /*\r\n     * VisualElement is a skylark class type wrapping a visule dom node,\r\n     * provides a number of prototype methods and supports chain calls.\r\n     */\r\n    var VisualElement = langx.klass({\r\n        klassName: \"VisualElement\",\r\n\r\n        \"_construct\": function(node) {\r\n            if (langx.isString(node)) {\r\n                if (node.charAt(0) === \"<\") {\r\n                    //html\r\n                    node = noder.createFragment(node)[0];\r\n                } else {\r\n                    // id\r\n                    node = document.getElementById(node);\r\n                }\r\n            }\r\n            this._elm = node;\r\n        }\r\n    });\r\n\r\n    VisualElement.prototype.$ = VisualElement.prototype.query = function(selector) {\r\n        return $(selector,this._elm);\r\n    };\r\n\r\n    VisualElement.prototype.elm = function() {\r\n        return this._elm;\r\n    };\r\n\r\n    /*\r\n     * the VisualElement object wrapping document.body\r\n     */\r\n    var root = new VisualElement(document.body),\r\n        elmx = function(node) {\r\n            if (node) {\r\n                return new VisualElement(node);\r\n            } else {\r\n                return root;\r\n            }\r\n        };\r\n    /*\r\n     * Extend VisualElement prototype with wrapping the specified methods.\r\n     * @param {ArrayLike} fn\r\n     * @param {Object} context\r\n     */\r\n    function _delegator(fn, context) {\r\n        return function() {\r\n            var self = this,\r\n                elem = self._elm,\r\n                ret = fn.apply(context, [elem].concat(slice.call(arguments)));\r\n\r\n            if (ret) {\r\n                if (ret === context) {\r\n                    return self;\r\n                } else {\r\n                    if (ret instanceof HTMLElement) {\r\n                        ret = new VisualElement(ret);\r\n                    } else if (langx.isArrayLike(ret)) {\r\n                        ret = map.call(ret, function(el) {\r\n                            if (el instanceof HTMLElement) {\r\n                                return new VisualElement(el);\r\n                            } else {\r\n                                return el;\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            return ret;\r\n        };\r\n    }\r\n\r\n    langx.mixin(elmx, {\r\n        batch: function(nodes, action, args) {\r\n            nodes.forEach(function(node) {\r\n                var elm = (node instanceof VisualElement) ? node : elmx(node);\r\n                elm[action].apply(elm, args);\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        root: new VisualElement(document.body),\r\n\r\n        VisualElement: VisualElement,\r\n\r\n        partial: function(name, fn) {\r\n            var props = {};\r\n\r\n            props[name] = fn;\r\n\r\n            VisualElement.partial(props);\r\n        },\r\n\r\n        delegate: function(names, context) {\r\n            var props = {};\r\n\r\n            names.forEach(function(name) {\r\n                props[name] = _delegator(context[name], context);\r\n            });\r\n\r\n            VisualElement.partial(props);\r\n        }\r\n    });\r\n\r\n    // from ./datax\r\n    elmx.delegate([\r\n        \"attr\",\r\n        \"data\",\r\n        \"prop\",\r\n        \"removeAttr\",\r\n        \"removeData\",\r\n        \"text\",\r\n        \"val\"\r\n    ], datax);\r\n\r\n    // from ./eventer\r\n    elmx.delegate([\r\n        \"off\",\r\n        \"on\",\r\n        \"one\",\r\n        \"shortcuts\",\r\n        \"trigger\"\r\n    ], eventer);\r\n\r\n    // from ./finder\r\n    elmx.delegate([\r\n        \"ancestor\",\r\n        \"ancestors\",\r\n        \"children\",\r\n        \"descendant\",\r\n        \"find\",\r\n        \"findAll\",\r\n        \"firstChild\",\r\n        \"lastChild\",\r\n        \"matches\",\r\n        \"nextSibling\",\r\n        \"nextSiblings\",\r\n        \"parent\",\r\n        \"previousSibling\",\r\n        \"previousSiblings\",\r\n        \"siblings\"\r\n    ], finder);\r\n\r\n    /*\r\n     * find a dom element matched by the specified selector.\r\n     * @param {String} selector\r\n     */\r\n    elmx.find = function(selector) {\r\n        if (selector === \"body\") {\r\n            return this.root;\r\n        } else {\r\n            return this.root.descendant(selector);\r\n        }\r\n    };\r\n\r\n    // from ./fx\r\n    elmx.delegate([\r\n        \"animate\",\r\n        \"fadeIn\",\r\n        \"fadeOut\",\r\n        \"fadeTo\",\r\n        \"fadeToggle\",\r\n        \"hide\",\r\n        \"scrollToTop\",\r\n        \"show\",\r\n        \"toggle\"\r\n    ], fx);\r\n\r\n\r\n    // from ./geom\r\n    elmx.delegate([\r\n        \"borderExtents\",\r\n        \"boundingPosition\",\r\n        \"boundingRect\",\r\n        \"clientHeight\",\r\n        \"clientSize\",\r\n        \"clientWidth\",\r\n        \"contentRect\",\r\n        \"height\",\r\n        \"marginExtents\",\r\n        \"offsetParent\",\r\n        \"paddingExtents\",\r\n        \"pagePosition\",\r\n        \"pageRect\",\r\n        \"relativePosition\",\r\n        \"relativeRect\",\r\n        \"scrollIntoView\",\r\n        \"scrollLeft\",\r\n        \"scrollTop\",\r\n        \"size\",\r\n        \"width\"\r\n    ], geom);\r\n\r\n    // from ./noder\r\n    elmx.delegate([\r\n        \"after\",\r\n        \"append\",\r\n        \"before\",\r\n        \"clone\",\r\n        \"contains\",\r\n        \"contents\",\r\n        \"empty\",\r\n        \"html\",\r\n        \"isChildOf\",\r\n        \"isDocument\",\r\n        \"isInDocument\",\r\n        \"isWindow\",\r\n        \"ownerDoc\",\r\n        \"prepend\",\r\n        \"remove\",\r\n        \"removeChild\",\r\n        \"replace\",\r\n        \"reverse\",\r\n        \"throb\",\r\n        \"traverse\",\r\n        \"wrapper\",\r\n        \"wrapperInner\",\r\n        \"unwrap\"\r\n    ], noder);\r\n\r\n    // from ./styler\r\n    elmx.delegate([\r\n        \"addClass\",\r\n        \"className\",\r\n        \"css\",\r\n        \"hasClass\",\r\n        \"hide\",\r\n        \"isInvisible\",\r\n        \"removeClass\",\r\n        \"show\",\r\n        \"toggleClass\"\r\n    ], styler);\r\n\r\n    // properties\r\n\r\n    var properties = [ 'position', 'left', 'top', 'right', 'bottom', 'width', 'height', 'border', 'borderLeft',\r\n    'borderTop', 'borderRight', 'borderBottom', 'borderColor', 'display', 'overflow', 'margin', 'marginLeft', 'marginTop', 'marginRight', 'marginBottom', 'padding', 'paddingLeft', 'paddingTop', 'paddingRight', 'paddingBottom', 'color',\r\n    'background', 'backgroundColor', 'opacity', 'fontSize', 'fontWeight', 'textAlign', 'textDecoration', 'textTransform', 'cursor', 'zIndex' ];\r\n\r\n    properties.forEach( function ( property ) {\r\n\r\n        var method = property;\r\n\r\n        VisualElement.prototype[method ] = function (value) {\r\n\r\n            this.css( property, value );\r\n\r\n            return this;\r\n\r\n        };\r\n\r\n    });\r\n\r\n    // events\r\n    var events = [ 'keyUp', 'keyDown', 'mouseOver', 'mouseOut', 'click', 'dblClick', 'change' ];\r\n\r\n    events.forEach( function ( event ) {\r\n\r\n        var method = event;\r\n\r\n        VisualElement.prototype[method ] = function ( callback ) {\r\n\r\n            this.on( event.toLowerCase(), callback);\r\n\r\n            return this;\r\n        };\r\n\r\n    });\r\n\r\n\r\n    return dom.elmx = elmx;\r\n});\ndefine('skylark-utils-dom/plugins',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./eventer\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./fx\",\r\n    \"./query\",\r\n    \"./elmx\"\r\n], function(dom, langx, noder, datax, eventer, finder, geom, styler, fx, $, elmx) {\r\n    \"use strict\";\r\n\r\n    var slice = Array.prototype.slice,\r\n        concat = Array.prototype.concat,\r\n        pluginKlasses = {},\r\n        shortcuts = {};\r\n\r\n    /*\r\n     * Create or get or destory a plugin instance assocated with the element.\r\n     */\r\n    function instantiate(elm,pluginName,options) {\r\n        var pair = pluginName.split(\":\"),\r\n            instanceDataName = pair[1];\r\n        pluginName = pair[0];\r\n\r\n        if (!instanceDataName) {\r\n            instanceDataName = pluginName;\r\n        }\r\n\r\n        var pluginInstance = datax.data( elm, instanceDataName );\r\n\r\n        if (options === \"instance\") {\r\n            return pluginInstance;\r\n        } else if (options === \"destroy\") {\r\n            if (!pluginInstance) {\r\n                throw new Error (\"The plugin instance is not existed\");\r\n            }\r\n            pluginInstance.destroy();\r\n            datax.removeData( elm, pluginName);\r\n            pluginInstance = undefined;\r\n        } else {\r\n            if (!pluginInstance) {\r\n                if (options !== undefined && typeof options !== \"object\") {\r\n                    throw new Error (\"The options must be a plain object\");\r\n                }\r\n                var pluginKlass = pluginKlasses[pluginName]; \r\n                pluginInstance = new pluginKlass(elm,options);\r\n                datax.data( elm, instanceDataName,pluginInstance );\r\n            } else if (options) {\r\n                pluginInstance.reset(options);\r\n            }\r\n        }\r\n\r\n        return pluginInstance;\r\n    }\r\n\r\n    function shortcutter(pluginName,extfn) {\r\n       /*\r\n        * Create or get or destory a plugin instance assocated with the element,\r\n        * and also you can execute the plugin method directory;\r\n        */\r\n        return function (elm,options) {\r\n            var  plugin = instantiate(elm, pluginName,\"instance\");\r\n            if ( options === \"instance\" ) {\r\n              return plugin || null;\r\n            }\r\n            if (!plugin) {\r\n                plugin = instantiate(elm, pluginName,typeof options == 'object' && options || {});\r\n            }\r\n\r\n            if (options) {\r\n                var args = slice.call(arguments,1); //2\r\n                if (extfn) {\r\n                    return extfn.apply(plugin,args);\r\n                } else {\r\n                    if (typeof options == 'string') {\r\n                        var methodName = options;\r\n\r\n                        if ( !plugin ) {\r\n                            throw new Error( \"cannot call methods on \" + pluginName +\r\n                                \" prior to initialization; \" +\r\n                                \"attempted to call method '\" + methodName + \"'\" );\r\n                        }\r\n\r\n                        if ( !langx.isFunction( plugin[ methodName ] ) || methodName.charAt( 0 ) === \"_\" ) {\r\n                            throw new Error( \"no such method '\" + methodName + \"' for \" + pluginName +\r\n                                \" plugin instance\" );\r\n                        }\r\n\r\n                        return plugin[methodName].apply(plugin,args);\r\n                    }                \r\n                }                \r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    /*\r\n     * Register a plugin type\r\n     */\r\n    function register( pluginKlass,shortcutName,instanceDataName,extfn) {\r\n        var pluginName = pluginKlass.prototype.pluginName;\r\n        \r\n        pluginKlasses[pluginName] = pluginKlass;\r\n\r\n        if (shortcutName) {\r\n            if (instanceDataName && langx.isFunction(instanceDataName)) {\r\n                extfn = instanceDataName;\r\n                instanceDataName = null;\r\n            } \r\n            if (instanceDataName) {\r\n                pluginName = pluginName + \":\" + instanceDataName;\r\n            }\r\n\r\n            var shortcut = shortcuts[shortcutName] = shortcutter(pluginName,extfn);\r\n                \r\n            $.fn[shortcutName] = function(options) {\r\n                var returnValue = this;\r\n\r\n                if ( !this.length && options === \"instance\" ) {\r\n                  returnValue = undefined;\r\n                } else {\r\n                  var args = slice.call(arguments);\r\n                  this.each(function () {\r\n                    var args2 = slice.call(args);\r\n                    args2.unshift(this);\r\n                    var  ret  = shortcut.apply(null,args2);\r\n                    if (ret !== undefined) {\r\n                        returnValue = ret;\r\n                        return false;\r\n                    }\r\n                  });\r\n                }\r\n\r\n                return returnValue;\r\n            };\r\n\r\n            elmx.partial(shortcutName,function(options) {\r\n                var  ret  = shortcut(this._elm,options);\r\n                if (ret === undefined) {\r\n                    ret = this;\r\n                }\r\n                return ret;\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n \r\n    var Plugin =   langx.Evented.inherit({\r\n        klassName: \"Plugin\",\r\n\r\n        _construct : function(elm,options) {\r\n           this._elm = elm;\r\n           this._initOptions(options);\r\n        },\r\n\r\n        _initOptions : function(options) {\r\n          var ctor = this.constructor,\r\n              cache = ctor.cache = ctor.cache || {},\r\n              defaults = cache.defaults;\r\n          if (!defaults) {\r\n            var  ctors = [];\r\n            do {\r\n              ctors.unshift(ctor);\r\n              if (ctor === Plugin) {\r\n                break;\r\n              }\r\n              ctor = ctor.superclass;\r\n            } while (ctor);\r\n\r\n            defaults = cache.defaults = {};\r\n            for (var i=0;i<ctors.length;i++) {\r\n              ctor = ctors[i];\r\n              if (ctor.prototype.hasOwnProperty(\"options\")) {\r\n                langx.mixin(defaults,ctor.prototype.options);\r\n              }\r\n              if (ctor.hasOwnProperty(\"options\")) {\r\n                langx.mixin(defaults,ctor.options);\r\n              }\r\n            }\r\n          }\r\n          Object.defineProperty(this,\"options\",{\r\n            value :langx.mixin({},defaults,options)\r\n          });\r\n\r\n          //return this.options = langx.mixin({},defaults,options);\r\n          return this.options;\r\n        },\r\n\r\n\r\n        destroy: function() {\r\n            var that = this;\r\n\r\n            this._destroy();\r\n            // We can probably remove the unbind calls in 2.0\r\n            // all event bindings should go through this._on()\r\n            datax.removeData(this._elm,this.pluginName );\r\n        },\r\n\r\n        _destroy: langx.noop,\r\n\r\n        _delay: function( handler, delay ) {\r\n            function handlerProxy() {\r\n                return ( typeof handler === \"string\" ? instance[ handler ] : handler )\r\n                    .apply( instance, arguments );\r\n            }\r\n            var instance = this;\r\n            return setTimeout( handlerProxy, delay || 0 );\r\n        },\r\n\r\n        option: function( key, value ) {\r\n            var options = key;\r\n            var parts;\r\n            var curOption;\r\n            var i;\r\n\r\n            if ( arguments.length === 0 ) {\r\n\r\n                // Don't return a reference to the internal hash\r\n                return langx.mixin( {}, this.options );\r\n            }\r\n\r\n            if ( typeof key === \"string\" ) {\r\n\r\n                // Handle nested keys, e.g., \"foo.bar\" => { foo: { bar: ___ } }\r\n                options = {};\r\n                parts = key.split( \".\" );\r\n                key = parts.shift();\r\n                if ( parts.length ) {\r\n                    curOption = options[ key ] = langx.mixin( {}, this.options[ key ] );\r\n                    for ( i = 0; i < parts.length - 1; i++ ) {\r\n                        curOption[ parts[ i ] ] = curOption[ parts[ i ] ] || {};\r\n                        curOption = curOption[ parts[ i ] ];\r\n                    }\r\n                    key = parts.pop();\r\n                    if ( arguments.length === 1 ) {\r\n                        return curOption[ key ] === undefined ? null : curOption[ key ];\r\n                    }\r\n                    curOption[ key ] = value;\r\n                } else {\r\n                    if ( arguments.length === 1 ) {\r\n                        return this.options[ key ] === undefined ? null : this.options[ key ];\r\n                    }\r\n                    options[ key ] = value;\r\n                }\r\n            }\r\n\r\n            this._setOptions( options );\r\n\r\n            return this;\r\n        },\r\n\r\n        _setOptions: function( options ) {\r\n            var key;\r\n\r\n            for ( key in options ) {\r\n                this._setOption( key, options[ key ] );\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        _setOption: function( key, value ) {\r\n\r\n            this.options[ key ] = value;\r\n\r\n            return this;\r\n        },\r\n\r\n        elm : function() {\r\n            return this._elm;\r\n        }\r\n\r\n    });\r\n\r\n    $.fn.plugin = function(name,options) {\r\n        var args = slice.call( arguments, 1 ),\r\n            self = this,\r\n            returnValue = this;\r\n\r\n        this.each(function(){\r\n            returnValue = instantiate.apply(self,[this,name].concat(args));\r\n        });\r\n        return returnValue;\r\n    };\r\n\r\n    elmx.partial(\"plugin\",function(name,options) {\r\n        var args = slice.call( arguments, 1 );\r\n        return instantiate.apply(this,[this.domNode,name].concat(args));\r\n    }); \r\n\r\n\r\n    function plugins() {\r\n        return plugins;\r\n    }\r\n     \r\n    langx.mixin(plugins, {\r\n        instantiate,\r\n        Plugin,\r\n        register,\r\n        shortcuts\r\n    });\r\n\r\n    return plugins;\r\n});\ndefine('skylark-utils-dom/scripter',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./finder\"\r\n], function(dom, langx, noder, finder) {\r\n\r\n    var head = document.getElementsByTagName('head')[0],\r\n        scriptsByUrl = {},\r\n        scriptElementsById = {},\r\n        count = 0;\r\n\r\n    function scripter() {\r\n        return scripter;\r\n    }\r\n\r\n    langx.mixin(scripter, {\r\n        /*\r\n         * Load a script from a url into the document.\r\n         * @param {} url\r\n         * @param {} loadedCallback\r\n         * @param {} errorCallback\r\n         */\r\n        loadJavaScript: function(url, loadedCallback, errorCallback) {\r\n            var script = scriptsByUrl[url];\r\n            if (!script) {\r\n                script = scriptsByUrl[url] = {\r\n                    state: 0, //0:unload,1:loaded,-1:loaderror\r\n                    loadedCallbacks: [],\r\n                    errorCallbacks: []\r\n                }\r\n            }\r\n\r\n            script.loadedCallbacks.push(loadedCallback);\r\n            script.errorCallbacks.push(errorCallback);\r\n\r\n            if (script.state === 1) {\r\n                script.node.onload();\r\n            } else if (script.state === -1) {\r\n                script.node.onerror();\r\n            } else {\r\n                var node = script.node = document.createElement(\"script\"),\r\n                    id = script.id = (count++);\r\n\r\n                node.type = \"text/javascript\";\r\n                node.async = false;\r\n                node.defer = false;\r\n                startTime = new Date().getTime();\r\n                head.appendChild(node);\r\n\r\n                node.onload = function() {\r\n                        script.state = 1;\r\n\r\n                        var callbacks = script.loadedCallbacks,\r\n                            i = callbacks.length;\r\n\r\n                        while (i--) {\r\n                            callbacks[i]();\r\n                        }\r\n                        script.loadedCallbacks = [];\r\n                        script.errorCallbacks = [];\r\n                    },\r\n                    node.onerror = function() {\r\n                        script.state = -1;\r\n                        var callbacks = script.errorCallbacks,\r\n                            i = callbacks.length;\r\n\r\n                        while (i--) {\r\n                            callbacks[i]();\r\n                        }\r\n                        script.loadedCallbacks = [];\r\n                        script.errorCallbacks = [];\r\n                    };\r\n                node.src = url;\r\n\r\n                scriptElementsById[id] = node;\r\n            }\r\n            return script.id;\r\n        },\r\n        /*\r\n         * Remove the specified script from the document.\r\n         * @param {Number} id\r\n         */\r\n        deleteJavaScript: function(id) {\r\n            var node = scriptElementsById[id];\r\n            if (node) {\r\n                var url = node.src;\r\n                noder.remove(node);\r\n                delete scriptElementsById[id];\r\n                delete scriptsByUrl[url];\r\n            }\r\n        }\r\n    });\r\n\r\n    return dom.scripter = scripter;\r\n});\ndefine('skylark-utils-dom/main',[\r\n    \"./dom\",\r\n    \"./browser\",\r\n    \"./css\",\r\n    \"./datax\",\r\n    \"./eventer\",\r\n    \"./finder\",\r\n    \"./fx\",\r\n    \"./geom\",\r\n    \"./images\",\r\n    \"./noder\",\r\n    \"./plugins\",\r\n    \"./query\",\r\n    \"./scripter\",\r\n    \"./styler\",\r\n    \"./transforms\",\r\n    \"./langx\",\r\n    \"./elmx\"\r\n], function(dom) {\r\n    return dom;\r\n})\r\n;\ndefine('skylark-utils-dom', ['skylark-utils-dom/main'], function (main) { return main; });\n\n"]}