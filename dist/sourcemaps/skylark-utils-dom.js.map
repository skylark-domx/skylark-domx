{"version":3,"sources":["skylark-utils-dom.js"],"names":["factory","globals","absolute","relative","base","stack","split","parts","pop","i","length","push","join","define","require","isAmd","amd","isCmd","exports","map","id","deps","dep","hasOwnProperty","Error","module","args","forEach","apply","window","skylarkjs","skylark","langx","normalizeCssEvent","name","css3EventPrefix","toLowerCase","normalizeCssProperty","cssProps","normalizeStyleProperty","cssStyles","browser","vendorPrefix","vendorPrefixRE","css3PropPrefix","css3StylePrefix","vendorPrefixesRE","document","testEl","createElement","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","requestFullScreen","requestFullscreen","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","testStyle","exitFullscreen","webkitCancelFullScreen","mozCancelFullScreen","msExitFullscreen","style","matched","match","RegExp","lowerFirst","cssPropName","dasherize","mixin","isIE","exec","navigator","userAgent","location","support","maybeAddPx","value","cssNumber","classRE","classReCache","className","node","klass","svg","undefined","baseVal","disabled","elm","arguments","this","dom","defaultDisplay","nodeName","element","display","elementDisplay","body","appendChild","getComputedStyle","getPropertyValue","parentNode","removeChild","show","styler","css","isInvisible","hide","addClass","names","cls","isString","re","property","computedStyle","camelCase","isArrayLike","props","call","prop","removeProperty","key","cssText","hasClass","removeClass","replace","trim","toggleClass","when","self","Array","prototype","every","column-count","columns","font-weight","line-height","opacity","z-index","zoom","autocssfix","cssHooks","ensureNodes","nodes","copyByClone","cloneNode","flatten","chkName","after","placing","refNode","parent","nextSibling","insertBefore","append","before","contents","contentDocument","childNodes","tag","setAttribute","createFragment","html","singleTagRE","test","$1","fragmentRE","containers","container","innerHTML","slice","clone","deep","nodeType","each","getAttribs","attr","setAttrib","getAttrib","contains","child","isChildOf","createTextNode","text","doc","empty","hasChildNodes","firstChild","fullScreen","el","exitFullScreen","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","fulledEl","rxhtmlTag","isNumber","directly","documentElement","isDoc","DOCUMENT_NODE","ownerDoc","ownerDocument","ownerWindow","defaultView","parentWindow","prepend","offsetParent","rootNodeRE","overlay","params","overlayDiv","position","top","left","width","height","zIndex","remove","e","console","warn","children","oldNode","replaceChild","throb","timer","time","callback","throbber","textNode","clearTimeout","update","nodeValue","end","setTimeout","traverse","fn","len","reverse","wrapper","wrapperNode","wrapperInner","unwrap","noder","div","table","tableBody","tableRow","tr","tbody","thead","tfoot","td","th","*","isWindow","_createStyleSheet","external","options","type","count","media","create","rel","async","head","sheetsById","createStyleSheet","sheetId","addSheetRules","deleteSheetRule","rule","sheet","deleteRuleFunc","rulesPropName","_rule","deleteRule","defaultSheetId","removeStyleSheet","insertRule","selector","index","insertSheetRule","addRules","rules","insertRuleFunc","toString","isAtRule","str","startsWith","json","adjust","parentName","depth","strNode","values","atFlg","SPACE","repeat","isArray","n","adjusted","getElementsByTagName","defaultSheet","removeRule","_insertRule","addRule","velm","createInputPseudo","elem","createButtonPseudo","ancestor","root","rootIsSelector","matches","ancestors","ret","local","filter","byId","getElementById","closest","descendants","querySelectorAll","matchError","query","descendant","querySelector","find","findAll","first","lastChild","last","previousSibling","nativeMatchesSelector","inArray","isPlainObject","check","adjacent","nextSiblings","previousSiblings","siblings","parser","rawMatch","separator","combinator","combinatorChildren","tagName","attributeKey","attributeOperator","attributeQuote","attributeValue","pseudoMarker","pseudoClass","pseudoQuote","pseudoClassQuotedValue","pseudoClassValue","separatorIndex","parsed","expressions","combinatorIndex","currentSeparator","reversed","reverseCombinator","currentParsed","reUnescape","classList","classes","regexp","escapeRegExp","pseudos","indexOf","attributes","operator","cache","reverseCache","parse","expression","isReversed","Slick","currentCache","raw","exp","j","cexp","from","to","string","rinputs","rheader","parseSelector","button","checked","idx","$","enabled","eq","even","focus","activeElement","href","tabindex","gt","has","sel","header","hidden","input","lt","not","odd","selected","visible","offsetWidth","item","isArrayFilter","radio","checkbox","file","password","image","submit","reset","divide","cond","nativeSelector","customPseudos","JSON","stringify","part","toUpperCase","arrayFilte","pseudo","getAttribute","hasAttribute","currentExpression","simpleExpCounter","filterSingle","matchs","uniq","concat","combine","bit","node1","op","prev","next","divided","single","currentBit","founds","found","currentItems","finder","removeAttribute","aria","attrName","_attributeData","store","deserializeValue","_store","confirm","_getData","camelName","capitalRE","_setData","data","dataAttrName","cleanData","removeData","pluck","propMap","removeAttr","removeProp","txt","textContent","val","multiple","selectedOptions","option","datax","readonly","for","class","maxlength","cellspacing","cellpadding","rowspan","colspan","usemap","frameborder","contenteditable","compatible","event","source","isDefaultPrevented","eventMethods","predicate","sourceMethod","returnTrue","returnFalse","segs","ns","sort","createProxy","src","proxy","originalEvent","ignoreProperties","off","events","$this","isFunction","handler","findHandler","unregister","on","one","ready","register","stop","all","keyCode","preventDefault","stopPropagation","trigger","evented","Event","createEvent","_args","dispatchEvent","readyRE","readyState","defer","addEventListener","shortcuts","registry","run","shortcut","metaKey","ctrlKey","ctrl","alt","altKey","shift","shiftKey","charCode","target","add","pattern","shortcutKeys","shortcutKey","setting","charCodeAt","keyCodeLookup","regKey","eventer","uid","stopImmediatePropagation","getEventCtor","NativeEvents","EventCtors","compositionstart","compositionend","compositionupdate","beforecopy","beforecut","beforepaste","copy","cut","paste","drag","dragend","dragenter","dragexit","dragleave","dragover","dragstart","drop","abort","change","error","selectionchange","blur","focusin","focusout","keydown","keypress","keyup","message","click","contextmenu","dblclick","mousedown","mouseup","mousemove","mouseover","mouseout","mouseenter","mouseleave","textInput","touchstart","touchmove","touchend","load","resize","select","scroll","unload","wheel","bubbles","cancelable","namespace","ctor","safeMixin","specialEvents","focusinSupported","hover","realEvent","handlers","EventBindings","init","_target","_event","_bindings","bindings","binding","_listener","domEvt","isDefined","isImmediatePropagationStopped","currentTarget","liveFired","related","relatedTarget","result","matcherFor","matcher","removing","removeEventListener","EventsHandler","_handler","specialEvent","bindingEvent","bindType","bindEventName","listener","backspace","comma","delete","down","enter","escape","home","page_down","page_up","period","right","space","tab","up","keys","special","scrollbarWidth","cachedScrollbarWidth","w1","w2","innerDiv","clientWidth","borderExtents","s","px","borderLeftWidth","borderTopWidth","borderRightWidth","bottom","borderBottomWidth","boundingPosition","coords","getBoundingClientRect","parentOffset","mex","marginExtents","pbex","relativePosition","boundingRect","size","clientHeight","clientSize","dimension","isBorderBox","bex","pex","paddingExtents","contentRect","cs","getDocumentSize","max","Math","scrollWidth","scrollHeight","offsetHeight","marginLeft","marginTop","marginRight","marginBottom","marginRect","obj","relativeRect","me","marginSize","paddingLeft","paddingTop","paddingRight","paddingBottom","pagePosition","pageXOffset","pageYOffset","pageRect","round","offset","scrollIntoView","align","getOffset","rootElm","x","y","offsetLeft","offsetTop","parentWidth","parentHeight","parentElm","pos","scrollLeft","scrollTop","hasScrollLeft","scrollTo","scrollY","hasScrollTop","scrollX","innerWidth","innerHeight","isDocument","geom","toPixel","animate","properties","duration","ease","delay","endEvent","wrappedCallback","cssValues","cssProperties","transforms","that","fired","resetClipAuto","easing","complete","fx","speeds","normal","eace","animationName","animationDuration","animationTiming","animationEnd","v","supportedTransforms","transitionEnd","transform","transitionProperty","transitionDuration","transitionDelay","transitionTiming","cssReset","debounce","clientLeft","scrollToTop","speed","scale","scrollFrom","parseInt","runEvery","freq","interval","setInterval","clearInterval","toggle","fadeTo","fadeIn","fadeOut","fadeToggle","ceasing","allback","slideDown","visibility","overflow","slideUp","queue","slideToggle","animationDelay","fast","slow","getMatrix","radian","Cos","cos","Sin","sin","M11","M12","M21","M22","getZoom","d","matrix","css3Transform","toFixed","transformData","_createApiMethod","calcFunc","makeArray","unshift","calcs","vertical","PI","horizontal","rotate","degress","hZoom","vZoom","zoomin","zoomout","wrapper_map","func","context","wrapper_selector","wrapper_selector_until","util","wrapper_every_act","wrapper_every_act_firstArgFunc","oldValueFunc","arg1","funcArg","wrapper_some_chk","some","wrapper_name_value","newValue","wrapper_value","isQ","rquickExpr","isObject","NodeList","compact","klassName","charAt","wrapper_node_operation","argType","arg","object","get","toArray","is","isHtmlNode","excludes","parents","parentsUntil","pushStack","elms","prevObject","replaceWith","newContent","wrap","structure","wrapAll","wrappingElement","wrapInner","prevAll","nextAll","detach","fnOver","fnOut","Dimension","m","margin","cb","mb","appendTo","prependTo","insertAfter","replaceAll","original","elems","insert","toogle","andSelf","addBack","place","addContent","content","template","substitute","replaceClass","newClass","oldClass","watch","imgs","resolve","total","totalCount","successed","successedCount","failered","faileredCount","progress","img","isLoaded","progressedCount","progressed","isCompleted","Deferred","promise","naturalWidth","loaded","addBackgroundImage","elm1","reURL","url","Image","childImgs","background","preload","urls","images","viewer","onload","loadedCallback","onerror","_init","border","padding","_load","_dispose","dispose","imagesLoaded","imagesViewer","scripter","scriptsByUrl","scriptElementsById","loadJavaScript","errorCallback","script","state","loadedCallbacks","errorCallbacks","startTime","Date","getTime","callbacks","deleteJavaScript","_delegator","domNode","HTMLElement","VisualElement","batch","action","partial","delegate","dnd","method","main"],"mappings":"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AvpB,EAAAspB,UACA,MACA,KACA,MACA,YACA,WACA7Z,GAGAzP,EAAAspB,UACA,WACA,YACA,WACA,aACA,OACA,UACA,aACA,YACA,UACA,cACA,eACA,SACA,kBACA,mBACA,YACApgB,GAMAlJ,EAAAqB,KAAA,SAAAhD,GACA,MAAA,SAAAA,EACAhM,KAAAgO,KAEAhO,KAAAgO,KAAAc,WAAA9C,IAKA2B,EAAAspB,UACA,UACA,SACA,UACA,SACA,aACA,OACA,cACA,OACA,UACAjN,GAIArc,EAAAspB,UACA,gBACA,mBACA,eACA,eACA,aACA,cACA,cACA,SACA,gBACA,eACA,iBACA,eACA,WACA,mBACA,eACA,iBACA,aACA,YACA,OACA,SACAlO,GAGApb,EAAAspB,UACA,QACA,SACA,SACA,QACA,WACA,WACA,QACA,OACA,YACA,WACA,UACA,SACA,cACA,UACA,UACA,QACA,WACA,UACA,eACA,UACAttB,GAGAgE,EAAAspB,UACA,WACA,YACA,MACA,WACA,OACA,cACA,cACA,OACA,eACAn2B,EAIA,IAAAooB,IAAA,WAAA,OAAA,MAAA,QAAA,SAAA,QAAA,SAAA,SAAA,aACA,YAAA,cAAA,eAAA,cAAA,UAAA,WAAA,SAAA,aAAA,YAAA,cAAA,eAAA,UAAA,cAAA,aAAA,eAAA,gBAAA,QACA,aAAA,kBAAA,UAAA,WAAA,aAAA,YAAA,iBAAA,gBAAA,SAAA,SAEAA,GAAAntB,QAAA,SAAAwF,GAEA,GAAA41B,GAAA51B,CAEAs1B,GAAAp0B,UAAA00B,GAAA,SAAAh4B,GAIA,MAFAa,MAAAe,IAAAQ,EAAApC,GAEAa,OAOA,IAAAsa,IAAA,QAAA,UAAA,YAAA,WAAA,QAAA,WAAA,SAeA,OAbAA,GAAAve,QAAA,SAAAsd,GAEA,GAAA8d,GAAA9d,CAEAwd,GAAAp0B,UAAA00B,GAAA,SAAAxuB,GAIA,MAFA3I,MAAA4a,GAAAvB,EAAA7c,cAAAmM,GAEA3I,QAKA7D,EAAAwR,KAAAA,IAEA1S,EAAA,0BACA,YACA,YACA,QACA,UACA,YACA,WACA,OACA,SACA,WACA,UACA,UACA,aACA,WACA,eACA,UACA,UACA,SAAAkB,GACA,MAAAA,KAGAlB,EAAA,qBAAA,0BAAA,SAAAm8B,GAAA,MAAAA,MA8EEp3B","file":"../skylark-utils-dom.js","sourcesContent":["define('skylark-utils-dom/skylark',[\"skylark-langx/skylark\"], function(skylark) {\r\n    return skylark;\r\n});\r\n\ndefine('skylark-utils-dom/langx',[\r\n    \"skylark-langx/langx\"\r\n], function(langx) {\r\n    return langx;\r\n});\r\n\ndefine('skylark-utils-dom/browser',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark,langx) {\r\n    var checkedCssProperties = {\r\n        \"transitionproperty\": \"TransitionProperty\",\r\n    };\r\n\r\n    var css3PropPrefix = \"\",\r\n        css3StylePrefix = \"\",\r\n        css3EventPrefix = \"\",\r\n\r\n        cssStyles = {},\r\n        cssProps = {},\r\n\r\n        vendorPrefix,\r\n        vendorPrefixRE,\r\n        vendorPrefixesRE = /^(Webkit|webkit|O|Moz|moz|ms)(.*)$/,\r\n\r\n        document = window.document,\r\n        testEl = document.createElement(\"div\"),\r\n\r\n        matchesSelector = testEl.webkitMatchesSelector ||\r\n                          testEl.mozMatchesSelector ||\r\n                          testEl.oMatchesSelector ||\r\n                          testEl.matchesSelector,\r\n\r\n        requestFullScreen = testEl.requestFullscreen || \r\n                            testEl.webkitRequestFullscreen || \r\n                            testEl.mozRequestFullScreen || \r\n                            testEl.msRequestFullscreen,\r\n\r\n        exitFullScreen =  document.exitFullscreen ||\r\n                          document.webkitCancelFullScreen ||\r\n                          document.mozCancelFullScreen ||\r\n                          document.msExitFullscreen,\r\n\r\n        testStyle = testEl.style;\r\n\r\n    for (var name in testStyle) {\r\n        var matched = name.match(vendorPrefixRE || vendorPrefixesRE);\r\n        if (matched) {\r\n            if (!vendorPrefixRE) {\r\n                vendorPrefix = matched[1];\r\n                vendorPrefixRE = new RegExp(\"^(\" + vendorPrefix + \")(.*)$\");\r\n\r\n                css3StylePrefix = vendorPrefix;\r\n                css3PropPrefix = '-' + vendorPrefix.toLowerCase() + '-';\r\n                css3EventPrefix = vendorPrefix.toLowerCase();\r\n            }\r\n\r\n            cssStyles[langx.lowerFirst(matched[2])] = name;\r\n            var cssPropName = langx.dasherize(matched[2]);\r\n            cssProps[cssPropName] = css3PropPrefix + cssPropName;\r\n\r\n        }\r\n    }\r\n\r\n\r\n    function normalizeCssEvent(name) {\r\n        return css3EventPrefix ? css3EventPrefix + name : name.toLowerCase();\r\n    }\r\n\r\n    function normalizeCssProperty(name) {\r\n        return cssProps[name] || name;\r\n    }\r\n\r\n    function normalizeStyleProperty(name) {\r\n        return cssStyles[name] || name;\r\n    }\r\n\r\n    function browser() {\r\n        return browser;\r\n    }\r\n\r\n    langx.mixin(browser, {\r\n        css3PropPrefix: css3PropPrefix,\r\n\r\n        isIE : !!/msie/i.exec( window.navigator.userAgent ),\r\n\r\n        normalizeStyleProperty: normalizeStyleProperty,\r\n\r\n        normalizeCssProperty: normalizeCssProperty,\r\n\r\n        normalizeCssEvent: normalizeCssEvent,\r\n\r\n        matchesSelector: matchesSelector,\r\n\r\n        requestFullScreen : requestFullScreen,\r\n\r\n        exitFullscreen : requestFullScreen,\r\n\r\n        location: function() {\r\n            return window.location;\r\n        },\r\n\r\n        support : {\r\n\r\n        }\r\n\r\n    });\r\n\r\n    testEl = null;\r\n\r\n    return skylark.browser = browser;\r\n});\r\n\ndefine('skylark-utils-dom/styler',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark, langx) {\r\n    var every = Array.prototype.every,\r\n        forEach = Array.prototype.forEach,\r\n        camelCase = langx.camelCase,\r\n        dasherize = langx.dasherize;\r\n\r\n    function maybeAddPx(name, value) {\r\n        return (typeof value == \"number\" && !cssNumber[dasherize(name)]) ? value + \"px\" : value\r\n    }\r\n\r\n    var cssNumber = {\r\n            'column-count': 1,\r\n            'columns': 1,\r\n            'font-weight': 1,\r\n            'line-height': 1,\r\n            'opacity': 1,\r\n            'z-index': 1,\r\n            'zoom': 1\r\n        },\r\n        classReCache = {\r\n\r\n        };\r\n\r\n    function classRE(name) {\r\n        return name in classReCache ?\r\n            classReCache[name] : (classReCache[name] = new RegExp('(^|\\\\s)' + name + '(\\\\s|$)'));\r\n    }\r\n\r\n    // access className property while respecting SVGAnimatedString\r\n    /*\r\n     * Adds the specified class(es) to each element in the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {String} value\r\n     */\r\n    function className(node, value) {\r\n        var klass = node.className || '',\r\n            svg = klass && klass.baseVal !== undefined\r\n\r\n        if (value === undefined) return svg ? klass.baseVal : klass\r\n        svg ? (klass.baseVal = value) : (node.className = value)\r\n    }\r\n\r\n    function disabled(elm, value ) {\r\n        if (arguments.length < 2) {\r\n            return !!this.dom.disabled;\r\n        }\r\n\r\n        elm.disabled = value;\r\n\r\n        return this;\r\n    }\r\n\r\n    var elementDisplay = {};\r\n\r\n    function defaultDisplay(nodeName) {\r\n        var element, display\r\n        if (!elementDisplay[nodeName]) {\r\n            element = document.createElement(nodeName)\r\n            document.body.appendChild(element)\r\n            display = getComputedStyle(element, '').getPropertyValue(\"display\")\r\n            element.parentNode.removeChild(element)\r\n            display == \"none\" && (display = \"block\")\r\n            elementDisplay[nodeName] = display\r\n        }\r\n        return elementDisplay[nodeName]\r\n    }\r\n    /*\r\n     * Display the matched elements.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function show(elm) {\r\n        styler.css(elm, \"display\", \"\");\r\n        if (styler.css(elm, \"display\") == \"none\") {\r\n            styler.css(elm, \"display\", defaultDisplay(elm.nodeName));\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function isInvisible(elm) {\r\n        return styler.css(elm, \"display\") == \"none\" || styler.css(elm, \"opacity\") == 0;\r\n    }\r\n\r\n    /*\r\n     * Hide the matched elements.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function hide(elm) {\r\n        styler.css(elm, \"display\", \"none\");\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Adds the specified class(es) to each element in the set of matched elements.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function addClass(elm, name) {\r\n        if (!name) return this\r\n        var cls = className(elm),\r\n            names;\r\n        if (langx.isString(name)) {\r\n            names = name.split(/\\s+/g);\r\n        } else {\r\n            names = name;\r\n        }\r\n        names.forEach(function(klass) {\r\n            var re = classRE(klass);\r\n            if (!cls.match(re)) {\r\n                cls += (cls ? \" \" : \"\") + klass;\r\n            }\r\n        });\r\n\r\n        className(elm, cls);\r\n\r\n        return this;\r\n    }\r\n    /*\r\n     * Get the value of a computed style property for the first element in the set of matched elements or set one or more CSS properties for every matched element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} property\r\n     * @param {Any} value\r\n     */\r\n    function css(elm, property, value) {\r\n        if (arguments.length < 3) {\r\n            var computedStyle,\r\n                computedStyle = getComputedStyle(elm, '')\r\n            if (langx.isString(property)) {\r\n                return elm.style[camelCase(property)] || computedStyle.getPropertyValue(dasherize(property))\r\n            } else if (langx.isArrayLike(property)) {\r\n                var props = {}\r\n                forEach.call(property, function(prop) {\r\n                    props[prop] = (elm.style[camelCase(prop)] || computedStyle.getPropertyValue(dasherize(prop)))\r\n                })\r\n                return props\r\n            }\r\n        }\r\n\r\n        var css = '';\r\n        if (typeof(property) == 'string') {\r\n            if (!value && value !== 0) {\r\n                elm.style.removeProperty(dasherize(property));\r\n            } else {\r\n                css = dasherize(property) + \":\" + maybeAddPx(property, value)\r\n            }\r\n        } else {\r\n            for (key in property) {\r\n                if (property[key] === undefined) {\r\n                    continue;\r\n                }\r\n                if (!property[key] && property[key] !== 0) {\r\n                    elm.style.removeProperty(dasherize(key));\r\n                } else {\r\n                    css += dasherize(key) + ':' + maybeAddPx(key, property[key]) + ';'\r\n                }\r\n            }\r\n        }\r\n\r\n        elm.style.cssText += ';' + css;\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Determine whether any of the matched elements are assigned the given class.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function hasClass(elm, name) {\r\n        var re = classRE(name);\r\n        return elm.className && elm.className.match(re);\r\n    }\r\n\r\n    /*\r\n     * Remove a single class, multiple classes, or all classes from each element in the set of matched elements.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function removeClass(elm, name) {\r\n        if (name) {\r\n            var cls = className(elm),\r\n                names;\r\n\r\n            if (langx.isString(name)) {\r\n                names = name.split(/\\s+/g);\r\n            } else {\r\n                names = name;\r\n            }\r\n\r\n            names.forEach(function(klass) {\r\n                var re = classRE(klass);\r\n                if (cls.match(re)) {\r\n                    cls = cls.replace(re, \" \");\r\n                }\r\n            });\r\n\r\n            className(elm, cls.trim());\r\n        } else {\r\n            className(elm, \"\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Add or remove one or more classes from the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     * @param {} when\r\n     */\r\n    function toggleClass(elm, name, when) {\r\n        var self = this;\r\n        name.split(/\\s+/g).forEach(function(klass) {\r\n            if (when === undefined) {\r\n                when = !self.hasClass(elm, klass);\r\n            }\r\n            if (when) {\r\n                self.addClass(elm, klass);\r\n            } else {\r\n                self.removeClass(elm, klass)\r\n            }\r\n        });\r\n\r\n        return self;\r\n    }\r\n\r\n    var styler = function() {\r\n        return styler;\r\n    };\r\n\r\n    langx.mixin(styler, {\r\n        autocssfix: false,\r\n        cssHooks: {\r\n\r\n        },\r\n\r\n        addClass: addClass,\r\n        className: className,\r\n        css: css,\r\n        disabled : disabled,        \r\n        hasClass: hasClass,\r\n        hide: hide,\r\n        isInvisible: isInvisible,\r\n        removeClass: removeClass,\r\n        show: show,\r\n        toggleClass: toggleClass\r\n    });\r\n\r\n    return skylark.styler = styler;\r\n});\ndefine('skylark-utils-dom/noder',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./styler\"\r\n], function(skylark, langx, browser, styler) {\r\n    var isIE = !!navigator.userAgent.match(/Trident/g) || !!navigator.userAgent.match(/MSIE/g),\r\n        fragmentRE = /^\\s*<(\\w+|!)[^>]*>/,\r\n        singleTagRE = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\r\n        div = document.createElement(\"div\"),\r\n        table = document.createElement('table'),\r\n        tableBody = document.createElement('tbody'),\r\n        tableRow = document.createElement('tr'),\r\n        containers = {\r\n            'tr': tableBody,\r\n            'tbody': table,\r\n            'thead': table,\r\n            'tfoot': table,\r\n            'td': tableRow,\r\n            'th': tableRow,\r\n            '*': div\r\n        },\r\n        rootNodeRE = /^(?:body|html)$/i,\r\n        map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    function ensureNodes(nodes, copyByClone) {\r\n        if (!langx.isArrayLike(nodes)) {\r\n            nodes = [nodes];\r\n        }\r\n        if (copyByClone) {\r\n            nodes = map.call(nodes, function(node) {\r\n                return node.cloneNode(true);\r\n            });\r\n        }\r\n        return langx.flatten(nodes);\r\n    }\r\n\r\n    function nodeName(elm, chkName) {\r\n        var name = elm.nodeName && elm.nodeName.toLowerCase();\r\n        if (chkName !== undefined) {\r\n            return name === chkName.toLowerCase();\r\n        }\r\n        return name;\r\n    };\r\n\r\n    function after(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone),\r\n                refNode = refNode.nextSibling;\r\n\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                if (refNode) {\r\n                    parent.insertBefore(nodes[i], refNode);\r\n                } else {\r\n                    parent.appendChild(nodes[i]);\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function append(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            parentNode.appendChild(nodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function before(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone);\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                parent.insertBefore(nodes[i], refNode);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    /*   \r\n     * Get the children of the specified node, including text and comment nodes.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function contents(elm) {\r\n        if (nodeName(elm, \"iframe\")) {\r\n            return elm.contentDocument;\r\n        }\r\n        return elm.childNodes;\r\n    }\r\n\r\n    /*   \r\n     * Create a element and set attributes on it.\r\n     * @param {HTMLElement} tag\r\n     * @param {props} props\r\n     * @param } parent\r\n     */\r\n    function createElement(tag, props, parent) {\r\n        var node = document.createElement(tag);\r\n        if (props) {\r\n            for (var name in props) {\r\n                node.setAttribute(name, props[name]);\r\n            }\r\n        }\r\n        if (parent) {\r\n            append(parent, node);\r\n        }\r\n        return node;\r\n    }\r\n\r\n    /*   \r\n     * Create a DocumentFragment from the HTML fragment.\r\n     * @param {String} html\r\n     */\r\n    function createFragment(html) {\r\n        // A special case optimization for a single tag\r\n        html = langx.trim(html);\r\n        if (singleTagRE.test(html)) {\r\n            return [createElement(RegExp.$1)];\r\n        }\r\n\r\n        var name = fragmentRE.test(html) && RegExp.$1\r\n        if (!(name in containers)) {\r\n            name = \"*\"\r\n        }\r\n        var container = containers[name];\r\n        container.innerHTML = \"\" + html;\r\n        dom = slice.call(container.childNodes);\r\n\r\n        dom.forEach(function(node) {\r\n            container.removeChild(node);\r\n        })\r\n\r\n        return dom;\r\n    }\r\n\r\n    /*   \r\n     * Create a deep copy of the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {Boolean} deep\r\n     */\r\n    function clone(node, deep) {\r\n        var self = this,\r\n            clone;\r\n\r\n        // TODO: Add feature detection here in the future\r\n        if (!isIE || node.nodeType !== 1 || deep) {\r\n            return node.cloneNode(deep);\r\n        }\r\n\r\n        // Make a HTML5 safe shallow copy\r\n        if (!deep) {\r\n            clone = document.createElement(node.nodeName);\r\n\r\n            // Copy attribs\r\n            each(self.getAttribs(node), function(attr) {\r\n                self.setAttrib(clone, attr.nodeName, self.getAttrib(node, attr.nodeName));\r\n            });\r\n\r\n            return clone;\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node .\r\n     * @param {String} node\r\n     * @param {Node} child\r\n     */\r\n    function contains(node, child) {\r\n        return isChildOf(child, node);\r\n    }\r\n\r\n    /*   \r\n     * Create a new Text node.\r\n     * @param {String} text\r\n     * @param {Node} child\r\n     */\r\n    function createTextNode(text) {\r\n        return document.createTextNode(text);\r\n    }\r\n\r\n    /*   \r\n     * Get the current document object.\r\n     */\r\n    function doc() {\r\n        return document;\r\n    }\r\n\r\n    /*   \r\n     * Remove all child nodes of the set of matched elements from the DOM.\r\n     * @param {Object} node\r\n     */\r\n    function empty(node) {\r\n        while (node.hasChildNodes()) {\r\n            var child = node.firstChild;\r\n            node.removeChild(child);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    var fulledEl = null;\r\n\r\n    function fullScreen(el) {\r\n        if (el === false) {\r\n            browser.exitFullScreen.apply(document);\r\n        } else if (el) {\r\n            browser.requestFullScreen.apply(el);\r\n            fulledEl = el;\r\n        } else {\r\n            return (\r\n                document.fullscreenElement ||\r\n                document.webkitFullscreenElement ||\r\n                document.mozFullScreenElement ||\r\n                document.msFullscreenElement\r\n            )\r\n        }\r\n    }\r\n\r\n   var rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/gi;\r\n \r\n    /*   \r\n     * Get the HTML contents of the first element in the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {String} html\r\n     */\r\n    function html(node, html) {\r\n        if (html === undefined) {\r\n            return node.innerHTML;\r\n        } else {\r\n            this.empty(node);\r\n            html = html || \"\";\r\n            if (langx.isString(html)) {\r\n                html = html.replace( rxhtmlTag, \"<$1></$2>\" );\r\n            }\r\n            if (langx.isString(html) || langx.isNumber(html)) {               \r\n                node.innerHTML = html;\r\n            } else if (langx.isArrayLike(html)) {\r\n                for (var i = 0; i < html.length; i++) {\r\n                    node.appendChild(html[i]);\r\n                }\r\n            } else {\r\n                node.appendChild(html);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node.\r\n     * @param {Node} node\r\n     * @param {Node} parent\r\n     * @param {Node} directly\r\n     */\r\n    function isChildOf(node, parent, directly) {\r\n        if (directly) {\r\n            return node.parentNode === parent;\r\n        }\r\n        if (document.documentElement.contains) {\r\n            return parent.contains(node);\r\n        }\r\n        while (node) {\r\n            if (parent === node) {\r\n                return true;\r\n            }\r\n\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node.\r\n     * @param {Node} node\r\n     * @param {Node} parent\r\n     * @param {Node} directly\r\n     */\r\n    function isDoc(node) {\r\n        return node != null && node.nodeType == node.DOCUMENT_NODE\r\n    }\r\n\r\n    /*   \r\n     * Get the owner document object for the specified element.\r\n     * @param {Node} elm\r\n     */\r\n    function ownerDoc(elm) {\r\n        if (!elm) {\r\n            return document;\r\n        }\r\n\r\n        if (elm.nodeType == 9) {\r\n            return elm;\r\n        }\r\n\r\n        return elm.ownerDocument;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     */\r\n    function ownerWindow(elm) {\r\n        var doc = ownerDoc(elm);\r\n        return doc.defaultView || doc.parentWindow;\r\n    }\r\n\r\n    /*   \r\n     * insert one or more nodes as the first children of the specified node.\r\n     * @param {Node} node\r\n     * @param {Node or ArrayLike} placing\r\n     * @param {Boolean Optional} copyByClone\r\n     */\r\n    function prepend(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            refNode = parentNode.firstChild,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            if (refNode) {\r\n                parentNode.insertBefore(nodes[i], refNode);\r\n            } else {\r\n                parentNode.appendChild(nodes[i]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     */\r\n    function offsetParent(elm) {\r\n        var parent = elm.offsetParent || document.body;\r\n        while (parent && !rootNodeRE.test(parent.nodeName) && styler.css(parent, \"position\") == \"static\") {\r\n            parent = parent.offsetParent;\r\n        }\r\n        return parent;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     * @param {Node} params\r\n     */\r\n    function overlay(elm, params) {\r\n        var overlayDiv = createElement(\"div\", params);\r\n        styler.css(overlayDiv, {\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            zIndex: 0x7FFFFFFF,\r\n            opacity: 0.7\r\n        });\r\n        elm.appendChild(overlayDiv);\r\n        return overlayDiv;\r\n\r\n    }\r\n\r\n    /*   \r\n     * Remove the set of matched elements from the DOM.\r\n     * @param {Node} node\r\n     */\r\n    function remove(node) {\r\n        if (node && node.parentNode) {\r\n            try {\r\n                node.parentNode.removeChild(node);\r\n            } catch (e) {\r\n                console.warn(\"The node is already removed\", e);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function removeChild(node,children) {\r\n        if (!langx.isArrayLike(children)) {\r\n            children = [children];\r\n        }\r\n        for (var i=0;i<children.length;i++) {\r\n            node.removeChild(children[i]);\r\n        }\r\n\r\n        return this;\r\n    }\r\n    /*   \r\n     * Replace an old node with the specified node.\r\n     * @param {Node} node\r\n     * @param {Node} oldNode\r\n     */\r\n    function replace(node, oldNode) {\r\n        oldNode.parentNode.replaceChild(node, oldNode);\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Replace an old node with the specified node.\r\n     * @param {HTMLElement} elm\r\n     * @param {Node} params\r\n     */\r\n    function throb(elm, params) {\r\n        params = params || {};\r\n        var self = this,\r\n            text = params.text,\r\n            style = params.style,\r\n            time = params.time,\r\n            callback = params.callback,\r\n            timer,\r\n            throbber = this.createElement(\"div\", {\r\n                className: params.className || \"throbber\",\r\n                style: style\r\n            }),\r\n            _overlay = overlay(throbber, {\r\n                className: 'overlay fade'\r\n            }),\r\n            throb = this.createElement(\"div\", {\r\n                className: \"throb\"\r\n            }),\r\n            textNode = this.createTextNode(text || \"\"),\r\n            remove = function() {\r\n                if (timer) {\r\n                    clearTimeout(timer);\r\n                    timer = null;\r\n                }\r\n                if (throbber) {\r\n                    self.remove(throbber);\r\n                    throbber = null;\r\n                }\r\n            },\r\n            update = function(params) {\r\n                if (params && params.text && throbber) {\r\n                    textNode.nodeValue = params.text;\r\n                }\r\n            };\r\n        throb.appendChild(textNode);\r\n        throbber.appendChild(throb);\r\n        elm.appendChild(throbber);\r\n        var end = function() {\r\n            remove();\r\n            if (callback) callback();\r\n        };\r\n        if (time) {\r\n            timer = setTimeout(end, time);\r\n        }\r\n\r\n        return {\r\n            remove: remove,\r\n            update: update\r\n        };\r\n    }\r\n\r\n    /*   \r\n     * traverse the specified node and its descendants, perform the callback function on each\r\n     * @param {Node} node\r\n     * @param {Function} fn\r\n     */\r\n    function traverse(node, fn) {\r\n        fn(node)\r\n        for (var i = 0, len = node.childNodes.length; i < len; i++) {\r\n            traverse(node.childNodes[i], fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} node\r\n     */\r\n    function reverse(node) {\r\n        var firstChild = node.firstChild;\r\n        for (var i = node.children.length - 1; i > 0; i--) {\r\n            if (i > 0) {\r\n                var child = node.children[i];\r\n                node.insertBefore(child, firstChild);\r\n            }\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Wrap an HTML structure around each element in the set of matched elements.\r\n     * @param {Node} node\r\n     * @param {Node} wrapperNode\r\n     */\r\n    function wrapper(node, wrapperNode) {\r\n        if (langx.isString(wrapperNode)) {\r\n            wrapperNode = this.createFragment(wrapperNode).firstChild;\r\n        }\r\n        node.parentNode.insertBefore(wrapperNode, node);\r\n        wrapperNode.appendChild(node);\r\n    }\r\n\r\n    /*   \r\n     * Wrap an HTML structure around the content of each element in the set of matched\r\n     * @param {Node} node\r\n     * @param {Node} wrapperNode\r\n     */\r\n    function wrapperInner(node, wrapperNode) {\r\n        var childNodes = slice.call(node.childNodes);\r\n        node.appendChild(wrapperNode);\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            wrapperNode.appendChild(childNodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Remove the parents of the set of matched elements from the DOM, leaving the matched\r\n     * @param {Node} node\r\n     */\r\n    function unwrap(node) {\r\n        var child, parent = node.parentNode;\r\n        if (parent) {\r\n            if (this.isDoc(parent.parentNode)) return;\r\n            parent.parentNode.insertBefore(node, parent);\r\n        }\r\n    }\r\n\r\n    function noder() {\r\n        return noder;\r\n    }\r\n\r\n    langx.mixin(noder, {\r\n        body: function() {\r\n            return document.body;\r\n        },\r\n\r\n        clone: clone,\r\n        contents: contents,\r\n\r\n        createElement: createElement,\r\n\r\n        createFragment: createFragment,\r\n\r\n        contains: contains,\r\n\r\n        createTextNode: createTextNode,\r\n\r\n        doc: doc,\r\n\r\n        empty: empty,\r\n\r\n        fullScreen: fullScreen,\r\n\r\n        html: html,\r\n\r\n        isChildOf: isChildOf,\r\n\r\n        isDoc: isDoc,\r\n\r\n        isWindow: langx.isWindow,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        ownerDoc: ownerDoc,\r\n\r\n        ownerWindow: ownerWindow,\r\n\r\n        after: after,\r\n\r\n        before: before,\r\n\r\n        prepend: prepend,\r\n\r\n        append: append,\r\n\r\n        remove: remove,\r\n\r\n        removeChild : removeChild,\r\n\r\n        replace: replace,\r\n\r\n        throb: throb,\r\n\r\n        traverse: traverse,\r\n\r\n        reverse: reverse,\r\n\r\n        wrapper: wrapper,\r\n\r\n        wrapperInner: wrapperInner,\r\n\r\n        unwrap: unwrap\r\n    });\r\n\r\n    return skylark.noder = noder;\r\n});\ndefine('skylark-utils-dom/css',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\"\r\n], function(skylark, langx, noder) {\r\n\r\n    var head = document.getElementsByTagName(\"head\")[0],\r\n        count = 0,\r\n        sheetsByUrl = {},\r\n        sheetsById = {},\r\n        defaultSheetId = _createStyleSheet(),\r\n        defaultSheet = sheetsById[defaultSheetId],\r\n        rulesPropName = (\"cssRules\" in defaultSheet) ? \"cssRules\" : \"rules\",\r\n        insertRuleFunc,\r\n        deleteRuleFunc = defaultSheet.deleteRule || defaultSheet.removeRule;\r\n\r\n    if (defaultSheet.insertRule) {\r\n        var _insertRule = defaultSheet.insertRule;\r\n        insertRuleFunc = function(selector, css, index) {\r\n            _insertRule.call(this, selector + \"{\" + css + \"}\", index);\r\n        };\r\n    } else {\r\n        insertRuleFunc = defaultSheet.addRule;\r\n    }\r\n\r\n    function normalizeSelector(selectorText) {\r\n        var selector = [],\r\n            last, len;\r\n        last = defaultSheet[rulesPropName].length;\r\n        insertRuleFunc.call(defaultSheet, selectorText, ';');\r\n        len = defaultSheet[rulesPropName].length;\r\n        for (var i = len - 1; i >= last; i--) {\r\n            selector.push(_sheet[_rules][i].selectorText);\r\n            deleteRuleFunc.call(defaultSheet, i);\r\n        }\r\n        return selector.reverse().join(', ');\r\n    }\r\n\r\n    /*\r\n     * create a stylesheet element.\r\n     * @param {Boolean} external\r\n     * @param {Object} options\r\n     * @param {String} [options.media = null]\r\n     */\r\n    function _createStyleSheet(external,options ) {\r\n        var node,\r\n            props = {\r\n                type : \"text/css\"\r\n            },\r\n            id = (count++);\r\n\r\n        options = options || {};\r\n        if (options.media) {\r\n            props.media = options.media;\r\n        }\r\n\r\n        if (external) {\r\n            node = noder.create(\"link\",langx.mixin(props,{\r\n                rel  : \"stylesheet\",\r\n                async : false\r\n            }));\r\n        } else {\r\n            node = noder.createElement(\"style\",props);\r\n        }\r\n\r\n        noder.append(head,node);\r\n        sheetsById[id] = {\r\n            id : id,\r\n            node :node\r\n        };\r\n\r\n        return id;\r\n    }\r\n\r\n    function createStyleSheet(css,options) {\r\n        if (!options) {\r\n            options = {};\r\n        }\r\n        var sheetId = _createStyleSheet(false,options);\r\n        if (css) {\r\n            addSheetRules(sheetId,css);\r\n        }\r\n\r\n        return sheetId;\r\n    }\r\n\r\n    function loadStyleSheet(url, options) {\r\n        var sheet = sheetsByUrl[url];\r\n        if (!sheet) {\r\n            var sheetId = _createStyleSheet(true,options);\r\n\r\n            sheet = sheetsByUrl[url] = sheetsById[sheetId];\r\n            langx.mixin(sheet,{\r\n                state: 0, //0:unload,1:loaded,-1:loaderror\r\n                url : url,\r\n                deferred : new langx.Deferred()\r\n            });\r\n\r\n            var node = sheet.node;\r\n\r\n            startTime = new Date().getTime();\r\n\r\n            node.onload = function() {\r\n                sheet.state = 1;\r\n                sheet.deferred.resolve(sheet.id);\r\n            },\r\n            node.onerror = function(e) {\r\n                sheet.state = -1;\r\n                sheet.deferred.reject(e);\r\n            };\r\n\r\n            node.href = sheet.url;\r\n        }\r\n        return sheet.deferred.promise;\r\n    }\r\n\r\n    function deleteSheetRule(sheetId, rule) {\r\n        var sheet = sheetsById[sheetId];\r\n        if (langx.isNumber(rule)) {\r\n            deleteRuleFunc.call(sheet, rule);\r\n        } else {\r\n            langx.each(sheet[rulesPropName], function(i, _rule) {\r\n                if (rule === _rule) {\r\n                    deleteRuleFunc.call(sheet, i);\r\n                    return false;\r\n                }\r\n            });\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function deleteRule(rule) {\r\n        deleteSheetRule(defaultSheetId, rule);\r\n        return this;\r\n    }\r\n\r\n    function removeStyleSheet(sheetId) {\r\n        if (sheetId === defaultSheetId) {\r\n            throw new Error(\"The default stylesheet can not be deleted\");\r\n        }\r\n        var sheet = sheetsById[sheetId];\r\n        delete sheetsById[sheetId];\r\n\r\n        noder.remove(sheet.node);\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * insert a rule to the default stylesheet.\r\n     * @param {String} selector\r\n     * @param {String} css\r\n     * @param {Number} index \r\n     */\r\n    function insertRule(selector, css, index) {\r\n        return this.insertSheetRule(defaultSheetId, selector, css, index);\r\n    }\r\n\r\n    /*\r\n     * Add rules to the default stylesheet.\r\n     * @param {Object} rules\r\n     */\r\n    function addRules(rules) {\r\n        return this.addRules(defaultSheetId,rules);\r\n    }\r\n\r\n    /*\r\n     * insert a rule to the stylesheet specified by sheetId.\r\n     * @param {Number} sheetId  \r\n     * @param {String} selector\r\n     * @param {String} css\r\n     * @param {Number} index \r\n     */\r\n    function insertSheetRule(sheetId, selector, css, index) {\r\n        if (!selector || !css) {\r\n            return -1;\r\n        }\r\n\r\n        var sheet = sheetsById[sheetId];\r\n        index = index || sheet[rulesPropName].length;\r\n\r\n        return insertRuleFunc.call(sheet, selector, css, index);\r\n    }\r\n\r\n    /*\r\n     * Add  rules to stylesheet.\r\n     * @param {Number} sheetId  \r\n     * @param {Object|String} rules\r\n     * @return this\r\n     * @example insertSheetRules(sheetId,{\r\n     * \r\n     * });\r\n     */\r\n    function addSheetRules(sheetId,rules) {\r\n        var sheet = sheetsById[sheetId],\r\n            css;\r\n        if (langx.isString(rules)) {\r\n            css = rules;\r\n        } else {\r\n            css = toString(rules);\r\n        }\r\n\r\n        noder.append(sheet.node,noder.createTextNode(css));\r\n        \r\n        return this;\r\n    }\r\n\r\n    function isAtRule(str) {\r\n        return str.startsWith(\"@\");\r\n    }\r\n\r\n    function toString(json){\r\n        var adjust = function(parentName,name,depth) {\r\n            if (parentName) {\r\n                if (isAtRule(parentName)) {\r\n                    depth += 1;\r\n                } else {\r\n                    name =  parentName + \" \" + name;\r\n                }                \r\n            }\r\n            return {\r\n                name : name,\r\n                depth : depth\r\n            }\r\n        };\r\n\r\n        var strNode = function (name, values, depth) {\r\n            var str = \"\",\r\n                atFlg = isAtRule(name);\r\n\r\n\r\n            if (isAtRule(name)) {\r\n                // at rule\r\n                if (langx.isString(values)) {\r\n                    // an at rule without block\r\n                    // ex: (1) @charset 'utf8';\r\n                    str = css.SPACE.repeat(depth) + name.trim() + \" \\\"\" + values.trim() + \" \\\";\\n\";\r\n                } else {\r\n                    // an at rule with block, ex :\r\n                    //  @media 'screen' {\r\n                    //  }\r\n                    str += css.SPACE.repeat(depth) + name.trim() + \" {\\n\";\r\n                    str += strNode(\"\",values,depth+1);\r\n                    str += css.SPACE.repeat(depth) + \" }\\n\";\r\n                }\r\n            } else {\r\n                // a selector or a property\r\n                if (langx.isString(values)) {\r\n                    // a css property \r\n                    // ex : (1) font-color : red;\r\n                    str = css.SPACE.repeat(depth) + name.trim() ;\r\n                    if (atFlg) {\r\n                        str = str +  \" \\\"\" + values.trim() + \" \\\";\\n\";\r\n                    } else {\r\n                        str = str + ': ' + values.trim() + \";\\n\";\r\n                    }\r\n\r\n                } else {\r\n                    // a selector rule \r\n                    // ex : (1) .class1 : {\r\n                    //            font-color : red;\r\n                    //          }\r\n                    if (langx.isArray(values)) {\r\n                        // array for ordering\r\n                        for (var n =0; n<values.length; n ++) {\r\n                           str +=  strNode(name,values[n],depth);\r\n                        }\r\n                    } else {\r\n                        // plain object\r\n\r\n                        if (name) {\r\n                            str += css.SPACE.repeat(depth) + name.trim() + \" {\\n\";\r\n\r\n                            for (var n in values) {\r\n                                var value =values[n];\r\n                                if (langx.isString(value)) {\r\n                                    // css property\r\n                                    str += strNode(n,value,depth+1)\r\n                                }\r\n                            }\r\n\r\n                            str += css.SPACE.repeat(depth) + \"}\\n\";\r\n                        }\r\n\r\n                        for (var n in values) {\r\n                            var value =values[n];\r\n                            if (!langx.isString(value)) {\r\n                                var adjusted = adjust(name,n,depth);\r\n                                str +=  strNode(adjusted.name,value,adjusted.depth);\r\n                            } \r\n                        }\r\n\r\n                    }\r\n                }\r\n            }   \r\n\r\n            return str;\r\n        };\r\n\r\n\r\n        return strNode(\"\",json,0);\r\n    }\r\n \r\n\r\n    function css() {\r\n        return css;\r\n    }\r\n\r\n    langx.mixin(css, {\r\n        SPACE : \"\\t\",\r\n\r\n        addRules : addRules,\r\n\r\n        addSheetRules : addSheetRules,\r\n\r\n        createStyleSheet: createStyleSheet,\r\n\r\n        deleteSheetRule : deleteSheetRule,\r\n\r\n        deleteRule : deleteRule,\r\n\r\n        insertRule : insertRule,\r\n\r\n        insertSheetRule : insertSheetRule,\r\n\r\n        removeStyleSheet : removeStyleSheet,\r\n\r\n        toString : toString\r\n    });\r\n\r\n    return skylark.css = css;\r\n});\r\n\ndefine('skylark-utils-dom/finder',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./noder\"\r\n], function(skylark, langx, browser, noder, velm) {\r\n    var local = {},\r\n        filter = Array.prototype.filter,\r\n        slice = Array.prototype.slice,\r\n        nativeMatchesSelector = browser.matchesSelector;\r\n\r\n    /*\r\n    ---\r\n    name: Slick.Parser\r\n    description: Standalone CSS3 Selector parser\r\n    provides: Slick.Parser\r\n    ...\r\n    */\r\n    ;\r\n    (function() {\r\n\r\n        var parsed,\r\n            separatorIndex,\r\n            combinatorIndex,\r\n            reversed,\r\n            cache = {},\r\n            reverseCache = {},\r\n            reUnescape = /\\\\/g;\r\n\r\n        var parse = function(expression, isReversed) {\r\n            if (expression == null) return null;\r\n            if (expression.Slick === true) return expression;\r\n            expression = ('' + expression).replace(/^\\s+|\\s+$/g, '');\r\n            reversed = !!isReversed;\r\n            var currentCache = (reversed) ? reverseCache : cache;\r\n            if (currentCache[expression]) return currentCache[expression];\r\n            parsed = {\r\n                Slick: true,\r\n                expressions: [],\r\n                raw: expression,\r\n                reverse: function() {\r\n                    return parse(this.raw, true);\r\n                }\r\n            };\r\n            separatorIndex = -1;\r\n            while (expression != (expression = expression.replace(regexp, parser)));\r\n            parsed.length = parsed.expressions.length;\r\n            return currentCache[parsed.raw] = (reversed) ? reverse(parsed) : parsed;\r\n        };\r\n\r\n        var reverseCombinator = function(combinator) {\r\n            if (combinator === '!') return ' ';\r\n            else if (combinator === ' ') return '!';\r\n            else if ((/^!/).test(combinator)) return combinator.replace(/^!/, '');\r\n            else return '!' + combinator;\r\n        };\r\n\r\n        var reverse = function(expression) {\r\n            var expressions = expression.expressions;\r\n            for (var i = 0; i < expressions.length; i++) {\r\n                var exp = expressions[i];\r\n                var last = {\r\n                    parts: [],\r\n                    tag: '*',\r\n                    combinator: reverseCombinator(exp[0].combinator)\r\n                };\r\n\r\n                for (var j = 0; j < exp.length; j++) {\r\n                    var cexp = exp[j];\r\n                    if (!cexp.reverseCombinator) cexp.reverseCombinator = ' ';\r\n                    cexp.combinator = cexp.reverseCombinator;\r\n                    delete cexp.reverseCombinator;\r\n                }\r\n\r\n                exp.reverse().push(last);\r\n            }\r\n            return expression;\r\n        };\r\n\r\n        var escapeRegExp = (function() {\r\n            // Credit: XRegExp 0.6.1 (c) 2007-2008 Steven Levithan <http://stevenlevithan.com/regex/xregexp/> MIT License\r\n            var from = /(?=[\\-\\[\\]{}()*+?.\\\\\\^$|,#\\s])/g,\r\n                to = '\\\\';\r\n            return function(string) {\r\n                return string.replace(from, to)\r\n            }\r\n        }())\r\n\r\n        var regexp = new RegExp(\r\n            \"^(?:\\\\s*(,)\\\\s*|\\\\s*(<combinator>+)\\\\s*|(\\\\s+)|(<unicode>+|\\\\*)|\\\\#(<unicode>+)|\\\\.(<unicode>+)|\\\\[\\\\s*(<unicode1>+)(?:\\\\s*([*^$!~|]?=)(?:\\\\s*(?:([\\\"']?)(.*?)\\\\9)))?\\\\s*\\\\](?!\\\\])|(:+)(<unicode>+)(?:\\\\((?:(?:([\\\"'])([^\\\\13]*)\\\\13)|((?:\\\\([^)]+\\\\)|[^()]*)+))\\\\))?)\"\r\n            .replace(/<combinator>/, '[' + escapeRegExp(\">+~`!@$%^&={}\\\\;</\") + ']')\r\n            .replace(/<unicode>/g, '(?:[\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n            .replace(/<unicode1>/g, '(?:[:\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n        );\r\n\r\n        function parser(\r\n            rawMatch,\r\n\r\n            separator,\r\n            combinator,\r\n            combinatorChildren,\r\n\r\n            tagName,\r\n            id,\r\n            className,\r\n\r\n            attributeKey,\r\n            attributeOperator,\r\n            attributeQuote,\r\n            attributeValue,\r\n\r\n            pseudoMarker,\r\n            pseudoClass,\r\n            pseudoQuote,\r\n            pseudoClassQuotedValue,\r\n            pseudoClassValue\r\n        ) {\r\n            if (separator || separatorIndex === -1) {\r\n                parsed.expressions[++separatorIndex] = [];\r\n                combinatorIndex = -1;\r\n                if (separator) return '';\r\n            }\r\n\r\n            if (combinator || combinatorChildren || combinatorIndex === -1) {\r\n                combinator = combinator || ' ';\r\n                var currentSeparator = parsed.expressions[separatorIndex];\r\n                if (reversed && currentSeparator[combinatorIndex])\r\n                    currentSeparator[combinatorIndex].reverseCombinator = reverseCombinator(combinator);\r\n                currentSeparator[++combinatorIndex] = {\r\n                    combinator: combinator,\r\n                    tag: '*'\r\n                };\r\n            }\r\n\r\n            var currentParsed = parsed.expressions[separatorIndex][combinatorIndex];\r\n\r\n            if (tagName) {\r\n                currentParsed.tag = tagName.replace(reUnescape, '');\r\n\r\n            } else if (id) {\r\n                currentParsed.id = id.replace(reUnescape, '');\r\n\r\n            } else if (className) {\r\n                className = className.replace(reUnescape, '');\r\n\r\n                if (!currentParsed.classList) currentParsed.classList = [];\r\n                if (!currentParsed.classes) currentParsed.classes = [];\r\n                currentParsed.classList.push(className);\r\n                currentParsed.classes.push({\r\n                    value: className,\r\n                    regexp: new RegExp('(^|\\\\s)' + escapeRegExp(className) + '(\\\\s|$)')\r\n                });\r\n\r\n            } else if (pseudoClass) {\r\n                pseudoClassValue = pseudoClassValue || pseudoClassQuotedValue;\r\n                pseudoClassValue = pseudoClassValue ? pseudoClassValue.replace(reUnescape, '') : null;\r\n\r\n                if (!currentParsed.pseudos) currentParsed.pseudos = [];\r\n                currentParsed.pseudos.push({\r\n                    key: pseudoClass.replace(reUnescape, ''),\r\n                    value: pseudoClassValue,\r\n                    type: pseudoMarker.length == 1 ? 'class' : 'element'\r\n                });\r\n\r\n            } else if (attributeKey) {\r\n                attributeKey = attributeKey.replace(reUnescape, '');\r\n                attributeValue = (attributeValue || '').replace(reUnescape, '');\r\n\r\n                var test, regexp;\r\n\r\n                switch (attributeOperator) {\r\n                    case '^=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue));\r\n                        break;\r\n                    case '$=':\r\n                        regexp = new RegExp(escapeRegExp(attributeValue) + '$');\r\n                        break;\r\n                    case '~=':\r\n                        regexp = new RegExp('(^|\\\\s)' + escapeRegExp(attributeValue) + '(\\\\s|$)');\r\n                        break;\r\n                    case '|=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue) + '(-|$)');\r\n                        break;\r\n                    case '=':\r\n                        test = function(value) {\r\n                            return attributeValue == value;\r\n                        };\r\n                        break;\r\n                    case '*=':\r\n                        test = function(value) {\r\n                            return value && value.indexOf(attributeValue) > -1;\r\n                        };\r\n                        break;\r\n                    case '!=':\r\n                        test = function(value) {\r\n                            return attributeValue != value;\r\n                        };\r\n                        break;\r\n                    default:\r\n                        test = function(value) {\r\n                            return !!value;\r\n                        };\r\n                }\r\n\r\n                if (attributeValue == '' && (/^[*$^]=$/).test(attributeOperator)) test = function() {\r\n                    return false;\r\n                };\r\n\r\n                if (!test) test = function(value) {\r\n                    return value && regexp.test(value);\r\n                };\r\n\r\n                if (!currentParsed.attributes) currentParsed.attributes = [];\r\n                currentParsed.attributes.push({\r\n                    key: attributeKey,\r\n                    operator: attributeOperator,\r\n                    value: attributeValue,\r\n                    test: test\r\n                });\r\n\r\n            }\r\n\r\n            return '';\r\n        };\r\n\r\n        // Slick NS\r\n\r\n        var Slick = (this.Slick || {});\r\n\r\n        Slick.parse = function(expression) {\r\n            return parse(expression);\r\n        };\r\n\r\n        Slick.escapeRegExp = escapeRegExp;\r\n\r\n        if (!this.Slick) this.Slick = Slick;\r\n\r\n    }).apply(local);\r\n\r\n\r\n    var simpleClassSelectorRE = /^\\.([\\w-]*)$/,\r\n        simpleIdSelectorRE = /^#([\\w-]*)$/,\r\n        rinputs = /^(?:input|select|textarea|button)$/i,\r\n        rheader = /^h\\d$/i,\r\n        slice = Array.prototype.slice;\r\n\r\n\r\n    local.parseSelector = local.Slick.parse;\r\n\r\n\r\n    var pseudos = local.pseudos = {\r\n        // custom pseudos\r\n        \"button\": function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === \"button\" || name === \"button\";\r\n        },\r\n\r\n        'checked': function(elm) {\r\n            return !!elm.checked;\r\n        },\r\n\r\n        'contains': function(elm, idx, nodes, text) {\r\n            if ($(this).text().indexOf(text) > -1) return this\r\n        },\r\n\r\n        'disabled': function(elm) {\r\n            return !!elm.disabled;\r\n        },\r\n\r\n        'enabled': function(elm) {\r\n            return !elm.disabled;\r\n        },\r\n\r\n        'eq': function(elm, idx, nodes, value) {\r\n            return (idx == value);\r\n        },\r\n\r\n        'even': function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 0;\r\n        },\r\n\r\n        'focus': function(elm) {\r\n            return document.activeElement === elm && (elm.href || elm.type || elm.tabindex);\r\n        },\r\n\r\n        'first': function(elm, idx) {\r\n            return (idx === 0);\r\n        },\r\n\r\n        'gt': function(elm, idx, nodes, value) {\r\n            return (idx > value);\r\n        },\r\n\r\n        'has': function(elm, idx, nodes, sel) {\r\n            return find(elm, sel);\r\n        },\r\n\r\n        // Element/input types\r\n        \"header\": function(elem) {\r\n            return rheader.test(elem.nodeName);\r\n        },\r\n\r\n        'hidden': function(elm) {\r\n            return !local.pseudos[\"visible\"](elm);\r\n        },\r\n\r\n        \"input\": function(elem) {\r\n            return rinputs.test(elem.nodeName);\r\n        },\r\n\r\n        'last': function(elm, idx, nodes) {\r\n            return (idx === nodes.length - 1);\r\n        },\r\n\r\n        'lt': function(elm, idx, nodes, value) {\r\n            return (idx < value);\r\n        },\r\n\r\n        'not': function(elm, idx, nodes, sel) {\r\n            return !matches(elm, sel);\r\n        },\r\n\r\n        'odd': function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 1;\r\n        },\r\n\r\n        /*   \r\n         * Get the parent of each element in the current set of matched elements.\r\n         * @param {Object} elm\r\n         */\r\n        'parent': function(elm) {\r\n            return !!elm.parentNode;\r\n        },\r\n\r\n        'selected': function(elm) {\r\n            return !!elm.selected;\r\n        },\r\n\r\n        'text': function(elm) {\r\n            return elm.type === \"text\";\r\n        },\r\n\r\n        'visible': function(elm) {\r\n            return elm.offsetWidth && elm.offsetWidth\r\n        }\r\n    };\r\n\r\n    [\"first\", \"eq\", \"last\"].forEach(function(item) {\r\n        pseudos[item].isArrayFilter = true;\r\n    });\r\n\r\n\r\n\r\n    pseudos[\"nth\"] = pseudos[\"eq\"];\r\n\r\n    function createInputPseudo(type) {\r\n        return function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === type;\r\n        };\r\n    }\r\n\r\n    function createButtonPseudo(type) {\r\n        return function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return (name === \"input\" || name === \"button\") && elem.type === type;\r\n        };\r\n    }\r\n\r\n    // Add button/input type pseudos\r\n    for (i in {\r\n        radio: true,\r\n        checkbox: true,\r\n        file: true,\r\n        password: true,\r\n        image: true\r\n    }) {\r\n        pseudos[i] = createInputPseudo(i);\r\n    }\r\n    for (i in {\r\n        submit: true,\r\n        reset: true\r\n    }) {\r\n        pseudos[i] = createButtonPseudo(i);\r\n    }\r\n\r\n\r\n    local.divide = function(cond) {\r\n        var nativeSelector = \"\",\r\n            customPseudos = [],\r\n            tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos;\r\n\r\n\r\n        if (id = cond.id) {\r\n            nativeSelector += (\"#\" + id);\r\n        }\r\n        if (classes = cond.classes) {\r\n            for (var i = classes.length; i--;) {\r\n                nativeSelector += (\".\" + classes[i].value);\r\n            }\r\n        }\r\n        if (attributes = cond.attributes) {\r\n            for (var i = 0; i < attributes.length; i++) {\r\n                if (attributes[i].operator) {\r\n                    nativeSelector += (\"[\" + attributes[i].key + attributes[i].operator + JSON.stringify(attributes[i].value) + \"]\");\r\n                } else {\r\n                    nativeSelector += (\"[\" + attributes[i].key + \"]\");\r\n                }\r\n            }\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (this.pseudos[part.key]) {\r\n                    customPseudos.push(part);\r\n                } else {\r\n                    if (part.value !== undefined) {\r\n                        nativeSelector += (\":\" + part.key + \"(\" + JSON.stringify(part))\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (tag = cond.tag) {\r\n            if (tag !== \"*\") {\r\n                nativeSelector = tag.toUpperCase() + nativeSelector;\r\n            }\r\n        }\r\n\r\n        if (!nativeSelector) {\r\n            nativeSelector = \"*\";\r\n        }\r\n\r\n        return {\r\n            nativeSelector: nativeSelector,\r\n            customPseudos: customPseudos\r\n        }\r\n\r\n    };\r\n\r\n    local.check = function(node, cond, idx, nodes, arrayFilte) {\r\n        var tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos,\r\n\r\n            i, part, cls, pseudo;\r\n\r\n        if (!arrayFilte) {\r\n            if (tag = cond.tag) {\r\n                var nodeName = node.nodeName.toUpperCase();\r\n                if (tag == '*') {\r\n                    if (nodeName < '@') return false; // Fix for comment nodes and closed nodes\r\n                } else {\r\n                    if (nodeName != (tag || \"\").toUpperCase()) return false;\r\n                }\r\n            }\r\n\r\n            if (id = cond.id) {\r\n                if (node.getAttribute('id') != id) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n\r\n            if (classes = cond.classes) {\r\n                for (i = classes.length; i--;) {\r\n                    cls = node.getAttribute('class');\r\n                    if (!(cls && classes[i].regexp.test(cls))) return false;\r\n                }\r\n            }\r\n\r\n            if (attributes = cond.attributes) {\r\n                for (i = attributes.length; i--;) {\r\n                    part = attributes[i];\r\n                    if (part.operator ? !part.test(node.getAttribute(part.key)) : !node.hasAttribute(part.key)) return false;\r\n                }\r\n            }\r\n\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (pseudo = this.pseudos[part.key]) {\r\n                    if ((arrayFilte && pseudo.isArrayFilter) || (!arrayFilte && !pseudo.isArrayFilter)) {\r\n                        if (!pseudo(node, idx, nodes, part.value)) {\r\n                            return false;\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (!arrayFilte && !nativeMatchesSelector.call(node, part.key)) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    local.match = function(node, selector) {\r\n\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            parsed = selector;\r\n        }\r\n\r\n        if (!parsed) {\r\n            return true;\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            simpleExpCounter = 0,\r\n            i,\r\n            currentExpression;\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n                if (this.check(node, exp)) {\r\n                    return true;\r\n                }\r\n                simpleExpCounter++;\r\n            }\r\n        }\r\n\r\n        if (simpleExpCounter == parsed.length) {\r\n            return false;\r\n        }\r\n\r\n        var nodes = this.query(document, parsed),\r\n            item;\r\n        for (i = 0; item = nodes[i++];) {\r\n            if (item === node) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n\r\n    local.filterSingle = function(nodes, exp) {\r\n        var matchs = filter.call(nodes, function(node, idx) {\r\n            return local.check(node, exp, idx, nodes, false);\r\n        });\r\n\r\n        matchs = filter.call(matchs, function(node, idx) {\r\n            return local.check(node, exp, idx, matchs, true);\r\n        });\r\n        return matchs;\r\n    };\r\n\r\n    local.filter = function(nodes, selector) {\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            return local.filterSingle(nodes, selector);\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            i,\r\n            currentExpression,\r\n            ret = [];\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n\r\n                var matchs = local.filterSingle(nodes, exp);\r\n\r\n                ret = langx.uniq(ret.concat(matchs));\r\n            } else {\r\n                throw new Error(\"not supported selector:\" + selector);\r\n            }\r\n        }\r\n\r\n        return ret;\r\n\r\n    };\r\n\r\n    local.combine = function(elm, bit) {\r\n        var op = bit.combinator,\r\n            cond = bit,\r\n            node1,\r\n            nodes = [];\r\n\r\n        switch (op) {\r\n            case '>': // direct children\r\n                nodes = children(elm, cond);\r\n                break;\r\n            case '+': // next sibling\r\n                node1 = nextSibling(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '^': // first child\r\n                node1 = firstChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '~': // next siblings\r\n                nodes = nextSiblings(elm, cond);\r\n                break;\r\n            case '++': // next sibling and previous sibling\r\n                var prev = previousSibling(elm, cond, true),\r\n                    next = nextSibling(elm, cond, true);\r\n                if (prev) {\r\n                    nodes.push(prev);\r\n                }\r\n                if (next) {\r\n                    nodes.push(next);\r\n                }\r\n                break;\r\n            case '~~': // next siblings and previous siblings\r\n                nodes = siblings(elm, cond);\r\n                break;\r\n            case '!': // all parent nodes up to document\r\n                nodes = ancestors(elm, cond);\r\n                break;\r\n            case '!>': // direct parent (one level)\r\n                node1 = parent(elm, cond);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!+': // previous sibling\r\n                nodes = previousSibling(elm, cond, true);\r\n                break;\r\n            case '!^': // last child\r\n                node1 = lastChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!~': // previous siblings\r\n                nodes = previousSiblings(elm, cond);\r\n                break;\r\n            default:\r\n                var divided = this.divide(bit);\r\n                nodes = slice.call(elm.querySelectorAll(divided.nativeSelector));\r\n                if (divided.customPseudos) {\r\n                    for (var i = divided.customPseudos.length - 1; i >= 0; i--) {\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes, false)\r\n                        });\r\n\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes, true)\r\n                        });\r\n                    }\r\n                }\r\n                break;\r\n\r\n        }\r\n        return nodes;\r\n    }\r\n\r\n    local.query = function(node, selector, single) {\r\n\r\n\r\n        var parsed = this.Slick.parse(selector);\r\n\r\n        var\r\n            founds = [],\r\n            currentExpression, currentBit,\r\n            expressions = parsed.expressions;\r\n\r\n        for (var i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            var currentItems = [node],\r\n                found;\r\n            for (var j = 0;\r\n                (currentBit = currentExpression[j]); j++) {\r\n                found = langx.map(currentItems, function(item, i) {\r\n                    return local.combine(item, currentBit)\r\n                });\r\n                if (found) {\r\n                    currentItems = found;\r\n                }\r\n            }\r\n            if (found) {\r\n                founds = founds.concat(found);\r\n            }\r\n        }\r\n\r\n        return founds;\r\n    }\r\n\r\n    /*\r\n     * Get the nearest ancestor of the specified element,optional matched by a selector.\r\n     * @param {HTMLElement} node\r\n     * @param {String Optional } selector\r\n     * @param {Object} root\r\n     */\r\n    function ancestor(node, selector, root) {\r\n        var rootIsSelector = root && langx.isString(root);\r\n        while (node = node.parentNode) {\r\n            if (matches(node, selector)) {\r\n                return node;\r\n            }\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node, root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the ancestors of the specitied element , optionally filtered by a selector.\r\n     * @param {HTMLElement} node\r\n     * @param {String Optional } selector\r\n     * @param {Object} root\r\n     */\r\n    function ancestors(node, selector, root) {\r\n        var ret = [],\r\n            rootIsSelector = root && langx.isString(root);\r\n        while ((node = node.parentNode) && (node.nodeType !== 9)) {\r\n            ret.push(node);\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node, root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (selector) {\r\n            ret = local.filter(ret, selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Returns a element by its ID.\r\n     * @param {string} id\r\n     */\r\n    function byId(id, doc) {\r\n        doc = doc || noder.doc();\r\n        return doc.getElementById(id);\r\n    }\r\n\r\n    /*\r\n     * Get the children of the specified element , optionally filtered by a selector.\r\n     * @param {string} node\r\n     * @param {String optionlly} selector\r\n     */\r\n    function children(node, selector) {\r\n        var childNodes = node.childNodes,\r\n            ret = [];\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            var node = childNodes[i];\r\n            if (node.nodeType == 1) {\r\n                ret.push(node);\r\n            }\r\n        }\r\n        if (selector) {\r\n            ret = local.filter(ret, selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function closest(node, selector) {\r\n        while (node && !(matches(node, selector))) {\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    /*\r\n     * Get the decendant of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function descendants(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return slice.call(elm.querySelectorAll(selector));\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        return local.query(elm, selector);\r\n    }\r\n\r\n    /*\r\n     * Get the nearest decendent of the specified element,optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function descendant(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return elm.querySelector(selector);\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        var nodes = local.query(elm, selector);\r\n        if (nodes.length > 0) {\r\n            return nodes[0];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the descendants of each element in the current set of matched elements, filtered by a selector, jQuery object, or element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function find(elm, selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        if (matches(elm, selector)) {\r\n            return elm;\r\n        } else {\r\n            return descendant(elm, selector);\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the findAll of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function findAll(elm, selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        return descendants(elm, selector);\r\n    }\r\n\r\n    /*\r\n     * Get the first child of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {String} first\r\n     */\r\n    function firstChild(elm, selector, first) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[0];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (first) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the last child of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {String } last\r\n     */\r\n    function lastChild(elm, selector, last) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[childNodes.length - 1];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (last) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Check the specified element against a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function matches(elm, selector) {\r\n        if (!selector || !elm || elm.nodeType !== 1) {\r\n            return false\r\n        }\r\n\r\n        if (langx.isString(selector)) {\r\n            try {\r\n                return nativeMatchesSelector.call(elm, selector.replace(/\\[([^=]+)=\\s*([^'\"\\]]+?)\\s*\\]/g, '[$1=\"$2\"]'));\r\n            } catch (matchError) {\r\n                //console.log(matchError);\r\n            }\r\n            return local.match(elm, selector);\r\n        } else if (langx.isArrayLike(selector)) {\r\n            return langx.inArray(elm, selector) > -1;\r\n        } else if (langx.isPlainObject(selector)) {\r\n            return local.check(elm, selector);\r\n        } else {\r\n            return elm === selector;\r\n        }\r\n\r\n    }\r\n\r\n    /*\r\n     * Get the nearest next sibing of the specitied element , optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {Boolean Optional} adjacent\r\n     */\r\n    function nextSibling(elm, selector, adjacent) {\r\n        var node = elm.nextSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the next siblings of the specified element , optional filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function nextSiblings(elm, selector) {\r\n        var node = elm.nextSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Get the parent element of the specified element. if a selector is provided, it retrieves the parent element only if it matches that selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function parent(elm, selector) {\r\n        var node = elm.parentNode;\r\n        if (node && (!selector || matches(node, selector))) {\r\n            return node;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get hte nearest previous sibling of the specified element ,optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {Boolean Optional } adjacent\r\n     */\r\n    function previousSibling(elm, selector, adjacent) {\r\n        var node = elm.previousSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get all preceding siblings of each element in the set of matched elements, optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function previousSiblings(elm, selector) {\r\n        var node = elm.previousSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Selects all sibling elements that follow after the “prev” element, have the same parent, and match the filtering “siblings” selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function siblings(elm, selector) {\r\n        var node = elm.parentNode.firstChild,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1 && node !== elm) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    var finder = function() {\r\n        return finder;\r\n    };\r\n\r\n    langx.mixin(finder, {\r\n\r\n        ancestor: ancestor,\r\n\r\n        ancestors: ancestors,\r\n\r\n        byId: byId,\r\n\r\n        children: children,\r\n\r\n        closest: closest,\r\n\r\n        descendant: descendant,\r\n\r\n        descendants: descendants,\r\n\r\n        find: find,\r\n\r\n        findAll: findAll,\r\n\r\n        firstChild: firstChild,\r\n\r\n        lastChild: lastChild,\r\n\r\n        matches: matches,\r\n\r\n        nextSibling: nextSibling,\r\n\r\n        nextSiblings: nextSiblings,\r\n\r\n        parent: parent,\r\n\r\n        previousSibling: previousSibling,\r\n\r\n        previousSiblings: previousSiblings,\r\n\r\n        pseudos: local.pseudos,\r\n\r\n        siblings: siblings\r\n    });\r\n\r\n    return skylark.finder = finder;\r\n});\ndefine('skylark-utils-dom/datax',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./finder\"\r\n], function(skylark, langx, finder) {\r\n    var map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        camelCase = langx.camelCase,\r\n        deserializeValue = langx.deserializeValue,\r\n\r\n        capitalRE = /([A-Z])/g,\r\n        propMap = {\r\n            'tabindex': 'tabIndex',\r\n            'readonly': 'readOnly',\r\n            'for': 'htmlFor',\r\n            'class': 'className',\r\n            'maxlength': 'maxLength',\r\n            'cellspacing': 'cellSpacing',\r\n            'cellpadding': 'cellPadding',\r\n            'rowspan': 'rowSpan',\r\n            'colspan': 'colSpan',\r\n            'usemap': 'useMap',\r\n            'frameborder': 'frameBorder',\r\n            'contenteditable': 'contentEditable'\r\n        };\r\n    /*\r\n     * Set property values\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n\r\n    function setAttribute(elm, name, value) {\r\n        if (value == null) {\r\n            elm.removeAttribute(name);\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n        }\r\n    }\r\n\r\n    function aria(elm, name, value) {\r\n        return this.attr(elm, \"aria-\" + name, value);\r\n    }\r\n\r\n    /*\r\n     * Set property values\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n\r\n    function attr(elm, name, value) {\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var attrName in name) {\r\n                    attr(elm, attrName, name[attrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                if (elm.hasAttribute && elm.hasAttribute(name)) {\r\n                    return elm.getAttribute(name);\r\n                }\r\n            }\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n            return this;\r\n        }\r\n    }\r\n\r\n\r\n    /*\r\n     *  Read all \"data-*\" attributes from a node\r\n     * @param {Object} elm  \r\n     */\r\n\r\n    function _attributeData(elm) {\r\n        var store = {}\r\n        langx.each(elm.attributes || [], function(i, attr) {\r\n            if (attr.name.indexOf('data-') == 0) {\r\n                store[camelCase(attr.name.replace('data-', ''))] = deserializeValue(attr.value);\r\n            }\r\n        })\r\n        return store;\r\n    }\r\n\r\n    function _store(elm, confirm) {\r\n        var store = elm[\"_$_store\"];\r\n        if (!store && confirm) {\r\n            store = elm[\"_$_store\"] = _attributeData(elm);\r\n        }\r\n        return store;\r\n    }\r\n\r\n    function _getData(elm, name) {\r\n        if (name === undefined) {\r\n            return _store(elm, true);\r\n        } else {\r\n            var store = _store(elm);\r\n            if (store) {\r\n                if (name in store) {\r\n                    return store[name];\r\n                }\r\n                var camelName = camelCase(name);\r\n                if (camelName in store) {\r\n                    return store[camelName];\r\n                }\r\n            }\r\n            var attrName = 'data-' + name.replace(capitalRE, \"-$1\").toLowerCase()\r\n            return attr(elm, attrName);\r\n        }\r\n\r\n    }\r\n\r\n    function _setData(elm, name, value) {\r\n        var store = _store(elm, true);\r\n        store[camelCase(name)] = value;\r\n    }\r\n\r\n\r\n    /*\r\n     * xxx\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n    function data(elm, name, value) {\r\n\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var dataAttrName in name) {\r\n                    _setData(elm, dataAttrName, name[dataAttrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                return _getData(elm, name);\r\n            }\r\n        } else {\r\n            _setData(elm, name, value);\r\n            return this;\r\n        }\r\n    } \r\n    /*\r\n     * Remove from the element all items that have not yet been run. \r\n     * @param {Object} elm  \r\n     */\r\n\r\n    function cleanData(elm) {\r\n        if (elm[\"_$_store\"]) {\r\n            delete elm[\"_$_store\"];\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Remove a previously-stored piece of data. \r\n     * @param {Object} elm  \r\n     * @param {Array} names\r\n     */\r\n    function removeData(elm, names) {\r\n        if (langx.isString(names)) {\r\n            names = names.split(/\\s+/);\r\n        }\r\n        var store = _store(elm, true);\r\n        names.forEach(function(name) {\r\n            delete store[name];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * xxx \r\n     * @param {Object} elm  \r\n     * @param {Array} names\r\n     */\r\n    function pluck(nodes, property) {\r\n        return map.call(nodes, function(elm) {\r\n            return elm[property];\r\n        });\r\n    }\r\n\r\n    /*\r\n     * Get or set the value of an property for the specified element.\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n    function prop(elm, name, value) {\r\n        name = propMap[name] || name;\r\n        if (value === undefined) {\r\n            return elm[name];\r\n        } else {\r\n            elm[name] = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * remove Attributes  \r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     */\r\n    function removeAttr(elm, name) {\r\n        name.split(' ').forEach(function(attr) {\r\n            setAttribute(elm, attr);\r\n        });\r\n        return this;\r\n    }\r\n\r\n\r\n    /*\r\n     * Remove the value of a property for the first element in the set of matched elements or set one or more properties for every matched element.\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     */\r\n    function removeProp(elm, name) {\r\n        name.split(' ').forEach(function(prop) {\r\n            delete elm[prop];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Get the combined text contents of each element in the set of matched elements, including their descendants, or set the text contents of the matched elements.  \r\n     * @param {Object} elm  \r\n     * @param {String} txt\r\n     */\r\n    function text(elm, txt) {\r\n        if (txt === undefined) {\r\n            return elm.textContent;\r\n        } else {\r\n            elm.textContent = txt == null ? '' : '' + txt;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Get the current value of the first element in the set of matched elements or set the value of every matched element.\r\n     * @param {Object} elm  \r\n     * @param {String} value\r\n     */\r\n    function val(elm, value) {\r\n        if (value === undefined) {\r\n            if (elm.multiple) {\r\n                // select multiple values\r\n                var selectedOptions = filter.call(finder.find(elm, \"option\"), (function(option) {\r\n                    return option.selected;\r\n                }));\r\n                return pluck(selectedOptions, \"value\");\r\n            } else {\r\n                return elm.value;\r\n            }\r\n        } else {\r\n            elm.value = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function datax() {\r\n        return datax;\r\n    }\r\n\r\n    langx.mixin(datax, {\r\n        aria: aria,\r\n\r\n        attr: attr,\r\n\r\n        cleanData: cleanData,\r\n\r\n        data: data,\r\n\r\n        pluck: pluck,\r\n\r\n        prop: prop,\r\n\r\n        removeAttr: removeAttr,\r\n\r\n        removeData: removeData,\r\n\r\n        removeProp: removeProp,\r\n\r\n        text: text,\r\n\r\n        val: val\r\n    });\r\n\r\n    return skylark.datax = datax;\r\n});\ndefine('skylark-utils-dom/eventer',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./finder\",\r\n    \"./noder\",\r\n    \"./datax\"\r\n], function(skylark, langx, browser, finder, noder, datax) {\r\n    var mixin = langx.mixin,\r\n        each = langx.each,\r\n        slice = Array.prototype.slice,\r\n        uid = langx.uid,\r\n        ignoreProperties = /^([A-Z]|returnValue$|layer[XY]$)/,\r\n        eventMethods = {\r\n            preventDefault: \"isDefaultPrevented\",\r\n            stopImmediatePropagation: \"isImmediatePropagationStopped\",\r\n            stopPropagation: \"isPropagationStopped\"\r\n        },\r\n        readyRE = /complete|loaded|interactive/;\r\n\r\n    function compatible(event, source) {\r\n        if (source || !event.isDefaultPrevented) {\r\n            if (!source) {\r\n                source = event;\r\n            }\r\n\r\n            langx.each(eventMethods, function(name, predicate) {\r\n                var sourceMethod = source[name];\r\n                event[name] = function() {\r\n                    this[predicate] = langx.returnTrue;\r\n                    return sourceMethod && sourceMethod.apply(source, arguments);\r\n                }\r\n                event[predicate] = langx.returnFalse;\r\n            });\r\n        }\r\n        return event;\r\n    }\r\n\r\n    function parse(event) {\r\n        var segs = (\"\" + event).split(\".\");\r\n        return {\r\n            type: segs[0],\r\n            ns: segs.slice(1).sort().join(\" \")\r\n        };\r\n    }\r\n\r\n    //create a custom dom event\r\n    var createEvent = (function() {\r\n        var EventCtors = [\r\n                window[\"CustomEvent\"], // 0 default\r\n                window[\"CompositionEvent\"], // 1\r\n                window[\"DragEvent\"], // 2\r\n                window[\"Event\"], // 3\r\n                window[\"FocusEvent\"], // 4\r\n                window[\"KeyboardEvent\"], // 5\r\n                window[\"MessageEvent\"], // 6\r\n                window[\"MouseEvent\"], // 7\r\n                window[\"MouseScrollEvent\"], // 8\r\n                window[\"MouseWheelEvent\"], // 9\r\n                window[\"MutationEvent\"], // 10\r\n                window[\"ProgressEvent\"], // 11\r\n                window[\"TextEvent\"], // 12\r\n                window[\"TouchEvent\"], // 13\r\n                window[\"UIEvent\"], // 14\r\n                window[\"WheelEvent\"], // 15\r\n                window[\"ClipboardEvent\"] // 16\r\n            ],\r\n            NativeEvents = {\r\n                \"compositionstart\": 1, // CompositionEvent\r\n                \"compositionend\": 1, // CompositionEvent\r\n                \"compositionupdate\": 1, // CompositionEvent\r\n\r\n                \"beforecopy\": 16, // ClipboardEvent\r\n                \"beforecut\": 16, // ClipboardEvent\r\n                \"beforepaste\": 16, // ClipboardEvent\r\n                \"copy\": 16, // ClipboardEvent\r\n                \"cut\": 16, // ClipboardEvent\r\n                \"paste\": 16, // ClipboardEvent\r\n\r\n                \"drag\": 2, // DragEvent\r\n                \"dragend\": 2, // DragEvent\r\n                \"dragenter\": 2, // DragEvent\r\n                \"dragexit\": 2, // DragEvent\r\n                \"dragleave\": 2, // DragEvent\r\n                \"dragover\": 2, // DragEvent\r\n                \"dragstart\": 2, // DragEvent\r\n                \"drop\": 2, // DragEvent\r\n\r\n                \"abort\": 3, // Event\r\n                \"change\": 3, // Event\r\n                \"error\": 3, // Event\r\n                \"selectionchange\": 3, // Event\r\n                \"submit\": 3, // Event\r\n                \"reset\": 3, // Event\r\n\r\n                \"focus\": 4, // FocusEvent\r\n                \"blur\": 4, // FocusEvent\r\n                \"focusin\": 4, // FocusEvent\r\n                \"focusout\": 4, // FocusEvent\r\n\r\n                \"keydown\": 5, // KeyboardEvent\r\n                \"keypress\": 5, // KeyboardEvent\r\n                \"keyup\": 5, // KeyboardEvent\r\n\r\n                \"message\": 6, // MessageEvent\r\n\r\n                \"click\": 7, // MouseEvent\r\n                \"contextmenu\": 7, // MouseEvent\r\n                \"dblclick\": 7, // MouseEvent\r\n                \"mousedown\": 7, // MouseEvent\r\n                \"mouseup\": 7, // MouseEvent\r\n                \"mousemove\": 7, // MouseEvent\r\n                \"mouseover\": 7, // MouseEvent\r\n                \"mouseout\": 7, // MouseEvent\r\n                \"mouseenter\": 7, // MouseEvent\r\n                \"mouseleave\": 7, // MouseEvent\r\n\r\n\r\n                \"textInput\": 12, // TextEvent\r\n\r\n                \"touchstart\": 13, // TouchEvent\r\n                \"touchmove\": 13, // TouchEvent\r\n                \"touchend\": 13, // TouchEvent\r\n\r\n                \"load\": 14, // UIEvent\r\n                \"resize\": 14, // UIEvent\r\n                \"select\": 14, // UIEvent\r\n                \"scroll\": 14, // UIEvent\r\n                \"unload\": 14, // UIEvent,\r\n\r\n                \"wheel\": 15 // WheelEvent\r\n            };\r\n\r\n        function getEventCtor(type) {\r\n            var idx = NativeEvents[type];\r\n            if (!idx) {\r\n                idx = 0;\r\n            }\r\n            return EventCtors[idx];\r\n        }\r\n\r\n        return function(type, props) {\r\n            //create a custom dom event\r\n\r\n            if (langx.isString(type)) {\r\n                props = props || {};\r\n            } else {\r\n                props = type || {};\r\n                type = props.type || \"\";\r\n            }\r\n            var parsed = parse(type);\r\n            type = parsed.type;\r\n\r\n            props = langx.mixin({\r\n                bubbles: true,\r\n                cancelable: true\r\n            }, props);\r\n\r\n            if (parsed.ns) {\r\n                props.namespace = parsed.ns;\r\n            }\r\n\r\n            var ctor = getEventCtor(type),\r\n                e = new ctor(type, props);\r\n\r\n            langx.safeMixin(e, props);\r\n\r\n            return compatible(e);\r\n        };\r\n    })();\r\n\r\n    function createProxy(src, props) {\r\n        var key,\r\n            proxy = {\r\n                originalEvent: src\r\n            };\r\n        for (key in src) {\r\n            if (key !== \"keyIdentifier\" && !ignoreProperties.test(key) && src[key] !== undefined) {\r\n                proxy[key] = src[key];\r\n            }\r\n        }\r\n        if (props) {\r\n            langx.mixin(proxy, props);\r\n        }\r\n        return compatible(proxy, src);\r\n    }\r\n\r\n    var\r\n        specialEvents = {},\r\n        focusinSupported = \"onfocusin\" in window,\r\n        focus = { focus: \"focusin\", blur: \"focusout\" },\r\n        hover = { mouseenter: \"mouseover\", mouseleave: \"mouseout\" },\r\n        realEvent = function(type) {\r\n            return hover[type] || (focusinSupported && focus[type]) || type;\r\n        },\r\n        handlers = {},\r\n        EventBindings = langx.klass({\r\n            init: function(target, event) {\r\n                this._target = target;\r\n                this._event = event;\r\n                this._bindings = [];\r\n            },\r\n\r\n            add: function(fn, options) {\r\n                var bindings = this._bindings,\r\n                    binding = {\r\n                        fn: fn,\r\n                        options: langx.mixin({}, options)\r\n                    };\r\n\r\n                bindings.push(binding);\r\n\r\n                var self = this;\r\n                if (!self._listener) {\r\n                    self._listener = function(domEvt) {\r\n                        var elm = this,\r\n                            e = createProxy(domEvt),\r\n                            args = domEvt._args,\r\n                            bindings = self._bindings,\r\n                            ns = e.namespace;\r\n\r\n                        if (langx.isDefined(args)) {\r\n                            args = [e].concat(args);\r\n                        } else {\r\n                            args = [e];\r\n                        }\r\n\r\n                        langx.each(bindings, function(idx, binding) {\r\n                            var match = elm;\r\n                            if (e.isImmediatePropagationStopped && e.isImmediatePropagationStopped()) {\r\n                                return false;\r\n                            }\r\n                            var fn = binding.fn,\r\n                                options = binding.options || {},\r\n                                selector = options.selector,\r\n                                one = options.one,\r\n                                data = options.data;\r\n\r\n                            if (ns && ns != options.ns && options.ns.indexOf(ns) === -1) {\r\n                                return;\r\n                            }\r\n                            if (selector) {\r\n                                match = finder.closest(e.target, selector);\r\n                                if (match && match !== elm) {\r\n                                    langx.mixin(e, {\r\n                                        currentTarget: match,\r\n                                        liveFired: elm\r\n                                    });\r\n                                } else {\r\n                                    return;\r\n                                }\r\n                            }\r\n\r\n                            var originalEvent = self._event;\r\n                            if (originalEvent in hover) {\r\n                                var related = e.relatedTarget;\r\n                                if (related && (related === match || noder.contains(match, related))) {\r\n                                    return;\r\n                                }\r\n                            }\r\n\r\n                            if (langx.isDefined(data)) {\r\n                                e.data = data;\r\n                            }\r\n\r\n                            if (one) {\r\n                                self.remove(fn, options);\r\n                            }\r\n\r\n                            var result = fn.apply(match, args);\r\n\r\n                            if (result === false) {\r\n                                e.preventDefault();\r\n                                e.stopPropagation();\r\n                            }\r\n                        });;\r\n                    };\r\n\r\n                    var event = self._event;\r\n                    /*\r\n                                        if (event in hover) {\r\n                                            var l = self._listener;\r\n                                            self._listener = function(e) {\r\n                                                var related = e.relatedTarget;\r\n                                                if (!related || (related !== this && !noder.contains(this, related))) {\r\n                                                    return l.apply(this, arguments);\r\n                                                }\r\n                                            }\r\n                                        }\r\n                    */\r\n\r\n                    if (self._target.addEventListener) {\r\n                        self._target.addEventListener(realEvent(event), self._listener, false);\r\n                    } else {\r\n                        console.warn(\"invalid eventer object\", self._target);\r\n                    }\r\n                }\r\n\r\n            },\r\n            remove: function(fn, options) {\r\n                options = langx.mixin({}, options);\r\n\r\n                function matcherFor(ns) {\r\n                    return new RegExp(\"(?:^| )\" + ns.replace(\" \", \" .* ?\") + \"(?: |$)\");\r\n                }\r\n                var matcher;\r\n                if (options.ns) {\r\n                    matcher = matcherFor(options.ns);\r\n                }\r\n\r\n                this._bindings = this._bindings.filter(function(binding) {\r\n                    var removing = (!fn || fn === binding.fn) &&\r\n                        (!matcher || matcher.test(binding.options.ns)) &&\r\n                        (!options.selector || options.selector == binding.options.selector);\r\n\r\n                    return !removing;\r\n                });\r\n                if (this._bindings.length == 0) {\r\n                    if (this._target.removeEventListener) {\r\n                        this._target.removeEventListener(realEvent(this._event), this._listener, false);\r\n                    }\r\n                    this._listener = null;\r\n                }\r\n            }\r\n        }),\r\n        EventsHandler = langx.klass({\r\n            init: function(elm) {\r\n                this._target = elm;\r\n                this._handler = {};\r\n            },\r\n\r\n            // add a event listener\r\n            // selector Optional\r\n            register: function(event, callback, options) {\r\n                // Seperate the event from the namespace\r\n                var parsed = parse(event),\r\n                    event = parsed.type,\r\n                    specialEvent = specialEvents[event],\r\n                    bindingEvent = specialEvent && (specialEvent.bindType || specialEvent.bindEventName);\r\n\r\n                var events = this._handler;\r\n\r\n                // Check if there is already a handler for this event\r\n                if (events[event] === undefined) {\r\n                    events[event] = new EventBindings(this._target, bindingEvent || event);\r\n                }\r\n\r\n                // Register the new callback function\r\n                events[event].add(callback, langx.mixin({\r\n                    ns: parsed.ns\r\n                }, options)); // options:{selector:xxx}\r\n            },\r\n\r\n            // remove a event listener\r\n            unregister: function(event, fn, options) {\r\n                // Check for parameter validtiy\r\n                var events = this._handler,\r\n                    parsed = parse(event);\r\n                event = parsed.type;\r\n\r\n                if (event) {\r\n                    var listener = events[event];\r\n\r\n                    if (listener) {\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                } else {\r\n                    //remove all events\r\n                    for (event in events) {\r\n                        var listener = events[event];\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                }\r\n            }\r\n        }),\r\n\r\n        findHandler = function(elm) {\r\n            var id = uid(elm),\r\n                handler = handlers[id];\r\n            if (!handler) {\r\n                handler = handlers[id] = new EventsHandler(elm);\r\n            }\r\n            return handler;\r\n        };\r\n\r\n    /*   \r\n     * Remove an event handler for one or more events from the specified element.\r\n     * @param {HTMLElement} elm  \r\n     * @param {String} events\r\n     * @param {String　Optional } selector\r\n     * @param {Function} callback\r\n     */\r\n    function off(elm, events, selector, callback) {\r\n        var $this = this\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                off(elm, type, selector, fn);\r\n            })\r\n            return $this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback) && callback !== false) {\r\n            callback = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        if (events) events.forEach(function(event) {\r\n\r\n            handler.unregister(event, callback, {\r\n                selector: selector,\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Attach an event handler function for one or more events to the selected elements.\r\n     * @param {HTMLElement} elm  \r\n     * @param {String} events\r\n     * @param {String　Optional} selector\r\n     * @param {Anything Optional} data\r\n     * @param {Function} callback\r\n     * @param {Boolean　Optional} one\r\n     */\r\n    function on(elm, events, selector, data, callback, one) {\r\n\r\n        var autoRemove, delegator;\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                on(elm, type, selector, data, fn, one);\r\n            });\r\n            return this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n            callback = data;\r\n            data = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (langx.isFunction(data)) {\r\n            callback = data;\r\n            data = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        events.forEach(function(event) {\r\n            if (event == \"ready\") {\r\n                return ready(callback);\r\n            }\r\n            handler.register(event, callback, {\r\n                data: data,\r\n                selector: selector,\r\n                one: !!one\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Attach a handler to an event for the elements. The handler is executed at most once per \r\n     * @param {HTMLElement} elm  \r\n     * @param {String} event\r\n     * @param {String　Optional} selector\r\n     * @param {Anything Optional} data\r\n     * @param {Function} callback\r\n     */\r\n    function one(elm, events, selector, data, callback) {\r\n        on(elm, events, selector, data, callback, 1);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Prevents propagation and clobbers the default action of the passed event. The same as calling event.preventDefault() and event.stopPropagation(). \r\n     * @param {String} event\r\n     */\r\n    function stop(event) {\r\n        if (window.document.all) {\r\n            event.keyCode = 0;\r\n        }\r\n        if (event.preventDefault) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        return this;\r\n    }\r\n    /*   \r\n     * Execute all handlers and behaviors attached to the matched elements for the given event  \r\n     * @param {String} evented\r\n     * @param {String} type\r\n     * @param {Array or PlainObject } args\r\n     */\r\n    function trigger(evented, type, args) {\r\n        var e;\r\n        if (type instanceof Event) {\r\n            e = type;\r\n        } else {\r\n            e = createEvent(type, args);\r\n        }\r\n        e._args = args;\r\n\r\n        var fn = (evented.dispatchEvent || evented.trigger);\r\n        if (fn) {\r\n            fn.call(evented, e);\r\n        } else {\r\n            console.warn(\"The evented parameter is not a eventable object\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n    /*   \r\n     * Specify a function to execute when the DOM is fully loaded.  \r\n     * @param {Function} callback\r\n     */\r\n    function ready(callback) {\r\n        // need to check if document.body exists for IE as that browser reports\r\n        // document ready when it hasn't yet created the body elm\r\n        if (readyRE.test(document.readyState) && document.body) {\r\n            langx.defer(callback);\r\n        } else {\r\n            document.addEventListener('DOMContentLoaded', callback, false);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    var keyCodeLookup = {\r\n        \"backspace\": 8,\r\n        \"comma\": 188,\r\n        \"delete\": 46,\r\n        \"down\": 40,\r\n        \"end\": 35,\r\n        \"enter\": 13,\r\n        \"escape\": 27,\r\n        \"home\": 36,\r\n        \"left\": 37,\r\n        \"page_down\": 34,\r\n        \"page_up\": 33,\r\n        \"period\": 190,\r\n        \"right\": 39,\r\n        \"space\": 32,\r\n        \"tab\": 9,\r\n        \"up\": 38\r\n    };\r\n    //example:\r\n    //shortcuts(elm).add(\"CTRL+ALT+SHIFT+X\",function(){console.log(\"test!\")});\r\n    function shortcuts(elm) {\r\n\r\n        var registry = datax.data(elm, \"shortcuts\");\r\n        if (!registry) {\r\n            registry = {};\r\n            datax.data(elm, \"shortcuts\", registry);\r\n            var run = function(shortcut, event) {\r\n                var n = event.metaKey || event.ctrlKey;\r\n                if (shortcut.ctrl == n && shortcut.alt == event.altKey && shortcut.shift == event.shiftKey) {\r\n                    if (event.keyCode == shortcut.keyCode || event.charCode && event.charCode == shortcut.charCode) {\r\n                        event.preventDefault();\r\n                        if (\"keydown\" == event.type) {\r\n                            shortcut.fn(event);\r\n                        }\r\n                        return true;\r\n                    }\r\n                }\r\n            };\r\n            on(elm, \"keyup keypress keydown\", function(event) {\r\n                if (!(/INPUT|TEXTAREA/.test(event.target.nodeName))) {\r\n                    for (var key in registry) {\r\n                        run(registry[key], event);\r\n                    }\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        return {\r\n            add: function(pattern, fn) {\r\n                var shortcutKeys;\r\n                if (pattern.indexOf(\",\") > -1) {\r\n                    shortcutKeys = pattern.toLowerCase().split(\",\");\r\n                } else {\r\n                    shortcutKeys = pattern.toLowerCase().split(\" \");\r\n                }\r\n                shortcutKeys.forEach(function(shortcutKey) {\r\n                    var setting = {\r\n                        fn: fn,\r\n                        alt: false,\r\n                        ctrl: false,\r\n                        shift: false\r\n                    };\r\n                    shortcutKey.split(\"+\").forEach(function(key) {\r\n                        switch (key) {\r\n                            case \"alt\":\r\n                            case \"ctrl\":\r\n                            case \"shift\":\r\n                                setting[key] = true;\r\n                                break;\r\n                            default:\r\n                                setting.charCode = key.charCodeAt(0);\r\n                                setting.keyCode = keyCodeLookup[key] || key.toUpperCase().charCodeAt(0);\r\n                        }\r\n                    });\r\n                    var regKey = (setting.ctrl ? \"ctrl\" : \"\") + \",\" + (setting.alt ? \"alt\" : \"\") + \",\" + (setting.shift ? \"shift\" : \"\") + \",\" + setting.keyCode;\r\n                    registry[regKey] = setting;\r\n                })\r\n            }\r\n\r\n        };\r\n\r\n    }\r\n\r\n    function eventer() {\r\n        return eventer;\r\n    }\r\n\r\n    langx.mixin(eventer, {\r\n        create: createEvent,\r\n\r\n        keys: keyCodeLookup,\r\n\r\n        off: off,\r\n\r\n        on: on,\r\n\r\n        one: one,\r\n\r\n        proxy: createProxy,\r\n\r\n        ready: ready,\r\n\r\n        shortcuts: shortcuts,\r\n\r\n        special: specialEvents,\r\n\r\n        stop: stop,\r\n\r\n        trigger: trigger\r\n\r\n    });\r\n\r\n    return skylark.eventer = eventer;\r\n});\ndefine('skylark-utils-dom/geom',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./styler\"\r\n], function(skylark, langx, noder, styler) {\r\n    var rootNodeRE = /^(?:body|html)$/i,\r\n        px = langx.toPixel,\r\n        offsetParent = noder.offsetParent,\r\n        cachedScrollbarWidth;\r\n\r\n    function scrollbarWidth() {\r\n        if (cachedScrollbarWidth !== undefined) {\r\n            return cachedScrollbarWidth;\r\n        }\r\n        var w1, w2,\r\n            div = noder.createFragment(\"<div style=\" +\r\n                \"'display:block;position:absolute;width:200px;height:200px;overflow:hidden;'>\" +\r\n                \"<div style='height:300px;width:auto;'></div></div>\")[0],\r\n            innerDiv = div.childNodes[0];\r\n\r\n        noder.append(document.body, div);\r\n\r\n        w1 = innerDiv.offsetWidth;\r\n\r\n        styler.css(div, \"overflow\", \"scroll\");\r\n\r\n        w2 = innerDiv.offsetWidth;\r\n\r\n        if (w1 === w2) {\r\n            w2 = div[0].clientWidth;\r\n        }\r\n\r\n        noder.remove(div);\r\n\r\n        return (cachedScrollbarWidth = w1 - w2);\r\n    }\r\n    /*\r\n     * Get the widths of each border of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function borderExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.borderLeftWidth, elm),\r\n            top: px(s.borderTopWidth, elm),\r\n            right: px(s.borderRightWidth, elm),\r\n            bottom: px(s.borderBottomWidth, elm)\r\n        }\r\n    }\r\n\r\n    //viewport coordinate\r\n    /*\r\n     * Get or set the viewport position of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function boundingPosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            return rootNodeRE.test(elm.nodeName) ? { top: 0, left: 0 } : elm.getBoundingClientRect();\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the viewport rect of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function boundingRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            return elm.getBoundingClientRect()\r\n        } else {\r\n            boundingPosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the height of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function clientHeight(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).height;\r\n        } else {\r\n            return clientSize(elm, {\r\n                height: value\r\n            });\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the size of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} dimension\r\n     */\r\n    function clientSize(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            return {\r\n                width: elm.clientWidth,\r\n                height: elm.clientHeight\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width - pex.left - pex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height - pex.top - pex.bottom;\r\n                }\r\n            } else {\r\n                var bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width + bex.left + bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height + bex.top + bex.bottom;\r\n                }\r\n\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n        return {\r\n            width: elm.clientWidth,\r\n            height: elm.clientHeight\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get or set the width of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} dimension\r\n     */\r\n    function clientWidth(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).width;\r\n        } else {\r\n            clientSize(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the rect of the specified element content box.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function contentRect(elm) {\r\n        var cs = clientSize(elm),\r\n            pex = paddingExtents(elm);\r\n\r\n\r\n        //// On Opera, offsetLeft includes the parent's border\r\n        //if(has(\"opera\")){\r\n        //    pe.l += be.l;\r\n        //    pe.t += be.t;\r\n        //}\r\n        return {\r\n            left: pex.left,\r\n            top: pex.top,\r\n            width: cs.width - pex.left - pex.right,\r\n            height: cs.height - pex.top - pex.bottom\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the document size.\r\n     * @param {HTMLDocument} doc\r\n     */\r\n    function getDocumentSize(doc) {\r\n        var documentElement = doc.documentElement,\r\n            body = doc.body,\r\n            max = Math.max,\r\n            scrollWidth = max(documentElement.scrollWidth, body.scrollWidth),\r\n            clientWidth = max(documentElement.clientWidth, body.clientWidth),\r\n            offsetWidth = max(documentElement.offsetWidth, body.offsetWidth),\r\n            scrollHeight = max(documentElement.scrollHeight, body.scrollHeight),\r\n            clientHeight = max(documentElement.clientHeight, body.clientHeight),\r\n            offsetHeight = max(documentElement.offsetHeight, body.offsetHeight);\r\n\r\n        return {\r\n            width: scrollWidth < offsetWidth ? clientWidth : scrollWidth,\r\n            height: scrollHeight < offsetHeight ? clientHeight : scrollHeight\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the document size.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function height(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).height;\r\n        } else {\r\n            size(elm, {\r\n                height: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the widths of each margin of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function marginExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.marginLeft),\r\n            top: px(s.marginTop),\r\n            right: px(s.marginRight),\r\n            bottom: px(s.marginBottom),\r\n        }\r\n    }\r\n\r\n\r\n    function marginRect(elm) {\r\n        var obj = this.relativeRect(elm),\r\n            me = this.marginExtents(elm);\r\n\r\n        return {\r\n            left: obj.left,\r\n            top: obj.top,\r\n            width: obj.width + me.left + me.right,\r\n            height: obj.height + me.top + me.bottom\r\n        };\r\n    }\r\n\r\n\r\n    function marginSize(elm) {\r\n        var obj = this.size(elm),\r\n            me = this.marginExtents(elm);\r\n\r\n        return {\r\n            width: obj.width + me.left + me.right,\r\n            height: obj.height + me.top + me.bottom\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the widths of each padding of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function paddingExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.paddingLeft),\r\n            top: px(s.paddingTop),\r\n            right: px(s.paddingRight),\r\n            bottom: px(s.paddingBottom),\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the document position of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    //coordinate to the document\r\n    function pagePosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset\r\n            }\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = pagePosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the document rect of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function pageRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset,\r\n                width: Math.round(obj.width),\r\n                height: Math.round(obj.height)\r\n            }\r\n        } else {\r\n            pagePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the position of the specified element border box , relative to parent element.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    // coordinate relative to it's parent\r\n    function relativePosition(elm, coords) {\r\n        if (coords == undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingPosition(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top, // - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left, // - mex.left\r\n            }\r\n        } else {\r\n            var props = {\r\n                top: coords.top,\r\n                left: coords.left\r\n            }\r\n\r\n            if (styler.css(elm, \"position\") == \"static\") {\r\n                props['position'] = \"relative\";\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the rect of the specified element border box , relatived to parent element.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function relativeRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingRect(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top, // - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left, // - mex.left,\r\n                width: offset.width,\r\n                height: offset.height\r\n            }\r\n        } else {\r\n            relativePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Scroll the specified element into view.\r\n     * @param {HTMLElement} elm\r\n     * @param {} align\r\n     */\r\n    function scrollIntoView(elm, align) {\r\n        function getOffset(elm, rootElm) {\r\n            var x, y, parent = elm;\r\n\r\n            x = y = 0;\r\n            while (parent && parent != rootElm && parent.nodeType) {\r\n                x += parent.offsetLeft || 0;\r\n                y += parent.offsetTop || 0;\r\n                parent = parent.offsetParent;\r\n            }\r\n\r\n            return { x: x, y: y };\r\n        }\r\n\r\n        var parentElm = elm.parentNode;\r\n        var x, y, width, height, parentWidth, parentHeight;\r\n        var pos = getOffset(elm, parentElm);\r\n\r\n        x = pos.x;\r\n        y = pos.y;\r\n        width = elm.offsetWidth;\r\n        height = elm.offsetHeight;\r\n        parentWidth = parentElm.clientWidth;\r\n        parentHeight = parentElm.clientHeight;\r\n\r\n        if (align == \"end\") {\r\n            x -= parentWidth - width;\r\n            y -= parentHeight - height;\r\n        } else if (align == \"center\") {\r\n            x -= (parentWidth / 2) - (width / 2);\r\n            y -= (parentHeight / 2) - (height / 2);\r\n        }\r\n\r\n        parentElm.scrollLeft = x;\r\n        parentElm.scrollTop = y;\r\n\r\n        return this;\r\n    }\r\n    /*\r\n     * Get or set the current horizontal position of the scroll bar for the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function scrollLeft(elm, value) {\r\n        var hasScrollLeft = \"scrollLeft\" in elm;\r\n        if (value === undefined) {\r\n            return hasScrollLeft ? elm.scrollLeft : elm.pageXOffset\r\n        } else {\r\n            if (hasScrollLeft) {\r\n                elm.scrollLeft = value;\r\n            } else {\r\n                elm.scrollTo(value, elm.scrollY);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or the current vertical position of the scroll bar for the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function scrollTop(elm, value) {\r\n        var hasScrollTop = \"scrollTop\" in elm;\r\n\r\n        if (value === undefined) {\r\n            return hasScrollTop ? elm.scrollTop : elm.pageYOffset\r\n        } else {\r\n            if (hasScrollTop) {\r\n                elm.scrollTop = value;\r\n            } else {\r\n                elm.scrollTo(elm.scrollX, value);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or set the size of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject}dimension\r\n     */\r\n    function size(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            if (langx.isWindow(elm)) {\r\n                return {\r\n                    width: elm.innerWidth,\r\n                    height: elm.innerHeight\r\n                }\r\n\r\n            } else if (langx.isDocument(elm)) {\r\n                return getDocumentSize(document);\r\n            } else {\r\n                return {\r\n                    width: elm.offsetWidth,\r\n                    height: elm.offsetHeight\r\n                }\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm),\r\n                    bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined && props.width !== \"\" && props.width !== null) {\r\n                    props.width = props.width - pex.left - pex.right - bex.left - bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined && props.height !== \"\" && props.height !== null) {\r\n                    props.height = props.height - pex.top - pex.bottom - bex.top - bex.bottom;\r\n                }\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or set the size of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function width(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).width;\r\n        } else {\r\n            size(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n    \r\n// in development start\r\n    function _place(/*DomNode*/ node, choices, layoutNode, aroundNodeCoords){\r\n        // summary:\r\n        //      Given a list of spots to put node, put it at the first spot where it fits,\r\n        //      of if it doesn't fit anywhere then the place with the least overflow\r\n        // choices: Array\r\n        //      Array of elements like: {corner: 'TL', pos: {x: 10, y: 20} }\r\n        //      Above example says to put the top-left corner of the node at (10,20)\r\n        // layoutNode: Function(node, aroundNodeCorner, nodeCorner, size)\r\n        //      for things like tooltip, they are displayed differently (and have different dimensions)\r\n        //      based on their orientation relative to the parent.   This adjusts the popup based on orientation.\r\n        //      It also passes in the available size for the popup, which is useful for tooltips to\r\n        //      tell them that their width is limited to a certain amount.   layoutNode() may return a value expressing\r\n        //      how much the popup had to be modified to fit into the available space.   This is used to determine\r\n        //      what the best placement is.\r\n        // aroundNodeCoords: Object\r\n        //      Size of aroundNode, ex: {w: 200, h: 50}\r\n\r\n        // get {x: 10, y: 10, w: 100, h:100} type obj representing position of\r\n        // viewport over document\r\n\r\n        var doc = noder.ownerDoc(node),\r\n            win = noder.ownerWindow(doc),\r\n            view = geom.size(win);\r\n\r\n        view.left = 0;\r\n        view.top = 0;\r\n\r\n        if(!node.parentNode || String(node.parentNode.tagName).toLowerCase() != \"body\"){\r\n            doc.body.appendChild(node);\r\n        }\r\n\r\n        var best = null;\r\n\r\n        some.apply(choices, function(choice){\r\n            var corner = choice.corner;\r\n            var pos = choice.pos;\r\n            var overflow = 0;\r\n\r\n            // calculate amount of space available given specified position of node\r\n            var spaceAvailable = {\r\n                w: {\r\n                    'L': view.left + view.width - pos.x,\r\n                    'R': pos.x - view.left,\r\n                    'M': view.width\r\n                }[corner.charAt(1)],\r\n\r\n                h: {\r\n                    'T': view.top + view.height - pos.y,\r\n                    'B': pos.y - view.top,\r\n                    'M': view.height\r\n                }[corner.charAt(0)]\r\n            };\r\n\r\n            if(layoutNode){\r\n                var res = layoutNode(node, choice.aroundCorner, corner, spaceAvailable, aroundNodeCoords);\r\n                overflow = typeof res == \"undefined\" ? 0 : res;\r\n            }\r\n\r\n            var bb = geom.size(node);\r\n\r\n            // coordinates and size of node with specified corner placed at pos,\r\n            // and clipped by viewport\r\n            var\r\n                startXpos = {\r\n                    'L': pos.x,\r\n                    'R': pos.x - bb.width,\r\n                    'M': Math.max(view.left, Math.min(view.left + view.width, pos.x + (bb.width >> 1)) - bb.width) // M orientation is more flexible\r\n                }[corner.charAt(1)],\r\n\r\n                startYpos = {\r\n                    'T': pos.y,\r\n                    'B': pos.y - bb.height,\r\n                    'M': Math.max(view.top, Math.min(view.top + view.height, pos.y + (bb.height >> 1)) - bb.height)\r\n                }[corner.charAt(0)],\r\n\r\n                startX = Math.max(view.left, startXpos),\r\n                startY = Math.max(view.top, startYpos),\r\n                endX = Math.min(view.left + view.width, startXpos + bb.width),\r\n                endY = Math.min(view.top + view.height, startYpos + bb.height),\r\n                width = endX - startX,\r\n                height = endY - startY;\r\n\r\n            overflow += (bb.width - width) + (bb.height - height);\r\n\r\n            if(best == null || overflow < best.overflow){\r\n                best = {\r\n                    corner: corner,\r\n                    aroundCorner: choice.aroundCorner,\r\n                    left: startX,\r\n                    top: startY,\r\n                    width: width,\r\n                    height: height,\r\n                    overflow: overflow,\r\n                    spaceAvailable: spaceAvailable\r\n                };\r\n            }\r\n\r\n            return !overflow;\r\n        });\r\n\r\n        // In case the best position is not the last one we checked, need to call\r\n        // layoutNode() again.\r\n        if(best.overflow && layoutNode){\r\n            layoutNode(node, best.aroundCorner, best.corner, best.spaceAvailable, aroundNodeCoords);\r\n        }\r\n\r\n\r\n        geom.boundingPosition(node,best);\r\n\r\n        return best;\r\n    }\r\n\r\n    function at(node, pos, corners, padding, layoutNode){\r\n        var choices = map.apply(corners, function(corner){\r\n            var c = {\r\n                corner: corner,\r\n                aroundCorner: reverse[corner],  // so TooltipDialog.orient() gets aroundCorner argument set\r\n                pos: {x: pos.x,y: pos.y}\r\n            };\r\n            if(padding){\r\n                c.pos.x += corner.charAt(1) == 'L' ? padding.x : -padding.x;\r\n                c.pos.y += corner.charAt(0) == 'T' ? padding.y : -padding.y;\r\n            }\r\n            return c;\r\n        });\r\n\r\n        return _place(node, choices, layoutNode);\r\n    }\r\n\r\n    function around(\r\n        /*DomNode*/     node,\r\n        /*DomNode|__Rectangle*/ anchor,\r\n        /*String[]*/    positions,\r\n        /*Boolean*/     leftToRight,\r\n        /*Function?*/   layoutNode){\r\n\r\n        // summary:\r\n        //      Position node adjacent or kitty-corner to anchor\r\n        //      such that it's fully visible in viewport.\r\n        // description:\r\n        //      Place node such that corner of node touches a corner of\r\n        //      aroundNode, and that node is fully visible.\r\n        // anchor:\r\n        //      Either a DOMNode or a rectangle (object with x, y, width, height).\r\n        // positions:\r\n        //      Ordered list of positions to try matching up.\r\n        //\r\n        //      - before: places drop down to the left of the anchor node/widget, or to the right in the case\r\n        //          of RTL scripts like Hebrew and Arabic; aligns either the top of the drop down\r\n        //          with the top of the anchor, or the bottom of the drop down with bottom of the anchor.\r\n        //      - after: places drop down to the right of the anchor node/widget, or to the left in the case\r\n        //          of RTL scripts like Hebrew and Arabic; aligns either the top of the drop down\r\n        //          with the top of the anchor, or the bottom of the drop down with bottom of the anchor.\r\n        //      - before-centered: centers drop down to the left of the anchor node/widget, or to the right\r\n        //          in the case of RTL scripts like Hebrew and Arabic\r\n        //      - after-centered: centers drop down to the right of the anchor node/widget, or to the left\r\n        //          in the case of RTL scripts like Hebrew and Arabic\r\n        //      - above-centered: drop down is centered above anchor node\r\n        //      - above: drop down goes above anchor node, left sides aligned\r\n        //      - above-alt: drop down goes above anchor node, right sides aligned\r\n        //      - below-centered: drop down is centered above anchor node\r\n        //      - below: drop down goes below anchor node\r\n        //      - below-alt: drop down goes below anchor node, right sides aligned\r\n        // layoutNode: Function(node, aroundNodeCorner, nodeCorner)\r\n        //      For things like tooltip, they are displayed differently (and have different dimensions)\r\n        //      based on their orientation relative to the parent.   This adjusts the popup based on orientation.\r\n        // leftToRight:\r\n        //      True if widget is LTR, false if widget is RTL.   Affects the behavior of \"above\" and \"below\"\r\n        //      positions slightly.\r\n        // example:\r\n        //  |   placeAroundNode(node, aroundNode, {'BL':'TL', 'TR':'BR'});\r\n        //      This will try to position node such that node's top-left corner is at the same position\r\n        //      as the bottom left corner of the aroundNode (ie, put node below\r\n        //      aroundNode, with left edges aligned).   If that fails it will try to put\r\n        //      the bottom-right corner of node where the top right corner of aroundNode is\r\n        //      (ie, put node above aroundNode, with right edges aligned)\r\n        //\r\n\r\n        // If around is a DOMNode (or DOMNode id), convert to coordinates.\r\n        var aroundNodePos;\r\n        if(typeof anchor == \"string\" || \"offsetWidth\" in anchor || \"ownerSVGElement\" in anchor){\r\n            aroundNodePos = domGeometry.position(anchor, true);\r\n\r\n            // For above and below dropdowns, subtract width of border so that popup and aroundNode borders\r\n            // overlap, preventing a double-border effect.  Unfortunately, difficult to measure the border\r\n            // width of either anchor or popup because in both cases the border may be on an inner node.\r\n            if(/^(above|below)/.test(positions[0])){\r\n                var anchorBorder = domGeometry.getBorderExtents(anchor),\r\n                    anchorChildBorder = anchor.firstChild ? domGeometry.getBorderExtents(anchor.firstChild) : {t:0,l:0,b:0,r:0},\r\n                    nodeBorder =  domGeometry.getBorderExtents(node),\r\n                    nodeChildBorder = node.firstChild ? domGeometry.getBorderExtents(node.firstChild) : {t:0,l:0,b:0,r:0};\r\n                aroundNodePos.y += Math.min(anchorBorder.t + anchorChildBorder.t, nodeBorder.t + nodeChildBorder.t);\r\n                aroundNodePos.h -=  Math.min(anchorBorder.t + anchorChildBorder.t, nodeBorder.t+ nodeChildBorder.t) +\r\n                    Math.min(anchorBorder.b + anchorChildBorder.b, nodeBorder.b + nodeChildBorder.b);\r\n            }\r\n        }else{\r\n            aroundNodePos = anchor;\r\n        }\r\n\r\n        // Compute position and size of visible part of anchor (it may be partially hidden by ancestor nodes w/scrollbars)\r\n        if(anchor.parentNode){\r\n            // ignore nodes between position:relative and position:absolute\r\n            var sawPosAbsolute = domStyle.getComputedStyle(anchor).position == \"absolute\";\r\n            var parent = anchor.parentNode;\r\n            while(parent && parent.nodeType == 1 && parent.nodeName != \"BODY\"){  //ignoring the body will help performance\r\n                var parentPos = domGeometry.position(parent, true),\r\n                    pcs = domStyle.getComputedStyle(parent);\r\n                if(/relative|absolute/.test(pcs.position)){\r\n                    sawPosAbsolute = false;\r\n                }\r\n                if(!sawPosAbsolute && /hidden|auto|scroll/.test(pcs.overflow)){\r\n                    var bottomYCoord = Math.min(aroundNodePos.y + aroundNodePos.h, parentPos.y + parentPos.h);\r\n                    var rightXCoord = Math.min(aroundNodePos.x + aroundNodePos.w, parentPos.x + parentPos.w);\r\n                    aroundNodePos.x = Math.max(aroundNodePos.x, parentPos.x);\r\n                    aroundNodePos.y = Math.max(aroundNodePos.y, parentPos.y);\r\n                    aroundNodePos.h = bottomYCoord - aroundNodePos.y;\r\n                    aroundNodePos.w = rightXCoord - aroundNodePos.x;\r\n                }\r\n                if(pcs.position == \"absolute\"){\r\n                    sawPosAbsolute = true;\r\n                }\r\n                parent = parent.parentNode;\r\n            }\r\n        }           \r\n\r\n        var x = aroundNodePos.x,\r\n            y = aroundNodePos.y,\r\n            width = \"w\" in aroundNodePos ? aroundNodePos.w : (aroundNodePos.w = aroundNodePos.width),\r\n            height = \"h\" in aroundNodePos ? aroundNodePos.h : (kernel.deprecated(\"place.around: dijit/place.__Rectangle: { x:\"+x+\", y:\"+y+\", height:\"+aroundNodePos.height+\", width:\"+width+\" } has been deprecated.  Please use { x:\"+x+\", y:\"+y+\", h:\"+aroundNodePos.height+\", w:\"+width+\" }\", \"\", \"2.0\"), aroundNodePos.h = aroundNodePos.height);\r\n\r\n        // Convert positions arguments into choices argument for _place()\r\n        var choices = [];\r\n        function push(aroundCorner, corner){\r\n            choices.push({\r\n                aroundCorner: aroundCorner,\r\n                corner: corner,\r\n                pos: {\r\n                    x: {\r\n                        'L': x,\r\n                        'R': x + width,\r\n                        'M': x + (width >> 1)\r\n                    }[aroundCorner.charAt(1)],\r\n                    y: {\r\n                        'T': y,\r\n                        'B': y + height,\r\n                        'M': y + (height >> 1)\r\n                    }[aroundCorner.charAt(0)]\r\n                }\r\n            })\r\n        }\r\n        array.forEach(positions, function(pos){\r\n            var ltr =  leftToRight;\r\n            switch(pos){\r\n                case \"above-centered\":\r\n                    push(\"TM\", \"BM\");\r\n                    break;\r\n                case \"below-centered\":\r\n                    push(\"BM\", \"TM\");\r\n                    break;\r\n                case \"after-centered\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"before-centered\":\r\n                    push(ltr ? \"ML\" : \"MR\", ltr ? \"MR\" : \"ML\");\r\n                    break;\r\n                case \"after\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"before\":\r\n                    push(ltr ? \"TL\" : \"TR\", ltr ? \"TR\" : \"TL\");\r\n                    push(ltr ? \"BL\" : \"BR\", ltr ? \"BR\" : \"BL\");\r\n                    break;\r\n                case \"below-alt\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"below\":\r\n                    // first try to align left borders, next try to align right borders (or reverse for RTL mode)\r\n                    push(ltr ? \"BL\" : \"BR\", ltr ? \"TL\" : \"TR\");\r\n                    push(ltr ? \"BR\" : \"BL\", ltr ? \"TR\" : \"TL\");\r\n                    break;\r\n                case \"above-alt\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"above\":\r\n                    // first try to align left borders, next try to align right borders (or reverse for RTL mode)\r\n                    push(ltr ? \"TL\" : \"TR\", ltr ? \"BL\" : \"BR\");\r\n                    push(ltr ? \"TR\" : \"TL\", ltr ? \"BR\" : \"BL\");\r\n                    break;\r\n                default:\r\n                    // To assist dijit/_base/place, accept arguments of type {aroundCorner: \"BL\", corner: \"TL\"}.\r\n                    // Not meant to be used directly.  Remove for 2.0.\r\n                    push(pos.aroundCorner, pos.corner);\r\n            }\r\n        });\r\n\r\n        var position = _place(node, choices, layoutNode, {w: width, h: height});\r\n        position.aroundNodePos = aroundNodePos;\r\n\r\n        return position;\r\n    }\r\n// in development end\r\n\r\n    function geom() {\r\n        return geom;\r\n    }\r\n\r\n    langx.mixin(geom, {\r\n        borderExtents: borderExtents,\r\n        //viewport coordinate\r\n        boundingPosition: boundingPosition,\r\n\r\n        boundingRect: boundingRect,\r\n\r\n        clientHeight: clientHeight,\r\n\r\n        clientSize: clientSize,\r\n\r\n        clientWidth: clientWidth,\r\n\r\n        contentRect: contentRect,\r\n\r\n        getDocumentSize: getDocumentSize,\r\n\r\n        height: height,\r\n\r\n        marginExtents: marginExtents,\r\n\r\n        marginRect: marginRect,\r\n\r\n        marginSize: marginSize,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        paddingExtents: paddingExtents,\r\n\r\n        //coordinate to the document\r\n        pagePosition: pagePosition,\r\n\r\n        pageRect: pageRect,\r\n\r\n        // coordinate relative to it's parent\r\n        relativePosition: relativePosition,\r\n\r\n        relativeRect: relativeRect,\r\n\r\n        scrollbarWidth: scrollbarWidth,\r\n\r\n        scrollIntoView: scrollIntoView,\r\n\r\n        scrollLeft: scrollLeft,\r\n\r\n        scrollTop: scrollTop,\r\n\r\n        size: size,\r\n\r\n        width: width\r\n    });\r\n\r\n    return skylark.geom = geom;\r\n});\ndefine('skylark-utils-dom/fx',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./eventer\"\r\n], function(skylark, langx, browser, geom, styler, eventer) {\r\n    var animationName,\r\n        animationDuration,\r\n        animationTiming,\r\n        animationDelay,\r\n        transitionProperty,\r\n        transitionDuration,\r\n        transitionTiming,\r\n        transitionDelay,\r\n\r\n        animationEnd = browser.normalizeCssEvent('AnimationEnd'),\r\n        transitionEnd = browser.normalizeCssEvent('TransitionEnd'),\r\n\r\n        supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i,\r\n        transform = browser.css3PropPrefix + \"transform\",\r\n        cssReset = {};\r\n\r\n\r\n    cssReset[animationName = browser.normalizeCssProperty(\"animation-name\")] =\r\n        cssReset[animationDuration = browser.normalizeCssProperty(\"animation-duration\")] =\r\n        cssReset[animationDelay = browser.normalizeCssProperty(\"animation-delay\")] =\r\n        cssReset[animationTiming = browser.normalizeCssProperty(\"animation-timing-function\")] = \"\";\r\n\r\n    cssReset[transitionProperty = browser.normalizeCssProperty(\"transition-property\")] =\r\n        cssReset[transitionDuration = browser.normalizeCssProperty(\"transition-duration\")] =\r\n        cssReset[transitionDelay = browser.normalizeCssProperty(\"transition-delay\")] =\r\n        cssReset[transitionTiming = browser.normalizeCssProperty(\"transition-timing-function\")] = \"\";\r\n\r\n\r\n\r\n    /*   \r\n     * Perform a custom animation of a set of CSS properties.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} properties\r\n     * @param {String} ease\r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     * @param {Number or String} delay\r\n     */\r\n    function animate(elm, properties, duration, ease, callback, delay) {\r\n        var key,\r\n            cssValues = {},\r\n            cssProperties = [],\r\n            transforms = \"\",\r\n            that = this,\r\n            endEvent,\r\n            wrappedCallback,\r\n            fired = false,\r\n            hasScrollTop = false,\r\n            resetClipAuto = false;\r\n\r\n        if (langx.isPlainObject(duration)) {\r\n            ease = duration.easing;\r\n            callback = duration.complete;\r\n            delay = duration.delay;\r\n            duration = duration.duration;\r\n        }\r\n\r\n        if (langx.isString(duration)) {\r\n            duration = fx.speeds[duration];\r\n        }\r\n        if (duration === undefined) {\r\n            duration = fx.speeds.normal;\r\n        }\r\n        duration = duration / 1000;\r\n        if (fx.off) {\r\n            duration = 0;\r\n        }\r\n\r\n        if (langx.isFunction(ease)) {\r\n            callback = ease;\r\n            eace = \"swing\";\r\n        } else {\r\n            ease = ease || \"swing\";\r\n        }\r\n\r\n        if (delay) {\r\n            delay = delay / 1000;\r\n        } else {\r\n            delay = 0;\r\n        }\r\n\r\n        if (langx.isString(properties)) {\r\n            // keyframe animation\r\n            cssValues[animationName] = properties;\r\n            cssValues[animationDuration] = duration + \"s\";\r\n            cssValues[animationTiming] = ease;\r\n            endEvent = animationEnd;\r\n        } else {\r\n            // CSS transitions\r\n            for (key in properties) {\r\n                var v = properties[key];\r\n                if (supportedTransforms.test(key)) {\r\n                    transforms += key + \"(\" + v + \") \";\r\n                } else {\r\n                    if (key === \"scrollTop\") {\r\n                        hasScrollTop = true;\r\n                    }\r\n                    if (key == \"clip\" && langx.isPlainObject(v)) {\r\n                        cssValues[key] = \"rect(\" + v.top+\"px,\"+ v.right +\"px,\"+ v.bottom +\"px,\"+ v.left+\"px)\";\r\n                        if (styler.css(elm,\"clip\") == \"auto\") {\r\n                            var size = geom.size(elm);\r\n                            styler.css(elm,\"clip\",\"rect(\"+\"0px,\"+ size.width +\"px,\"+ size.height +\"px,\"+\"0px)\");  \r\n                            resetClipAuto = true;\r\n                        }\r\n\r\n                    } else {\r\n                        cssValues[key] = v;\r\n                    }\r\n                    cssProperties.push(langx.dasherize(key));\r\n                }\r\n            }\r\n            endEvent = transitionEnd;\r\n        }\r\n\r\n        if (transforms) {\r\n            cssValues[transform] = transforms;\r\n            cssProperties.push(transform);\r\n        }\r\n\r\n        if (duration > 0 && langx.isPlainObject(properties)) {\r\n            cssValues[transitionProperty] = cssProperties.join(\", \");\r\n            cssValues[transitionDuration] = duration + \"s\";\r\n            cssValues[transitionDelay] = delay + \"s\";\r\n            cssValues[transitionTiming] = ease;\r\n        }\r\n\r\n        wrappedCallback = function(event) {\r\n            fired = true;\r\n            if (event) {\r\n                if (event.target !== event.currentTarget) {\r\n                    return // makes sure the event didn't bubble from \"below\"\r\n                }\r\n                eventer.off(event.target, endEvent, wrappedCallback)\r\n            } else {\r\n                eventer.off(elm, animationEnd, wrappedCallback) // triggered by setTimeout\r\n            }\r\n            styler.css(elm, cssReset);\r\n            if (resetClipAuto) {\r\n //               styler.css(elm,\"clip\",\"auto\");\r\n            }\r\n            callback && callback.call(this);\r\n        };\r\n\r\n        if (duration > 0) {\r\n            eventer.on(elm, endEvent, wrappedCallback);\r\n            // transitionEnd is not always firing on older Android phones\r\n            // so make sure it gets fired\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, ((duration + delay) * 1000) + 25)();\r\n        }\r\n\r\n        // trigger page reflow so new elements can animate\r\n        elm.clientLeft;\r\n\r\n        styler.css(elm, cssValues);\r\n\r\n        if (duration <= 0) {\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, 0)();\r\n        }\r\n\r\n        if (hasScrollTop) {\r\n            scrollToTop(elm, properties[\"scrollTop\"], duration, callback);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display an element.\r\n     * @param {Object} elm  \r\n     * @param {String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function show(elm, speed, callback) {\r\n        styler.show(elm);\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            styler.css(elm, \"opacity\", 0)\r\n            animate(elm, { opacity: 1, scale: \"1,1\" }, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Hide an element.\r\n     * @param {Object} elm  \r\n     * @param {String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function hide(elm, speed, callback) {\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            animate(elm, { opacity: 0, scale: \"0,0\" }, speed, function() {\r\n                styler.hide(elm);\r\n                if (callback) {\r\n                    callback.call(elm);\r\n                }\r\n            });\r\n        } else {\r\n            styler.hide(elm);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Set the vertical position of the scroll bar for an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} pos\r\n     * @param {Number or String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function scrollToTop(elm, pos, speed, callback) {\r\n        var scrollFrom = parseInt(elm.scrollTop),\r\n            i = 0,\r\n            runEvery = 5, // run every 5ms\r\n            freq = speed * 1000 / runEvery,\r\n            scrollTo = parseInt(pos);\r\n\r\n        var interval = setInterval(function() {\r\n            i++;\r\n\r\n            if (i <= freq) elm.scrollTop = (scrollTo - scrollFrom) / freq * i + scrollFrom;\r\n\r\n            if (i >= freq + 1) {\r\n                clearInterval(interval);\r\n                if (callback) langx.debounce(callback, 1000)();\r\n            }\r\n        }, runEvery);\r\n    }\r\n\r\n    /*   \r\n     * Display or hide an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function toggle(elm, speed, callback) {\r\n        if (styler.isInvisible(elm)) {\r\n            show(elm, speed, callback);\r\n        } else {\r\n            hide(elm, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Adjust the opacity of an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {Number or String} opacity\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeTo(elm, speed, opacity, easing, callback) {\r\n        animate(elm, { opacity: opacity }, speed, easing, callback);\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Display an element by fading them to opaque.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeIn(elm, speed, easing, callback) {\r\n        var target = styler.css(elm, \"opacity\");\r\n        if (target > 0) {\r\n            styler.css(elm, \"opacity\", 0);\r\n        } else {\r\n            target = 1;\r\n        }\r\n        styler.show(elm);\r\n\r\n        fadeTo(elm, speed, target, easing, callback);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Hide an element by fading them to transparent.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeOut(elm, speed, easing, callback) {\r\n        var _elm = elm,\r\n            complete,\r\n            opacity = styler.css(elm,\"opacity\"),\r\n            options = {};\r\n\r\n        if (langx.isPlainObject(speed)) {\r\n            options.easing = speed.easing;\r\n            options.duration = speed.duration;\r\n            complete = speed.complete;\r\n        } else {\r\n            options.duration = speed;\r\n            if (callback) {\r\n                complete = callback;\r\n                options.easing = easing;\r\n            } else {\r\n                complete = easing;\r\n            }\r\n        }\r\n        options.complete = function() {\r\n            styler.css(elm,\"opacity\",opacity);\r\n            styler.hide(elm);\r\n            if (complete) {\r\n                complete.call(elm);\r\n            }\r\n        }\r\n\r\n        fadeTo(elm, options, 0);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display or hide an element by animating its opacity.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} ceasing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeToggle(elm, speed, ceasing, allback) {\r\n        if (styler.isInvisible(elm)) {\r\n            fadeIn(elm, speed, easing, callback);\r\n        } else {\r\n            fadeOut(elm, speed, easing, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideDown(elm, duration, callback) {\r\n\r\n        // get the element position to restore it then\r\n        var position = styler.css(elm, 'position');\r\n\r\n        // show element if it is hidden\r\n        show(elm);\r\n\r\n        // place it so it displays as usually but hidden\r\n        styler.css(elm, {\r\n            position: 'absolute',\r\n            visibility: 'hidden'\r\n        });\r\n\r\n        // get naturally height, margin, padding\r\n        var marginTop = styler.css(elm, 'margin-top');\r\n        var marginBottom = styler.css(elm, 'margin-bottom');\r\n        var paddingTop = styler.css(elm, 'padding-top');\r\n        var paddingBottom = styler.css(elm, 'padding-bottom');\r\n        var height = styler.css(elm, 'height');\r\n\r\n        // set initial css for animation\r\n        styler.css(elm, {\r\n            position: position,\r\n            visibility: 'visible',\r\n            overflow: 'hidden',\r\n            height: 0,\r\n            marginTop: 0,\r\n            marginBottom: 0,\r\n            paddingTop: 0,\r\n            paddingBottom: 0\r\n        });\r\n\r\n        // animate to gotten height, margin and padding\r\n        animate(elm, {\r\n            height: height,\r\n            marginTop: marginTop,\r\n            marginBottom: marginBottom,\r\n            paddingTop: paddingTop,\r\n            paddingBottom: paddingBottom\r\n        }, {\r\n            duration: duration,\r\n            complete: function() {\r\n                if (callback) {\r\n                    callback.apply(elm);\r\n                }\r\n            }\r\n        });\r\n\r\n        return this;\r\n    };\r\n\r\n    /*   \r\n     * Hide an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideUp(elm, duration, callback) {\r\n        // active the function only if the element is visible\r\n        if (geom.height(elm) > 0) {\r\n\r\n            // get the element position to restore it then\r\n            var position = styler.css(elm, 'position');\r\n\r\n            // get the element height, margin and padding to restore them then\r\n            var height = styler.css(elm, 'height');\r\n            var marginTop = styler.css(elm, 'margin-top');\r\n            var marginBottom = styler.css(elm, 'margin-bottom');\r\n            var paddingTop = styler.css(elm, 'padding-top');\r\n            var paddingBottom = styler.css(elm, 'padding-bottom');\r\n\r\n            // set initial css for animation\r\n            styler.css(elm, {\r\n                visibility: 'visible',\r\n                overflow: 'hidden',\r\n                height: height,\r\n                marginTop: marginTop,\r\n                marginBottom: marginBottom,\r\n                paddingTop: paddingTop,\r\n                paddingBottom: paddingBottom\r\n            });\r\n\r\n            // animate element height, margin and padding to zero\r\n            animate(elm, {\r\n                height: 0,\r\n                marginTop: 0,\r\n                marginBottom: 0,\r\n                paddingTop: 0,\r\n                paddingBottom: 0\r\n            }, {\r\n                // callback : restore the element position, height, margin and padding to original values\r\n                duration: duration,\r\n                queue: false,\r\n                complete: function() {\r\n                    hide(elm);\r\n                    styler.css(elm, {\r\n                        visibility: 'visible',\r\n                        overflow: 'hidden',\r\n                        height: height,\r\n                        marginTop: marginTop,\r\n                        marginBottom: marginBottom,\r\n                        paddingTop: paddingTop,\r\n                        paddingBottom: paddingBottom\r\n                    });\r\n                    if (callback) {\r\n                        callback.apply(elm);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        return this;\r\n    };\r\n\r\n\r\n    /*   \r\n     * Display or hide an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideToggle(elm, duration, callback) {\r\n\r\n        // if the element is hidden, slideDown !\r\n        if (geom.height(elm) == 0) {\r\n            slideDown(elm, duration, callback);\r\n        }\r\n        // if the element is visible, slideUp !\r\n        else {\r\n            slideUp(elm, duration, callback);\r\n        }\r\n        return this;\r\n    };\r\n\r\n\r\n    function fx() {\r\n        return fx;\r\n    }\r\n\r\n    langx.mixin(fx, {\r\n        off: false,\r\n\r\n        speeds: {\r\n            normal: 400,\r\n            fast: 200,\r\n            slow: 600\r\n        },\r\n\r\n        animate: animate,\r\n        fadeIn: fadeIn,\r\n        fadeOut: fadeOut,\r\n        fadeTo: fadeTo,\r\n        fadeToggle: fadeToggle,\r\n        hide: hide,\r\n        scrollToTop: scrollToTop,\r\n\r\n        slideDown: slideDown,\r\n        slideToggle: slideToggle,\r\n        slideUp: slideUp,\r\n        show: show,\r\n        toggle: toggle\r\n    });\r\n\r\n    return skylark.fx = fx;\r\n});\ndefine('skylark-utils-dom/transforms',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./datax\",\r\n    \"./styler\"\r\n], function(skylark,langx,browser,datax,styler) {\r\n  var css3Transform = browser.normalizeCssProperty(\"transform\");\r\n\r\n  function getMatrix(radian, x, y) {\r\n    var Cos = Math.cos(radian), Sin = Math.sin(radian);\r\n    return {\r\n      M11: Cos * x, \r\n      M12: -Sin * y,\r\n      M21: Sin * x, \r\n      M22: Cos * y\r\n    };\r\n  }\r\n\r\n  function getZoom(scale, zoom) {\r\n      return scale > 0 && scale > -zoom ? zoom :\r\n        scale < 0 && scale < zoom ? -zoom : 0;\r\n  }\r\n\r\n    function change(el,d) {\r\n      var matrix = getMatrix(d.radian, d.y, d.x);\r\n      styler.css(el,css3Transform, \"matrix(\"\r\n        + matrix.M11.toFixed(16) + \",\" + matrix.M21.toFixed(16) + \",\"\r\n        + matrix.M12.toFixed(16) + \",\" + matrix.M22.toFixed(16) + \", 0, 0)\"\r\n      );      \r\n  }\r\n\r\n  function transformData(el,d) {\r\n    if (d) {\r\n      datax.data(el,\"transform\",d);\r\n    } else {\r\n      d = datax.data(el,\"transform\") || {};\r\n      d.radian = d.radian || 0;\r\n      d.x = d.x || 1;\r\n      d.y = d.y || 1;\r\n      d.zoom = d.zoom || 1;\r\n      return d;     \r\n    }\r\n  }\r\n\r\n  var calcs = {\r\n    //Vertical flip\r\n    vertical : function (d) {\r\n        d.radian = Math.PI - d.radian; \r\n        d.y *= -1;\r\n    },\r\n\r\n   //Horizontal flip\r\n    horizontal : function (d) {\r\n        d.radian = Math.PI - d.radian; \r\n        d.x *= -1;\r\n    },\r\n\r\n    //Rotate according to angle\r\n    rotate : function (d,degress) {\r\n        d.radian = degress * Math.PI / 180;; \r\n    },\r\n\r\n    //Turn left 90 degrees\r\n    left : function (d) {\r\n        d.radian -= Math.PI / 2; \r\n    },\r\n\r\n    //Turn right 90 degrees\r\n    right : function (d) {\r\n        d.radian += Math.PI / 2; \r\n    },\r\n \r\n    //zoom\r\n    scale: function (d,zoom) {\r\n        var hZoom = getZoom(d.y, zoom), vZoom = getZoom(d.x, zoom);\r\n        if (hZoom && vZoom) {\r\n          d.y += hZoom; \r\n          d.x += vZoom;\r\n        }\r\n    }, \r\n\r\n    //zoom in\r\n    zoomin: function (d) { \r\n      calcs.scale(d,0.1); \r\n    },\r\n    \r\n    //zoom out\r\n    zoomout: function (d) { \r\n      calcs.scale(d,-0.1); \r\n    }\r\n\r\n  };\r\n  \r\n  \r\n  function _createApiMethod(calcFunc) {\r\n    return function() {\r\n      var args = langx.makeArray(arguments),\r\n        el = args.shift(),\r\n          d = transformData(el);\r\n        args.unshift(d);\r\n        calcFunc.apply(this,args)\r\n        change(el,d);\r\n        transformData(el,d);\r\n    }\r\n  }\r\n  \r\n  function transforms() {\r\n    return transforms;\r\n  }\r\n\r\n  [\"vertical\",\"horizontal\",\"rotate\",\"left\",\"right\",\"scale\",\"zoom\",\"zoomin\",\"zoomout\"].forEach(function(name){\r\n    transforms[name] = _createApiMethod(calcs[name]);\r\n  });\r\n\r\n  langx.mixin(transforms, {\r\n    reset : function(el) {\r\n      var d = {\r\n        x : 1,\r\n        y : 1,\r\n        radian : 0,\r\n      }\r\n      change(el,d);\r\n      transformData(el,d);\r\n    }\r\n  });\r\n\r\n\r\n  return skylark.transforms = transforms;\r\n});\r\n\ndefine('skylark-utils-dom/query',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./eventer\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./fx\"\r\n], function(skylark, langx, noder, datax, eventer, finder, geom, styler, fx) {\r\n    var some = Array.prototype.some,\r\n        push = Array.prototype.push,\r\n        every = Array.prototype.every,\r\n        concat = Array.prototype.concat,\r\n        slice = Array.prototype.slice,\r\n        map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        forEach = Array.prototype.forEach,\r\n        indexOf = Array.prototype.indexOf,\r\n        sort = Array.prototype.sort,\r\n        isQ;\r\n\r\n    var rquickExpr = /^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)/;\r\n\r\n    var funcArg = langx.funcArg,\r\n        isArrayLike = langx.isArrayLike,\r\n        isString = langx.isString,\r\n        uniq = langx.uniq,\r\n        isFunction = langx.isFunction;\r\n\r\n    var type = langx.type,\r\n        isArray = langx.isArray,\r\n\r\n        isWindow = langx.isWindow,\r\n\r\n        isDocument = langx.isDocument,\r\n\r\n        isObject = langx.isObject,\r\n\r\n        isPlainObject = langx.isPlainObject,\r\n\r\n        compact = langx.compact,\r\n\r\n        flatten = langx.flatten,\r\n\r\n        camelCase = langx.camelCase,\r\n\r\n        dasherize = langx.dasherize,\r\n        children = finder.children;\r\n\r\n    function wrapper_map(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = $.map(self, function(elem, idx) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n            return $(uniq(result));\r\n        }\r\n    }\r\n\r\n    function wrapper_selector(func, context, last) {\r\n        return function(selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem] : [elem, selector]);\r\n                }\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper_selector_until(func, context, last) {\r\n        return function(util, selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            if (selector === undefined) {\r\n                selector = util;\r\n                util = undefined;\r\n            }\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem, util] : [elem, selector, util]);\r\n                }\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function wrapper_every_act(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            this.each(function(idx) {\r\n                func.apply(context, [this].concat(params));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_every_act_firstArgFunc(func, context, oldValueFunc) {\r\n        return function(arg1) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            forEach.call(self, function(elem, idx) {\r\n                var newArg1 = funcArg(elem, arg1, idx, oldValueFunc(elem));\r\n                func.apply(context, [elem, arg1].concat(params.slice(1)));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_some_chk(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            return some.call(self, function(elem) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n        }\r\n    }\r\n\r\n    function wrapper_name_value(func, context, oldValueFunc) {\r\n        return function(name, value) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n\r\n            if (langx.isPlainObject(name) || langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem, name));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem].concat(params));\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0], name]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    function wrapper_value(func, context, oldValueFunc) {\r\n        return function(value) {\r\n            var self = this;\r\n\r\n            if (langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem, newValue]);\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0]]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    var NodeList = langx.klass({\r\n        klassName: \"SkNodeList\",\r\n        init: function(selector, context) {\r\n            var self = this,\r\n                match, nodes, node, props;\r\n\r\n            if (selector) {\r\n                self.context = context = context || noder.doc();\r\n\r\n                if (isString(selector)) {\r\n                    // a html string or a css selector is expected\r\n                    self.selector = selector;\r\n\r\n                    if (selector.charAt(0) === \"<\" && selector.charAt(selector.length - 1) === \">\" && selector.length >= 3) {\r\n                        match = [null, selector, null];\r\n                    } else {\r\n                        match = rquickExpr.exec(selector);\r\n                    }\r\n\r\n                    if (match) {\r\n                        if (match[1]) {\r\n                            // if selector is html\r\n                            nodes = noder.createFragment(selector);\r\n\r\n                            if (langx.isPlainObject(context)) {\r\n                                props = context;\r\n                            }\r\n\r\n                        } else {\r\n                            node = finder.byId(match[2], noder.ownerDoc(context));\r\n\r\n                            if (node) {\r\n                                // if selector is id\r\n                                nodes = [node];\r\n                            }\r\n\r\n                        }\r\n                    } else {\r\n                        // if selector is css selector\r\n                        if (langx.isString(context)) {\r\n                            context = finder.find(context);\r\n                        }\r\n\r\n                        nodes = finder.descendants(context, selector);\r\n                    }\r\n                } else {\r\n                    if (isArray(selector)) {\r\n                        // a dom node array is expected\r\n                        nodes = selector;\r\n                    } else {\r\n                        // a dom node is expected\r\n                        nodes = [selector];\r\n                    }\r\n                    //self.add(selector, false);\r\n                }\r\n            }\r\n\r\n\r\n            if (nodes) {\r\n\r\n                push.apply(self, nodes);\r\n\r\n                if (props) {\r\n                    for ( var name  in props ) {\r\n                        // Properties of context are called as methods if possible\r\n                        if ( langx.isFunction( this[ name ] ) ) {\r\n                            this[ name ]( props[ name ] );\r\n                        } else {\r\n                            this.attr( name, props[ name ] );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return self;\r\n        }\r\n    });\r\n\r\n    var query = (function() {\r\n        isQ = function(object) {\r\n            return object instanceof NodeList;\r\n        }\r\n        init = function(selector, context) {\r\n            return new NodeList(selector, context);\r\n        }\r\n\r\n        var $ = function(selector, context) {\r\n            if (isFunction(selector)) {\r\n                eventer.ready(function() {\r\n                    selector($);\r\n                });\r\n            } else if (isQ(selector)) {\r\n                return selector;\r\n            } else {\r\n                if (context && isQ(context) && isString(selector)) {\r\n                    return context.find(selector);\r\n                }\r\n                return init(selector, context);\r\n            }\r\n        };\r\n\r\n        $.fn = NodeList.prototype;\r\n        langx.mixin($.fn, {\r\n            // `map` and `slice` in the jQuery API work differently\r\n            // from their array counterparts\r\n            length : 0,\r\n\r\n            map: function(fn) {\r\n                return $(uniq(langx.map(this, function(el, i) {\r\n                    return fn.call(el, i, el)\r\n                })));\r\n            },\r\n\r\n            slice: function() {\r\n                return $(slice.apply(this, arguments))\r\n            },\r\n\r\n            forEach: function() {\r\n                return forEach.apply(this,arguments);\r\n            },\r\n\r\n            get: function(idx) {\r\n                return idx === undefined ? slice.call(this) : this[idx >= 0 ? idx : idx + this.length]\r\n            },\r\n\r\n            indexOf: function() {\r\n                return indexOf.apply(this,arguments);\r\n            },\r\n\r\n            sort : function() {\r\n                return sort.apply(this,arguments);\r\n            },\r\n\r\n            toArray: function() {\r\n                return slice.call(this);\r\n            },\r\n\r\n            size: function() {\r\n                return this.length\r\n            },\r\n\r\n            remove: wrapper_every_act(noder.remove, noder),\r\n\r\n            each: function(callback) {\r\n                langx.each(this, callback);\r\n                return this;\r\n            },\r\n\r\n            filter: function(selector) {\r\n                if (isFunction(selector)) return this.not(this.not(selector))\r\n                return $(filter.call(this, function(element) {\r\n                    return finder.matches(element, selector)\r\n                }))\r\n            },\r\n\r\n            add: function(selector, context) {\r\n                return $(uniq(this.toArray().concat($(selector, context).toArray())));\r\n            },\r\n\r\n            is: function(selector) {\r\n                if (this.length > 0) {\r\n                    var self = this;\r\n                    if (langx.isString(selector)) {\r\n                        return some.call(self,function(elem) {\r\n                            return finder.matches(elem, selector);\r\n                        });\r\n                    } else if (langx.isArrayLike(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return langx.inArray(elem, selector) > -1;\r\n                        });\r\n                    } else if (langx.isHtmlNode(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return elem ==  selector;\r\n                        });\r\n                    }\r\n                }\r\n                return false;\r\n            },\r\n            \r\n            not: function(selector) {\r\n                var nodes = []\r\n                if (isFunction(selector) && selector.call !== undefined)\r\n                    this.each(function(idx) {\r\n                        if (!selector.call(this, idx)) nodes.push(this)\r\n                    })\r\n                else {\r\n                    var excludes = typeof selector == 'string' ? this.filter(selector) :\r\n                        (isArrayLike(selector) && isFunction(selector.item)) ? slice.call(selector) : $(selector)\r\n                    this.forEach(function(el) {\r\n                        if (excludes.indexOf(el) < 0) nodes.push(el)\r\n                    })\r\n                }\r\n                return $(nodes)\r\n            },\r\n\r\n            has: function(selector) {\r\n                return this.filter(function() {\r\n                    return isObject(selector) ?\r\n                        noder.contains(this, selector) :\r\n                        $(this).find(selector).size()\r\n                })\r\n            },\r\n\r\n            eq: function(idx) {\r\n                return idx === -1 ? this.slice(idx) : this.slice(idx, +idx + 1);\r\n            },\r\n\r\n            first: function() {\r\n                return this.eq(0);\r\n            },\r\n\r\n            last: function() {\r\n                return this.eq(-1);\r\n            },\r\n\r\n            find: wrapper_selector(finder.descendants, finder),\r\n\r\n            closest: wrapper_selector(finder.closest, finder),\r\n            /*\r\n                        closest: function(selector, context) {\r\n                            var node = this[0],\r\n                                collection = false\r\n                            if (typeof selector == 'object') collection = $(selector)\r\n                            while (node && !(collection ? collection.indexOf(node) >= 0 : finder.matches(node, selector)))\r\n                                node = node !== context && !isDocument(node) && node.parentNode\r\n                            return $(node)\r\n                        },\r\n            */\r\n\r\n\r\n            parents: wrapper_selector(finder.ancestors, finder),\r\n\r\n            parentsUntil: wrapper_selector_until(finder.ancestors, finder),\r\n\r\n\r\n            parent: wrapper_selector(finder.parent, finder),\r\n\r\n            children: wrapper_selector(finder.children, finder),\r\n\r\n            contents: wrapper_map(noder.contents, noder),\r\n\r\n            empty: wrapper_every_act(noder.empty, noder),\r\n\r\n            // `pluck` is borrowed from Prototype.js\r\n            pluck: function(property) {\r\n                return langx.map(this, function(el) {\r\n                    return el[property]\r\n                })\r\n            },\r\n\r\n            pushStack : function(elms) {\r\n                var ret = $(elms);\r\n                ret.prevObject = this;\r\n                return ret;\r\n            },\r\n            \r\n            show: wrapper_every_act(fx.show, fx),\r\n\r\n            replaceWith: function(newContent) {\r\n                return this.before(newContent).remove();\r\n            },\r\n\r\n            wrap: function(structure) {\r\n                var func = isFunction(structure)\r\n                if (this[0] && !func)\r\n                    var dom = $(structure).get(0),\r\n                        clone = dom.parentNode || this.length > 1\r\n\r\n                return this.each(function(index) {\r\n                    $(this).wrapAll(\r\n                        func ? structure.call(this, index) :\r\n                        clone ? dom.cloneNode(true) : dom\r\n                    )\r\n                })\r\n            },\r\n\r\n            wrapAll: function(wrappingElement) {\r\n                if (this[0]) {\r\n                    $(this[0]).before(wrappingElement = $(wrappingElement));\r\n                    var children;\r\n                    // drill down to the inmost element\r\n                    while ((children = wrappingElement.children()).length) {\r\n                        wrappingElement = children.first();\r\n                    }\r\n                    $(wrappingElement).append(this);\r\n                }\r\n                return this\r\n            },\r\n\r\n            wrapInner: function(wrappingElement) {\r\n                var func = isFunction(wrappingElement)\r\n                return this.each(function(index) {\r\n                    var self = $(this),\r\n                        contents = self.contents(),\r\n                        dom = func ? wrappingElement.call(this, index) : wrappingElement\r\n                    contents.length ? contents.wrapAll(dom) : self.append(dom)\r\n                })\r\n            },\r\n\r\n            unwrap: function(selector) {\r\n                if (this.parent().children().length === 0) {\r\n                    // remove dom without text\r\n                    this.parent(selector).not(\"body\").each(function() {\r\n                        $(this).replaceWith(document.createTextNode(this.childNodes[0].textContent));\r\n                    });\r\n                } else {\r\n                    this.parent().each(function() {\r\n                        $(this).replaceWith($(this).children())\r\n                    });\r\n                }\r\n                return this\r\n            },\r\n\r\n            clone: function() {\r\n                return this.map(function() {\r\n                    return this.cloneNode(true)\r\n                })\r\n            },\r\n\r\n            hide: wrapper_every_act(fx.hide, fx),\r\n\r\n            toggle: function(setting) {\r\n                return this.each(function() {\r\n                    var el = $(this);\r\n                    (setting === undefined ? el.css(\"display\") == \"none\" : setting) ? el.show(): el.hide()\r\n                })\r\n            },\r\n\r\n            prev: function(selector) {\r\n                return $(this.pluck('previousElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            prevAll: wrapper_selector(finder.previousSibling, finder),\r\n\r\n            next: function(selector) {\r\n                return $(this.pluck('nextElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            nextAll: wrapper_selector(finder.nextSiblings, finder),\r\n\r\n            siblings: wrapper_selector(finder.siblings, finder),\r\n\r\n            html: wrapper_value(noder.html, noder, noder.html),\r\n\r\n            text: wrapper_value(datax.text, datax, datax.text),\r\n\r\n            attr: wrapper_name_value(datax.attr, datax, datax.attr),\r\n\r\n            removeAttr: wrapper_every_act(datax.removeAttr, datax),\r\n\r\n            prop: wrapper_name_value(datax.prop, datax, datax.prop),\r\n\r\n            removeProp: wrapper_every_act(datax.removeProp, datax),\r\n\r\n            data: wrapper_name_value(datax.data, datax, datax.data),\r\n\r\n            removeData: wrapper_every_act(datax.removeData, datax),\r\n\r\n            val: wrapper_value(datax.val, datax, datax.val),\r\n\r\n            offset: wrapper_value(geom.pagePosition, geom, geom.pagePosition),\r\n\r\n            style: wrapper_name_value(styler.css, styler),\r\n\r\n            css: wrapper_name_value(styler.css, styler),\r\n\r\n            index: function(elem) {\r\n                if (elem) {\r\n                    return this.indexOf($(elem)[0]);\r\n                } else {\r\n                    return this.parent().children().indexOf(this[0]);\r\n                }\r\n            },\r\n\r\n            //hasClass(name)\r\n            hasClass: wrapper_some_chk(styler.hasClass, styler),\r\n\r\n            //addClass(name)\r\n            addClass: wrapper_every_act_firstArgFunc(styler.addClass, styler, styler.className),\r\n\r\n            //removeClass(name)\r\n            removeClass: wrapper_every_act_firstArgFunc(styler.removeClass, styler, styler.className),\r\n\r\n            //toogleClass(name,when)\r\n            toggleClass: wrapper_every_act_firstArgFunc(styler.toggleClass, styler, styler.className),\r\n\r\n            scrollTop: wrapper_value(geom.scrollTop, geom),\r\n\r\n            scrollLeft: wrapper_value(geom.scrollLeft, geom),\r\n\r\n            position: function() {\r\n                if (!this.length) return\r\n\r\n                var elem = this[0];\r\n\r\n                return geom.relativePosition(elem);\r\n            },\r\n\r\n            offsetParent: wrapper_map(geom.offsetParent, geom)\r\n        });\r\n\r\n        // for now\r\n        $.fn.detach = $.fn.remove;\r\n\r\n        $.fn.hover = function(fnOver, fnOut) {\r\n            return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);\r\n        };\r\n\r\n        $.fn.size = wrapper_value(geom.size, geom);\r\n\r\n        $.fn.width = wrapper_value(geom.width, geom, geom.width);\r\n\r\n        $.fn.height = wrapper_value(geom.height, geom, geom.height);\r\n\r\n        $.fn.clientSize = wrapper_value(geom.clientSize, geom.clientSize);\r\n\r\n        ['width', 'height'].forEach(function(dimension) {\r\n            var offset, Dimension = dimension.replace(/./, function(m) {\r\n                return m[0].toUpperCase()\r\n            });\r\n\r\n            $.fn['outer' + Dimension] = function(margin, value) {\r\n                if (arguments.length) {\r\n                    if (typeof margin !== 'boolean') {\r\n                        value = margin;\r\n                        margin = false;\r\n                    }\r\n                } else {\r\n                    margin = false;\r\n                    value = undefined;\r\n                }\r\n\r\n                if (value === undefined) {\r\n                    var el = this[0];\r\n                    if (!el) {\r\n                        return undefined;\r\n                    }\r\n                    var cb = geom.size(el);\r\n                    if (margin) {\r\n                        var me = geom.marginExtents(el);\r\n                        cb.width = cb.width + me.left + me.right;\r\n                        cb.height = cb.height + me.top + me.bottom;\r\n                    }\r\n                    return dimension === \"width\" ? cb.width : cb.height;\r\n                } else {\r\n                    return this.each(function(idx, el) {\r\n                        var mb = {};\r\n                        var me = geom.marginExtents(el);\r\n                        if (dimension === \"width\") {\r\n                            mb.width = value;\r\n                            if (margin) {\r\n                                mb.width = mb.width - me.left - me.right\r\n                            }\r\n                        } else {\r\n                            mb.height = value;\r\n                            if (margin) {\r\n                                mb.height = mb.height - me.top - me.bottom;\r\n                            }\r\n                        }\r\n                        geom.size(el, mb);\r\n                    })\r\n\r\n                }\r\n            };\r\n        })\r\n\r\n        $.fn.innerWidth = wrapper_value(geom.clientWidth, geom, geom.clientWidth);\r\n\r\n        $.fn.innerHeight = wrapper_value(geom.clientHeight, geom, geom.clientHeight);\r\n\r\n\r\n        var traverseNode = noder.traverse;\r\n\r\n        function wrapper_node_operation(func, context, oldValueFunc) {\r\n            return function(html) {\r\n                var argType, nodes = langx.map(arguments, function(arg) {\r\n                    argType = type(arg)\r\n                    return argType == \"object\" || argType == \"array\" || arg == null ?\r\n                        arg : noder.createFragment(arg)\r\n                });\r\n                if (nodes.length < 1) {\r\n                    return this\r\n                }\r\n                this.each(function(idx) {\r\n                    func.apply(context, [this, nodes, idx > 0]);\r\n                });\r\n                return this;\r\n            }\r\n        }\r\n\r\n\r\n        $.fn.after = wrapper_node_operation(noder.after, noder);\r\n\r\n        $.fn.prepend = wrapper_node_operation(noder.prepend, noder);\r\n\r\n        $.fn.before = wrapper_node_operation(noder.before, noder);\r\n\r\n        $.fn.append = wrapper_node_operation(noder.append, noder);\r\n\r\n\r\n        langx.each( {\r\n            appendTo: \"append\",\r\n            prependTo: \"prepend\",\r\n            insertBefore: \"before\",\r\n            insertAfter: \"after\",\r\n            replaceAll: \"replaceWith\"\r\n        }, function( name, original ) {\r\n            $.fn[ name ] = function( selector ) {\r\n                var elems,\r\n                    ret = [],\r\n                    insert = $( selector ),\r\n                    last = insert.length - 1,\r\n                    i = 0;\r\n\r\n                for ( ; i <= last; i++ ) {\r\n                    elems = i === last ? this : this.clone( true );\r\n                    $( insert[ i ] )[ original ]( elems );\r\n\r\n                    // Support: Android <=4.0 only, PhantomJS 1 only\r\n                    // .get() because push.apply(_, arraylike) throws on ancient WebKit\r\n                    push.apply( ret, elems.get() );\r\n                }\r\n\r\n                return this.pushStack( ret );\r\n            };\r\n        } );\r\n\r\n/*\r\n        $.fn.insertAfter = function(html) {\r\n            $(html).after(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.insertBefore = function(html) {\r\n            $(html).before(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.appendTo = function(html) {\r\n            $(html).append(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.prependTo = function(html) {\r\n            $(html).prepend(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.replaceAll = function(selector) {\r\n            $(selector).replaceWith(this);\r\n            return this;\r\n        };\r\n*/\r\n        return $;\r\n    })();\r\n\r\n    (function($) {\r\n        $.fn.on = wrapper_every_act(eventer.on, eventer);\r\n\r\n        $.fn.off = wrapper_every_act(eventer.off, eventer);\r\n\r\n        $.fn.trigger = wrapper_every_act(eventer.trigger, eventer);\r\n\r\n\r\n        ('focusin focusout focus blur load resize scroll unload click dblclick ' +\r\n            'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave ' +\r\n            'change select keydown keypress keyup error').split(' ').forEach(function(event) {\r\n            $.fn[event] = function(data, callback) {\r\n                return (0 in arguments) ?\r\n                    this.on(event, data, callback) :\r\n                    this.trigger(event)\r\n            }\r\n        });\r\n\r\n\r\n        $.fn.one = function(event, selector, data, callback) {\r\n            if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n                callback = data;\r\n                data = selector;\r\n                selector = null;\r\n            }\r\n\r\n            if (langx.isFunction(data)) {\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            return this.on(event, selector, data, callback, 1)\r\n        };\r\n\r\n        $.fn.animate = wrapper_every_act(fx.animate, fx);\r\n\r\n        $.fn.show = wrapper_every_act(fx.show, fx);\r\n        $.fn.hide = wrapper_every_act(fx.hide, fx);\r\n        $.fn.toogle = wrapper_every_act(fx.toogle, fx);\r\n        $.fn.fadeTo = wrapper_every_act(fx.fadeTo, fx);\r\n        $.fn.fadeIn = wrapper_every_act(fx.fadeIn, fx);\r\n        $.fn.fadeOut = wrapper_every_act(fx.fadeOut, fx);\r\n        $.fn.fadeToggle = wrapper_every_act(fx.fadeToggle, fx);\r\n\r\n        $.fn.slideDown = wrapper_every_act(fx.slideDown, fx);\r\n        $.fn.slideToggle = wrapper_every_act(fx.slideToggle, fx);\r\n        $.fn.slideUp = wrapper_every_act(fx.slideUp, fx);\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.end = function() {\r\n            return this.prevObject || $()\r\n        }\r\n\r\n        $.fn.andSelf = function() {\r\n            return this.add(this.prevObject || $())\r\n        }\r\n\r\n        $.fn.addBack = function(selector) {\r\n            if (this.prevObject) {\r\n                if (selector) {\r\n                    return this.add(this.prevObject.filter(selector));\r\n                } else {\r\n                    return this.add(this.prevObject);\r\n                }\r\n            } else {\r\n                return this;\r\n            }\r\n        }\r\n\r\n        'filter,add,not,eq,first,last,find,closest,parents,parent,children,siblings'.split(',').forEach(function(property) {\r\n            var fn = $.fn[property]\r\n            $.fn[property] = function() {\r\n                var ret = fn.apply(this, arguments)\r\n                ret.prevObject = this\r\n                return ret\r\n            }\r\n        })\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.query = $.fn.find;\r\n\r\n        $.fn.place = function(refNode, position) {\r\n            // summary:\r\n            //      places elements of this node list relative to the first element matched\r\n            //      by queryOrNode. Returns the original NodeList. See: `dojo/dom-construct.place`\r\n            // queryOrNode:\r\n            //      may be a string representing any valid CSS3 selector or a DOM node.\r\n            //      In the selector case, only the first matching element will be used\r\n            //      for relative positioning.\r\n            // position:\r\n            //      can be one of:\r\n            //\r\n            //      -   \"last\" (default)\r\n            //      -   \"first\"\r\n            //      -   \"before\"\r\n            //      -   \"after\"\r\n            //      -   \"only\"\r\n            //      -   \"replace\"\r\n            //\r\n            //      or an offset in the childNodes\r\n            if (langx.isString(refNode)) {\r\n                refNode = finder.descendant(refNode);\r\n            } else if (isQ(refNode)) {\r\n                refNode = refNode[0];\r\n            }\r\n            return this.each(function(i, node) {\r\n                switch (position) {\r\n                    case \"before\":\r\n                        noder.before(refNode, node);\r\n                        break;\r\n                    case \"after\":\r\n                        noder.after(refNode, node);\r\n                        break;\r\n                    case \"replace\":\r\n                        noder.replace(refNode, node);\r\n                        break;\r\n                    case \"only\":\r\n                        noder.empty(refNode);\r\n                        noder.append(refNode, node);\r\n                        break;\r\n                    case \"first\":\r\n                        noder.prepend(refNode, node);\r\n                        break;\r\n                        // else fallthrough...\r\n                    default: // aka: last\r\n                        noder.append(refNode, node);\r\n                }\r\n            });\r\n        };\r\n\r\n        $.fn.addContent = function(content, position) {\r\n            if (content.template) {\r\n                content = langx.substitute(content.template, content);\r\n            }\r\n            return this.append(content);\r\n        };\r\n\r\n        $.fn.replaceClass = function(newClass, oldClass) {\r\n            this.removeClass(oldClass);\r\n            this.addClass(newClass);\r\n            return this;\r\n        };\r\n\r\n    })(query);\r\n\r\n\r\n    return skylark.query = query;\r\n\r\n});\ndefine('skylark-utils-dom/images',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./eventer\",\r\n    \"./noder\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./datax\",\r\n    \"./transforms\",\r\n    \"./query\"\r\n], function(skylark,langx,eventer,noder,finder,geom,styler,datax,transforms,$) {\r\n\r\n  function watch(imgs) {\r\n    if (!langx.isArray(imgs)) {\r\n      imgs = [imgs];\r\n    }\r\n    var totalCount = imgs.length,\r\n        progressedCount = 0,\r\n        successedCount = 0,\r\n        faileredCount = 0,\r\n        d = new langx.Deferred();\r\n\r\n\r\n    function complete() {\r\n\r\n      d.resolve({\r\n        \"total\" : totalCount,\r\n        \"successed\" : successedCount,\r\n        \"failered\" : faileredCount,\r\n        \"imgs\" : imgs \r\n      });\r\n    }\r\n\r\n    function progress(img,isLoaded) {\r\n\r\n      progressedCount++;\r\n      if (isLoaded) {\r\n        successedCount ++ ; \r\n      } else {\r\n        faileredCount ++ ;\r\n      }\r\n\r\n      // progress event\r\n      d.progress({\r\n        \"img\" : img,\r\n        \"isLoaded\" : isLoaded,\r\n        \"progressed\" : progressedCount,\r\n        \"total\" : totalCount,\r\n        \"imgs\" : imgs \r\n      });\r\n\r\n      // check if completed\r\n      if ( progressedCount == totalCount ) {\r\n        complete();\r\n      }\r\n    }\r\n\r\n    function check() {\r\n      if (!imgs.length ) {\r\n        complete();\r\n        return;\r\n      }\r\n\r\n      imgs.forEach(function(img) {\r\n        if (isCompleted(img)) {\r\n          progress(img,isLoaded(img));\r\n        } else {\r\n          eventer.on(img,{\r\n            \"load\" : function() {\r\n              progress(img,true);\r\n            },\r\n\r\n            \"error\" : function() {\r\n              progress(img,false);\r\n            }\r\n          });      \r\n        }\r\n      });\r\n    }\r\n\r\n    langx.defer(check);\r\n\r\n    d.promise.totalCount = totalCount;\r\n    return d.promise;\r\n  }\r\n\r\n\r\n  function isCompleted(img) {\r\n     return img.complete && img.naturalWidth !== undefined;\r\n  }\r\n\r\n  function isLoaded(img) {\r\n    return img.complete && img.naturalWidth !== 0;\r\n  }\r\n\r\n  function loaded(elm,options) {\r\n    var imgs = [];\r\n\r\n    options = options || {};\r\n\r\n    function addBackgroundImage (elm1) {\r\n\r\n      var reURL = /url\\((['\"])?(.*?)\\1\\)/gi;\r\n      var matches = reURL.exec( styler.css(elm1,\"background-image\"));\r\n      var url = matches && matches[2];\r\n      if ( url ) {\r\n        var img = new Image();\r\n        img.src = url;\r\n        imgs.push(img);\r\n      }\r\n    }\r\n\r\n    // filter siblings\r\n    if ( elm.nodeName == 'IMG' ) {\r\n      imgs.push( elm );\r\n    } else {\r\n      // find children\r\n      var childImgs = finder.findAll(elm,'img');\r\n      // concat childElems to filterFound array\r\n      for ( var i=0; i < childImgs.length; i++ ) {\r\n        imgs.push(childImgs[i]);\r\n      }\r\n\r\n      // get background image on element\r\n      if ( options.background === true ) {\r\n        addBackgroundImage(elm);\r\n      } else  if ( typeof options.background == 'string' ) {\r\n        var children = finder.findAll(elm, options.background );\r\n        for ( i=0; i < children.length; i++ ) {\r\n          addBackgroundImage( children[i] );\r\n        }\r\n      }\r\n    }\r\n\r\n    return watch(imgs);\r\n  }\r\n\r\n  function preload(urls,options) {\r\n      if (langx.isString(urls)) {\r\n        urls = [urls];\r\n      }\r\n      var images = [];\r\n\r\n      urls.forEach(function(url){\r\n        var img = new Image();\r\n        img.src = url;\r\n        images.push(img);\r\n      });\r\n\r\n      return watch(images);\r\n  }\r\n\r\n\r\n  $.fn.imagesLoaded = function( options ) {\r\n    return loaded(this,options);\r\n  };\r\n\r\n\r\n  function viewer(el,options) {\r\n    var img ,\r\n        style = {},\r\n        clientSize = geom.clientSize(el),\r\n        loadedCallback = options.loaded,\r\n        faileredCallback = options.failered;\r\n\r\n    function onload() {\r\n        styler.css(img,{//居中\r\n          top: (clientSize.height - img.offsetHeight) / 2 + \"px\",\r\n          left: (clientSize.width - img.offsetWidth) / 2 + \"px\"\r\n        });\r\n\r\n        transforms.reset(img);\r\n\r\n        styler.css(img,{\r\n          visibility: \"visible\"\r\n        });\r\n\r\n        if (loadedCallback) {\r\n          loadedCallback();\r\n        }\r\n    }\r\n\r\n    function onerror() {\r\n\r\n    }\r\n    function _init() {\r\n      style = styler.css(el,[\"position\",\"overflow\"]);\r\n      if (style.position != \"relative\" && style.position != \"absolute\") { \r\n        styler.css(el,\"position\", \"relative\" );\r\n      }\r\n      styler.css(el,\"overflow\", \"hidden\" );\r\n\r\n      img = new Image();\r\n\r\n      styler.css(img,{\r\n        position: \"absolute\",\r\n        border: 0, padding: 0, margin: 0, width: \"auto\", height: \"auto\",\r\n        visibility: \"hidden\"\r\n      });\r\n\r\n      img.onload = onload;\r\n      img.onerror = onerror;\r\n\r\n      noder.append(el,img);\r\n\r\n      if (options.url) {\r\n        _load(options.url);\r\n      }\r\n    }\r\n\r\n    function _load(url) {\r\n        img.style.visibility = \"hidden\";\r\n        img.src = url;\r\n    }\r\n\r\n    function _dispose() {\r\n        noder.remove(img);\r\n        styler.css(el,style);\r\n        img = img.onload = img.onerror = null;\r\n    }\r\n\r\n    _init();\r\n\r\n    var ret =  {\r\n      load : _load,\r\n      dispose : _dispose\r\n    };\r\n\r\n    [\"vertical\",\"horizontal\",\"rotate\",\"left\",\"right\",\"scale\",\"zoom\",\"zoomin\",\"zoomout\",\"reset\"].forEach(\r\n      function(name){\r\n        ret[name] = function() {\r\n          var args = langx.makeArray(arguments);\r\n          args.unshift(img);\r\n          transforms[name].apply(null,args);\r\n        }\r\n      }\r\n    );\r\n\r\n    return ret;\r\n  }\r\n\r\n  $.fn.imagesViewer = function( options ) {\r\n    return viewer(this,options);\r\n  };\r\n\r\n  function images() {\r\n    return images;\r\n  }\r\n\r\n  images.transform = function (el,options) {\r\n  };\r\n\r\n  [\"vertical\",\"horizontal\",\"rotate\",\"left\",\"right\",\"scale\",\"zoom\",\"zoomin\",\"zoomout\",\"reset\"].forEach(\r\n    function(name){\r\n      images.transform[name] = transforms[name];\r\n    }\r\n  );\r\n\r\n\r\n  langx.mixin(images, {\r\n    isCompleted : isCompleted,\r\n\r\n    isLoaded : isLoaded,\r\n\r\n    loaded : loaded,\r\n\r\n    preload : preload,\r\n\r\n    viewer : viewer\r\n  });\r\n\r\n  return skylark.images = images;\r\n});\r\n\ndefine('skylark-utils-dom/scripter',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./finder\"\r\n], function(skylark, langx, noder, finder) {\r\n\r\n    var head = document.getElementsByTagName('head')[0],\r\n        scriptsByUrl = {},\r\n        scriptElementsById = {},\r\n        count = 0;\r\n\r\n    function scripter() {\r\n        return scripter;\r\n    }\r\n\r\n    langx.mixin(scripter, {\r\n        /*\r\n         * Load a script from a url into the document.\r\n         * @param {} url\r\n         * @param {} loadedCallback\r\n         * @param {} errorCallback\r\n         */\r\n        loadJavaScript: function(url, loadedCallback, errorCallback) {\r\n            var script = scriptsByUrl[url];\r\n            if (!script) {\r\n                script = scriptsByUrl[url] = {\r\n                    state: 0, //0:unload,1:loaded,-1:loaderror\r\n                    loadedCallbacks: [],\r\n                    errorCallbacks: []\r\n                }\r\n            }\r\n\r\n            script.loadedCallbacks.push(loadedCallback);\r\n            script.errorCallbacks.push(errorCallback);\r\n\r\n            if (script.state === 1) {\r\n                script.node.onload();\r\n            } else if (script.state === -1) {\r\n                script.node.onerror();\r\n            } else {\r\n                var node = script.node = document.createElement(\"script\"),\r\n                    id = script.id = (count++);\r\n\r\n                node.type = \"text/javascript\";\r\n                node.async = false;\r\n                node.defer = false;\r\n                startTime = new Date().getTime();\r\n                head.appendChild(node);\r\n\r\n                node.onload = function() {\r\n                        script.state = 1;\r\n\r\n                        var callbacks = script.loadedCallbacks,\r\n                            i = callbacks.length;\r\n\r\n                        while (i--) {\r\n                            callbacks[i]();\r\n                        }\r\n                        script.loadedCallbacks = [];\r\n                        script.errorCallbacks = [];\r\n                    },\r\n                    node.onerror = function() {\r\n                        script.state = -1;\r\n                        var callbacks = script.errorCallbacks,\r\n                            i = callbacks.length;\r\n\r\n                        while (i--) {\r\n                            callbacks[i]();\r\n                        }\r\n                        script.loadedCallbacks = [];\r\n                        script.errorCallbacks = [];\r\n                    };\r\n                node.src = url;\r\n\r\n                scriptElementsById[id] = node;\r\n            }\r\n            return script.id;\r\n        },\r\n        /*\r\n         * Remove the specified script from the document.\r\n         * @param {Number} id\r\n         */\r\n        deleteJavaScript: function(id) {\r\n            var node = scriptElementsById[id];\r\n            if (node) {\r\n                var url = node.src;\r\n                noder.remove(node);\r\n                delete scriptElementsById[id];\r\n                delete scriptsByUrl[url];\r\n            }\r\n        }\r\n    });\r\n\r\n    return skylark.scripter = scripter;\r\n});\ndefine('skylark-utils-dom/velm',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./datax\",\r\n    \"./eventer\",\r\n    \"./finder\",\r\n    \"./fx\",\r\n    \"./geom\",\r\n    \"./noder\",\r\n    \"./styler\"\r\n], function(skylark, langx, datax, eventer, finder, fx, geom, noder, styler) {\r\n    var map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n    /*\r\n     * VisualElement is a skylark class type wrapping a visule dom node,provides a number of prototype methods and supports chain calls.\r\n     */\r\n    var VisualElement = langx.klass({\r\n        klassName: \"VisualElement\",\r\n\r\n        \"init\": function(node) {\r\n            if (langx.isString(node)) {\r\n                node = document.getElementById(node);\r\n            }\r\n            this.domNode = node;\r\n        }\r\n    });\r\n    /*\r\n     * the VisualElement object wrapping document.body\r\n     */\r\n    var root = new VisualElement(document.body),\r\n        velm = function(node) {\r\n            if (node) {\r\n                return new VisualElement(node);\r\n            } else {\r\n                return root;\r\n            }\r\n        };\r\n    /*\r\n     * Extend VisualElement prototype with wrapping the specified methods.\r\n     * @param {ArrayLike} fn\r\n     * @param {Object} context\r\n     */\r\n    function _delegator(fn, context) {\r\n        return function() {\r\n            var self = this,\r\n                elem = self.domNode,\r\n                ret = fn.apply(context, [elem].concat(slice.call(arguments)));\r\n\r\n            if (ret) {\r\n                if (ret === context) {\r\n                    return self;\r\n                } else {\r\n                    if (ret instanceof HTMLElement) {\r\n                        ret = new VisualElement(ret);\r\n                    } else if (langx.isArrayLike(ret)) {\r\n                        ret = map.call(ret, function(el) {\r\n                            if (el instanceof HTMLElement) {\r\n                                return new VisualElement(ret);\r\n                            } else {\r\n                                return el;\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            return ret;\r\n        };\r\n    }\r\n\r\n    langx.mixin(velm, {\r\n        batch: function(nodes, action, args) {\r\n            nodes.forEach(function(node) {\r\n                var elm = (node instanceof VisualElement) ? node : velm(node);\r\n                elm[action].apply(elm, args);\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        root: new VisualElement(document.body),\r\n\r\n        VisualElement: VisualElement,\r\n\r\n        partial: function(name, fn) {\r\n            var props = {};\r\n\r\n            props[name] = fn;\r\n\r\n            VisualElement.partial(props);\r\n        },\r\n\r\n        delegate: function(names, context) {\r\n            var props = {};\r\n\r\n            names.forEach(function(name) {\r\n                props[name] = _delegator(context[name], context);\r\n            });\r\n\r\n            VisualElement.partial(props);\r\n        }\r\n    });\r\n\r\n    // from ./datax\r\n    velm.delegate([\r\n        \"attr\",\r\n        \"data\",\r\n        \"prop\",\r\n        \"removeAttr\",\r\n        \"removeData\",\r\n        \"text\",\r\n        \"val\"\r\n    ], datax);\r\n\r\n    // from ./dnd\r\n    velm.delegate([\r\n        \"draggable\",\r\n        \"droppable\"\r\n    ], dnd);\r\n\r\n\r\n    // from ./eventer\r\n    velm.delegate([\r\n        \"off\",\r\n        \"on\",\r\n        \"one\",\r\n        \"shortcuts\",\r\n        \"trigger\"\r\n    ], eventer);\r\n\r\n    // from ./finder\r\n    velm.delegate([\r\n        \"ancestor\",\r\n        \"ancestors\",\r\n        \"children\",\r\n        \"descendant\",\r\n        \"find\",\r\n        \"findAll\",\r\n        \"firstChild\",\r\n        \"lastChild\",\r\n        \"matches\",\r\n        \"nextSibling\",\r\n        \"nextSiblings\",\r\n        \"parent\",\r\n        \"previousSibling\",\r\n        \"previousSiblings\",\r\n        \"siblings\"\r\n    ], finder);\r\n\r\n    /*\r\n     * find a dom element matched by the specified selector.\r\n     * @param {String} selector\r\n     */\r\n    velm.find = function(selector) {\r\n        if (selector === \"body\") {\r\n            return this.root;\r\n        } else {\r\n            return this.root.descendant(selector);\r\n        }\r\n    };\r\n\r\n    // from ./fx\r\n    velm.delegate([\r\n        \"animate\",\r\n        \"fadeIn\",\r\n        \"fadeOut\",\r\n        \"fadeTo\",\r\n        \"fadeToggle\",\r\n        \"hide\",\r\n        \"scrollToTop\",\r\n        \"show\",\r\n        \"toggle\"\r\n    ], fx);\r\n\r\n\r\n    // from ./geom\r\n    velm.delegate([\r\n        \"borderExtents\",\r\n        \"boundingPosition\",\r\n        \"boundingRect\",\r\n        \"clientHeight\",\r\n        \"clientSize\",\r\n        \"clientWidth\",\r\n        \"contentRect\",\r\n        \"height\",\r\n        \"marginExtents\",\r\n        \"offsetParent\",\r\n        \"paddingExtents\",\r\n        \"pagePosition\",\r\n        \"pageRect\",\r\n        \"relativePosition\",\r\n        \"relativeRect\",\r\n        \"scrollIntoView\",\r\n        \"scrollLeft\",\r\n        \"scrollTop\",\r\n        \"size\",\r\n        \"width\"\r\n    ], geom);\r\n\r\n    // from ./noder\r\n    velm.delegate([\r\n        \"after\",\r\n        \"append\",\r\n        \"before\",\r\n        \"clone\",\r\n        \"contains\",\r\n        \"contents\",\r\n        \"empty\",\r\n        \"html\",\r\n        \"isChildOf\",\r\n        \"ownerDoc\",\r\n        \"prepend\",\r\n        \"remove\",\r\n        \"removeChild\",\r\n        \"replace\",\r\n        \"reverse\",\r\n        \"throb\",\r\n        \"traverse\",\r\n        \"wrapper\",\r\n        \"wrapperInner\",\r\n        \"unwrap\"\r\n    ], noder);\r\n\r\n    // from ./styler\r\n    velm.delegate([\r\n        \"addClass\",\r\n        \"className\",\r\n        \"css\",\r\n        \"hasClass\",\r\n        \"hide\",\r\n        \"isInvisible\",\r\n        \"removeClass\",\r\n        \"show\",\r\n        \"toggleClass\"\r\n    ], styler);\r\n\r\n    // properties\r\n\r\n    var properties = [ 'position', 'left', 'top', 'right', 'bottom', 'width', 'height', 'border', 'borderLeft',\r\n    'borderTop', 'borderRight', 'borderBottom', 'borderColor', 'display', 'overflow', 'margin', 'marginLeft', 'marginTop', 'marginRight', 'marginBottom', 'padding', 'paddingLeft', 'paddingTop', 'paddingRight', 'paddingBottom', 'color',\r\n    'background', 'backgroundColor', 'opacity', 'fontSize', 'fontWeight', 'textAlign', 'textDecoration', 'textTransform', 'cursor', 'zIndex' ];\r\n\r\n    properties.forEach( function ( property ) {\r\n\r\n        var method = property;\r\n\r\n        VisualElement.prototype[method ] = function (value) {\r\n\r\n            this.css( property, value );\r\n\r\n            return this;\r\n\r\n        };\r\n\r\n    });\r\n\r\n    // events\r\n    var events = [ 'keyUp', 'keyDown', 'mouseOver', 'mouseOut', 'click', 'dblClick', 'change' ];\r\n\r\n    events.forEach( function ( event ) {\r\n\r\n        var method = event;\r\n\r\n        VisualElement.prototype[method ] = function ( callback ) {\r\n\r\n            this.on( event.toLowerCase(), callback);\r\n\r\n            return this;\r\n        };\r\n\r\n    });\r\n\r\n    return skylark.velm = velm;\r\n});\ndefine('skylark-utils-dom/main',[\r\n    \"./skylark\",\r\n    \"./browser\",\r\n    \"./css\",\r\n    \"./datax\",\r\n    \"./eventer\",\r\n    \"./finder\",\r\n    \"./fx\",\r\n    \"./geom\",\r\n    \"./images\",\r\n    \"./noder\",\r\n    \"./query\",\r\n    \"./scripter\",\r\n    \"./styler\",\r\n    \"./transforms\",\r\n    \"./langx\",\r\n    \"./velm\"\r\n], function(skylark) {\r\n    return skylark;\r\n})\r\n;\ndefine('skylark-utils-dom', ['skylark-utils-dom/main'], function (main) { return main; });\n\n"]}