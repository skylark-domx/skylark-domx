{"version":3,"sources":["skylark-utils-dom.js"],"names":["define","skylark","dom","langx","vendorPrefix","vendorPrefixRE","transEndEventNames","WebkitTransition","MozTransition","OTransition","transition","transEndEventName","css3PropPrefix","css3EventPrefix","cssStyles","cssProps","vendorPrefixesRE","document","window","testEl","createElement","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","requestFullScreen","requestFullscreen","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","testStyle","exitFullscreen","webkitCancelFullScreen","mozCancelFullScreen","msExitFullscreen","style","name","matched","match","RegExp","toLowerCase","lowerFirst","cssPropName","dasherize","browser","undefined","mixin","isIE","exec","navigator","userAgent","normalizeStyleProperty","normalizeCssProperty","normalizeCssEvent","location","support","end","Array","prototype","every","forEach","camelCase","maybeAddPx","value","cssNumber","column-count","columns","font-weight","line-height","opacity","z-index","zoom","classReCache","classRE","className","node","klass","svg","baseVal","elementDisplay","styler","autocssfix","cssHooks","addClass","elm","this","names","cls","isString","split","re","css","property","arguments","length","computedStyle","getComputedStyle","getPropertyValue","isArrayLike","props","call","prop","removeProperty","key","cssText","disabled","hasClass","hide","isInvisible","removeClass","replace","trim","show","nodeName","element","display","body","appendChild","parentNode","removeChild","defaultDisplay","toggleClass","when","self","fragmentRE","singleTagRE","div","table","tableBody","tableRow","containers","tr","tbody","thead","tfoot","td","th","*","rootNodeRE","map","slice","ensureNodes","nodes","copyByClone","cloneNode","flatten","append","placing","i","tag","parent","setAttribute","rxhtmlTag","isChildOf","directly","documentElement","contains","ownerDoc","nodeType","ownerDocument","noder","active","doc","el","activeElement","error","blur","clone","deep","each","getAttribs","attr","setAttrib","getAttrib","contents","chkName","contentDocument","childNodes","createFragment","html","test","$1","container","innerHTML","child","createTextNode","text","empty","hasChildNodes","firstChild","fullScreen","exitFullScreen","apply","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","focusable","hasTabindex","mapName","img","focusableIfVisible","fieldset","href","$","is","closest","visible","isNumber","isDoc","DOCUMENT_NODE","isWindow","offsetParent","ownerWindow","defaultView","parentWindow","after","refNode","nextSibling","insertBefore","before","prepend","remove","e","console","warn","children","oldNode","replaceChild","throb","params","timer","time","callback","throbber","overlayDiv","position","top","left","width","height","zIndex","overlay","textNode","clearTimeout","setTimeout","update","nodeValue","traverse","fn","len","reverse","wrapper","wrapperNode","wrapperInner","unwrap","insertRuleFunc","head","getElementsByTagName","count","sheetsById","defaultSheetId","_createStyleSheet","defaultSheet","rulesPropName","deleteRuleFunc","deleteRule","removeRule","insertRule","_insertRule","selector","index","addRule","external","options","type","id","media","create","rel","async","deleteSheetRule","sheetId","rule","sheet","_rule","addSheetRules","rules","toString","isAtRule","str","startsWith","json","adjust","parentName","depth","strNode","values","atFlg","SPACE","repeat","isArray","n","adjusted","addRules","createStyleSheet","insertSheetRule","removeStyleSheet","Error","velm","local","filter","nativeMatchesSelector","parsed","separatorIndex","combinatorIndex","reversed","from","cache","reverseCache","reUnescape","parse","expression","isReversed","Slick","currentCache","expressions","raw","regexp","parser","reverseCombinator","combinator","exp","last","parts","j","cexp","push","escapeRegExp","string","rawMatch","separator","combinatorChildren","tagName","attributeKey","attributeOperator","attributeQuote","attributeValue","pseudoMarker","pseudoClass","pseudoQuote","pseudoClassQuotedValue","pseudoClassValue","currentSeparator","currentParsed","classList","classes","pseudos","indexOf","attributes","operator","rinputs","rheader","parseSelector","button","elem","checked","idx","enabled","eq","even","focus","tabindex","first","gt","has","sel","find","header","hidden","input","lt","not","matches","odd","selected","tabbable","tabIndex","offsetWidth","createInputPseudo","createButtonPseudo","item","isArrayFilter","radio","checkbox","file","password","image","submit","reset","ancestors","root","ret","rootIsSelector","descendants","querySelectorAll","matchError","query","descendant","querySelector","lastChild","previousSibling","inArray","isPlainObject","check","adjacent","nextSiblings","previousSiblings","siblings","divide","cond","nativeSelector","customPseudos","JSON","stringify","part","toUpperCase","arrayFilte","pseudo","getAttribute","hasAttribute","currentExpression","simpleExpCounter","filterSingle","matchs","uniq","concat","combine","bit","node1","op","prev","next","divided","single","currentBit","founds","found","currentItems","finder","ancestor","byId","getElementById","findAll","deserializeValue","capitalRE","propMap","readonly","for","class","maxlength","cellspacing","cellpadding","rowspan","colspan","usemap","frameborder","contenteditable","attrName","_store","confirm","store","_attributeData","_setData","data","dataAttrName","camelName","_getData","pluck","datax","dataName","aria","cleanData","removeAttr","removeAttribute","removeData","removeProp","txt","textContent","val","multiple","selectedOptions","option","uid","ignoreProperties","eventMethods","preventDefault","stopImmediatePropagation","stopPropagation","readyRE","compatible","event","source","isDefaultPrevented","predicate","sourceMethod","returnTrue","returnFalse","segs","ns","sort","join","createEvent","EventCtors","NativeEvents","compositionstart","compositionend","compositionupdate","beforecopy","beforecut","beforepaste","copy","cut","paste","drag","dragend","dragenter","dragexit","dragleave","dragover","dragstart","drop","abort","change","selectionchange","focusin","focusout","keydown","keypress","keyup","message","click","contextmenu","dblclick","mousedown","mouseup","mousemove","mouseover","mouseout","mouseenter","mouseleave","textInput","touchstart","touchmove","touchend","load","resize","select","scroll","unload","wheel","bubbles","cancelable","namespace","ctor","getEventCtor","safeMixin","createProxy","src","proxy","originalEvent","specialEvents","focusinSupported","hover","realEvent","handlers","EventBindings","init","target","_target","_event","_bindings","add","bindings","binding","_listener","domEvt","args","_args","isDefined","isImmediatePropagationStopped","one","currentTarget","liveFired","related","relatedTarget","result","addEventListener","matcher","removing","removeEventListener","EventsHandler","_handler","register","specialEvent","bindingEvent","bindType","bindEventName","events","unregister","listener","findHandler","handler","on","isFunction","ready","readyState","defer","keyCodeLookup","backspace","comma","delete","down","enter","escape","home","page_down","page_up","period","right","space","tab","up","eventer","transitionEnd","delegateType","keys","off","shortcuts","registry","run","shortcut","metaKey","ctrlKey","ctrl","alt","altKey","shift","shiftKey","keyCode","charCode","pattern","shortcutKey","setting","charCodeAt","regKey","special","stop","all","trigger","evented","Event","dispatchEvent","cachedScrollbarWidth","px","toPixel","scrollbarWidth","w1","w2","innerDiv","clientWidth","borderExtents","bottom","s","borderLeftWidth","borderTopWidth","borderRightWidth","borderBottomWidth","boundingPosition","coords","getBoundingClientRect","parentOffset","mex","marginExtents","pbex","relativePosition","boundingRect","size","clientSize","dimension","clientHeight","isBorderBox","bex","pex","paddingExtents","getDocumentSize","max","Math","scrollWidth","scrollHeight","offsetHeight","marginLeft","marginTop","marginRight","marginBottom","marginSize","obj","me","paddingLeft","paddingTop","paddingRight","paddingBottom","pagePosition","pageXOffset","pageYOffset","offset","relativeRect","scrollLeft","hasScrollLeft","scrollTo","scrollY","scrollTop","hasScrollTop","scrollX","innerWidth","innerHeight","isDocument","geom","contentRect","cs","marginRect","pageRect","round","scrollIntoView","align","x","y","parentWidth","parentHeight","parentElm","pos","rootElm","offsetLeft","offsetTop","getOffset","abs","rhorizontal","rvertical","roffset","rposition","rpercent","getOffsets","offsets","parseFloat","parseCss","parseInt","positions","fit","newOverRight","within","withinOffset","outerWidth","collisionPosLeft","collisionPosition","overLeft","overRight","collisionWidth","newOverBottom","outerHeight","collisionPosTop","overTop","overBottom","collisionHeight","flip","newOverLeft","myOffset","my","elemWidth","atOffset","at","targetWidth","newOverTop","elemHeight","targetHeight","flipfit","posit","targetOffset","basePosition","dimensions","extend","of","withinElement","hasOffset","msize","scrollInfo","overflowX","overflowY","hasOverflowX","getScrollInfo","collision","pageY","pageX","horizontalOffset","verticalOffset","using","dir","feedback","horizontal","vertical","important","animationName","animationDuration","animationTiming","transitionProperty","transitionDuration","transitionTiming","transitionDelay","animationEnd","supportedTransforms","transform","cssReset","animate","properties","duration","ease","delay","endEvent","wrappedCallback","cssValues","cssProperties","transforms","that","fired","easing","complete","fx","speeds","normal","eace","v","debounce","clientLeft","scrollToTop","speed","scale","scrollFrom","freq","interval","setInterval","clearInterval","fadeTo","fadeIn","fadeOut","slideDown","visibility","overflow","slideUp","queue","fast","slow","fadeToggle","ceasing","allback","slideToggle","toggle","css3Transform","getZoom","d","radian","Cos","Sin","matrix","cos","sin","M11","M12","M21","M22","toFixed","transformData","calcs","PI","rotate","degress","hZoom","vZoom","zoomin","zoomout","calcFunc","makeArray","unshift","isQ","some","rquickExpr","funcArg","isObject","compact","wrapper_map","func","context","wrapper_selector","wrapper_every_act","wrapper_every_act_firstArgFunc","oldValueFunc","arg1","wrapper_name_value","wrapper_value","newValue","NodeList","klassName","charAt","object","get","toArray","isHtmlNode","excludes","parents","parentsUntil","util","pushStack","elms","prevObject","replaceWith","newContent","wrap","structure","wrapAll","wrappingElement","wrapInner","prevAll","nextAll","wrapper_some_chk","detach","fnOver","fnOut","Dimension","m","margin","cb","mb","wrapper_node_operation","argType","arg","appendTo","prependTo","insertAfter","replaceAll","original","elems","insert","toogle","scrollParent","includeHidden","excludeStaticParent","overflowRegex","andSelf","addBack","eventType","place","addContent","content","template","substitute","replaceClass","newClass","oldClass","disableSelection","enableSelection","plugin","returnValue","plugins","instantiate","watch","imgs","totalCount","progressedCount","successedCount","faileredCount","Deferred","resolve","total","successed","failered","progress","isLoaded","progressed","isCompleted","promise","naturalWidth","loaded","addBackgroundImage","elm1","url","Image","childImgs","background","viewer","loadedCallback","onload","onerror","_load","border","padding","_init","dispose","images","imagesLoaded","imagesViewer","preload","urls","VisualElement","_elm","elmx","batch","action","partial","delegate","HTMLElement","_delegator","method","pluginKlasses","pluginName","pluginInstance","destroy","pluginKlass","Plugin","Evented","inherit","_construct","_initOptions","constructor","defaults","ctors","superclass","hasOwnProperty","Object","defineProperty","_destroy","noop","_delay","instance","curOption","pop","_setOptions","_setOption","domNode","shortcutName","extfn","methodName","shortcutter","scriptsByUrl","scriptElementsById","scripter","loadJavaScript","errorCallback","script","state","loadedCallbacks","errorCallbacks","startTime","Date","getTime","callbacks","deleteJavaScript","main"],"mappings":"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","file":"../skylark-utils-dom.js","sourcesContent":["define('skylark-utils-dom/skylark',[\"skylark-langx/skylark\"], function(skylark) {\r\n    return skylark;\r\n});\r\n\ndefine('skylark-utils-dom/dom',[\"./skylark\"], function(skylark) {\r\n\treturn skylark.dom = {};\r\n});\r\n\ndefine('skylark-utils-dom/langx',[\r\n    \"skylark-langx/langx\"\r\n], function(langx) {\r\n    return langx;\r\n});\r\n\ndefine('skylark-utils-dom/browser',[\r\n    \"./dom\",\r\n    \"./langx\"\r\n], function(dom,langx) {\r\n    \"use strict\";\r\n \r\n    var checkedCssProperties = {\r\n            \"transitionproperty\": \"TransitionProperty\",\r\n        },\r\n        transEndEventNames = {\r\n          WebkitTransition : 'webkitTransitionEnd',\r\n          MozTransition    : 'transitionend',\r\n          OTransition      : 'oTransitionEnd otransitionend',\r\n          transition       : 'transitionend'\r\n        },\r\n        transEndEventName = null;\r\n\r\n\r\n    var css3PropPrefix = \"\",\r\n        css3StylePrefix = \"\",\r\n        css3EventPrefix = \"\",\r\n\r\n        cssStyles = {},\r\n        cssProps = {},\r\n\r\n        vendorPrefix,\r\n        vendorPrefixRE,\r\n        vendorPrefixesRE = /^(Webkit|webkit|O|Moz|moz|ms)(.*)$/,\r\n\r\n        document = window.document,\r\n        testEl = document.createElement(\"div\"),\r\n\r\n        matchesSelector = testEl.webkitMatchesSelector ||\r\n                          testEl.mozMatchesSelector ||\r\n                          testEl.oMatchesSelector ||\r\n                          testEl.matchesSelector,\r\n\r\n        requestFullScreen = testEl.requestFullscreen || \r\n                            testEl.webkitRequestFullscreen || \r\n                            testEl.mozRequestFullScreen || \r\n                            testEl.msRequestFullscreen,\r\n\r\n        exitFullScreen =  document.exitFullscreen ||\r\n                          document.webkitCancelFullScreen ||\r\n                          document.mozCancelFullScreen ||\r\n                          document.msExitFullscreen,\r\n\r\n        testStyle = testEl.style;\r\n\r\n    for (var name in testStyle) {\r\n        var matched = name.match(vendorPrefixRE || vendorPrefixesRE);\r\n        if (matched) {\r\n            if (!vendorPrefixRE) {\r\n                vendorPrefix = matched[1];\r\n                vendorPrefixRE = new RegExp(\"^(\" + vendorPrefix + \")(.*)$\");\r\n\r\n                css3StylePrefix = vendorPrefix;\r\n                css3PropPrefix = '-' + vendorPrefix.toLowerCase() + '-';\r\n                css3EventPrefix = vendorPrefix.toLowerCase();\r\n            }\r\n\r\n            cssStyles[langx.lowerFirst(matched[2])] = name;\r\n            var cssPropName = langx.dasherize(matched[2]);\r\n            cssProps[cssPropName] = css3PropPrefix + cssPropName;\r\n\r\n            if (transEndEventNames[name]) {\r\n              transEndEventName = transEndEventNames[name];\r\n            }\r\n        }\r\n    }\r\n\r\n    if (!transEndEventName) {\r\n        if (testStyle[\"transition\"] !== undefined) {\r\n            transEndEventName = transEndEventNames[\"transition\"];\r\n        }\r\n    }\r\n\r\n    function normalizeCssEvent(name) {\r\n        return css3EventPrefix ? css3EventPrefix + name : name.toLowerCase();\r\n    }\r\n\r\n    function normalizeCssProperty(name) {\r\n        return cssProps[name] || name;\r\n    }\r\n\r\n    function normalizeStyleProperty(name) {\r\n        return cssStyles[name] || name;\r\n    }\r\n\r\n    function browser() {\r\n        return browser;\r\n    }\r\n\r\n    langx.mixin(browser, {\r\n        css3PropPrefix: css3PropPrefix,\r\n\r\n        isIE : !!/msie/i.exec( window.navigator.userAgent ),\r\n\r\n        normalizeStyleProperty: normalizeStyleProperty,\r\n\r\n        normalizeCssProperty: normalizeCssProperty,\r\n\r\n        normalizeCssEvent: normalizeCssEvent,\r\n\r\n        matchesSelector: matchesSelector,\r\n\r\n        requestFullScreen : requestFullScreen,\r\n\r\n        exitFullscreen : requestFullScreen,\r\n\r\n        location: function() {\r\n            return window.location;\r\n        },\r\n\r\n        support : {\r\n\r\n        }\r\n\r\n    });\r\n\r\n    if  (transEndEventName) {\r\n        browser.support.transition = {\r\n            end : transEndEventName\r\n        };\r\n    }\r\n\r\n    testEl = null;\r\n\r\n    return dom.browser = browser;\r\n});\r\n\ndefine('skylark-utils-dom/styler',[\r\n    \"./dom\",\r\n    \"./langx\"\r\n], function(dom, langx) {\r\n    var every = Array.prototype.every,\r\n        forEach = Array.prototype.forEach,\r\n        camelCase = langx.camelCase,\r\n        dasherize = langx.dasherize;\r\n\r\n    function maybeAddPx(name, value) {\r\n        return (typeof value == \"number\" && !cssNumber[dasherize(name)]) ? value + \"px\" : value\r\n    }\r\n\r\n    var cssNumber = {\r\n            'column-count': 1,\r\n            'columns': 1,\r\n            'font-weight': 1,\r\n            'line-height': 1,\r\n            'opacity': 1,\r\n            'z-index': 1,\r\n            'zoom': 1\r\n        },\r\n        classReCache = {\r\n\r\n        };\r\n\r\n    function classRE(name) {\r\n        return name in classReCache ?\r\n            classReCache[name] : (classReCache[name] = new RegExp('(^|\\\\s)' + name + '(\\\\s|$)'));\r\n    }\r\n\r\n    // access className property while respecting SVGAnimatedString\r\n    /*\r\n     * Adds the specified class(es) to each element in the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {String} value\r\n     */\r\n    function className(node, value) {\r\n        var klass = node.className || '',\r\n            svg = klass && klass.baseVal !== undefined\r\n\r\n        if (value === undefined) return svg ? klass.baseVal : klass\r\n        svg ? (klass.baseVal = value) : (node.className = value)\r\n    }\r\n\r\n    function disabled(elm, value ) {\r\n        if (arguments.length < 2) {\r\n            return !!this.dom.disabled;\r\n        }\r\n\r\n        elm.disabled = value;\r\n\r\n        return this;\r\n    }\r\n\r\n    var elementDisplay = {};\r\n\r\n    function defaultDisplay(nodeName) {\r\n        var element, display\r\n        if (!elementDisplay[nodeName]) {\r\n            element = document.createElement(nodeName)\r\n            document.body.appendChild(element)\r\n            display = getComputedStyle(element, '').getPropertyValue(\"display\")\r\n            element.parentNode.removeChild(element)\r\n            display == \"none\" && (display = \"block\")\r\n            elementDisplay[nodeName] = display\r\n        }\r\n        return elementDisplay[nodeName]\r\n    }\r\n    /*\r\n     * Display the matched elements.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function show(elm) {\r\n        styler.css(elm, \"display\", \"\");\r\n        if (styler.css(elm, \"display\") == \"none\") {\r\n            styler.css(elm, \"display\", defaultDisplay(elm.nodeName));\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function isInvisible(elm) {\r\n        return styler.css(elm, \"display\") == \"none\" || styler.css(elm, \"opacity\") == 0;\r\n    }\r\n\r\n    /*\r\n     * Hide the matched elements.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function hide(elm) {\r\n        styler.css(elm, \"display\", \"none\");\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Adds the specified class(es) to each element in the set of matched elements.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function addClass(elm, name) {\r\n        if (!name) return this\r\n        var cls = className(elm),\r\n            names;\r\n        if (langx.isString(name)) {\r\n            names = name.split(/\\s+/g);\r\n        } else {\r\n            names = name;\r\n        }\r\n        names.forEach(function(klass) {\r\n            var re = classRE(klass);\r\n            if (!cls.match(re)) {\r\n                cls += (cls ? \" \" : \"\") + klass;\r\n            }\r\n        });\r\n\r\n        className(elm, cls);\r\n\r\n        return this;\r\n    }\r\n    /*\r\n     * Get the value of a computed style property for the first element in the set of matched elements or set one or more CSS properties for every matched element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} property\r\n     * @param {Any} value\r\n     */\r\n    function css(elm, property, value) {\r\n        if (arguments.length < 3) {\r\n            var computedStyle,\r\n                computedStyle = getComputedStyle(elm, '')\r\n            if (langx.isString(property)) {\r\n                return elm.style[camelCase(property)] || computedStyle.getPropertyValue(dasherize(property))\r\n            } else if (langx.isArrayLike(property)) {\r\n                var props = {}\r\n                forEach.call(property, function(prop) {\r\n                    props[prop] = (elm.style[camelCase(prop)] || computedStyle.getPropertyValue(dasherize(prop)))\r\n                })\r\n                return props\r\n            }\r\n        }\r\n\r\n        var css = '';\r\n        if (typeof(property) == 'string') {\r\n            if (!value && value !== 0) {\r\n                elm.style.removeProperty(dasherize(property));\r\n            } else {\r\n                css = dasherize(property) + \":\" + maybeAddPx(property, value)\r\n            }\r\n        } else {\r\n            for (key in property) {\r\n                if (property[key] === undefined) {\r\n                    continue;\r\n                }\r\n                if (!property[key] && property[key] !== 0) {\r\n                    elm.style.removeProperty(dasherize(key));\r\n                } else {\r\n                    css += dasherize(key) + ':' + maybeAddPx(key, property[key]) + ';'\r\n                }\r\n            }\r\n        }\r\n\r\n        elm.style.cssText += ';' + css;\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Determine whether any of the matched elements are assigned the given class.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function hasClass(elm, name) {\r\n        var re = classRE(name);\r\n        return elm.className && elm.className.match(re);\r\n    }\r\n\r\n    /*\r\n     * Remove a single class, multiple classes, or all classes from each element in the set of matched elements.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function removeClass(elm, name) {\r\n        if (name) {\r\n            var cls = className(elm),\r\n                names;\r\n\r\n            if (langx.isString(name)) {\r\n                names = name.split(/\\s+/g);\r\n            } else {\r\n                names = name;\r\n            }\r\n\r\n            names.forEach(function(klass) {\r\n                var re = classRE(klass);\r\n                if (cls.match(re)) {\r\n                    cls = cls.replace(re, \" \");\r\n                }\r\n            });\r\n\r\n            className(elm, cls.trim());\r\n        } else {\r\n            className(elm, \"\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Add or remove one or more classes from the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     * @param {} when\r\n     */\r\n    function toggleClass(elm, name, when) {\r\n        var self = this;\r\n        name.split(/\\s+/g).forEach(function(klass) {\r\n            if (when === undefined) {\r\n                when = !self.hasClass(elm, klass);\r\n            }\r\n            if (when) {\r\n                self.addClass(elm, klass);\r\n            } else {\r\n                self.removeClass(elm, klass)\r\n            }\r\n        });\r\n\r\n        return self;\r\n    }\r\n\r\n    var styler = function() {\r\n        return styler;\r\n    };\r\n\r\n    langx.mixin(styler, {\r\n        autocssfix: false,\r\n        cssHooks: {\r\n\r\n        },\r\n\r\n        addClass: addClass,\r\n        className: className,\r\n        css: css,\r\n        disabled : disabled,        \r\n        hasClass: hasClass,\r\n        hide: hide,\r\n        isInvisible: isInvisible,\r\n        removeClass: removeClass,\r\n        show: show,\r\n        toggleClass: toggleClass\r\n    });\r\n\r\n    return dom.styler = styler;\r\n});\ndefine('skylark-utils-dom/noder',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./styler\"\r\n], function(dom, langx, browser, styler) {\r\n    var isIE = !!navigator.userAgent.match(/Trident/g) || !!navigator.userAgent.match(/MSIE/g),\r\n        fragmentRE = /^\\s*<(\\w+|!)[^>]*>/,\r\n        singleTagRE = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\r\n        div = document.createElement(\"div\"),\r\n        table = document.createElement('table'),\r\n        tableBody = document.createElement('tbody'),\r\n        tableRow = document.createElement('tr'),\r\n        containers = {\r\n            'tr': tableBody,\r\n            'tbody': table,\r\n            'thead': table,\r\n            'tfoot': table,\r\n            'td': tableRow,\r\n            'th': tableRow,\r\n            '*': div\r\n        },\r\n        rootNodeRE = /^(?:body|html)$/i,\r\n        map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    function ensureNodes(nodes, copyByClone) {\r\n        if (!langx.isArrayLike(nodes)) {\r\n            nodes = [nodes];\r\n        }\r\n        if (copyByClone) {\r\n            nodes = map.call(nodes, function(node) {\r\n                return node.cloneNode(true);\r\n            });\r\n        }\r\n        return langx.flatten(nodes);\r\n    }\r\n\r\n    function nodeName(elm, chkName) {\r\n        var name = elm.nodeName && elm.nodeName.toLowerCase();\r\n        if (chkName !== undefined) {\r\n            return name === chkName.toLowerCase();\r\n        }\r\n        return name;\r\n    };\r\n\r\n\r\n    function activeElement(doc) {\r\n        doc = doc || document;\r\n        var el;\r\n\r\n        // Support: IE 9 only\r\n        // IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\r\n        try {\r\n            el = doc.activeElement;\r\n        } catch ( error ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        // Support: IE 9 - 11 only\r\n        // IE may return null instead of an element\r\n        // Interestingly, this only seems to occur when NOT in an iframe\r\n        if ( !el ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        // Support: IE 11 only\r\n        // IE11 returns a seemingly empty object in some cases when accessing\r\n        // document.activeElement from an <iframe>\r\n        if ( !el.nodeName ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        return el;\r\n    };\r\n\r\n    function after(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone),\r\n                refNode = refNode.nextSibling;\r\n\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                if (refNode) {\r\n                    parent.insertBefore(nodes[i], refNode);\r\n                } else {\r\n                    parent.appendChild(nodes[i]);\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function append(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            parentNode.appendChild(nodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function before(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone);\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                parent.insertBefore(nodes[i], refNode);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    /*   \r\n     * Get the children of the specified node, including text and comment nodes.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function contents(elm) {\r\n        if (nodeName(elm, \"iframe\")) {\r\n            return elm.contentDocument;\r\n        }\r\n        return elm.childNodes;\r\n    }\r\n\r\n    /*   \r\n     * Create a element and set attributes on it.\r\n     * @param {HTMLElement} tag\r\n     * @param {props} props\r\n     * @param } parent\r\n     */\r\n    function createElement(tag, props, parent) {\r\n        var node = document.createElement(tag);\r\n        if (props) {\r\n            for (var name in props) {\r\n                node.setAttribute(name, props[name]);\r\n            }\r\n        }\r\n        if (parent) {\r\n            append(parent, node);\r\n        }\r\n        return node;\r\n    }\r\n\r\n    /*   \r\n     * Create a DocumentFragment from the HTML fragment.\r\n     * @param {String} html\r\n     */\r\n    function createFragment(html) {\r\n        // A special case optimization for a single tag\r\n        html = langx.trim(html);\r\n        if (singleTagRE.test(html)) {\r\n            return [createElement(RegExp.$1)];\r\n        }\r\n\r\n        var name = fragmentRE.test(html) && RegExp.$1\r\n        if (!(name in containers)) {\r\n            name = \"*\"\r\n        }\r\n        var container = containers[name];\r\n        container.innerHTML = \"\" + html;\r\n        dom = slice.call(container.childNodes);\r\n\r\n        dom.forEach(function(node) {\r\n            container.removeChild(node);\r\n        })\r\n\r\n        return dom;\r\n    }\r\n\r\n    /*   \r\n     * Create a deep copy of the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {Boolean} deep\r\n     */\r\n    function clone(node, deep) {\r\n        var self = this,\r\n            clone;\r\n\r\n        // TODO: Add feature detection here in the future\r\n        if (!isIE || node.nodeType !== 1 || deep) {\r\n            return node.cloneNode(deep);\r\n        }\r\n\r\n        // Make a HTML5 safe shallow copy\r\n        if (!deep) {\r\n            clone = document.createElement(node.nodeName);\r\n\r\n            // Copy attribs\r\n            each(self.getAttribs(node), function(attr) {\r\n                self.setAttrib(clone, attr.nodeName, self.getAttrib(node, attr.nodeName));\r\n            });\r\n\r\n            return clone;\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node .\r\n     * @param {String} node\r\n     * @param {Node} child\r\n     */\r\n    function contains(node, child) {\r\n        return isChildOf(child, node);\r\n    }\r\n\r\n    /*   \r\n     * Create a new Text node.\r\n     * @param {String} text\r\n     * @param {Node} child\r\n     */\r\n    function createTextNode(text) {\r\n        return document.createTextNode(text);\r\n    }\r\n\r\n    /*   \r\n     * Get the current document object.\r\n     */\r\n    function doc() {\r\n        return document;\r\n    }\r\n\r\n    /*   \r\n     * Remove all child nodes of the set of matched elements from the DOM.\r\n     * @param {Object} node\r\n     */\r\n    function empty(node) {\r\n        while (node.hasChildNodes()) {\r\n            var child = node.firstChild;\r\n            node.removeChild(child);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    var fulledEl = null;\r\n\r\n    function fullScreen(el) {\r\n        if (el === false) {\r\n            browser.exitFullScreen.apply(document);\r\n        } else if (el) {\r\n            browser.requestFullScreen.apply(el);\r\n            fulledEl = el;\r\n        } else {\r\n            return (\r\n                document.fullscreenElement ||\r\n                document.webkitFullscreenElement ||\r\n                document.mozFullScreenElement ||\r\n                document.msFullscreenElement\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    // Selectors\r\n    function focusable( element, hasTabindex ) {\r\n        var map, mapName, img, focusableIfVisible, fieldset,\r\n            nodeName = element.nodeName.toLowerCase();\r\n\r\n        if ( \"area\" === nodeName ) {\r\n            map = element.parentNode;\r\n            mapName = map.name;\r\n            if ( !element.href || !mapName || map.nodeName.toLowerCase() !== \"map\" ) {\r\n                return false;\r\n            }\r\n            img = $( \"img[usemap='#\" + mapName + \"']\" );\r\n            return img.length > 0 && img.is( \":visible\" );\r\n        }\r\n\r\n        if ( /^(input|select|textarea|button|object)$/.test( nodeName ) ) {\r\n            focusableIfVisible = !element.disabled;\r\n\r\n            if ( focusableIfVisible ) {\r\n\r\n                // Form controls within a disabled fieldset are disabled.\r\n                // However, controls within the fieldset's legend do not get disabled.\r\n                // Since controls generally aren't placed inside legends, we skip\r\n                // this portion of the check.\r\n                fieldset = $( element ).closest( \"fieldset\" )[ 0 ];\r\n                if ( fieldset ) {\r\n                    focusableIfVisible = !fieldset.disabled;\r\n                }\r\n            }\r\n        } else if ( \"a\" === nodeName ) {\r\n            focusableIfVisible = element.href || hasTabindex;\r\n        } else {\r\n            focusableIfVisible = hasTabindex;\r\n        }\r\n\r\n        return focusableIfVisible && $( element ).is( \":visible\" ) && visible( $( element ) );\r\n    };\r\n\r\n\r\n   var rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/gi;\r\n \r\n    /*   \r\n     * Get the HTML contents of the first element in the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {String} html\r\n     */\r\n    function html(node, html) {\r\n        if (html === undefined) {\r\n            return node.innerHTML;\r\n        } else {\r\n            this.empty(node);\r\n            html = html || \"\";\r\n            if (langx.isString(html)) {\r\n                html = html.replace( rxhtmlTag, \"<$1></$2>\" );\r\n            }\r\n            if (langx.isString(html) || langx.isNumber(html)) {               \r\n                node.innerHTML = html;\r\n            } else if (langx.isArrayLike(html)) {\r\n                for (var i = 0; i < html.length; i++) {\r\n                    node.appendChild(html[i]);\r\n                }\r\n            } else {\r\n                node.appendChild(html);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node.\r\n     * @param {Node} node\r\n     * @param {Node} parent\r\n     * @param {Node} directly\r\n     */\r\n    function isChildOf(node, parent, directly) {\r\n        if (directly) {\r\n            return node.parentNode === parent;\r\n        }\r\n        if (document.documentElement.contains) {\r\n            return parent.contains(node);\r\n        }\r\n        while (node) {\r\n            if (parent === node) {\r\n                return true;\r\n            }\r\n\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node.\r\n     * @param {Node} node\r\n     * @param {Node} parent\r\n     * @param {Node} directly\r\n     */\r\n    function isDoc(node) {\r\n        return node != null && node.nodeType == node.DOCUMENT_NODE\r\n    }\r\n\r\n    /*   \r\n     * Get the owner document object for the specified element.\r\n     * @param {Node} elm\r\n     */\r\n    function ownerDoc(elm) {\r\n        if (!elm) {\r\n            return document;\r\n        }\r\n\r\n        if (elm.nodeType == 9) {\r\n            return elm;\r\n        }\r\n\r\n        return elm.ownerDocument;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     */\r\n    function ownerWindow(elm) {\r\n        var doc = ownerDoc(elm);\r\n        return doc.defaultView || doc.parentWindow;\r\n    }\r\n\r\n    /*   \r\n     * insert one or more nodes as the first children of the specified node.\r\n     * @param {Node} node\r\n     * @param {Node or ArrayLike} placing\r\n     * @param {Boolean Optional} copyByClone\r\n     */\r\n    function prepend(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            refNode = parentNode.firstChild,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            if (refNode) {\r\n                parentNode.insertBefore(nodes[i], refNode);\r\n            } else {\r\n                parentNode.appendChild(nodes[i]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     */\r\n    function offsetParent(elm) {\r\n        var parent = elm.offsetParent || document.body;\r\n        while (parent && !rootNodeRE.test(parent.nodeName) && styler.css(parent, \"position\") == \"static\") {\r\n            parent = parent.offsetParent;\r\n        }\r\n        return parent;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     * @param {Node} params\r\n     */\r\n    function overlay(elm, params) {\r\n        var overlayDiv = createElement(\"div\", params);\r\n        styler.css(overlayDiv, {\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            zIndex: 0x7FFFFFFF,\r\n            opacity: 0.7\r\n        });\r\n        elm.appendChild(overlayDiv);\r\n        return overlayDiv;\r\n\r\n    }\r\n\r\n    /*   \r\n     * Remove the set of matched elements from the DOM.\r\n     * @param {Node} node\r\n     */\r\n    function remove(node) {\r\n        if (node && node.parentNode) {\r\n            try {\r\n                node.parentNode.removeChild(node);\r\n            } catch (e) {\r\n                console.warn(\"The node is already removed\", e);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function removeChild(node,children) {\r\n        if (!langx.isArrayLike(children)) {\r\n            children = [children];\r\n        }\r\n        for (var i=0;i<children.length;i++) {\r\n            node.removeChild(children[i]);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function scrollParent( elm, includeHidden ) {\r\n        var position = styler.css(elm,\"position\" ),\r\n            excludeStaticParent = position === \"absolute\",\r\n            overflowRegex = includeHidden ? /(auto|scroll|hidden)/ : /(auto|scroll)/,\r\n            scrollParent = this.parents().filter( function() {\r\n                var parent = $( this );\r\n                if ( excludeStaticParent && parent.css( \"position\" ) === \"static\" ) {\r\n                    return false;\r\n                }\r\n                return overflowRegex.test( parent.css( \"overflow\" ) + parent.css( \"overflow-y\" ) +\r\n                    parent.css( \"overflow-x\" ) );\r\n            } ).eq( 0 );\r\n\r\n        return position === \"fixed\" || !scrollParent.length ?\r\n            $( this[ 0 ].ownerDocument || document ) :\r\n            scrollParent;\r\n    };\r\n\r\n        /*   \r\n     * Replace an old node with the specified node.\r\n     * @param {Node} node\r\n     * @param {Node} oldNode\r\n     */\r\n    function replace(node, oldNode) {\r\n        oldNode.parentNode.replaceChild(node, oldNode);\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Replace an old node with the specified node.\r\n     * @param {HTMLElement} elm\r\n     * @param {Node} params\r\n     */\r\n    function throb(elm, params) {\r\n        params = params || {};\r\n        var self = this,\r\n            text = params.text,\r\n            style = params.style,\r\n            time = params.time,\r\n            callback = params.callback,\r\n            timer,\r\n            throbber = this.createElement(\"div\", {\r\n                className: params.className || \"throbber\",\r\n                style: style\r\n            }),\r\n            _overlay = overlay(throbber, {\r\n                className: 'overlay fade'\r\n            }),\r\n            throb = this.createElement(\"div\", {\r\n                className: \"throb\"\r\n            }),\r\n            textNode = this.createTextNode(text || \"\"),\r\n            remove = function() {\r\n                if (timer) {\r\n                    clearTimeout(timer);\r\n                    timer = null;\r\n                }\r\n                if (throbber) {\r\n                    self.remove(throbber);\r\n                    throbber = null;\r\n                }\r\n            },\r\n            update = function(params) {\r\n                if (params && params.text && throbber) {\r\n                    textNode.nodeValue = params.text;\r\n                }\r\n            };\r\n        throb.appendChild(textNode);\r\n        throbber.appendChild(throb);\r\n        elm.appendChild(throbber);\r\n        var end = function() {\r\n            remove();\r\n            if (callback) callback();\r\n        };\r\n        if (time) {\r\n            timer = setTimeout(end, time);\r\n        }\r\n\r\n        return {\r\n            remove: remove,\r\n            update: update\r\n        };\r\n    }\r\n\r\n\r\n    /*   \r\n     * traverse the specified node and its descendants, perform the callback function on each\r\n     * @param {Node} node\r\n     * @param {Function} fn\r\n     */\r\n    function traverse(node, fn) {\r\n        fn(node)\r\n        for (var i = 0, len = node.childNodes.length; i < len; i++) {\r\n            traverse(node.childNodes[i], fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} node\r\n     */\r\n    function reverse(node) {\r\n        var firstChild = node.firstChild;\r\n        for (var i = node.children.length - 1; i > 0; i--) {\r\n            if (i > 0) {\r\n                var child = node.children[i];\r\n                node.insertBefore(child, firstChild);\r\n            }\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Wrap an HTML structure around each element in the set of matched elements.\r\n     * @param {Node} node\r\n     * @param {Node} wrapperNode\r\n     */\r\n    function wrapper(node, wrapperNode) {\r\n        if (langx.isString(wrapperNode)) {\r\n            wrapperNode = this.createFragment(wrapperNode).firstChild;\r\n        }\r\n        node.parentNode.insertBefore(wrapperNode, node);\r\n        wrapperNode.appendChild(node);\r\n    }\r\n\r\n    /*   \r\n     * Wrap an HTML structure around the content of each element in the set of matched\r\n     * @param {Node} node\r\n     * @param {Node} wrapperNode\r\n     */\r\n    function wrapperInner(node, wrapperNode) {\r\n        var childNodes = slice.call(node.childNodes);\r\n        node.appendChild(wrapperNode);\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            wrapperNode.appendChild(childNodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Remove the parents of the set of matched elements from the DOM, leaving the matched\r\n     * @param {Node} node\r\n     */\r\n    function unwrap(node) {\r\n        var child, parent = node.parentNode;\r\n        if (parent) {\r\n            if (this.isDoc(parent.parentNode)) return;\r\n            parent.parentNode.insertBefore(node, parent);\r\n        }\r\n    }\r\n\r\n    function noder() {\r\n        return noder;\r\n    }\r\n\r\n    langx.mixin(noder, {\r\n        active  : activeElement,\r\n\r\n        blur : function(el) {\r\n            el.blur();\r\n        },\r\n\r\n        body: function() {\r\n            return document.body;\r\n        },\r\n\r\n        clone: clone,\r\n        contents: contents,\r\n\r\n        createElement: createElement,\r\n\r\n        createFragment: createFragment,\r\n\r\n        contains: contains,\r\n\r\n        createTextNode: createTextNode,\r\n\r\n        doc: doc,\r\n\r\n        empty: empty,\r\n\r\n        fullScreen: fullScreen,\r\n\r\n        focusable: focusable,\r\n\r\n        html: html,\r\n\r\n        isChildOf: isChildOf,\r\n\r\n        isDoc: isDoc,\r\n\r\n        isWindow: langx.isWindow,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        ownerDoc: ownerDoc,\r\n\r\n        ownerWindow: ownerWindow,\r\n\r\n        after: after,\r\n\r\n        before: before,\r\n\r\n        prepend: prepend,\r\n\r\n        append: append,\r\n\r\n        remove: remove,\r\n\r\n        removeChild : removeChild,\r\n\r\n        replace: replace,\r\n\r\n        throb: throb,\r\n\r\n        traverse: traverse,\r\n\r\n        reverse: reverse,\r\n\r\n        wrapper: wrapper,\r\n\r\n        wrapperInner: wrapperInner,\r\n\r\n        unwrap: unwrap\r\n    });\r\n\r\n    return dom.noder = noder;\r\n});\ndefine('skylark-utils-dom/css',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./noder\"\r\n], function(dom, langx, noder) {\r\n    \"use strict\";\r\n\r\n    var head = document.getElementsByTagName(\"head\")[0],\r\n        count = 0,\r\n        sheetsByUrl = {},\r\n        sheetsById = {},\r\n        defaultSheetId = _createStyleSheet(),\r\n        defaultSheet = sheetsById[defaultSheetId],\r\n        rulesPropName = (\"cssRules\" in defaultSheet) ? \"cssRules\" : \"rules\",\r\n        insertRuleFunc,\r\n        deleteRuleFunc = defaultSheet.deleteRule || defaultSheet.removeRule;\r\n\r\n    if (defaultSheet.insertRule) {\r\n        var _insertRule = defaultSheet.insertRule;\r\n        insertRuleFunc = function(selector, css, index) {\r\n            _insertRule.call(this, selector + \"{\" + css + \"}\", index);\r\n        };\r\n    } else {\r\n        insertRuleFunc = defaultSheet.addRule;\r\n    }\r\n\r\n    function normalizeSelector(selectorText) {\r\n        var selector = [],\r\n            last, len;\r\n        last = defaultSheet[rulesPropName].length;\r\n        insertRuleFunc.call(defaultSheet, selectorText, ';');\r\n        len = defaultSheet[rulesPropName].length;\r\n        for (var i = len - 1; i >= last; i--) {\r\n            selector.push(_sheet[_rules][i].selectorText);\r\n            deleteRuleFunc.call(defaultSheet, i);\r\n        }\r\n        return selector.reverse().join(', ');\r\n    }\r\n\r\n    /*\r\n     * create a stylesheet element.\r\n     * @param {Boolean} external\r\n     * @param {Object} options\r\n     * @param {String} [options.media = null]\r\n     */\r\n    function _createStyleSheet(external,options ) {\r\n        var node,\r\n            props = {\r\n                type : \"text/css\"\r\n            },\r\n            id = (count++);\r\n\r\n        options = options || {};\r\n        if (options.media) {\r\n            props.media = options.media;\r\n        }\r\n\r\n        if (external) {\r\n            node = noder.create(\"link\",langx.mixin(props,{\r\n                rel  : \"stylesheet\",\r\n                async : false\r\n            }));\r\n        } else {\r\n            node = noder.createElement(\"style\",props);\r\n        }\r\n\r\n        noder.append(head,node);\r\n        sheetsById[id] = {\r\n            id : id,\r\n            node :node\r\n        };\r\n\r\n        return id;\r\n    }\r\n\r\n    function createStyleSheet(css,options) {\r\n        if (!options) {\r\n            options = {};\r\n        }\r\n        var sheetId = _createStyleSheet(false,options);\r\n        if (css) {\r\n            addSheetRules(sheetId,css);\r\n        }\r\n\r\n        return sheetId;\r\n    }\r\n\r\n    function loadStyleSheet(url, options) {\r\n        var sheet = sheetsByUrl[url];\r\n        if (!sheet) {\r\n            var sheetId = _createStyleSheet(true,options);\r\n\r\n            sheet = sheetsByUrl[url] = sheetsById[sheetId];\r\n            langx.mixin(sheet,{\r\n                state: 0, //0:unload,1:loaded,-1:loaderror\r\n                url : url,\r\n                deferred : new langx.Deferred()\r\n            });\r\n\r\n            var node = sheet.node;\r\n\r\n            startTime = new Date().getTime();\r\n\r\n            node.onload = function() {\r\n                sheet.state = 1;\r\n                sheet.deferred.resolve(sheet.id);\r\n            },\r\n            node.onerror = function(e) {\r\n                sheet.state = -1;\r\n                sheet.deferred.reject(e);\r\n            };\r\n\r\n            node.href = sheet.url;\r\n        }\r\n        return sheet.deferred.promise;\r\n    }\r\n\r\n    function deleteSheetRule(sheetId, rule) {\r\n        var sheet = sheetsById[sheetId];\r\n        if (langx.isNumber(rule)) {\r\n            deleteRuleFunc.call(sheet, rule);\r\n        } else {\r\n            langx.each(sheet[rulesPropName], function(i, _rule) {\r\n                if (rule === _rule) {\r\n                    deleteRuleFunc.call(sheet, i);\r\n                    return false;\r\n                }\r\n            });\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function deleteRule(rule) {\r\n        deleteSheetRule(defaultSheetId, rule);\r\n        return this;\r\n    }\r\n\r\n    function removeStyleSheet(sheetId) {\r\n        if (sheetId === defaultSheetId) {\r\n            throw new Error(\"The default stylesheet can not be deleted\");\r\n        }\r\n        var sheet = sheetsById[sheetId];\r\n        delete sheetsById[sheetId];\r\n\r\n        noder.remove(sheet.node);\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * insert a rule to the default stylesheet.\r\n     * @param {String} selector\r\n     * @param {String} css\r\n     * @param {Number} index \r\n     */\r\n    function insertRule(selector, css, index) {\r\n        return this.insertSheetRule(defaultSheetId, selector, css, index);\r\n    }\r\n\r\n    /*\r\n     * Add rules to the default stylesheet.\r\n     * @param {Object} rules\r\n     */\r\n    function addRules(rules) {\r\n        return this.addRules(defaultSheetId,rules);\r\n    }\r\n\r\n    /*\r\n     * insert a rule to the stylesheet specified by sheetId.\r\n     * @param {Number} sheetId  \r\n     * @param {String} selector\r\n     * @param {String} css\r\n     * @param {Number} index \r\n     */\r\n    function insertSheetRule(sheetId, selector, css, index) {\r\n        if (!selector || !css) {\r\n            return -1;\r\n        }\r\n\r\n        var sheet = sheetsById[sheetId];\r\n        index = index || sheet[rulesPropName].length;\r\n\r\n        return insertRuleFunc.call(sheet, selector, css, index);\r\n    }\r\n\r\n    /*\r\n     * Add  rules to stylesheet.\r\n     * @param {Number} sheetId  \r\n     * @param {Object|String} rules\r\n     * @return this\r\n     * @example insertSheetRules(sheetId,{\r\n     * \r\n     * });\r\n     */\r\n    function addSheetRules(sheetId,rules) {\r\n        var sheet = sheetsById[sheetId],\r\n            css;\r\n        if (langx.isString(rules)) {\r\n            css = rules;\r\n        } else {\r\n            css = toString(rules);\r\n        }\r\n\r\n        noder.append(sheet.node,noder.createTextNode(css));\r\n        \r\n        return this;\r\n    }\r\n\r\n    function isAtRule(str) {\r\n        return str.startsWith(\"@\");\r\n    }\r\n\r\n    function toString(json){\r\n        var adjust = function(parentName,name,depth) {\r\n            if (parentName) {\r\n                if (isAtRule(parentName)) {\r\n                    depth += 1;\r\n                } else {\r\n                    name =  parentName + \" \" + name;\r\n                }                \r\n            }\r\n            return {\r\n                name : name,\r\n                depth : depth\r\n            }\r\n        };\r\n\r\n        var strNode = function (name, values, depth) {\r\n            var str = \"\",\r\n                atFlg = isAtRule(name);\r\n\r\n\r\n            if (isAtRule(name)) {\r\n                // at rule\r\n                if (langx.isString(values)) {\r\n                    // an at rule without block\r\n                    // ex: (1) @charset 'utf8';\r\n                    str = css.SPACE.repeat(depth) + name.trim() + \" \\\"\" + values.trim() + \" \\\";\\n\";\r\n                } else {\r\n                    // an at rule with block, ex :\r\n                    //  @media 'screen' {\r\n                    //  }\r\n                    str += css.SPACE.repeat(depth) + name.trim() + \" {\\n\";\r\n                    str += strNode(\"\",values,depth+1);\r\n                    str += css.SPACE.repeat(depth) + \" }\\n\";\r\n                }\r\n            } else {\r\n                // a selector or a property\r\n                if (langx.isString(values)) {\r\n                    // a css property \r\n                    // ex : (1) font-color : red;\r\n                    str = css.SPACE.repeat(depth) + name.trim() ;\r\n                    if (atFlg) {\r\n                        str = str +  \" \\\"\" + values.trim() + \" \\\";\\n\";\r\n                    } else {\r\n                        str = str + ': ' + values.trim() + \";\\n\";\r\n                    }\r\n\r\n                } else {\r\n                    // a selector rule \r\n                    // ex : (1) .class1 : {\r\n                    //            font-color : red;\r\n                    //          }\r\n                    if (langx.isArray(values)) {\r\n                        // array for ordering\r\n                        for (var n =0; n<values.length; n ++) {\r\n                           str +=  strNode(name,values[n],depth);\r\n                        }\r\n                    } else {\r\n                        // plain object\r\n\r\n                        if (name) {\r\n                            str += css.SPACE.repeat(depth) + name.trim() + \" {\\n\";\r\n\r\n                            for (var n in values) {\r\n                                var value =values[n];\r\n                                if (langx.isString(value)) {\r\n                                    // css property\r\n                                    str += strNode(n,value,depth+1)\r\n                                }\r\n                            }\r\n\r\n                            str += css.SPACE.repeat(depth) + \"}\\n\";\r\n                        }\r\n\r\n                        for (var n in values) {\r\n                            var value =values[n];\r\n                            if (!langx.isString(value)) {\r\n                                var adjusted = adjust(name,n,depth);\r\n                                str +=  strNode(adjusted.name,value,adjusted.depth);\r\n                            } \r\n                        }\r\n\r\n                    }\r\n                }\r\n            }   \r\n\r\n            return str;\r\n        };\r\n\r\n\r\n        return strNode(\"\",json,0);\r\n    }\r\n \r\n\r\n    function css() {\r\n        return css;\r\n    }\r\n\r\n    langx.mixin(css, {\r\n        SPACE : \"\\t\",\r\n\r\n        addRules : addRules,\r\n\r\n        addSheetRules : addSheetRules,\r\n\r\n        createStyleSheet: createStyleSheet,\r\n\r\n        deleteSheetRule : deleteSheetRule,\r\n\r\n        deleteRule : deleteRule,\r\n\r\n        insertRule : insertRule,\r\n\r\n        insertSheetRule : insertSheetRule,\r\n\r\n        removeStyleSheet : removeStyleSheet,\r\n\r\n        toString : toString\r\n    });\r\n\r\n    return dom.css = css;\r\n});\r\n\ndefine('skylark-utils-dom/finder',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./noder\"\r\n], function(dom, langx, browser, noder, velm) {\r\n    var local = {},\r\n        filter = Array.prototype.filter,\r\n        slice = Array.prototype.slice,\r\n        nativeMatchesSelector = browser.matchesSelector;\r\n\r\n    /*\r\n    ---\r\n    name: Slick.Parser\r\n    description: Standalone CSS3 Selector parser\r\n    provides: Slick.Parser\r\n    ...\r\n    */\r\n    ;\r\n    (function() {\r\n\r\n        var parsed,\r\n            separatorIndex,\r\n            combinatorIndex,\r\n            reversed,\r\n            cache = {},\r\n            reverseCache = {},\r\n            reUnescape = /\\\\/g;\r\n\r\n        var parse = function(expression, isReversed) {\r\n            if (expression == null) return null;\r\n            if (expression.Slick === true) return expression;\r\n            expression = ('' + expression).replace(/^\\s+|\\s+$/g, '');\r\n            reversed = !!isReversed;\r\n            var currentCache = (reversed) ? reverseCache : cache;\r\n            if (currentCache[expression]) return currentCache[expression];\r\n            parsed = {\r\n                Slick: true,\r\n                expressions: [],\r\n                raw: expression,\r\n                reverse: function() {\r\n                    return parse(this.raw, true);\r\n                }\r\n            };\r\n            separatorIndex = -1;\r\n            while (expression != (expression = expression.replace(regexp, parser)));\r\n            parsed.length = parsed.expressions.length;\r\n            return currentCache[parsed.raw] = (reversed) ? reverse(parsed) : parsed;\r\n        };\r\n\r\n        var reverseCombinator = function(combinator) {\r\n            if (combinator === '!') return ' ';\r\n            else if (combinator === ' ') return '!';\r\n            else if ((/^!/).test(combinator)) return combinator.replace(/^!/, '');\r\n            else return '!' + combinator;\r\n        };\r\n\r\n        var reverse = function(expression) {\r\n            var expressions = expression.expressions;\r\n            for (var i = 0; i < expressions.length; i++) {\r\n                var exp = expressions[i];\r\n                var last = {\r\n                    parts: [],\r\n                    tag: '*',\r\n                    combinator: reverseCombinator(exp[0].combinator)\r\n                };\r\n\r\n                for (var j = 0; j < exp.length; j++) {\r\n                    var cexp = exp[j];\r\n                    if (!cexp.reverseCombinator) cexp.reverseCombinator = ' ';\r\n                    cexp.combinator = cexp.reverseCombinator;\r\n                    delete cexp.reverseCombinator;\r\n                }\r\n\r\n                exp.reverse().push(last);\r\n            }\r\n            return expression;\r\n        };\r\n\r\n        var escapeRegExp = (function() {\r\n            // Credit: XRegExp 0.6.1 (c) 2007-2008 Steven Levithan <http://stevenlevithan.com/regex/xregexp/> MIT License\r\n            var from = /(?=[\\-\\[\\]{}()*+?.\\\\\\^$|,#\\s])/g,\r\n                to = '\\\\';\r\n            return function(string) {\r\n                return string.replace(from, to)\r\n            }\r\n        }())\r\n\r\n        var regexp = new RegExp(\r\n            \"^(?:\\\\s*(,)\\\\s*|\\\\s*(<combinator>+)\\\\s*|(\\\\s+)|(<unicode>+|\\\\*)|\\\\#(<unicode>+)|\\\\.(<unicode>+)|\\\\[\\\\s*(<unicode1>+)(?:\\\\s*([*^$!~|]?=)(?:\\\\s*(?:([\\\"']?)(.*?)\\\\9)))?\\\\s*\\\\](?!\\\\])|(:+)(<unicode>+)(?:\\\\((?:(?:([\\\"'])([^\\\\13]*)\\\\13)|((?:\\\\([^)]+\\\\)|[^()]*)+))\\\\))?)\"\r\n            .replace(/<combinator>/, '[' + escapeRegExp(\">+~`!@$%^&={}\\\\;</\") + ']')\r\n            .replace(/<unicode>/g, '(?:[\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n            .replace(/<unicode1>/g, '(?:[:\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n        );\r\n\r\n        function parser(\r\n            rawMatch,\r\n\r\n            separator,\r\n            combinator,\r\n            combinatorChildren,\r\n\r\n            tagName,\r\n            id,\r\n            className,\r\n\r\n            attributeKey,\r\n            attributeOperator,\r\n            attributeQuote,\r\n            attributeValue,\r\n\r\n            pseudoMarker,\r\n            pseudoClass,\r\n            pseudoQuote,\r\n            pseudoClassQuotedValue,\r\n            pseudoClassValue\r\n        ) {\r\n            if (separator || separatorIndex === -1) {\r\n                parsed.expressions[++separatorIndex] = [];\r\n                combinatorIndex = -1;\r\n                if (separator) return '';\r\n            }\r\n\r\n            if (combinator || combinatorChildren || combinatorIndex === -1) {\r\n                combinator = combinator || ' ';\r\n                var currentSeparator = parsed.expressions[separatorIndex];\r\n                if (reversed && currentSeparator[combinatorIndex])\r\n                    currentSeparator[combinatorIndex].reverseCombinator = reverseCombinator(combinator);\r\n                currentSeparator[++combinatorIndex] = {\r\n                    combinator: combinator,\r\n                    tag: '*'\r\n                };\r\n            }\r\n\r\n            var currentParsed = parsed.expressions[separatorIndex][combinatorIndex];\r\n\r\n            if (tagName) {\r\n                currentParsed.tag = tagName.replace(reUnescape, '');\r\n\r\n            } else if (id) {\r\n                currentParsed.id = id.replace(reUnescape, '');\r\n\r\n            } else if (className) {\r\n                className = className.replace(reUnescape, '');\r\n\r\n                if (!currentParsed.classList) currentParsed.classList = [];\r\n                if (!currentParsed.classes) currentParsed.classes = [];\r\n                currentParsed.classList.push(className);\r\n                currentParsed.classes.push({\r\n                    value: className,\r\n                    regexp: new RegExp('(^|\\\\s)' + escapeRegExp(className) + '(\\\\s|$)')\r\n                });\r\n\r\n            } else if (pseudoClass) {\r\n                pseudoClassValue = pseudoClassValue || pseudoClassQuotedValue;\r\n                pseudoClassValue = pseudoClassValue ? pseudoClassValue.replace(reUnescape, '') : null;\r\n\r\n                if (!currentParsed.pseudos) currentParsed.pseudos = [];\r\n                currentParsed.pseudos.push({\r\n                    key: pseudoClass.replace(reUnescape, ''),\r\n                    value: pseudoClassValue,\r\n                    type: pseudoMarker.length == 1 ? 'class' : 'element'\r\n                });\r\n\r\n            } else if (attributeKey) {\r\n                attributeKey = attributeKey.replace(reUnescape, '');\r\n                attributeValue = (attributeValue || '').replace(reUnescape, '');\r\n\r\n                var test, regexp;\r\n\r\n                switch (attributeOperator) {\r\n                    case '^=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue));\r\n                        break;\r\n                    case '$=':\r\n                        regexp = new RegExp(escapeRegExp(attributeValue) + '$');\r\n                        break;\r\n                    case '~=':\r\n                        regexp = new RegExp('(^|\\\\s)' + escapeRegExp(attributeValue) + '(\\\\s|$)');\r\n                        break;\r\n                    case '|=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue) + '(-|$)');\r\n                        break;\r\n                    case '=':\r\n                        test = function(value) {\r\n                            return attributeValue == value;\r\n                        };\r\n                        break;\r\n                    case '*=':\r\n                        test = function(value) {\r\n                            return value && value.indexOf(attributeValue) > -1;\r\n                        };\r\n                        break;\r\n                    case '!=':\r\n                        test = function(value) {\r\n                            return attributeValue != value;\r\n                        };\r\n                        break;\r\n                    default:\r\n                        test = function(value) {\r\n                            return !!value;\r\n                        };\r\n                }\r\n\r\n                if (attributeValue == '' && (/^[*$^]=$/).test(attributeOperator)) test = function() {\r\n                    return false;\r\n                };\r\n\r\n                if (!test) test = function(value) {\r\n                    return value && regexp.test(value);\r\n                };\r\n\r\n                if (!currentParsed.attributes) currentParsed.attributes = [];\r\n                currentParsed.attributes.push({\r\n                    key: attributeKey,\r\n                    operator: attributeOperator,\r\n                    value: attributeValue,\r\n                    test: test\r\n                });\r\n\r\n            }\r\n\r\n            return '';\r\n        };\r\n\r\n        // Slick NS\r\n\r\n        var Slick = (this.Slick || {});\r\n\r\n        Slick.parse = function(expression) {\r\n            return parse(expression);\r\n        };\r\n\r\n        Slick.escapeRegExp = escapeRegExp;\r\n\r\n        if (!this.Slick) this.Slick = Slick;\r\n\r\n    }).apply(local);\r\n\r\n\r\n    var simpleClassSelectorRE = /^\\.([\\w-]*)$/,\r\n        simpleIdSelectorRE = /^#([\\w-]*)$/,\r\n        rinputs = /^(?:input|select|textarea|button)$/i,\r\n        rheader = /^h\\d$/i,\r\n        slice = Array.prototype.slice;\r\n\r\n\r\n    local.parseSelector = local.Slick.parse;\r\n\r\n\r\n    var pseudos = local.pseudos = {\r\n        // custom pseudos\r\n        \"button\": function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === \"button\" || name === \"button\";\r\n        },\r\n\r\n        'checked': function(elm) {\r\n            return !!elm.checked;\r\n        },\r\n\r\n        'contains': function(elm, idx, nodes, text) {\r\n            if ($(this).text().indexOf(text) > -1) return this\r\n        },\r\n\r\n        'disabled': function(elm) {\r\n            return !!elm.disabled;\r\n        },\r\n\r\n        'enabled': function(elm) {\r\n            return !elm.disabled;\r\n        },\r\n\r\n        'eq': function(elm, idx, nodes, value) {\r\n            return (idx == value);\r\n        },\r\n\r\n        'even': function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 0;\r\n        },\r\n\r\n        'focus': function(elm) {\r\n            return document.activeElement === elm && (elm.href || elm.type || elm.tabindex);\r\n        },\r\n\r\n        'focusable': function( elm ) {\r\n            return noder.focusable(elm, elm.tabindex != null );\r\n        },\r\n\r\n        'first': function(elm, idx) {\r\n            return (idx === 0);\r\n        },\r\n\r\n        'gt': function(elm, idx, nodes, value) {\r\n            return (idx > value);\r\n        },\r\n\r\n        'has': function(elm, idx, nodes, sel) {\r\n            return find(elm, sel);\r\n        },\r\n\r\n        // Element/input types\r\n        \"header\": function(elem) {\r\n            return rheader.test(elem.nodeName);\r\n        },\r\n\r\n        'hidden': function(elm) {\r\n            return !local.pseudos[\"visible\"](elm);\r\n        },\r\n\r\n        \"input\": function(elem) {\r\n            return rinputs.test(elem.nodeName);\r\n        },\r\n\r\n        'last': function(elm, idx, nodes) {\r\n            return (idx === nodes.length - 1);\r\n        },\r\n\r\n        'lt': function(elm, idx, nodes, value) {\r\n            return (idx < value);\r\n        },\r\n\r\n        'not': function(elm, idx, nodes, sel) {\r\n            return !matches(elm, sel);\r\n        },\r\n\r\n        'odd': function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 1;\r\n        },\r\n\r\n        /*   \r\n         * Get the parent of each element in the current set of matched elements.\r\n         * @param {Object} elm\r\n         */\r\n        'parent': function(elm) {\r\n            return !!elm.parentNode;\r\n        },\r\n\r\n        'selected': function(elm) {\r\n            return !!elm.selected;\r\n        },\r\n\r\n        'tabbable': function(elm) {\r\n            var tabIndex = elm.tabindex,\r\n                hasTabindex = tabIndex != null;\r\n            return ( !hasTabindex || tabIndex >= 0 ) && noder.focusable( element, hasTabindex );\r\n        },\r\n\r\n        'text': function(elm) {\r\n            return elm.type === \"text\";\r\n        },\r\n\r\n        'visible': function(elm) {\r\n            return elm.offsetWidth && elm.offsetWidth\r\n        }\r\n    };\r\n\r\n    [\"first\", \"eq\", \"last\"].forEach(function(item) {\r\n        pseudos[item].isArrayFilter = true;\r\n    });\r\n\r\n\r\n\r\n    pseudos[\"nth\"] = pseudos[\"eq\"];\r\n\r\n    function createInputPseudo(type) {\r\n        return function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === type;\r\n        };\r\n    }\r\n\r\n    function createButtonPseudo(type) {\r\n        return function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return (name === \"input\" || name === \"button\") && elem.type === type;\r\n        };\r\n    }\r\n\r\n    // Add button/input type pseudos\r\n    for (i in {\r\n        radio: true,\r\n        checkbox: true,\r\n        file: true,\r\n        password: true,\r\n        image: true\r\n    }) {\r\n        pseudos[i] = createInputPseudo(i);\r\n    }\r\n    for (i in {\r\n        submit: true,\r\n        reset: true\r\n    }) {\r\n        pseudos[i] = createButtonPseudo(i);\r\n    }\r\n\r\n\r\n    local.divide = function(cond) {\r\n        var nativeSelector = \"\",\r\n            customPseudos = [],\r\n            tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos;\r\n\r\n\r\n        if (id = cond.id) {\r\n            nativeSelector += (\"#\" + id);\r\n        }\r\n        if (classes = cond.classes) {\r\n            for (var i = classes.length; i--;) {\r\n                nativeSelector += (\".\" + classes[i].value);\r\n            }\r\n        }\r\n        if (attributes = cond.attributes) {\r\n            for (var i = 0; i < attributes.length; i++) {\r\n                if (attributes[i].operator) {\r\n                    nativeSelector += (\"[\" + attributes[i].key + attributes[i].operator + JSON.stringify(attributes[i].value) + \"]\");\r\n                } else {\r\n                    nativeSelector += (\"[\" + attributes[i].key + \"]\");\r\n                }\r\n            }\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (this.pseudos[part.key]) {\r\n                    customPseudos.push(part);\r\n                } else {\r\n                    if (part.value !== undefined) {\r\n                        nativeSelector += (\":\" + part.key + \"(\" + JSON.stringify(part))\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (tag = cond.tag) {\r\n            if (tag !== \"*\") {\r\n                nativeSelector = tag.toUpperCase() + nativeSelector;\r\n            }\r\n        }\r\n\r\n        if (!nativeSelector) {\r\n            nativeSelector = \"*\";\r\n        }\r\n\r\n        return {\r\n            nativeSelector: nativeSelector,\r\n            customPseudos: customPseudos\r\n        }\r\n\r\n    };\r\n\r\n    local.check = function(node, cond, idx, nodes, arrayFilte) {\r\n        var tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos,\r\n\r\n            i, part, cls, pseudo;\r\n\r\n        if (!arrayFilte) {\r\n            if (tag = cond.tag) {\r\n                var nodeName = node.nodeName.toUpperCase();\r\n                if (tag == '*') {\r\n                    if (nodeName < '@') return false; // Fix for comment nodes and closed nodes\r\n                } else {\r\n                    if (nodeName != (tag || \"\").toUpperCase()) return false;\r\n                }\r\n            }\r\n\r\n            if (id = cond.id) {\r\n                if (node.getAttribute('id') != id) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n\r\n            if (classes = cond.classes) {\r\n                for (i = classes.length; i--;) {\r\n                    cls = node.getAttribute('class');\r\n                    if (!(cls && classes[i].regexp.test(cls))) return false;\r\n                }\r\n            }\r\n\r\n            if (attributes = cond.attributes) {\r\n                for (i = attributes.length; i--;) {\r\n                    part = attributes[i];\r\n                    if (part.operator ? !part.test(node.getAttribute(part.key)) : !node.hasAttribute(part.key)) return false;\r\n                }\r\n            }\r\n\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (pseudo = this.pseudos[part.key]) {\r\n                    if ((arrayFilte && pseudo.isArrayFilter) || (!arrayFilte && !pseudo.isArrayFilter)) {\r\n                        if (!pseudo(node, idx, nodes, part.value)) {\r\n                            return false;\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (!arrayFilte && !nativeMatchesSelector.call(node, part.key)) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    local.match = function(node, selector) {\r\n\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            parsed = selector;\r\n        }\r\n\r\n        if (!parsed) {\r\n            return true;\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            simpleExpCounter = 0,\r\n            i,\r\n            currentExpression;\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n                if (this.check(node, exp)) {\r\n                    return true;\r\n                }\r\n                simpleExpCounter++;\r\n            }\r\n        }\r\n\r\n        if (simpleExpCounter == parsed.length) {\r\n            return false;\r\n        }\r\n\r\n        var nodes = this.query(document, parsed),\r\n            item;\r\n        for (i = 0; item = nodes[i++];) {\r\n            if (item === node) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n\r\n    local.filterSingle = function(nodes, exp) {\r\n        var matchs = filter.call(nodes, function(node, idx) {\r\n            return local.check(node, exp, idx, nodes, false);\r\n        });\r\n\r\n        matchs = filter.call(matchs, function(node, idx) {\r\n            return local.check(node, exp, idx, matchs, true);\r\n        });\r\n        return matchs;\r\n    };\r\n\r\n    local.filter = function(nodes, selector) {\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            return local.filterSingle(nodes, selector);\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            i,\r\n            currentExpression,\r\n            ret = [];\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n\r\n                var matchs = local.filterSingle(nodes, exp);\r\n\r\n                ret = langx.uniq(ret.concat(matchs));\r\n            } else {\r\n                throw new Error(\"not supported selector:\" + selector);\r\n            }\r\n        }\r\n\r\n        return ret;\r\n\r\n    };\r\n\r\n    local.combine = function(elm, bit) {\r\n        var op = bit.combinator,\r\n            cond = bit,\r\n            node1,\r\n            nodes = [];\r\n\r\n        switch (op) {\r\n            case '>': // direct children\r\n                nodes = children(elm, cond);\r\n                break;\r\n            case '+': // next sibling\r\n                node1 = nextSibling(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '^': // first child\r\n                node1 = firstChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '~': // next siblings\r\n                nodes = nextSiblings(elm, cond);\r\n                break;\r\n            case '++': // next sibling and previous sibling\r\n                var prev = previousSibling(elm, cond, true),\r\n                    next = nextSibling(elm, cond, true);\r\n                if (prev) {\r\n                    nodes.push(prev);\r\n                }\r\n                if (next) {\r\n                    nodes.push(next);\r\n                }\r\n                break;\r\n            case '~~': // next siblings and previous siblings\r\n                nodes = siblings(elm, cond);\r\n                break;\r\n            case '!': // all parent nodes up to document\r\n                nodes = ancestors(elm, cond);\r\n                break;\r\n            case '!>': // direct parent (one level)\r\n                node1 = parent(elm, cond);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!+': // previous sibling\r\n                nodes = previousSibling(elm, cond, true);\r\n                break;\r\n            case '!^': // last child\r\n                node1 = lastChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!~': // previous siblings\r\n                nodes = previousSiblings(elm, cond);\r\n                break;\r\n            default:\r\n                var divided = this.divide(bit);\r\n                nodes = slice.call(elm.querySelectorAll(divided.nativeSelector));\r\n                if (divided.customPseudos) {\r\n                    for (var i = divided.customPseudos.length - 1; i >= 0; i--) {\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes, false)\r\n                        });\r\n\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes, true)\r\n                        });\r\n                    }\r\n                }\r\n                break;\r\n\r\n        }\r\n        return nodes;\r\n    }\r\n\r\n    local.query = function(node, selector, single) {\r\n\r\n\r\n        var parsed = this.Slick.parse(selector);\r\n\r\n        var\r\n            founds = [],\r\n            currentExpression, currentBit,\r\n            expressions = parsed.expressions;\r\n\r\n        for (var i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            var currentItems = [node],\r\n                found;\r\n            for (var j = 0;\r\n                (currentBit = currentExpression[j]); j++) {\r\n                found = langx.map(currentItems, function(item, i) {\r\n                    return local.combine(item, currentBit)\r\n                });\r\n                if (found) {\r\n                    currentItems = found;\r\n                }\r\n            }\r\n            if (found) {\r\n                founds = founds.concat(found);\r\n            }\r\n        }\r\n\r\n        return founds;\r\n    }\r\n\r\n    /*\r\n     * Get the nearest ancestor of the specified element,optional matched by a selector.\r\n     * @param {HTMLElement} node\r\n     * @param {String Optional } selector\r\n     * @param {Object} root\r\n     */\r\n    function ancestor(node, selector, root) {\r\n        var rootIsSelector = root && langx.isString(root);\r\n        while (node = node.parentNode) {\r\n            if (matches(node, selector)) {\r\n                return node;\r\n            }\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node, root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the ancestors of the specitied element , optionally filtered by a selector.\r\n     * @param {HTMLElement} node\r\n     * @param {String Optional } selector\r\n     * @param {Object} root\r\n     */\r\n    function ancestors(node, selector, root) {\r\n        var ret = [],\r\n            rootIsSelector = root && langx.isString(root);\r\n        while ((node = node.parentNode) && (node.nodeType !== 9)) {\r\n            ret.push(node);\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node, root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (selector) {\r\n            ret = local.filter(ret, selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Returns a element by its ID.\r\n     * @param {string} id\r\n     */\r\n    function byId(id, doc) {\r\n        doc = doc || noder.doc();\r\n        return doc.getElementById(id);\r\n    }\r\n\r\n    /*\r\n     * Get the children of the specified element , optionally filtered by a selector.\r\n     * @param {string} node\r\n     * @param {String optionlly} selector\r\n     */\r\n    function children(node, selector) {\r\n        var childNodes = node.childNodes,\r\n            ret = [];\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            var node = childNodes[i];\r\n            if (node.nodeType == 1) {\r\n                ret.push(node);\r\n            }\r\n        }\r\n        if (selector) {\r\n            ret = local.filter(ret, selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function closest(node, selector) {\r\n        while (node && !(matches(node, selector))) {\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    /*\r\n     * Get the decendant of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function descendants(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return slice.call(elm.querySelectorAll(selector));\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        return local.query(elm, selector);\r\n    }\r\n\r\n    /*\r\n     * Get the nearest decendent of the specified element,optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function descendant(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return elm.querySelector(selector);\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        var nodes = local.query(elm, selector);\r\n        if (nodes.length > 0) {\r\n            return nodes[0];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the descendants of each element in the current set of matched elements, filtered by a selector, jQuery object, or element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function find(elm, selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        if (matches(elm, selector)) {\r\n            return elm;\r\n        } else {\r\n            return descendant(elm, selector);\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the findAll of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function findAll(elm, selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        return descendants(elm, selector);\r\n    }\r\n\r\n    /*\r\n     * Get the first child of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {String} first\r\n     */\r\n    function firstChild(elm, selector, first) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[0];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (first) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the last child of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {String } last\r\n     */\r\n    function lastChild(elm, selector, last) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[childNodes.length - 1];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (last) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Check the specified element against a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function matches(elm, selector) {\r\n        if (!selector || !elm || elm.nodeType !== 1) {\r\n            return false\r\n        }\r\n\r\n        if (langx.isString(selector)) {\r\n            try {\r\n                return nativeMatchesSelector.call(elm, selector.replace(/\\[([^=]+)=\\s*([^'\"\\]]+?)\\s*\\]/g, '[$1=\"$2\"]'));\r\n            } catch (matchError) {\r\n                //console.log(matchError);\r\n            }\r\n            return local.match(elm, selector);\r\n        } else if (langx.isArrayLike(selector)) {\r\n            return langx.inArray(elm, selector) > -1;\r\n        } else if (langx.isPlainObject(selector)) {\r\n            return local.check(elm, selector);\r\n        } else {\r\n            return elm === selector;\r\n        }\r\n\r\n    }\r\n\r\n    /*\r\n     * Get the nearest next sibing of the specitied element , optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {Boolean Optional} adjacent\r\n     */\r\n    function nextSibling(elm, selector, adjacent) {\r\n        var node = elm.nextSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the next siblings of the specified element , optional filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function nextSiblings(elm, selector) {\r\n        var node = elm.nextSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Get the parent element of the specified element. if a selector is provided, it retrieves the parent element only if it matches that selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function parent(elm, selector) {\r\n        var node = elm.parentNode;\r\n        if (node && (!selector || matches(node, selector))) {\r\n            return node;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get hte nearest previous sibling of the specified element ,optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {Boolean Optional } adjacent\r\n     */\r\n    function previousSibling(elm, selector, adjacent) {\r\n        var node = elm.previousSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get all preceding siblings of each element in the set of matched elements, optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function previousSiblings(elm, selector) {\r\n        var node = elm.previousSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Selects all sibling elements that follow after the “prev” element, have the same parent, and match the filtering “siblings” selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function siblings(elm, selector) {\r\n        var node = elm.parentNode.firstChild,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1 && node !== elm) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    var finder = function() {\r\n        return finder;\r\n    };\r\n\r\n    langx.mixin(finder, {\r\n\r\n        ancestor: ancestor,\r\n\r\n        ancestors: ancestors,\r\n\r\n        byId: byId,\r\n\r\n        children: children,\r\n\r\n        closest: closest,\r\n\r\n        descendant: descendant,\r\n\r\n        descendants: descendants,\r\n\r\n        find: find,\r\n\r\n        findAll: findAll,\r\n\r\n        firstChild: firstChild,\r\n\r\n        lastChild: lastChild,\r\n\r\n        matches: matches,\r\n\r\n        nextSibling: nextSibling,\r\n\r\n        nextSiblings: nextSiblings,\r\n\r\n        parent: parent,\r\n\r\n        previousSibling,\r\n\r\n        previousSiblings,\r\n\r\n        pseudos: local.pseudos,\r\n\r\n        siblings: siblings\r\n    });\r\n\r\n    return dom.finder = finder;\r\n});\ndefine('skylark-utils-dom/datax',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./finder\"\r\n], function(dom, langx, finder) {\r\n    var map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        camelCase = langx.camelCase,\r\n        deserializeValue = langx.deserializeValue,\r\n\r\n        capitalRE = /([A-Z])/g,\r\n        propMap = {\r\n            'tabindex': 'tabIndex',\r\n            'readonly': 'readOnly',\r\n            'for': 'htmlFor',\r\n            'class': 'className',\r\n            'maxlength': 'maxLength',\r\n            'cellspacing': 'cellSpacing',\r\n            'cellpadding': 'cellPadding',\r\n            'rowspan': 'rowSpan',\r\n            'colspan': 'colSpan',\r\n            'usemap': 'useMap',\r\n            'frameborder': 'frameBorder',\r\n            'contenteditable': 'contentEditable'\r\n        };\r\n    /*\r\n     * Set property values\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n\r\n    function setAttribute(elm, name, value) {\r\n        if (value == null) {\r\n            elm.removeAttribute(name);\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n        }\r\n    }\r\n\r\n    function aria(elm, name, value) {\r\n        return this.attr(elm, \"aria-\" + name, value);\r\n    }\r\n\r\n    /*\r\n     * Set property values\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n\r\n    function attr(elm, name, value) {\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var attrName in name) {\r\n                    attr(elm, attrName, name[attrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                if (elm.hasAttribute && elm.hasAttribute(name)) {\r\n                    return elm.getAttribute(name);\r\n                }\r\n            }\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n            return this;\r\n        }\r\n    }\r\n\r\n\r\n    /*\r\n     *  Read all \"data-*\" attributes from a node\r\n     * @param {Object} elm  \r\n     */\r\n\r\n    function _attributeData(elm) {\r\n        var store = {}\r\n        langx.each(elm.attributes || [], function(i, attr) {\r\n            if (attr.name.indexOf('data-') == 0) {\r\n                store[camelCase(attr.name.replace('data-', ''))] = deserializeValue(attr.value);\r\n            }\r\n        })\r\n        return store;\r\n    }\r\n\r\n    function _store(elm, confirm) {\r\n        var store = elm[\"_$_store\"];\r\n        if (!store && confirm) {\r\n            store = elm[\"_$_store\"] = _attributeData(elm);\r\n        }\r\n        return store;\r\n    }\r\n\r\n    function _getData(elm, name) {\r\n        if (name === undefined) {\r\n            return _store(elm, true);\r\n        } else {\r\n            var store = _store(elm);\r\n            if (store) {\r\n                if (name in store) {\r\n                    return store[name];\r\n                }\r\n                var camelName = camelCase(name);\r\n                if (camelName in store) {\r\n                    return store[camelName];\r\n                }\r\n            }\r\n            var attrName = 'data-' + name.replace(capitalRE, \"-$1\").toLowerCase()\r\n            return attr(elm, attrName);\r\n        }\r\n\r\n    }\r\n\r\n    function _setData(elm, name, value) {\r\n        var store = _store(elm, true);\r\n        store[camelCase(name)] = value;\r\n    }\r\n\r\n\r\n    /*\r\n     * xxx\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n    function data(elm, name, value) {\r\n\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var dataAttrName in name) {\r\n                    _setData(elm, dataAttrName, name[dataAttrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                return _getData(elm, name);\r\n            }\r\n        } else {\r\n            _setData(elm, name, value);\r\n            return this;\r\n        }\r\n    } \r\n    /*\r\n     * Remove from the element all items that have not yet been run. \r\n     * @param {Object} elm  \r\n     */\r\n\r\n    function cleanData(elm) {\r\n        if (elm[\"_$_store\"]) {\r\n            delete elm[\"_$_store\"];\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Remove a previously-stored piece of data. \r\n     * @param {Object} elm  \r\n     * @param {Array} names\r\n     */\r\n    function removeData(elm, names) {\r\n        if (langx.isString(names)) {\r\n            names = names.split(/\\s+/);\r\n        }\r\n        var store = _store(elm, true);\r\n        names.forEach(function(name) {\r\n            delete store[name];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * xxx \r\n     * @param {Object} elm  \r\n     * @param {Array} names\r\n     */\r\n    function pluck(nodes, property) {\r\n        return map.call(nodes, function(elm) {\r\n            return elm[property];\r\n        });\r\n    }\r\n\r\n    /*\r\n     * Get or set the value of an property for the specified element.\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n    function prop(elm, name, value) {\r\n        name = propMap[name] || name;\r\n        if (value === undefined) {\r\n            return elm[name];\r\n        } else {\r\n            elm[name] = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * remove Attributes  \r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     */\r\n    function removeAttr(elm, name) {\r\n        name.split(' ').forEach(function(attr) {\r\n            setAttribute(elm, attr);\r\n        });\r\n        return this;\r\n    }\r\n\r\n\r\n    /*\r\n     * Remove the value of a property for the first element in the set of matched elements or set one or more properties for every matched element.\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     */\r\n    function removeProp(elm, name) {\r\n        name.split(' ').forEach(function(prop) {\r\n            delete elm[prop];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Get the combined text contents of each element in the set of matched elements, including their descendants, or set the text contents of the matched elements.  \r\n     * @param {Object} elm  \r\n     * @param {String} txt\r\n     */\r\n    function text(elm, txt) {\r\n        if (txt === undefined) {\r\n            return elm.textContent;\r\n        } else {\r\n            elm.textContent = txt == null ? '' : '' + txt;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Get the current value of the first element in the set of matched elements or set the value of every matched element.\r\n     * @param {Object} elm  \r\n     * @param {String} value\r\n     */\r\n    function val(elm, value) {\r\n        if (value === undefined) {\r\n            if (elm.multiple) {\r\n                // select multiple values\r\n                var selectedOptions = filter.call(finder.find(elm, \"option\"), (function(option) {\r\n                    return option.selected;\r\n                }));\r\n                return pluck(selectedOptions, \"value\");\r\n            } else {\r\n                return elm.value;\r\n            }\r\n        } else {\r\n            elm.value = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n\r\n    finder.pseudos.data = function( elem, i, match,dataName ) {\r\n        return !!data( elem, dataName || match[3]);\r\n    };\r\n   \r\n\r\n    function datax() {\r\n        return datax;\r\n    }\r\n\r\n    langx.mixin(datax, {\r\n        aria: aria,\r\n\r\n        attr: attr,\r\n\r\n        cleanData: cleanData,\r\n\r\n        data: data,\r\n\r\n        pluck: pluck,\r\n\r\n        prop: prop,\r\n\r\n        removeAttr: removeAttr,\r\n\r\n        removeData: removeData,\r\n\r\n        removeProp: removeProp,\r\n\r\n        text: text,\r\n\r\n        val: val\r\n    });\r\n\r\n    return dom.datax = datax;\r\n});\ndefine('skylark-utils-dom/eventer',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./finder\",\r\n    \"./noder\",\r\n    \"./datax\"\r\n], function(dom, langx, browser, finder, noder, datax) {\r\n    var mixin = langx.mixin,\r\n        each = langx.each,\r\n        slice = Array.prototype.slice,\r\n        uid = langx.uid,\r\n        ignoreProperties = /^([A-Z]|returnValue$|layer[XY]$)/,\r\n        eventMethods = {\r\n            preventDefault: \"isDefaultPrevented\",\r\n            stopImmediatePropagation: \"isImmediatePropagationStopped\",\r\n            stopPropagation: \"isPropagationStopped\"\r\n        },\r\n        readyRE = /complete|loaded|interactive/;\r\n\r\n    function compatible(event, source) {\r\n        if (source || !event.isDefaultPrevented) {\r\n            if (!source) {\r\n                source = event;\r\n            }\r\n\r\n            langx.each(eventMethods, function(name, predicate) {\r\n                var sourceMethod = source[name];\r\n                event[name] = function() {\r\n                    this[predicate] = langx.returnTrue;\r\n                    return sourceMethod && sourceMethod.apply(source, arguments);\r\n                }\r\n                event[predicate] = langx.returnFalse;\r\n            });\r\n        }\r\n        return event;\r\n    }\r\n\r\n    function parse(event) {\r\n        var segs = (\"\" + event).split(\".\");\r\n        return {\r\n            type: segs[0],\r\n            ns: segs.slice(1).sort().join(\" \")\r\n        };\r\n    }\r\n\r\n    //create a custom dom event\r\n    var createEvent = (function() {\r\n        var EventCtors = [\r\n                window[\"CustomEvent\"], // 0 default\r\n                window[\"CompositionEvent\"], // 1\r\n                window[\"DragEvent\"], // 2\r\n                window[\"Event\"], // 3\r\n                window[\"FocusEvent\"], // 4\r\n                window[\"KeyboardEvent\"], // 5\r\n                window[\"MessageEvent\"], // 6\r\n                window[\"MouseEvent\"], // 7\r\n                window[\"MouseScrollEvent\"], // 8\r\n                window[\"MouseWheelEvent\"], // 9\r\n                window[\"MutationEvent\"], // 10\r\n                window[\"ProgressEvent\"], // 11\r\n                window[\"TextEvent\"], // 12\r\n                window[\"TouchEvent\"], // 13\r\n                window[\"UIEvent\"], // 14\r\n                window[\"WheelEvent\"], // 15\r\n                window[\"ClipboardEvent\"] // 16\r\n            ],\r\n            NativeEvents = {\r\n                \"compositionstart\": 1, // CompositionEvent\r\n                \"compositionend\": 1, // CompositionEvent\r\n                \"compositionupdate\": 1, // CompositionEvent\r\n\r\n                \"beforecopy\": 16, // ClipboardEvent\r\n                \"beforecut\": 16, // ClipboardEvent\r\n                \"beforepaste\": 16, // ClipboardEvent\r\n                \"copy\": 16, // ClipboardEvent\r\n                \"cut\": 16, // ClipboardEvent\r\n                \"paste\": 16, // ClipboardEvent\r\n\r\n                \"drag\": 2, // DragEvent\r\n                \"dragend\": 2, // DragEvent\r\n                \"dragenter\": 2, // DragEvent\r\n                \"dragexit\": 2, // DragEvent\r\n                \"dragleave\": 2, // DragEvent\r\n                \"dragover\": 2, // DragEvent\r\n                \"dragstart\": 2, // DragEvent\r\n                \"drop\": 2, // DragEvent\r\n\r\n                \"abort\": 3, // Event\r\n                \"change\": 3, // Event\r\n                \"error\": 3, // Event\r\n                \"selectionchange\": 3, // Event\r\n                \"submit\": 3, // Event\r\n                \"reset\": 3, // Event\r\n\r\n                \"focus\": 4, // FocusEvent\r\n                \"blur\": 4, // FocusEvent\r\n                \"focusin\": 4, // FocusEvent\r\n                \"focusout\": 4, // FocusEvent\r\n\r\n                \"keydown\": 5, // KeyboardEvent\r\n                \"keypress\": 5, // KeyboardEvent\r\n                \"keyup\": 5, // KeyboardEvent\r\n\r\n                \"message\": 6, // MessageEvent\r\n\r\n                \"click\": 7, // MouseEvent\r\n                \"contextmenu\": 7, // MouseEvent\r\n                \"dblclick\": 7, // MouseEvent\r\n                \"mousedown\": 7, // MouseEvent\r\n                \"mouseup\": 7, // MouseEvent\r\n                \"mousemove\": 7, // MouseEvent\r\n                \"mouseover\": 7, // MouseEvent\r\n                \"mouseout\": 7, // MouseEvent\r\n                \"mouseenter\": 7, // MouseEvent\r\n                \"mouseleave\": 7, // MouseEvent\r\n\r\n\r\n                \"textInput\": 12, // TextEvent\r\n\r\n                \"touchstart\": 13, // TouchEvent\r\n                \"touchmove\": 13, // TouchEvent\r\n                \"touchend\": 13, // TouchEvent\r\n\r\n                \"load\": 14, // UIEvent\r\n                \"resize\": 14, // UIEvent\r\n                \"select\": 14, // UIEvent\r\n                \"scroll\": 14, // UIEvent\r\n                \"unload\": 14, // UIEvent,\r\n\r\n                \"wheel\": 15 // WheelEvent\r\n            };\r\n\r\n        function getEventCtor(type) {\r\n            var idx = NativeEvents[type];\r\n            if (!idx) {\r\n                idx = 0;\r\n            }\r\n            return EventCtors[idx];\r\n        }\r\n\r\n        return function(type, props) {\r\n            //create a custom dom event\r\n\r\n            if (langx.isString(type)) {\r\n                props = props || {};\r\n            } else {\r\n                props = type || {};\r\n                type = props.type || \"\";\r\n            }\r\n            var parsed = parse(type);\r\n            type = parsed.type;\r\n\r\n            props = langx.mixin({\r\n                bubbles: true,\r\n                cancelable: true\r\n            }, props);\r\n\r\n            if (parsed.ns) {\r\n                props.namespace = parsed.ns;\r\n            }\r\n\r\n            var ctor = getEventCtor(type),\r\n                e = new ctor(type, props);\r\n\r\n            langx.safeMixin(e, props);\r\n\r\n            return compatible(e);\r\n        };\r\n    })();\r\n\r\n    function createProxy(src, props) {\r\n        var key,\r\n            proxy = {\r\n                originalEvent: src\r\n            };\r\n        for (key in src) {\r\n            if (key !== \"keyIdentifier\" && !ignoreProperties.test(key) && src[key] !== undefined) {\r\n                proxy[key] = src[key];\r\n            }\r\n        }\r\n        if (props) {\r\n            langx.mixin(proxy, props);\r\n        }\r\n        return compatible(proxy, src);\r\n    }\r\n\r\n    var\r\n        specialEvents = {},\r\n        focusinSupported = \"onfocusin\" in window,\r\n        focus = { focus: \"focusin\", blur: \"focusout\" },\r\n        hover = { mouseenter: \"mouseover\", mouseleave: \"mouseout\" },\r\n        realEvent = function(type) {\r\n            return hover[type] || (focusinSupported && focus[type]) || type;\r\n        },\r\n        handlers = {},\r\n        EventBindings = langx.klass({\r\n            init: function(target, event) {\r\n                this._target = target;\r\n                this._event = event;\r\n                this._bindings = [];\r\n            },\r\n\r\n            add: function(fn, options) {\r\n                var bindings = this._bindings,\r\n                    binding = {\r\n                        fn: fn,\r\n                        options: langx.mixin({}, options)\r\n                    };\r\n\r\n                bindings.push(binding);\r\n\r\n                var self = this;\r\n                if (!self._listener) {\r\n                    self._listener = function(domEvt) {\r\n                        var elm = this,\r\n                            e = createProxy(domEvt),\r\n                            args = domEvt._args,\r\n                            bindings = self._bindings,\r\n                            ns = e.namespace;\r\n\r\n                        if (langx.isDefined(args)) {\r\n                            args = [e].concat(args);\r\n                        } else {\r\n                            args = [e];\r\n                        }\r\n\r\n                        langx.each(bindings, function(idx, binding) {\r\n                            var match = elm;\r\n                            if (e.isImmediatePropagationStopped && e.isImmediatePropagationStopped()) {\r\n                                return false;\r\n                            }\r\n                            var fn = binding.fn,\r\n                                options = binding.options || {},\r\n                                selector = options.selector,\r\n                                one = options.one,\r\n                                data = options.data;\r\n\r\n                            if (ns && ns != options.ns && options.ns.indexOf(ns) === -1) {\r\n                                return;\r\n                            }\r\n                            if (selector) {\r\n                                match = finder.closest(e.target, selector);\r\n                                if (match && match !== elm) {\r\n                                    langx.mixin(e, {\r\n                                        currentTarget: match,\r\n                                        liveFired: elm\r\n                                    });\r\n                                } else {\r\n                                    return;\r\n                                }\r\n                            }\r\n\r\n                            var originalEvent = self._event;\r\n                            if (originalEvent in hover) {\r\n                                var related = e.relatedTarget;\r\n                                if (related && (related === match || noder.contains(match, related))) {\r\n                                    return;\r\n                                }\r\n                            }\r\n\r\n                            if (langx.isDefined(data)) {\r\n                                e.data = data;\r\n                            }\r\n\r\n                            if (one) {\r\n                                self.remove(fn, options);\r\n                            }\r\n\r\n                            var result = fn.apply(match, args);\r\n\r\n                            if (result === false) {\r\n                                e.preventDefault();\r\n                                e.stopPropagation();\r\n                            }\r\n                        });;\r\n                    };\r\n\r\n                    var event = self._event;\r\n                    /*\r\n                                        if (event in hover) {\r\n                                            var l = self._listener;\r\n                                            self._listener = function(e) {\r\n                                                var related = e.relatedTarget;\r\n                                                if (!related || (related !== this && !noder.contains(this, related))) {\r\n                                                    return l.apply(this, arguments);\r\n                                                }\r\n                                            }\r\n                                        }\r\n                    */\r\n\r\n                    if (self._target.addEventListener) {\r\n                        self._target.addEventListener(realEvent(event), self._listener, false);\r\n                    } else {\r\n                        console.warn(\"invalid eventer object\", self._target);\r\n                    }\r\n                }\r\n\r\n            },\r\n            remove: function(fn, options) {\r\n                options = langx.mixin({}, options);\r\n\r\n                function matcherFor(ns) {\r\n                    return new RegExp(\"(?:^| )\" + ns.replace(\" \", \" .* ?\") + \"(?: |$)\");\r\n                }\r\n                var matcher;\r\n                if (options.ns) {\r\n                    matcher = matcherFor(options.ns);\r\n                }\r\n\r\n                this._bindings = this._bindings.filter(function(binding) {\r\n                    var removing = (!fn || fn === binding.fn) &&\r\n                        (!matcher || matcher.test(binding.options.ns)) &&\r\n                        (!options.selector || options.selector == binding.options.selector);\r\n\r\n                    return !removing;\r\n                });\r\n                if (this._bindings.length == 0) {\r\n                    if (this._target.removeEventListener) {\r\n                        this._target.removeEventListener(realEvent(this._event), this._listener, false);\r\n                    }\r\n                    this._listener = null;\r\n                }\r\n            }\r\n        }),\r\n        EventsHandler = langx.klass({\r\n            init: function(elm) {\r\n                this._target = elm;\r\n                this._handler = {};\r\n            },\r\n\r\n            // add a event listener\r\n            // selector Optional\r\n            register: function(event, callback, options) {\r\n                // Seperate the event from the namespace\r\n                var parsed = parse(event),\r\n                    event = parsed.type,\r\n                    specialEvent = specialEvents[event],\r\n                    bindingEvent = specialEvent && (specialEvent.bindType || specialEvent.bindEventName);\r\n\r\n                var events = this._handler;\r\n\r\n                // Check if there is already a handler for this event\r\n                if (events[event] === undefined) {\r\n                    events[event] = new EventBindings(this._target, bindingEvent || event);\r\n                }\r\n\r\n                // Register the new callback function\r\n                events[event].add(callback, langx.mixin({\r\n                    ns: parsed.ns\r\n                }, options)); // options:{selector:xxx}\r\n            },\r\n\r\n            // remove a event listener\r\n            unregister: function(event, fn, options) {\r\n                // Check for parameter validtiy\r\n                var events = this._handler,\r\n                    parsed = parse(event);\r\n                event = parsed.type;\r\n\r\n                if (event) {\r\n                    var listener = events[event];\r\n\r\n                    if (listener) {\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                } else {\r\n                    //remove all events\r\n                    for (event in events) {\r\n                        var listener = events[event];\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                }\r\n            }\r\n        }),\r\n\r\n        findHandler = function(elm) {\r\n            var id = uid(elm),\r\n                handler = handlers[id];\r\n            if (!handler) {\r\n                handler = handlers[id] = new EventsHandler(elm);\r\n            }\r\n            return handler;\r\n        };\r\n\r\n    /*   \r\n     * Remove an event handler for one or more events from the specified element.\r\n     * @param {HTMLElement} elm  \r\n     * @param {String} events\r\n     * @param {String　Optional } selector\r\n     * @param {Function} callback\r\n     */\r\n    function off(elm, events, selector, callback) {\r\n        var $this = this\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                off(elm, type, selector, fn);\r\n            })\r\n            return $this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback) && callback !== false) {\r\n            callback = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        if (events) events.forEach(function(event) {\r\n\r\n            handler.unregister(event, callback, {\r\n                selector: selector,\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Attach an event handler function for one or more events to the selected elements.\r\n     * @param {HTMLElement} elm  \r\n     * @param {String} events\r\n     * @param {String　Optional} selector\r\n     * @param {Anything Optional} data\r\n     * @param {Function} callback\r\n     * @param {Boolean　Optional} one\r\n     */\r\n    function on(elm, events, selector, data, callback, one) {\r\n\r\n        var autoRemove, delegator;\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                on(elm, type, selector, data, fn, one);\r\n            });\r\n            return this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n            callback = data;\r\n            data = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (langx.isFunction(data)) {\r\n            callback = data;\r\n            data = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        events.forEach(function(event) {\r\n            if (event == \"ready\") {\r\n                return ready(callback);\r\n            }\r\n            handler.register(event, callback, {\r\n                data: data,\r\n                selector: selector,\r\n                one: !!one\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Attach a handler to an event for the elements. The handler is executed at most once per \r\n     * @param {HTMLElement} elm  \r\n     * @param {String} event\r\n     * @param {String　Optional} selector\r\n     * @param {Anything Optional} data\r\n     * @param {Function} callback\r\n     */\r\n    function one(elm, events, selector, data, callback) {\r\n        on(elm, events, selector, data, callback, 1);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Prevents propagation and clobbers the default action of the passed event. The same as calling event.preventDefault() and event.stopPropagation(). \r\n     * @param {String} event\r\n     */\r\n    function stop(event) {\r\n        if (window.document.all) {\r\n            event.keyCode = 0;\r\n        }\r\n        if (event.preventDefault) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        return this;\r\n    }\r\n    /*   \r\n     * Execute all handlers and behaviors attached to the matched elements for the given event  \r\n     * @param {String} evented\r\n     * @param {String} type\r\n     * @param {Array or PlainObject } args\r\n     */\r\n    function trigger(evented, type, args) {\r\n        var e;\r\n        if (type instanceof Event) {\r\n            e = type;\r\n        } else {\r\n            e = createEvent(type, args);\r\n        }\r\n        e._args = args;\r\n\r\n        var fn = (evented.dispatchEvent || evented.trigger);\r\n        if (fn) {\r\n            fn.call(evented, e);\r\n        } else {\r\n            console.warn(\"The evented parameter is not a eventable object\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n    /*   \r\n     * Specify a function to execute when the DOM is fully loaded.  \r\n     * @param {Function} callback\r\n     */\r\n    function ready(callback) {\r\n        // need to check if document.body exists for IE as that browser reports\r\n        // document ready when it hasn't yet created the body elm\r\n        if (readyRE.test(document.readyState) && document.body) {\r\n            langx.defer(callback);\r\n        } else {\r\n            document.addEventListener('DOMContentLoaded', callback, false);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    var keyCodeLookup = {\r\n        \"backspace\": 8,\r\n        \"comma\": 188,\r\n        \"delete\": 46,\r\n        \"down\": 40,\r\n        \"end\": 35,\r\n        \"enter\": 13,\r\n        \"escape\": 27,\r\n        \"home\": 36,\r\n        \"left\": 37,\r\n        \"page_down\": 34,\r\n        \"page_up\": 33,\r\n        \"period\": 190,\r\n        \"right\": 39,\r\n        \"space\": 32,\r\n        \"tab\": 9,\r\n        \"up\": 38\r\n    };\r\n    //example:\r\n    //shortcuts(elm).add(\"CTRL+ALT+SHIFT+X\",function(){console.log(\"test!\")});\r\n    function shortcuts(elm) {\r\n\r\n        var registry = datax.data(elm, \"shortcuts\");\r\n        if (!registry) {\r\n            registry = {};\r\n            datax.data(elm, \"shortcuts\", registry);\r\n            var run = function(shortcut, event) {\r\n                var n = event.metaKey || event.ctrlKey;\r\n                if (shortcut.ctrl == n && shortcut.alt == event.altKey && shortcut.shift == event.shiftKey) {\r\n                    if (event.keyCode == shortcut.keyCode || event.charCode && event.charCode == shortcut.charCode) {\r\n                        event.preventDefault();\r\n                        if (\"keydown\" == event.type) {\r\n                            shortcut.fn(event);\r\n                        }\r\n                        return true;\r\n                    }\r\n                }\r\n            };\r\n            on(elm, \"keyup keypress keydown\", function(event) {\r\n                if (!(/INPUT|TEXTAREA/.test(event.target.nodeName))) {\r\n                    for (var key in registry) {\r\n                        run(registry[key], event);\r\n                    }\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        return {\r\n            add: function(pattern, fn) {\r\n                var shortcutKeys;\r\n                if (pattern.indexOf(\",\") > -1) {\r\n                    shortcutKeys = pattern.toLowerCase().split(\",\");\r\n                } else {\r\n                    shortcutKeys = pattern.toLowerCase().split(\" \");\r\n                }\r\n                shortcutKeys.forEach(function(shortcutKey) {\r\n                    var setting = {\r\n                        fn: fn,\r\n                        alt: false,\r\n                        ctrl: false,\r\n                        shift: false\r\n                    };\r\n                    shortcutKey.split(\"+\").forEach(function(key) {\r\n                        switch (key) {\r\n                            case \"alt\":\r\n                            case \"ctrl\":\r\n                            case \"shift\":\r\n                                setting[key] = true;\r\n                                break;\r\n                            default:\r\n                                setting.charCode = key.charCodeAt(0);\r\n                                setting.keyCode = keyCodeLookup[key] || key.toUpperCase().charCodeAt(0);\r\n                        }\r\n                    });\r\n                    var regKey = (setting.ctrl ? \"ctrl\" : \"\") + \",\" + (setting.alt ? \"alt\" : \"\") + \",\" + (setting.shift ? \"shift\" : \"\") + \",\" + setting.keyCode;\r\n                    registry[regKey] = setting;\r\n                })\r\n            }\r\n\r\n        };\r\n\r\n    }\r\n\r\n    if (browser.support.transition) {\r\n        specialEvents.transitionEnd = {\r\n//          handle: function (e) {\r\n//            if ($(e.target).is(this)) return e.handleObj.handler.apply(this, arguments)\r\n//          },\r\n          bindType: browser.support.transition.end,\r\n          delegateType: browser.support.transition.end\r\n        }        \r\n    }\r\n\r\n    function eventer() {\r\n        return eventer;\r\n    }\r\n\r\n    langx.mixin(eventer, {\r\n        create: createEvent,\r\n\r\n        keys: keyCodeLookup,\r\n\r\n        off: off,\r\n\r\n        on: on,\r\n\r\n        one: one,\r\n\r\n        proxy: createProxy,\r\n\r\n        ready: ready,\r\n\r\n        shortcuts: shortcuts,\r\n\r\n        special: specialEvents,\r\n\r\n        stop: stop,\r\n\r\n        trigger: trigger\r\n\r\n    });\r\n\r\n    return dom.eventer = eventer;\r\n});\ndefine('skylark-utils-dom/geom',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./styler\"\r\n], function(dom, langx, noder, styler) {\r\n    var rootNodeRE = /^(?:body|html)$/i,\r\n        px = langx.toPixel,\r\n        offsetParent = noder.offsetParent,\r\n        cachedScrollbarWidth;\r\n\r\n    function scrollbarWidth() {\r\n        if (cachedScrollbarWidth !== undefined) {\r\n            return cachedScrollbarWidth;\r\n        }\r\n        var w1, w2,\r\n            div = noder.createFragment(\"<div style=\" +\r\n                \"'display:block;position:absolute;width:200px;height:200px;overflow:hidden;'>\" +\r\n                \"<div style='height:300px;width:auto;'></div></div>\")[0],\r\n            innerDiv = div.childNodes[0];\r\n\r\n        noder.append(document.body, div);\r\n\r\n        w1 = innerDiv.offsetWidth;\r\n\r\n        styler.css(div, \"overflow\", \"scroll\");\r\n\r\n        w2 = innerDiv.offsetWidth;\r\n\r\n        if (w1 === w2) {\r\n            w2 = div[0].clientWidth;\r\n        }\r\n\r\n        noder.remove(div);\r\n\r\n        return (cachedScrollbarWidth = w1 - w2);\r\n    }\r\n    /*\r\n     * Get the widths of each border of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function borderExtents(elm) {\r\n        if (noder.isWindow(elm)) {\r\n            return {\r\n                left : 0,\r\n                top : 0,\r\n                right : 0,\r\n                bottom : 0\r\n            }\r\n        }        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.borderLeftWidth, elm),\r\n            top: px(s.borderTopWidth, elm),\r\n            right: px(s.borderRightWidth, elm),\r\n            bottom: px(s.borderBottomWidth, elm)\r\n        }\r\n    }\r\n\r\n    //viewport coordinate\r\n    /*\r\n     * Get or set the viewport position of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function boundingPosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            return rootNodeRE.test(elm.nodeName) ? { top: 0, left: 0 } : elm.getBoundingClientRect();\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the viewport rect of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function boundingRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            return elm.getBoundingClientRect()\r\n        } else {\r\n            boundingPosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the height of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function clientHeight(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).height;\r\n        } else {\r\n            return clientSize(elm, {\r\n                height: value\r\n            });\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the size of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} dimension\r\n     */\r\n    function clientSize(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            return {\r\n                width: elm.clientWidth,\r\n                height: elm.clientHeight\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width - pex.left - pex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height - pex.top - pex.bottom;\r\n                }\r\n            } else {\r\n                var bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width + bex.left + bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height + bex.top + bex.bottom;\r\n                }\r\n\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n        return {\r\n            width: elm.clientWidth,\r\n            height: elm.clientHeight\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get or set the width of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} dimension\r\n     */\r\n    function clientWidth(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).width;\r\n        } else {\r\n            clientSize(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the rect of the specified element content box.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function contentRect(elm) {\r\n        var cs = clientSize(elm),\r\n            pex = paddingExtents(elm);\r\n\r\n\r\n        //// On Opera, offsetLeft includes the parent's border\r\n        //if(has(\"opera\")){\r\n        //    pe.l += be.l;\r\n        //    pe.t += be.t;\r\n        //}\r\n        return {\r\n            left: pex.left,\r\n            top: pex.top,\r\n            width: cs.width - pex.left - pex.right,\r\n            height: cs.height - pex.top - pex.bottom\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the document size.\r\n     * @param {HTMLDocument} doc\r\n     */\r\n    function getDocumentSize(doc) {\r\n        var documentElement = doc.documentElement,\r\n            body = doc.body,\r\n            max = Math.max,\r\n            scrollWidth = max(documentElement.scrollWidth, body.scrollWidth),\r\n            clientWidth = max(documentElement.clientWidth, body.clientWidth),\r\n            offsetWidth = max(documentElement.offsetWidth, body.offsetWidth),\r\n            scrollHeight = max(documentElement.scrollHeight, body.scrollHeight),\r\n            clientHeight = max(documentElement.clientHeight, body.clientHeight),\r\n            offsetHeight = max(documentElement.offsetHeight, body.offsetHeight);\r\n\r\n        return {\r\n            width: scrollWidth < offsetWidth ? clientWidth : scrollWidth,\r\n            height: scrollHeight < offsetHeight ? clientHeight : scrollHeight\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the document size.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function height(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).height;\r\n        } else {\r\n            size(elm, {\r\n                height: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the widths of each margin of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function marginExtents(elm) {\r\n        if (noder.isWindow(elm)) {\r\n            return {\r\n                left : 0,\r\n                top : 0,\r\n                right : 0,\r\n                bottom : 0\r\n            }\r\n        }\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.marginLeft),\r\n            top: px(s.marginTop),\r\n            right: px(s.marginRight),\r\n            bottom: px(s.marginBottom),\r\n        }\r\n    }\r\n\r\n\r\n    function marginRect(elm) {\r\n        var obj = relativeRect(elm),\r\n            me = marginExtents(elm);\r\n\r\n        return {\r\n            left: obj.left,\r\n            top: obj.top,\r\n            width: obj.width + me.left + me.right,\r\n            height: obj.height + me.top + me.bottom\r\n        };\r\n    }\r\n\r\n\r\n    function marginSize(elm) {\r\n        var obj = size(elm),\r\n            me = marginExtents(elm);\r\n\r\n        return {\r\n            width: obj.width + me.left + me.right,\r\n            height: obj.height + me.top + me.bottom\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the widths of each padding of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function paddingExtents(elm) {\r\n        if (noder.isWindow(elm)) {\r\n            return {\r\n                left : 0,\r\n                top : 0,\r\n                right : 0,\r\n                bottom : 0\r\n            }\r\n        }\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.paddingLeft),\r\n            top: px(s.paddingTop),\r\n            right: px(s.paddingRight),\r\n            bottom: px(s.paddingBottom),\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the document position of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    //coordinate to the document\r\n    function pagePosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset\r\n            }\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = pagePosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the document rect of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function pageRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset,\r\n                width: Math.round(obj.width),\r\n                height: Math.round(obj.height)\r\n            }\r\n        } else {\r\n            pagePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the position of the specified element border box , relative to parent element.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    // coordinate relative to it's parent\r\n    function relativePosition(elm, coords) {\r\n        if (coords == undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingPosition(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top, // - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left, // - mex.left\r\n            }\r\n        } else {\r\n            var props = {\r\n                top: coords.top,\r\n                left: coords.left\r\n            }\r\n\r\n            if (styler.css(elm, \"position\") == \"static\") {\r\n                props['position'] = \"relative\";\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the rect of the specified element border box , relatived to parent element.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function relativeRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingRect(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top, // - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left, // - mex.left,\r\n                width: offset.width,\r\n                height: offset.height\r\n            }\r\n        } else {\r\n            relativePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Scroll the specified element into view.\r\n     * @param {HTMLElement} elm\r\n     * @param {} align\r\n     */\r\n    function scrollIntoView(elm, align) {\r\n        function getOffset(elm, rootElm) {\r\n            var x, y, parent = elm;\r\n\r\n            x = y = 0;\r\n            while (parent && parent != rootElm && parent.nodeType) {\r\n                x += parent.offsetLeft || 0;\r\n                y += parent.offsetTop || 0;\r\n                parent = parent.offsetParent;\r\n            }\r\n\r\n            return { x: x, y: y };\r\n        }\r\n\r\n        var parentElm = elm.parentNode;\r\n        var x, y, width, height, parentWidth, parentHeight;\r\n        var pos = getOffset(elm, parentElm);\r\n\r\n        x = pos.x;\r\n        y = pos.y;\r\n        width = elm.offsetWidth;\r\n        height = elm.offsetHeight;\r\n        parentWidth = parentElm.clientWidth;\r\n        parentHeight = parentElm.clientHeight;\r\n\r\n        if (align == \"end\") {\r\n            x -= parentWidth - width;\r\n            y -= parentHeight - height;\r\n        } else if (align == \"center\") {\r\n            x -= (parentWidth / 2) - (width / 2);\r\n            y -= (parentHeight / 2) - (height / 2);\r\n        }\r\n\r\n        parentElm.scrollLeft = x;\r\n        parentElm.scrollTop = y;\r\n\r\n        return this;\r\n    }\r\n    /*\r\n     * Get or set the current horizontal position of the scroll bar for the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function scrollLeft(elm, value) {\r\n        var hasScrollLeft = \"scrollLeft\" in elm;\r\n        if (value === undefined) {\r\n            return hasScrollLeft ? elm.scrollLeft : elm.pageXOffset\r\n        } else {\r\n            if (hasScrollLeft) {\r\n                elm.scrollLeft = value;\r\n            } else {\r\n                elm.scrollTo(value, elm.scrollY);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or the current vertical position of the scroll bar for the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function scrollTop(elm, value) {\r\n        var hasScrollTop = \"scrollTop\" in elm;\r\n\r\n        if (value === undefined) {\r\n            return hasScrollTop ? elm.scrollTop : elm.pageYOffset\r\n        } else {\r\n            if (hasScrollTop) {\r\n                elm.scrollTop = value;\r\n            } else {\r\n                elm.scrollTo(elm.scrollX, value);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or set the size of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject}dimension\r\n     */\r\n    function size(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            if (langx.isWindow(elm)) {\r\n                return {\r\n                    width: elm.innerWidth,\r\n                    height: elm.innerHeight\r\n                }\r\n\r\n            } else if (langx.isDocument(elm)) {\r\n                return getDocumentSize(document);\r\n            } else {\r\n                return {\r\n                    width: elm.offsetWidth,\r\n                    height: elm.offsetHeight\r\n                }\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm),\r\n                    bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined && props.width !== \"\" && props.width !== null) {\r\n                    props.width = props.width - pex.left - pex.right - bex.left - bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined && props.height !== \"\" && props.height !== null) {\r\n                    props.height = props.height - pex.top - pex.bottom - bex.top - bex.bottom;\r\n                }\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or set the size of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function width(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).width;\r\n        } else {\r\n            size(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function geom() {\r\n        return geom;\r\n    }\r\n\r\n    langx.mixin(geom, {\r\n        borderExtents: borderExtents,\r\n        //viewport coordinate\r\n        boundingPosition: boundingPosition,\r\n\r\n        boundingRect: boundingRect,\r\n\r\n        clientHeight: clientHeight,\r\n\r\n        clientSize: clientSize,\r\n\r\n        clientWidth: clientWidth,\r\n\r\n        contentRect: contentRect,\r\n\r\n        getDocumentSize: getDocumentSize,\r\n\r\n        height: height,\r\n\r\n        marginExtents: marginExtents,\r\n\r\n        marginRect: marginRect,\r\n\r\n        marginSize: marginSize,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        paddingExtents: paddingExtents,\r\n\r\n        //coordinate to the document\r\n        pagePosition: pagePosition,\r\n\r\n        pageRect: pageRect,\r\n\r\n        // coordinate relative to it's parent\r\n        relativePosition: relativePosition,\r\n\r\n        relativeRect: relativeRect,\r\n\r\n        scrollbarWidth: scrollbarWidth,\r\n\r\n        scrollIntoView: scrollIntoView,\r\n\r\n        scrollLeft: scrollLeft,\r\n\r\n        scrollTop: scrollTop,\r\n\r\n        size: size,\r\n\r\n        width: width\r\n    });\r\n\r\n    ( function() {\r\n        var max = Math.max,\r\n            abs = Math.abs,\r\n            rhorizontal = /left|center|right/,\r\n            rvertical = /top|center|bottom/,\r\n            roffset = /[\\+\\-]\\d+(\\.[\\d]+)?%?/,\r\n            rposition = /^\\w+/,\r\n            rpercent = /%$/;\r\n\r\n        function getOffsets( offsets, width, height ) {\r\n            return [\r\n                parseFloat( offsets[ 0 ] ) * ( rpercent.test( offsets[ 0 ] ) ? width / 100 : 1 ),\r\n                parseFloat( offsets[ 1 ] ) * ( rpercent.test( offsets[ 1 ] ) ? height / 100 : 1 )\r\n            ];\r\n        }\r\n\r\n        function parseCss( element, property ) {\r\n            return parseInt( styler.css( element, property ), 10 ) || 0;\r\n        }\r\n\r\n        function getDimensions( raw ) {\r\n            if ( raw.nodeType === 9 ) {\r\n                return {\r\n                    size: size(raw),\r\n                    offset: { top: 0, left: 0 }\r\n                };\r\n            }\r\n            if ( noder.isWindow( raw ) ) {\r\n                return {\r\n                    size: size(raw),\r\n                    offset: { \r\n                        top: scrollTop(raw), \r\n                        left: scrollLeft(raw) \r\n                    }\r\n                };\r\n            }\r\n            if ( raw.preventDefault ) {\r\n                return {\r\n                    size : {\r\n                        width: 0,\r\n                        height: 0\r\n                    },\r\n                    offset: { \r\n                        top: raw.pageY, \r\n                        left: raw.pageX \r\n                    }\r\n                };\r\n            }\r\n            return {\r\n                size: size(raw),\r\n                offset: pagePosition(raw)\r\n            };\r\n        }\r\n\r\n        function getScrollInfo( within ) {\r\n            var overflowX = within.isWindow || within.isDocument ? \"\" :\r\n                    styler.css(within.element,\"overflow-x\" ),\r\n                overflowY = within.isWindow || within.isDocument ? \"\" :\r\n                    styler.css(within.element,\"overflow-y\" ),\r\n                hasOverflowX = overflowX === \"scroll\" ||\r\n                    ( overflowX === \"auto\" && within.width < scrollWidth(within.element) ),\r\n                hasOverflowY = overflowY === \"scroll\" ||\r\n                    ( overflowY === \"auto\" && within.height < scrollHeight(within.element));\r\n            return {\r\n                width: hasOverflowY ? scrollbarWidth() : 0,\r\n                height: hasOverflowX ? scrollbarWidth() : 0\r\n            };\r\n        }\r\n\r\n        function getWithinInfo( element ) {\r\n            var withinElement = element || window,\r\n                isWindow = noder.isWindow( withinElement),\r\n                isDocument = !!withinElement && withinElement.nodeType === 9,\r\n                hasOffset = !isWindow && !isDocument,\r\n                msize = marginSize(withinElement);\r\n            return {\r\n                element: withinElement,\r\n                isWindow: isWindow,\r\n                isDocument: isDocument,\r\n                offset: hasOffset ? pagePosition(element) : { left: 0, top: 0 },\r\n                scrollLeft: scrollLeft(withinElement),\r\n                scrollTop: scrollTop(withinElement),\r\n                width: msize.width,\r\n                height: msize.height\r\n            };\r\n        }\r\n\r\n        function posit(elm,options ) {\r\n            // Make a copy, we don't want to modify arguments\r\n            options = langx.extend( {}, options );\r\n\r\n            var atOffset, targetWidth, targetHeight, targetOffset, basePosition, dimensions,\r\n                target = options.of,\r\n                within = getWithinInfo( options.within ),\r\n                scrollInfo = getScrollInfo( within ),\r\n                collision = ( options.collision || \"flip\" ).split( \" \" ),\r\n                offsets = {};\r\n\r\n            dimensions = getDimensions( target );\r\n            if ( target.preventDefault ) {\r\n\r\n                // Force left top to allow flipping\r\n                options.at = \"left top\";\r\n            }\r\n            targetWidth = dimensions.size.width;\r\n            targetHeight = dimensions.size.height;\r\n            targetOffset = dimensions.offset;\r\n\r\n            // Clone to reuse original targetOffset later\r\n            basePosition = langx.extend( {}, targetOffset );\r\n\r\n            // Force my and at to have valid horizontal and vertical positions\r\n            // if a value is missing or invalid, it will be converted to center\r\n            langx.each( [ \"my\", \"at\" ], function() {\r\n                var pos = ( options[ this ] || \"\" ).split( \" \" ),\r\n                    horizontalOffset,\r\n                    verticalOffset;\r\n\r\n                if ( pos.length === 1 ) {\r\n                    pos = rhorizontal.test( pos[ 0 ] ) ?\r\n                        pos.concat( [ \"center\" ] ) :\r\n                        rvertical.test( pos[ 0 ] ) ?\r\n                            [ \"center\" ].concat( pos ) :\r\n                            [ \"center\", \"center\" ];\r\n                }\r\n                pos[ 0 ] = rhorizontal.test( pos[ 0 ] ) ? pos[ 0 ] : \"center\";\r\n                pos[ 1 ] = rvertical.test( pos[ 1 ] ) ? pos[ 1 ] : \"center\";\r\n\r\n                // Calculate offsets\r\n                horizontalOffset = roffset.exec( pos[ 0 ] );\r\n                verticalOffset = roffset.exec( pos[ 1 ] );\r\n                offsets[ this ] = [\r\n                    horizontalOffset ? horizontalOffset[ 0 ] : 0,\r\n                    verticalOffset ? verticalOffset[ 0 ] : 0\r\n                ];\r\n\r\n                // Reduce to just the positions without the offsets\r\n                options[ this ] = [\r\n                    rposition.exec( pos[ 0 ] )[ 0 ],\r\n                    rposition.exec( pos[ 1 ] )[ 0 ]\r\n                ];\r\n            } );\r\n\r\n            // Normalize collision option\r\n            if ( collision.length === 1 ) {\r\n                collision[ 1 ] = collision[ 0 ];\r\n            }\r\n\r\n            if ( options.at[ 0 ] === \"right\" ) {\r\n                basePosition.left += targetWidth;\r\n            } else if ( options.at[ 0 ] === \"center\" ) {\r\n                basePosition.left += targetWidth / 2;\r\n            }\r\n\r\n            if ( options.at[ 1 ] === \"bottom\" ) {\r\n                basePosition.top += targetHeight;\r\n            } else if ( options.at[ 1 ] === \"center\" ) {\r\n                basePosition.top += targetHeight / 2;\r\n            }\r\n\r\n            atOffset = getOffsets( offsets.at, targetWidth, targetHeight );\r\n            basePosition.left += atOffset[ 0 ];\r\n            basePosition.top += atOffset[ 1 ];\r\n\r\n            return ( function(elem) {\r\n                var collisionPosition, using,\r\n                    msize = marginSize(elem),\r\n                    elemWidth = msize.width,\r\n                    elemHeight = msize.height,\r\n                    marginLeft = parseCss( elem, \"marginLeft\" ),\r\n                    marginTop = parseCss( elem, \"marginTop\" ),\r\n                    collisionWidth = elemWidth + marginLeft + parseCss( elem, \"marginRight\" ) +\r\n                        scrollInfo.width,\r\n                    collisionHeight = elemHeight + marginTop + parseCss( elem, \"marginBottom\" ) +\r\n                        scrollInfo.height,\r\n                    position = langx.extend( {}, basePosition ),\r\n                    myOffset = getOffsets( offsets.my, msize.width, msize.height);\r\n\r\n                if ( options.my[ 0 ] === \"right\" ) {\r\n                    position.left -= elemWidth;\r\n                } else if ( options.my[ 0 ] === \"center\" ) {\r\n                    position.left -= elemWidth / 2;\r\n                }\r\n\r\n                if ( options.my[ 1 ] === \"bottom\" ) {\r\n                    position.top -= elemHeight;\r\n                } else if ( options.my[ 1 ] === \"center\" ) {\r\n                    position.top -= elemHeight / 2;\r\n                }\r\n\r\n                position.left += myOffset[ 0 ];\r\n                position.top += myOffset[ 1 ];\r\n\r\n                collisionPosition = {\r\n                    marginLeft: marginLeft,\r\n                    marginTop: marginTop\r\n                };\r\n\r\n                langx.each( [ \"left\", \"top\" ], function( i, dir ) {\r\n                    if ( positions[ collision[ i ] ] ) {\r\n                        positions[ collision[ i ] ][ dir ]( position, {\r\n                            targetWidth: targetWidth,\r\n                            targetHeight: targetHeight,\r\n                            elemWidth: elemWidth,\r\n                            elemHeight: elemHeight,\r\n                            collisionPosition: collisionPosition,\r\n                            collisionWidth: collisionWidth,\r\n                            collisionHeight: collisionHeight,\r\n                            offset: [ atOffset[ 0 ] + myOffset[ 0 ], atOffset [ 1 ] + myOffset[ 1 ] ],\r\n                            my: options.my,\r\n                            at: options.at,\r\n                            within: within,\r\n                            elem: elem\r\n                        } );\r\n                    }\r\n                } );\r\n\r\n                if ( options.using ) {\r\n\r\n                    // Adds feedback as second argument to using callback, if present\r\n                    using = function( props ) {\r\n                        var left = targetOffset.left - position.left,\r\n                            right = left + targetWidth - elemWidth,\r\n                            top = targetOffset.top - position.top,\r\n                            bottom = top + targetHeight - elemHeight,\r\n                            feedback = {\r\n                                target: {\r\n                                    element: target,\r\n                                    left: targetOffset.left,\r\n                                    top: targetOffset.top,\r\n                                    width: targetWidth,\r\n                                    height: targetHeight\r\n                                },\r\n                                element: {\r\n                                    element: elem,\r\n                                    left: position.left,\r\n                                    top: position.top,\r\n                                    width: elemWidth,\r\n                                    height: elemHeight\r\n                                },\r\n                                horizontal: right < 0 ? \"left\" : left > 0 ? \"right\" : \"center\",\r\n                                vertical: bottom < 0 ? \"top\" : top > 0 ? \"bottom\" : \"middle\"\r\n                            };\r\n                        if ( targetWidth < elemWidth && abs( left + right ) < targetWidth ) {\r\n                            feedback.horizontal = \"center\";\r\n                        }\r\n                        if ( targetHeight < elemHeight && abs( top + bottom ) < targetHeight ) {\r\n                            feedback.vertical = \"middle\";\r\n                        }\r\n                        if ( max( abs( left ), abs( right ) ) > max( abs( top ), abs( bottom ) ) ) {\r\n                            feedback.important = \"horizontal\";\r\n                        } else {\r\n                            feedback.important = \"vertical\";\r\n                        }\r\n                        options.using.call( this, props, feedback );\r\n                    };\r\n                }\r\n\r\n                pagePosition(elem, langx.extend( position, { using: using } ));\r\n            })(elm);\r\n        }\r\n\r\n        var positions = {\r\n            fit: {\r\n                left: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.isWindow ? within.scrollLeft : within.offset.left,\r\n                        outerWidth = within.width,\r\n                        collisionPosLeft = position.left - data.collisionPosition.marginLeft,\r\n                        overLeft = withinOffset - collisionPosLeft,\r\n                        overRight = collisionPosLeft + data.collisionWidth - outerWidth - withinOffset,\r\n                        newOverRight;\r\n\r\n                    // Element is wider than within\r\n                    if ( data.collisionWidth > outerWidth ) {\r\n\r\n                        // Element is initially over the left side of within\r\n                        if ( overLeft > 0 && overRight <= 0 ) {\r\n                            newOverRight = position.left + overLeft + data.collisionWidth - outerWidth -\r\n                                withinOffset;\r\n                            position.left += overLeft - newOverRight;\r\n\r\n                        // Element is initially over right side of within\r\n                        } else if ( overRight > 0 && overLeft <= 0 ) {\r\n                            position.left = withinOffset;\r\n\r\n                        // Element is initially over both left and right sides of within\r\n                        } else {\r\n                            if ( overLeft > overRight ) {\r\n                                position.left = withinOffset + outerWidth - data.collisionWidth;\r\n                            } else {\r\n                                position.left = withinOffset;\r\n                            }\r\n                        }\r\n\r\n                    // Too far left -> align with left edge\r\n                    } else if ( overLeft > 0 ) {\r\n                        position.left += overLeft;\r\n\r\n                    // Too far right -> align with right edge\r\n                    } else if ( overRight > 0 ) {\r\n                        position.left -= overRight;\r\n\r\n                    // Adjust based on position and margin\r\n                    } else {\r\n                        position.left = max( position.left - collisionPosLeft, position.left );\r\n                    }\r\n                },\r\n                top: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.isWindow ? within.scrollTop : within.offset.top,\r\n                        outerHeight = data.within.height,\r\n                        collisionPosTop = position.top - data.collisionPosition.marginTop,\r\n                        overTop = withinOffset - collisionPosTop,\r\n                        overBottom = collisionPosTop + data.collisionHeight - outerHeight - withinOffset,\r\n                        newOverBottom;\r\n\r\n                    // Element is taller than within\r\n                    if ( data.collisionHeight > outerHeight ) {\r\n\r\n                        // Element is initially over the top of within\r\n                        if ( overTop > 0 && overBottom <= 0 ) {\r\n                            newOverBottom = position.top + overTop + data.collisionHeight - outerHeight -\r\n                                withinOffset;\r\n                            position.top += overTop - newOverBottom;\r\n\r\n                        // Element is initially over bottom of within\r\n                        } else if ( overBottom > 0 && overTop <= 0 ) {\r\n                            position.top = withinOffset;\r\n\r\n                        // Element is initially over both top and bottom of within\r\n                        } else {\r\n                            if ( overTop > overBottom ) {\r\n                                position.top = withinOffset + outerHeight - data.collisionHeight;\r\n                            } else {\r\n                                position.top = withinOffset;\r\n                            }\r\n                        }\r\n\r\n                    // Too far up -> align with top\r\n                    } else if ( overTop > 0 ) {\r\n                        position.top += overTop;\r\n\r\n                    // Too far down -> align with bottom edge\r\n                    } else if ( overBottom > 0 ) {\r\n                        position.top -= overBottom;\r\n\r\n                    // Adjust based on position and margin\r\n                    } else {\r\n                        position.top = max( position.top - collisionPosTop, position.top );\r\n                    }\r\n                }\r\n            },\r\n            flip: {\r\n                left: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.offset.left + within.scrollLeft,\r\n                        outerWidth = within.width,\r\n                        offsetLeft = within.isWindow ? within.scrollLeft : within.offset.left,\r\n                        collisionPosLeft = position.left - data.collisionPosition.marginLeft,\r\n                        overLeft = collisionPosLeft - offsetLeft,\r\n                        overRight = collisionPosLeft + data.collisionWidth - outerWidth - offsetLeft,\r\n                        myOffset = data.my[ 0 ] === \"left\" ?\r\n                            -data.elemWidth :\r\n                            data.my[ 0 ] === \"right\" ?\r\n                                data.elemWidth :\r\n                                0,\r\n                        atOffset = data.at[ 0 ] === \"left\" ?\r\n                            data.targetWidth :\r\n                            data.at[ 0 ] === \"right\" ?\r\n                                -data.targetWidth :\r\n                                0,\r\n                        offset = -2 * data.offset[ 0 ],\r\n                        newOverRight,\r\n                        newOverLeft;\r\n\r\n                    if ( overLeft < 0 ) {\r\n                        newOverRight = position.left + myOffset + atOffset + offset + data.collisionWidth -\r\n                            outerWidth - withinOffset;\r\n                        if ( newOverRight < 0 || newOverRight < abs( overLeft ) ) {\r\n                            position.left += myOffset + atOffset + offset;\r\n                        }\r\n                    } else if ( overRight > 0 ) {\r\n                        newOverLeft = position.left - data.collisionPosition.marginLeft + myOffset +\r\n                            atOffset + offset - offsetLeft;\r\n                        if ( newOverLeft > 0 || abs( newOverLeft ) < overRight ) {\r\n                            position.left += myOffset + atOffset + offset;\r\n                        }\r\n                    }\r\n                },\r\n                top: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.offset.top + within.scrollTop,\r\n                        outerHeight = within.height,\r\n                        offsetTop = within.isWindow ? within.scrollTop : within.offset.top,\r\n                        collisionPosTop = position.top - data.collisionPosition.marginTop,\r\n                        overTop = collisionPosTop - offsetTop,\r\n                        overBottom = collisionPosTop + data.collisionHeight - outerHeight - offsetTop,\r\n                        top = data.my[ 1 ] === \"top\",\r\n                        myOffset = top ?\r\n                            -data.elemHeight :\r\n                            data.my[ 1 ] === \"bottom\" ?\r\n                                data.elemHeight :\r\n                                0,\r\n                        atOffset = data.at[ 1 ] === \"top\" ?\r\n                            data.targetHeight :\r\n                            data.at[ 1 ] === \"bottom\" ?\r\n                                -data.targetHeight :\r\n                                0,\r\n                        offset = -2 * data.offset[ 1 ],\r\n                        newOverTop,\r\n                        newOverBottom;\r\n                    if ( overTop < 0 ) {\r\n                        newOverBottom = position.top + myOffset + atOffset + offset + data.collisionHeight -\r\n                            outerHeight - withinOffset;\r\n                        if ( newOverBottom < 0 || newOverBottom < abs( overTop ) ) {\r\n                            position.top += myOffset + atOffset + offset;\r\n                        }\r\n                    } else if ( overBottom > 0 ) {\r\n                        newOverTop = position.top - data.collisionPosition.marginTop + myOffset + atOffset +\r\n                            offset - offsetTop;\r\n                        if ( newOverTop > 0 || abs( newOverTop ) < overBottom ) {\r\n                            position.top += myOffset + atOffset + offset;\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            flipfit: {\r\n                left: function() {\r\n                    positions.flip.left.apply( this, arguments );\r\n                    positions.fit.left.apply( this, arguments );\r\n                },\r\n                top: function() {\r\n                    positions.flip.top.apply( this, arguments );\r\n                    positions.fit.top.apply( this, arguments );\r\n                }\r\n            }\r\n        };\r\n\r\n        geom.posit = posit;\r\n    })();\r\n\r\n    return dom.geom = geom;\r\n});\ndefine('skylark-utils-dom/fx',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./eventer\"\r\n], function(dom, langx, browser, geom, styler, eventer) {\r\n    var animationName,\r\n        animationDuration,\r\n        animationTiming,\r\n        animationDelay,\r\n        transitionProperty,\r\n        transitionDuration,\r\n        transitionTiming,\r\n        transitionDelay,\r\n\r\n        animationEnd = browser.normalizeCssEvent('AnimationEnd'),\r\n        transitionEnd = browser.normalizeCssEvent('TransitionEnd'),\r\n\r\n        supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i,\r\n        transform = browser.css3PropPrefix + \"transform\",\r\n        cssReset = {};\r\n\r\n\r\n    cssReset[animationName = browser.normalizeCssProperty(\"animation-name\")] =\r\n        cssReset[animationDuration = browser.normalizeCssProperty(\"animation-duration\")] =\r\n        cssReset[animationDelay = browser.normalizeCssProperty(\"animation-delay\")] =\r\n        cssReset[animationTiming = browser.normalizeCssProperty(\"animation-timing-function\")] = \"\";\r\n\r\n    cssReset[transitionProperty = browser.normalizeCssProperty(\"transition-property\")] =\r\n        cssReset[transitionDuration = browser.normalizeCssProperty(\"transition-duration\")] =\r\n        cssReset[transitionDelay = browser.normalizeCssProperty(\"transition-delay\")] =\r\n        cssReset[transitionTiming = browser.normalizeCssProperty(\"transition-timing-function\")] = \"\";\r\n\r\n\r\n\r\n    /*   \r\n     * Perform a custom animation of a set of CSS properties.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} properties\r\n     * @param {String} ease\r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     * @param {Number or String} delay\r\n     */\r\n    function animate(elm, properties, duration, ease, callback, delay) {\r\n        var key,\r\n            cssValues = {},\r\n            cssProperties = [],\r\n            transforms = \"\",\r\n            that = this,\r\n            endEvent,\r\n            wrappedCallback,\r\n            fired = false,\r\n            hasScrollTop = false,\r\n            resetClipAuto = false;\r\n\r\n        if (langx.isPlainObject(duration)) {\r\n            ease = duration.easing;\r\n            callback = duration.complete;\r\n            delay = duration.delay;\r\n            duration = duration.duration;\r\n        }\r\n\r\n        if (langx.isString(duration)) {\r\n            duration = fx.speeds[duration];\r\n        }\r\n        if (duration === undefined) {\r\n            duration = fx.speeds.normal;\r\n        }\r\n        duration = duration / 1000;\r\n        if (fx.off) {\r\n            duration = 0;\r\n        }\r\n\r\n        if (langx.isFunction(ease)) {\r\n            callback = ease;\r\n            eace = \"swing\";\r\n        } else {\r\n            ease = ease || \"swing\";\r\n        }\r\n\r\n        if (delay) {\r\n            delay = delay / 1000;\r\n        } else {\r\n            delay = 0;\r\n        }\r\n\r\n        if (langx.isString(properties)) {\r\n            // keyframe animation\r\n            cssValues[animationName] = properties;\r\n            cssValues[animationDuration] = duration + \"s\";\r\n            cssValues[animationTiming] = ease;\r\n            endEvent = animationEnd;\r\n        } else {\r\n            // CSS transitions\r\n            for (key in properties) {\r\n                var v = properties[key];\r\n                if (supportedTransforms.test(key)) {\r\n                    transforms += key + \"(\" + v + \") \";\r\n                } else {\r\n                    if (key === \"scrollTop\") {\r\n                        hasScrollTop = true;\r\n                    }\r\n                    if (key == \"clip\" && langx.isPlainObject(v)) {\r\n                        cssValues[key] = \"rect(\" + v.top+\"px,\"+ v.right +\"px,\"+ v.bottom +\"px,\"+ v.left+\"px)\";\r\n                        if (styler.css(elm,\"clip\") == \"auto\") {\r\n                            var size = geom.size(elm);\r\n                            styler.css(elm,\"clip\",\"rect(\"+\"0px,\"+ size.width +\"px,\"+ size.height +\"px,\"+\"0px)\");  \r\n                            resetClipAuto = true;\r\n                        }\r\n\r\n                    } else {\r\n                        cssValues[key] = v;\r\n                    }\r\n                    cssProperties.push(langx.dasherize(key));\r\n                }\r\n            }\r\n            endEvent = transitionEnd;\r\n        }\r\n\r\n        if (transforms) {\r\n            cssValues[transform] = transforms;\r\n            cssProperties.push(transform);\r\n        }\r\n\r\n        if (duration > 0 && langx.isPlainObject(properties)) {\r\n            cssValues[transitionProperty] = cssProperties.join(\", \");\r\n            cssValues[transitionDuration] = duration + \"s\";\r\n            cssValues[transitionDelay] = delay + \"s\";\r\n            cssValues[transitionTiming] = ease;\r\n        }\r\n\r\n        wrappedCallback = function(event) {\r\n            fired = true;\r\n            if (event) {\r\n                if (event.target !== event.currentTarget) {\r\n                    return // makes sure the event didn't bubble from \"below\"\r\n                }\r\n                eventer.off(event.target, endEvent, wrappedCallback)\r\n            } else {\r\n                eventer.off(elm, animationEnd, wrappedCallback) // triggered by setTimeout\r\n            }\r\n            styler.css(elm, cssReset);\r\n            if (resetClipAuto) {\r\n //               styler.css(elm,\"clip\",\"auto\");\r\n            }\r\n            callback && callback.call(this);\r\n        };\r\n\r\n        if (duration > 0) {\r\n            eventer.on(elm, endEvent, wrappedCallback);\r\n            // transitionEnd is not always firing on older Android phones\r\n            // so make sure it gets fired\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, ((duration + delay) * 1000) + 25)();\r\n        }\r\n\r\n        // trigger page reflow so new elements can animate\r\n        elm.clientLeft;\r\n\r\n        styler.css(elm, cssValues);\r\n\r\n        if (duration <= 0) {\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, 0)();\r\n        }\r\n\r\n        if (hasScrollTop) {\r\n            scrollToTop(elm, properties[\"scrollTop\"], duration, callback);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display an element.\r\n     * @param {Object} elm  \r\n     * @param {String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function show(elm, speed, callback) {\r\n        styler.show(elm);\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            styler.css(elm, \"opacity\", 0)\r\n            animate(elm, { opacity: 1, scale: \"1,1\" }, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Hide an element.\r\n     * @param {Object} elm  \r\n     * @param {String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function hide(elm, speed, callback) {\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            animate(elm, { opacity: 0, scale: \"0,0\" }, speed, function() {\r\n                styler.hide(elm);\r\n                if (callback) {\r\n                    callback.call(elm);\r\n                }\r\n            });\r\n        } else {\r\n            styler.hide(elm);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Set the vertical position of the scroll bar for an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} pos\r\n     * @param {Number or String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function scrollToTop(elm, pos, speed, callback) {\r\n        var scrollFrom = parseInt(elm.scrollTop),\r\n            i = 0,\r\n            runEvery = 5, // run every 5ms\r\n            freq = speed * 1000 / runEvery,\r\n            scrollTo = parseInt(pos);\r\n\r\n        var interval = setInterval(function() {\r\n            i++;\r\n\r\n            if (i <= freq) elm.scrollTop = (scrollTo - scrollFrom) / freq * i + scrollFrom;\r\n\r\n            if (i >= freq + 1) {\r\n                clearInterval(interval);\r\n                if (callback) langx.debounce(callback, 1000)();\r\n            }\r\n        }, runEvery);\r\n    }\r\n\r\n    /*   \r\n     * Display or hide an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function toggle(elm, speed, callback) {\r\n        if (styler.isInvisible(elm)) {\r\n            show(elm, speed, callback);\r\n        } else {\r\n            hide(elm, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Adjust the opacity of an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {Number or String} opacity\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeTo(elm, speed, opacity, easing, callback) {\r\n        animate(elm, { opacity: opacity }, speed, easing, callback);\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Display an element by fading them to opaque.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeIn(elm, speed, easing, callback) {\r\n        var target = styler.css(elm, \"opacity\");\r\n        if (target > 0) {\r\n            styler.css(elm, \"opacity\", 0);\r\n        } else {\r\n            target = 1;\r\n        }\r\n        styler.show(elm);\r\n\r\n        fadeTo(elm, speed, target, easing, callback);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Hide an element by fading them to transparent.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeOut(elm, speed, easing, callback) {\r\n        var _elm = elm,\r\n            complete,\r\n            opacity = styler.css(elm,\"opacity\"),\r\n            options = {};\r\n\r\n        if (langx.isPlainObject(speed)) {\r\n            options.easing = speed.easing;\r\n            options.duration = speed.duration;\r\n            complete = speed.complete;\r\n        } else {\r\n            options.duration = speed;\r\n            if (callback) {\r\n                complete = callback;\r\n                options.easing = easing;\r\n            } else {\r\n                complete = easing;\r\n            }\r\n        }\r\n        options.complete = function() {\r\n            styler.css(elm,\"opacity\",opacity);\r\n            styler.hide(elm);\r\n            if (complete) {\r\n                complete.call(elm);\r\n            }\r\n        }\r\n\r\n        fadeTo(elm, options, 0);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display or hide an element by animating its opacity.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} ceasing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeToggle(elm, speed, ceasing, allback) {\r\n        if (styler.isInvisible(elm)) {\r\n            fadeIn(elm, speed, easing, callback);\r\n        } else {\r\n            fadeOut(elm, speed, easing, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideDown(elm, duration, callback) {\r\n\r\n        // get the element position to restore it then\r\n        var position = styler.css(elm, 'position');\r\n\r\n        // show element if it is hidden\r\n        show(elm);\r\n\r\n        // place it so it displays as usually but hidden\r\n        styler.css(elm, {\r\n            position: 'absolute',\r\n            visibility: 'hidden'\r\n        });\r\n\r\n        // get naturally height, margin, padding\r\n        var marginTop = styler.css(elm, 'margin-top');\r\n        var marginBottom = styler.css(elm, 'margin-bottom');\r\n        var paddingTop = styler.css(elm, 'padding-top');\r\n        var paddingBottom = styler.css(elm, 'padding-bottom');\r\n        var height = styler.css(elm, 'height');\r\n\r\n        // set initial css for animation\r\n        styler.css(elm, {\r\n            position: position,\r\n            visibility: 'visible',\r\n            overflow: 'hidden',\r\n            height: 0,\r\n            marginTop: 0,\r\n            marginBottom: 0,\r\n            paddingTop: 0,\r\n            paddingBottom: 0\r\n        });\r\n\r\n        // animate to gotten height, margin and padding\r\n        animate(elm, {\r\n            height: height,\r\n            marginTop: marginTop,\r\n            marginBottom: marginBottom,\r\n            paddingTop: paddingTop,\r\n            paddingBottom: paddingBottom\r\n        }, {\r\n            duration: duration,\r\n            complete: function() {\r\n                if (callback) {\r\n                    callback.apply(elm);\r\n                }\r\n            }\r\n        });\r\n\r\n        return this;\r\n    };\r\n\r\n    /*   \r\n     * Hide an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideUp(elm, duration, callback) {\r\n        // active the function only if the element is visible\r\n        if (geom.height(elm) > 0) {\r\n\r\n            // get the element position to restore it then\r\n            var position = styler.css(elm, 'position');\r\n\r\n            // get the element height, margin and padding to restore them then\r\n            var height = styler.css(elm, 'height');\r\n            var marginTop = styler.css(elm, 'margin-top');\r\n            var marginBottom = styler.css(elm, 'margin-bottom');\r\n            var paddingTop = styler.css(elm, 'padding-top');\r\n            var paddingBottom = styler.css(elm, 'padding-bottom');\r\n\r\n            // set initial css for animation\r\n            styler.css(elm, {\r\n                visibility: 'visible',\r\n                overflow: 'hidden',\r\n                height: height,\r\n                marginTop: marginTop,\r\n                marginBottom: marginBottom,\r\n                paddingTop: paddingTop,\r\n                paddingBottom: paddingBottom\r\n            });\r\n\r\n            // animate element height, margin and padding to zero\r\n            animate(elm, {\r\n                height: 0,\r\n                marginTop: 0,\r\n                marginBottom: 0,\r\n                paddingTop: 0,\r\n                paddingBottom: 0\r\n            }, {\r\n                // callback : restore the element position, height, margin and padding to original values\r\n                duration: duration,\r\n                queue: false,\r\n                complete: function() {\r\n                    hide(elm);\r\n                    styler.css(elm, {\r\n                        visibility: 'visible',\r\n                        overflow: 'hidden',\r\n                        height: height,\r\n                        marginTop: marginTop,\r\n                        marginBottom: marginBottom,\r\n                        paddingTop: paddingTop,\r\n                        paddingBottom: paddingBottom\r\n                    });\r\n                    if (callback) {\r\n                        callback.apply(elm);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        return this;\r\n    };\r\n\r\n\r\n    /*   \r\n     * Display or hide an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideToggle(elm, duration, callback) {\r\n\r\n        // if the element is hidden, slideDown !\r\n        if (geom.height(elm) == 0) {\r\n            slideDown(elm, duration, callback);\r\n        }\r\n        // if the element is visible, slideUp !\r\n        else {\r\n            slideUp(elm, duration, callback);\r\n        }\r\n        return this;\r\n    };\r\n\r\n\r\n    function fx() {\r\n        return fx;\r\n    }\r\n\r\n    langx.mixin(fx, {\r\n        off: false,\r\n\r\n        speeds: {\r\n            normal: 400,\r\n            fast: 200,\r\n            slow: 600\r\n        },\r\n\r\n        animate: animate,\r\n        fadeIn: fadeIn,\r\n        fadeOut: fadeOut,\r\n        fadeTo: fadeTo,\r\n        fadeToggle: fadeToggle,\r\n        hide: hide,\r\n        scrollToTop: scrollToTop,\r\n\r\n        slideDown: slideDown,\r\n        slideToggle: slideToggle,\r\n        slideUp: slideUp,\r\n        show: show,\r\n        toggle: toggle\r\n    });\r\n\r\n    return dom.fx = fx;\r\n});\ndefine('skylark-utils-dom/transforms',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./datax\",\r\n    \"./styler\"\r\n], function(dom,langx,browser,datax,styler) {\r\n  var css3Transform = browser.normalizeCssProperty(\"transform\");\r\n\r\n  function getMatrix(radian, x, y) {\r\n    var Cos = Math.cos(radian), Sin = Math.sin(radian);\r\n    return {\r\n      M11: Cos * x, \r\n      M12: -Sin * y,\r\n      M21: Sin * x, \r\n      M22: Cos * y\r\n    };\r\n  }\r\n\r\n  function getZoom(scale, zoom) {\r\n      return scale > 0 && scale > -zoom ? zoom :\r\n        scale < 0 && scale < zoom ? -zoom : 0;\r\n  }\r\n\r\n    function change(el,d) {\r\n      var matrix = getMatrix(d.radian, d.y, d.x);\r\n      styler.css(el,css3Transform, \"matrix(\"\r\n        + matrix.M11.toFixed(16) + \",\" + matrix.M21.toFixed(16) + \",\"\r\n        + matrix.M12.toFixed(16) + \",\" + matrix.M22.toFixed(16) + \", 0, 0)\"\r\n      );      \r\n  }\r\n\r\n  function transformData(el,d) {\r\n    if (d) {\r\n      datax.data(el,\"transform\",d);\r\n    } else {\r\n      d = datax.data(el,\"transform\") || {};\r\n      d.radian = d.radian || 0;\r\n      d.x = d.x || 1;\r\n      d.y = d.y || 1;\r\n      d.zoom = d.zoom || 1;\r\n      return d;     \r\n    }\r\n  }\r\n\r\n  var calcs = {\r\n    //Vertical flip\r\n    vertical : function (d) {\r\n        d.radian = Math.PI - d.radian; \r\n        d.y *= -1;\r\n    },\r\n\r\n   //Horizontal flip\r\n    horizontal : function (d) {\r\n        d.radian = Math.PI - d.radian; \r\n        d.x *= -1;\r\n    },\r\n\r\n    //Rotate according to angle\r\n    rotate : function (d,degress) {\r\n        d.radian = degress * Math.PI / 180;; \r\n    },\r\n\r\n    //Turn left 90 degrees\r\n    left : function (d) {\r\n        d.radian -= Math.PI / 2; \r\n    },\r\n\r\n    //Turn right 90 degrees\r\n    right : function (d) {\r\n        d.radian += Math.PI / 2; \r\n    },\r\n \r\n    //zoom\r\n    scale: function (d,zoom) {\r\n        var hZoom = getZoom(d.y, zoom), vZoom = getZoom(d.x, zoom);\r\n        if (hZoom && vZoom) {\r\n          d.y += hZoom; \r\n          d.x += vZoom;\r\n        }\r\n    }, \r\n\r\n    //zoom in\r\n    zoomin: function (d) { \r\n      calcs.scale(d,0.1); \r\n    },\r\n    \r\n    //zoom out\r\n    zoomout: function (d) { \r\n      calcs.scale(d,-0.1); \r\n    }\r\n\r\n  };\r\n  \r\n  \r\n  function _createApiMethod(calcFunc) {\r\n    return function() {\r\n      var args = langx.makeArray(arguments),\r\n        el = args.shift(),\r\n          d = transformData(el);\r\n        args.unshift(d);\r\n        calcFunc.apply(this,args)\r\n        change(el,d);\r\n        transformData(el,d);\r\n    }\r\n  }\r\n  \r\n  function transforms() {\r\n    return transforms;\r\n  }\r\n\r\n  [\"vertical\",\"horizontal\",\"rotate\",\"left\",\"right\",\"scale\",\"zoom\",\"zoomin\",\"zoomout\"].forEach(function(name){\r\n    transforms[name] = _createApiMethod(calcs[name]);\r\n  });\r\n\r\n  langx.mixin(transforms, {\r\n    reset : function(el) {\r\n      var d = {\r\n        x : 1,\r\n        y : 1,\r\n        radian : 0,\r\n      }\r\n      change(el,d);\r\n      transformData(el,d);\r\n    }\r\n  });\r\n\r\n\r\n  return dom.transforms = transforms;\r\n});\r\n\ndefine('skylark-utils-dom/query',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./eventer\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./fx\"\r\n], function(dom, langx, noder, datax, eventer, finder, geom, styler, fx) {\r\n    var some = Array.prototype.some,\r\n        push = Array.prototype.push,\r\n        every = Array.prototype.every,\r\n        concat = Array.prototype.concat,\r\n        slice = Array.prototype.slice,\r\n        map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        forEach = Array.prototype.forEach,\r\n        indexOf = Array.prototype.indexOf,\r\n        sort = Array.prototype.sort,\r\n        isQ;\r\n\r\n    var rquickExpr = /^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)/;\r\n\r\n    var funcArg = langx.funcArg,\r\n        isArrayLike = langx.isArrayLike,\r\n        isString = langx.isString,\r\n        uniq = langx.uniq,\r\n        isFunction = langx.isFunction;\r\n\r\n    var type = langx.type,\r\n        isArray = langx.isArray,\r\n\r\n        isWindow = langx.isWindow,\r\n\r\n        isDocument = langx.isDocument,\r\n\r\n        isObject = langx.isObject,\r\n\r\n        isPlainObject = langx.isPlainObject,\r\n\r\n        compact = langx.compact,\r\n\r\n        flatten = langx.flatten,\r\n\r\n        camelCase = langx.camelCase,\r\n\r\n        dasherize = langx.dasherize,\r\n        children = finder.children;\r\n\r\n    function wrapper_map(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = langx.map(self, function(elem, idx) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n            return query(uniq(result));\r\n        }\r\n    }\r\n\r\n    function wrapper_selector(func, context, last) {\r\n        return function(selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem] : [elem, selector]);\r\n                }\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper_selector_until(func, context, last) {\r\n        return function(util, selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            if (selector === undefined) {\r\n                selector = util;\r\n                util = undefined;\r\n            }\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem, util] : [elem, selector, util]);\r\n                }\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function wrapper_every_act(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            this.each(function(idx) {\r\n                func.apply(context, [this].concat(params));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_every_act_firstArgFunc(func, context, oldValueFunc) {\r\n        return function(arg1) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            forEach.call(self, function(elem, idx) {\r\n                var newArg1 = funcArg(elem, arg1, idx, oldValueFunc(elem));\r\n                func.apply(context, [elem, arg1].concat(params.slice(1)));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_some_chk(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            return some.call(self, function(elem) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n        }\r\n    }\r\n\r\n    function wrapper_name_value(func, context, oldValueFunc) {\r\n        return function(name, value) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n\r\n            if (langx.isPlainObject(name) || langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem, name));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem].concat(params));\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0], name]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    function wrapper_value(func, context, oldValueFunc) {\r\n        return function(value) {\r\n            var self = this;\r\n\r\n            if (langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem, newValue]);\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0]]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    var NodeList = langx.klass({\r\n        klassName: \"SkNodeList\",\r\n        init: function(selector, context) {\r\n            var self = this,\r\n                match, nodes, node, props;\r\n\r\n            if (selector) {\r\n                self.context = context = context || noder.doc();\r\n\r\n                if (isString(selector)) {\r\n                    // a html string or a css selector is expected\r\n                    self.selector = selector;\r\n\r\n                    if (selector.charAt(0) === \"<\" && selector.charAt(selector.length - 1) === \">\" && selector.length >= 3) {\r\n                        match = [null, selector, null];\r\n                    } else {\r\n                        match = rquickExpr.exec(selector);\r\n                    }\r\n\r\n                    if (match) {\r\n                        if (match[1]) {\r\n                            // if selector is html\r\n                            nodes = noder.createFragment(selector);\r\n\r\n                            if (langx.isPlainObject(context)) {\r\n                                props = context;\r\n                            }\r\n\r\n                        } else {\r\n                            node = finder.byId(match[2], noder.ownerDoc(context));\r\n\r\n                            if (node) {\r\n                                // if selector is id\r\n                                nodes = [node];\r\n                            }\r\n\r\n                        }\r\n                    } else {\r\n                        // if selector is css selector\r\n                        if (langx.isString(context)) {\r\n                            context = finder.find(context);\r\n                        }\r\n\r\n                        nodes = finder.descendants(context, selector);\r\n                    }\r\n                } else {\r\n                    if (isArray(selector)) {\r\n                        // a dom node array is expected\r\n                        nodes = selector;\r\n                    } else {\r\n                        // a dom node is expected\r\n                        nodes = [selector];\r\n                    }\r\n                    //self.add(selector, false);\r\n                }\r\n            }\r\n\r\n\r\n            if (nodes) {\r\n\r\n                push.apply(self, nodes);\r\n\r\n                if (props) {\r\n                    for ( var name  in props ) {\r\n                        // Properties of context are called as methods if possible\r\n                        if ( langx.isFunction( this[ name ] ) ) {\r\n                            this[ name ]( props[ name ] );\r\n                        } else {\r\n                            this.attr( name, props[ name ] );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return self;\r\n        }\r\n    });\r\n\r\n    var query = (function() {\r\n        isQ = function(object) {\r\n            return object instanceof NodeList;\r\n        }\r\n        init = function(selector, context) {\r\n            return new NodeList(selector, context);\r\n        }\r\n\r\n        var $ = function(selector, context) {\r\n            if (isFunction(selector)) {\r\n                eventer.ready(function() {\r\n                    selector($);\r\n                });\r\n            } else if (isQ(selector)) {\r\n                return selector;\r\n            } else {\r\n                if (context && isQ(context) && isString(selector)) {\r\n                    return context.find(selector);\r\n                }\r\n                return init(selector, context);\r\n            }\r\n        };\r\n\r\n        $.fn = NodeList.prototype;\r\n        langx.mixin($.fn, {\r\n            // `map` and `slice` in the jQuery API work differently\r\n            // from their array counterparts\r\n            length : 0,\r\n\r\n            map: function(fn) {\r\n                return $(uniq(langx.map(this, function(el, i) {\r\n                    return fn.call(el, i, el)\r\n                })));\r\n            },\r\n\r\n            slice: function() {\r\n                return $(slice.apply(this, arguments))\r\n            },\r\n\r\n            forEach: function() {\r\n                return forEach.apply(this,arguments);\r\n            },\r\n\r\n            get: function(idx) {\r\n                return idx === undefined ? slice.call(this) : this[idx >= 0 ? idx : idx + this.length]\r\n            },\r\n\r\n            indexOf: function() {\r\n                return indexOf.apply(this,arguments);\r\n            },\r\n\r\n            sort : function() {\r\n                return sort.apply(this,arguments);\r\n            },\r\n\r\n            toArray: function() {\r\n                return slice.call(this);\r\n            },\r\n\r\n            size: function() {\r\n                return this.length\r\n            },\r\n\r\n            remove: wrapper_every_act(noder.remove, noder),\r\n\r\n            each: function(callback) {\r\n                langx.each(this, callback);\r\n                return this;\r\n            },\r\n\r\n            filter: function(selector) {\r\n                if (isFunction(selector)) return this.not(this.not(selector))\r\n                return $(filter.call(this, function(element) {\r\n                    return finder.matches(element, selector)\r\n                }))\r\n            },\r\n\r\n            add: function(selector, context) {\r\n                return $(uniq(this.toArray().concat($(selector, context).toArray())));\r\n            },\r\n\r\n            is: function(selector) {\r\n                if (this.length > 0) {\r\n                    var self = this;\r\n                    if (langx.isString(selector)) {\r\n                        return some.call(self,function(elem) {\r\n                            return finder.matches(elem, selector);\r\n                        });\r\n                    } else if (langx.isArrayLike(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return langx.inArray(elem, selector) > -1;\r\n                        });\r\n                    } else if (langx.isHtmlNode(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return elem ==  selector;\r\n                        });\r\n                    }\r\n                }\r\n                return false;\r\n            },\r\n            \r\n            not: function(selector) {\r\n                var nodes = []\r\n                if (isFunction(selector) && selector.call !== undefined)\r\n                    this.each(function(idx) {\r\n                        if (!selector.call(this, idx)) nodes.push(this)\r\n                    })\r\n                else {\r\n                    var excludes = typeof selector == 'string' ? this.filter(selector) :\r\n                        (isArrayLike(selector) && isFunction(selector.item)) ? slice.call(selector) : $(selector)\r\n                    this.forEach(function(el) {\r\n                        if (excludes.indexOf(el) < 0) nodes.push(el)\r\n                    })\r\n                }\r\n                return $(nodes)\r\n            },\r\n\r\n            has: function(selector) {\r\n                return this.filter(function() {\r\n                    return isObject(selector) ?\r\n                        noder.contains(this, selector) :\r\n                        $(this).find(selector).size()\r\n                })\r\n            },\r\n\r\n            eq: function(idx) {\r\n                return idx === -1 ? this.slice(idx) : this.slice(idx, +idx + 1);\r\n            },\r\n\r\n            first: function() {\r\n                return this.eq(0);\r\n            },\r\n\r\n            last: function() {\r\n                return this.eq(-1);\r\n            },\r\n\r\n            find: wrapper_selector(finder.descendants, finder),\r\n\r\n            closest: wrapper_selector(finder.closest, finder),\r\n            /*\r\n                        closest: function(selector, context) {\r\n                            var node = this[0],\r\n                                collection = false\r\n                            if (typeof selector == 'object') collection = $(selector)\r\n                            while (node && !(collection ? collection.indexOf(node) >= 0 : finder.matches(node, selector)))\r\n                                node = node !== context && !isDocument(node) && node.parentNode\r\n                            return $(node)\r\n                        },\r\n            */\r\n\r\n\r\n            parents: wrapper_selector(finder.ancestors, finder),\r\n\r\n            parentsUntil: wrapper_selector_until(finder.ancestors, finder),\r\n\r\n\r\n            parent: wrapper_selector(finder.parent, finder),\r\n\r\n            children: wrapper_selector(finder.children, finder),\r\n\r\n            contents: wrapper_map(noder.contents, noder),\r\n\r\n            empty: wrapper_every_act(noder.empty, noder),\r\n\r\n            // `pluck` is borrowed from Prototype.js\r\n            pluck: function(property) {\r\n                return langx.map(this, function(el) {\r\n                    return el[property]\r\n                })\r\n            },\r\n\r\n            pushStack : function(elms) {\r\n                var ret = $(elms);\r\n                ret.prevObject = this;\r\n                return ret;\r\n            },\r\n            \r\n            show: wrapper_every_act(fx.show, fx),\r\n\r\n            replaceWith: function(newContent) {\r\n                return this.before(newContent).remove();\r\n            },\r\n\r\n            wrap: function(structure) {\r\n                var func = isFunction(structure)\r\n                if (this[0] && !func)\r\n                    var dom = $(structure).get(0),\r\n                        clone = dom.parentNode || this.length > 1\r\n\r\n                return this.each(function(index) {\r\n                    $(this).wrapAll(\r\n                        func ? structure.call(this, index) :\r\n                        clone ? dom.cloneNode(true) : dom\r\n                    )\r\n                })\r\n            },\r\n\r\n            wrapAll: function(wrappingElement) {\r\n                if (this[0]) {\r\n                    $(this[0]).before(wrappingElement = $(wrappingElement));\r\n                    var children;\r\n                    // drill down to the inmost element\r\n                    while ((children = wrappingElement.children()).length) {\r\n                        wrappingElement = children.first();\r\n                    }\r\n                    $(wrappingElement).append(this);\r\n                }\r\n                return this\r\n            },\r\n\r\n            wrapInner: function(wrappingElement) {\r\n                var func = isFunction(wrappingElement)\r\n                return this.each(function(index) {\r\n                    var self = $(this),\r\n                        contents = self.contents(),\r\n                        dom = func ? wrappingElement.call(this, index) : wrappingElement\r\n                    contents.length ? contents.wrapAll(dom) : self.append(dom)\r\n                })\r\n            },\r\n\r\n            unwrap: function(selector) {\r\n                if (this.parent().children().length === 0) {\r\n                    // remove dom without text\r\n                    this.parent(selector).not(\"body\").each(function() {\r\n                        $(this).replaceWith(document.createTextNode(this.childNodes[0].textContent));\r\n                    });\r\n                } else {\r\n                    this.parent().each(function() {\r\n                        $(this).replaceWith($(this).children())\r\n                    });\r\n                }\r\n                return this\r\n            },\r\n\r\n            clone: function() {\r\n                return this.map(function() {\r\n                    return this.cloneNode(true)\r\n                })\r\n            },\r\n\r\n            hide: wrapper_every_act(fx.hide, fx),\r\n\r\n            toggle: function(setting) {\r\n                return this.each(function() {\r\n                    var el = $(this);\r\n                    (setting === undefined ? el.css(\"display\") == \"none\" : setting) ? el.show(): el.hide()\r\n                })\r\n            },\r\n\r\n            prev: function(selector) {\r\n                return $(this.pluck('previousElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            prevAll: wrapper_selector(finder.previousSibling, finder),\r\n\r\n            next: function(selector) {\r\n                return $(this.pluck('nextElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            nextAll: wrapper_selector(finder.nextSiblings, finder),\r\n\r\n            siblings: wrapper_selector(finder.siblings, finder),\r\n\r\n            html: wrapper_value(noder.html, noder, noder.html),\r\n\r\n            text: wrapper_value(datax.text, datax, datax.text),\r\n\r\n            attr: wrapper_name_value(datax.attr, datax, datax.attr),\r\n\r\n            removeAttr: wrapper_every_act(datax.removeAttr, datax),\r\n\r\n            prop: wrapper_name_value(datax.prop, datax, datax.prop),\r\n\r\n            removeProp: wrapper_every_act(datax.removeProp, datax),\r\n\r\n            data: wrapper_name_value(datax.data, datax, datax.data),\r\n\r\n            removeData: wrapper_every_act(datax.removeData, datax),\r\n\r\n            val: wrapper_value(datax.val, datax, datax.val),\r\n\r\n            offset: wrapper_value(geom.pagePosition, geom, geom.pagePosition),\r\n\r\n            style: wrapper_name_value(styler.css, styler),\r\n\r\n            css: wrapper_name_value(styler.css, styler),\r\n\r\n            index: function(elem) {\r\n                if (elem) {\r\n                    return this.indexOf($(elem)[0]);\r\n                } else {\r\n                    return this.parent().children().indexOf(this[0]);\r\n                }\r\n            },\r\n\r\n            //hasClass(name)\r\n            hasClass: wrapper_some_chk(styler.hasClass, styler),\r\n\r\n            //addClass(name)\r\n            addClass: wrapper_every_act_firstArgFunc(styler.addClass, styler, styler.className),\r\n\r\n            //removeClass(name)\r\n            removeClass: wrapper_every_act_firstArgFunc(styler.removeClass, styler, styler.className),\r\n\r\n            //toogleClass(name,when)\r\n            toggleClass: wrapper_every_act_firstArgFunc(styler.toggleClass, styler, styler.className),\r\n\r\n            scrollTop: wrapper_value(geom.scrollTop, geom),\r\n\r\n            scrollLeft: wrapper_value(geom.scrollLeft, geom),\r\n\r\n            position: function(options) {\r\n                if (!this.length) return\r\n\r\n                if (options) {\r\n                    if (options.of && options.of.length) {\r\n                        options = langx.clone(options);\r\n                        options.of = options.of[0];\r\n                    }\r\n                    return this.each( function() {\r\n                        geom.posit(this,options);\r\n                    });\r\n                } else {\r\n                    var elem = this[0];\r\n\r\n                    return geom.relativePosition(elem);\r\n\r\n                }             \r\n            },\r\n\r\n            offsetParent: wrapper_map(geom.offsetParent, geom)\r\n        });\r\n\r\n        // for now\r\n        $.fn.detach = $.fn.remove;\r\n\r\n        $.fn.hover = function(fnOver, fnOut) {\r\n            return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);\r\n        };\r\n\r\n        $.fn.size = wrapper_value(geom.size, geom);\r\n\r\n        $.fn.width = wrapper_value(geom.width, geom, geom.width);\r\n\r\n        $.fn.height = wrapper_value(geom.height, geom, geom.height);\r\n\r\n        $.fn.clientSize = wrapper_value(geom.clientSize, geom.clientSize);\r\n\r\n        ['width', 'height'].forEach(function(dimension) {\r\n            var offset, Dimension = dimension.replace(/./, function(m) {\r\n                return m[0].toUpperCase()\r\n            });\r\n\r\n            $.fn['outer' + Dimension] = function(margin, value) {\r\n                if (arguments.length) {\r\n                    if (typeof margin !== 'boolean') {\r\n                        value = margin;\r\n                        margin = false;\r\n                    }\r\n                } else {\r\n                    margin = false;\r\n                    value = undefined;\r\n                }\r\n\r\n                if (value === undefined) {\r\n                    var el = this[0];\r\n                    if (!el) {\r\n                        return undefined;\r\n                    }\r\n                    var cb = geom.size(el);\r\n                    if (margin) {\r\n                        var me = geom.marginExtents(el);\r\n                        cb.width = cb.width + me.left + me.right;\r\n                        cb.height = cb.height + me.top + me.bottom;\r\n                    }\r\n                    return dimension === \"width\" ? cb.width : cb.height;\r\n                } else {\r\n                    return this.each(function(idx, el) {\r\n                        var mb = {};\r\n                        var me = geom.marginExtents(el);\r\n                        if (dimension === \"width\") {\r\n                            mb.width = value;\r\n                            if (margin) {\r\n                                mb.width = mb.width - me.left - me.right\r\n                            }\r\n                        } else {\r\n                            mb.height = value;\r\n                            if (margin) {\r\n                                mb.height = mb.height - me.top - me.bottom;\r\n                            }\r\n                        }\r\n                        geom.size(el, mb);\r\n                    })\r\n\r\n                }\r\n            };\r\n        })\r\n\r\n        $.fn.innerWidth = wrapper_value(geom.clientWidth, geom, geom.clientWidth);\r\n\r\n        $.fn.innerHeight = wrapper_value(geom.clientHeight, geom, geom.clientHeight);\r\n\r\n        var traverseNode = noder.traverse;\r\n\r\n        function wrapper_node_operation(func, context, oldValueFunc) {\r\n            return function(html) {\r\n                var argType, nodes = langx.map(arguments, function(arg) {\r\n                    argType = type(arg)\r\n                    return argType == \"object\" || argType == \"array\" || arg == null ?\r\n                        arg : noder.createFragment(arg)\r\n                });\r\n                if (nodes.length < 1) {\r\n                    return this\r\n                }\r\n                this.each(function(idx) {\r\n                    func.apply(context, [this, nodes, idx > 0]);\r\n                });\r\n                return this;\r\n            }\r\n        }\r\n\r\n\r\n        $.fn.after = wrapper_node_operation(noder.after, noder);\r\n\r\n        $.fn.prepend = wrapper_node_operation(noder.prepend, noder);\r\n\r\n        $.fn.before = wrapper_node_operation(noder.before, noder);\r\n\r\n        $.fn.append = wrapper_node_operation(noder.append, noder);\r\n\r\n\r\n        langx.each( {\r\n            appendTo: \"append\",\r\n            prependTo: \"prepend\",\r\n            insertBefore: \"before\",\r\n            insertAfter: \"after\",\r\n            replaceAll: \"replaceWith\"\r\n        }, function( name, original ) {\r\n            $.fn[ name ] = function( selector ) {\r\n                var elems,\r\n                    ret = [],\r\n                    insert = $( selector ),\r\n                    last = insert.length - 1,\r\n                    i = 0;\r\n\r\n                for ( ; i <= last; i++ ) {\r\n                    elems = i === last ? this : this.clone( true );\r\n                    $( insert[ i ] )[ original ]( elems );\r\n\r\n                    // Support: Android <=4.0 only, PhantomJS 1 only\r\n                    // .get() because push.apply(_, arraylike) throws on ancient WebKit\r\n                    push.apply( ret, elems.get() );\r\n                }\r\n\r\n                return this.pushStack( ret );\r\n            };\r\n        } );\r\n\r\n/*\r\n        $.fn.insertAfter = function(html) {\r\n            $(html).after(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.insertBefore = function(html) {\r\n            $(html).before(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.appendTo = function(html) {\r\n            $(html).append(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.prependTo = function(html) {\r\n            $(html).prepend(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.replaceAll = function(selector) {\r\n            $(selector).replaceWith(this);\r\n            return this;\r\n        };\r\n*/\r\n        return $;\r\n    })();\r\n\r\n    (function($) {\r\n        $.fn.on = wrapper_every_act(eventer.on, eventer);\r\n\r\n        $.fn.off = wrapper_every_act(eventer.off, eventer);\r\n\r\n        $.fn.trigger = wrapper_every_act(eventer.trigger, eventer);\r\n\r\n        ('focusin focusout focus blur load resize scroll unload click dblclick ' +\r\n            'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave ' +\r\n            'change select keydown keypress keyup error transitionEnd').split(' ').forEach(function(event) {\r\n            $.fn[event] = function(data, callback) {\r\n                return (0 in arguments) ?\r\n                    this.on(event, data, callback) :\r\n                    this.trigger(event)\r\n            }\r\n        });\r\n\r\n        $.fn.one = function(event, selector, data, callback) {\r\n            if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n                callback = data;\r\n                data = selector;\r\n                selector = null;\r\n            }\r\n\r\n            if (langx.isFunction(data)) {\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            return this.on(event, selector, data, callback, 1)\r\n        };\r\n\r\n        $.fn.animate = wrapper_every_act(fx.animate, fx);\r\n\r\n        $.fn.show = wrapper_every_act(fx.show, fx);\r\n        $.fn.hide = wrapper_every_act(fx.hide, fx);\r\n        $.fn.toogle = wrapper_every_act(fx.toogle, fx);\r\n        $.fn.fadeTo = wrapper_every_act(fx.fadeTo, fx);\r\n        $.fn.fadeIn = wrapper_every_act(fx.fadeIn, fx);\r\n        $.fn.fadeOut = wrapper_every_act(fx.fadeOut, fx);\r\n        $.fn.fadeToggle = wrapper_every_act(fx.fadeToggle, fx);\r\n\r\n        $.fn.slideDown = wrapper_every_act(fx.slideDown, fx);\r\n        $.fn.slideToggle = wrapper_every_act(fx.slideToggle, fx);\r\n        $.fn.slideUp = wrapper_every_act(fx.slideUp, fx);\r\n\r\n        $.fn.scrollParent = function( includeHidden ) {\r\n            var position = this.css( \"position\" ),\r\n                excludeStaticParent = position === \"absolute\",\r\n                overflowRegex = includeHidden ? /(auto|scroll|hidden)/ : /(auto|scroll)/,\r\n                scrollParent = this.parents().filter( function() {\r\n                    var parent = $( this );\r\n                    if ( excludeStaticParent && parent.css( \"position\" ) === \"static\" ) {\r\n                        return false;\r\n                    }\r\n                    return overflowRegex.test( parent.css( \"overflow\" ) + parent.css( \"overflow-y\" ) +\r\n                        parent.css( \"overflow-x\" ) );\r\n                } ).eq( 0 );\r\n\r\n            return position === \"fixed\" || !scrollParent.length ?\r\n                $( this[ 0 ].ownerDocument || document ) :\r\n                scrollParent;\r\n        };\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.end = function() {\r\n            return this.prevObject || $()\r\n        }\r\n\r\n        $.fn.andSelf = function() {\r\n            return this.add(this.prevObject || $())\r\n        }\r\n\r\n        $.fn.addBack = function(selector) {\r\n            if (this.prevObject) {\r\n                if (selector) {\r\n                    return this.add(this.prevObject.filter(selector));\r\n                } else {\r\n                    return this.add(this.prevObject);\r\n                }\r\n            } else {\r\n                return this;\r\n            }\r\n        }\r\n\r\n        'filter,add,not,eq,first,last,find,closest,parents,parent,children,siblings'.split(',').forEach(function(property) {\r\n            var fn = $.fn[property]\r\n            $.fn[property] = function() {\r\n                var ret = fn.apply(this, arguments)\r\n                ret.prevObject = this\r\n                return ret\r\n            }\r\n        })\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.query = $.fn.find;\r\n\r\n        $.fn.place = function(refNode, position) {\r\n            // summary:\r\n            //      places elements of this node list relative to the first element matched\r\n            //      by queryOrNode. Returns the original NodeList. See: `dojo/dom-construct.place`\r\n            // queryOrNode:\r\n            //      may be a string representing any valid CSS3 selector or a DOM node.\r\n            //      In the selector case, only the first matching element will be used\r\n            //      for relative positioning.\r\n            // position:\r\n            //      can be one of:\r\n            //\r\n            //      -   \"last\" (default)\r\n            //      -   \"first\"\r\n            //      -   \"before\"\r\n            //      -   \"after\"\r\n            //      -   \"only\"\r\n            //      -   \"replace\"\r\n            //\r\n            //      or an offset in the childNodes\r\n            if (langx.isString(refNode)) {\r\n                refNode = finder.descendant(refNode);\r\n            } else if (isQ(refNode)) {\r\n                refNode = refNode[0];\r\n            }\r\n            return this.each(function(i, node) {\r\n                switch (position) {\r\n                    case \"before\":\r\n                        noder.before(refNode, node);\r\n                        break;\r\n                    case \"after\":\r\n                        noder.after(refNode, node);\r\n                        break;\r\n                    case \"replace\":\r\n                        noder.replace(refNode, node);\r\n                        break;\r\n                    case \"only\":\r\n                        noder.empty(refNode);\r\n                        noder.append(refNode, node);\r\n                        break;\r\n                    case \"first\":\r\n                        noder.prepend(refNode, node);\r\n                        break;\r\n                        // else fallthrough...\r\n                    default: // aka: last\r\n                        noder.append(refNode, node);\r\n                }\r\n            });\r\n        };\r\n\r\n        $.fn.addContent = function(content, position) {\r\n            if (content.template) {\r\n                content = langx.substitute(content.template, content);\r\n            }\r\n            return this.append(content);\r\n        };\r\n\r\n        $.fn.replaceClass = function(newClass, oldClass) {\r\n            this.removeClass(oldClass);\r\n            this.addClass(newClass);\r\n            return this;\r\n        };\r\n\r\n        $.fn.replaceClass = function(newClass, oldClass) {\r\n            this.removeClass(oldClass);\r\n            this.addClass(newClass);\r\n            return this;\r\n        };\r\n\r\n        $.fn.disableSelection = ( function() {\r\n            var eventType = \"onselectstart\" in document.createElement( \"div\" ) ?\r\n                \"selectstart\" :\r\n                \"mousedown\";\r\n\r\n            return function() {\r\n                return this.on( eventType + \".ui-disableSelection\", function( event ) {\r\n                    event.preventDefault();\r\n                } );\r\n            };\r\n        } )();\r\n\r\n        $.fn.enableSelection = function() {\r\n            return this.off( \".ui-disableSelection\" );\r\n        };\r\n       \r\n\r\n    })(query);\r\n\r\n    query.fn.plugin = function(name,options) {\r\n        var args = slice.call( arguments, 1 ),\r\n            self = this,\r\n            returnValue = this;\r\n\r\n        this.each(function(){\r\n            returnValue = plugins.instantiate.apply(self,[this,name].concat(args));\r\n        });\r\n        return returnValue;\r\n    };\r\n\r\n    return dom.query = query;\r\n\r\n});\ndefine('skylark-utils-dom/images',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./eventer\",\r\n    \"./noder\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./datax\",\r\n    \"./transforms\",\r\n    \"./query\"\r\n], function(dom,langx,eventer,noder,finder,geom,styler,datax,transforms,$) {\r\n\r\n  function watch(imgs) {\r\n    if (!langx.isArray(imgs)) {\r\n      imgs = [imgs];\r\n    }\r\n    var totalCount = imgs.length,\r\n        progressedCount = 0,\r\n        successedCount = 0,\r\n        faileredCount = 0,\r\n        d = new langx.Deferred();\r\n\r\n\r\n    function complete() {\r\n\r\n      d.resolve({\r\n        \"total\" : totalCount,\r\n        \"successed\" : successedCount,\r\n        \"failered\" : faileredCount,\r\n        \"imgs\" : imgs \r\n      });\r\n    }\r\n\r\n    function progress(img,isLoaded) {\r\n\r\n      progressedCount++;\r\n      if (isLoaded) {\r\n        successedCount ++ ; \r\n      } else {\r\n        faileredCount ++ ;\r\n      }\r\n\r\n      // progress event\r\n      d.progress({\r\n        \"img\" : img,\r\n        \"isLoaded\" : isLoaded,\r\n        \"progressed\" : progressedCount,\r\n        \"total\" : totalCount,\r\n        \"imgs\" : imgs \r\n      });\r\n\r\n      // check if completed\r\n      if ( progressedCount == totalCount ) {\r\n        complete();\r\n      }\r\n    }\r\n\r\n    function check() {\r\n      if (!imgs.length ) {\r\n        complete();\r\n        return;\r\n      }\r\n\r\n      imgs.forEach(function(img) {\r\n        if (isCompleted(img)) {\r\n          progress(img,isLoaded(img));\r\n        } else {\r\n          eventer.on(img,{\r\n            \"load\" : function() {\r\n              progress(img,true);\r\n            },\r\n\r\n            \"error\" : function() {\r\n              progress(img,false);\r\n            }\r\n          });      \r\n        }\r\n      });\r\n    }\r\n\r\n    langx.defer(check);\r\n\r\n    d.promise.totalCount = totalCount;\r\n    return d.promise;\r\n  }\r\n\r\n\r\n  function isCompleted(img) {\r\n     return img.complete && img.naturalWidth !== undefined;\r\n  }\r\n\r\n  function isLoaded(img) {\r\n    return img.complete && img.naturalWidth !== 0;\r\n  }\r\n\r\n  function loaded(elm,options) {\r\n    var imgs = [];\r\n\r\n    options = options || {};\r\n\r\n    function addBackgroundImage (elm1) {\r\n\r\n      var reURL = /url\\((['\"])?(.*?)\\1\\)/gi;\r\n      var matches = reURL.exec( styler.css(elm1,\"background-image\"));\r\n      var url = matches && matches[2];\r\n      if ( url ) {\r\n        var img = new Image();\r\n        img.src = url;\r\n        imgs.push(img);\r\n      }\r\n    }\r\n\r\n    // filter siblings\r\n    if ( elm.nodeName == 'IMG' ) {\r\n      imgs.push( elm );\r\n    } else {\r\n      // find children\r\n      var childImgs = finder.findAll(elm,'img');\r\n      // concat childElems to filterFound array\r\n      for ( var i=0; i < childImgs.length; i++ ) {\r\n        imgs.push(childImgs[i]);\r\n      }\r\n\r\n      // get background image on element\r\n      if ( options.background === true ) {\r\n        addBackgroundImage(elm);\r\n      } else  if ( typeof options.background == 'string' ) {\r\n        var children = finder.findAll(elm, options.background );\r\n        for ( i=0; i < children.length; i++ ) {\r\n          addBackgroundImage( children[i] );\r\n        }\r\n      }\r\n    }\r\n\r\n    return watch(imgs);\r\n  }\r\n\r\n  function preload(urls,options) {\r\n      if (langx.isString(urls)) {\r\n        urls = [urls];\r\n      }\r\n      var images = [];\r\n\r\n      urls.forEach(function(url){\r\n        var img = new Image();\r\n        img.src = url;\r\n        images.push(img);\r\n      });\r\n\r\n      return watch(images);\r\n  }\r\n\r\n\r\n  $.fn.imagesLoaded = function( options ) {\r\n    return loaded(this,options);\r\n  };\r\n\r\n\r\n  function viewer(el,options) {\r\n    var img ,\r\n        style = {},\r\n        clientSize = geom.clientSize(el),\r\n        loadedCallback = options.loaded,\r\n        faileredCallback = options.failered;\r\n\r\n    function onload() {\r\n        styler.css(img,{//居中\r\n          top: (clientSize.height - img.offsetHeight) / 2 + \"px\",\r\n          left: (clientSize.width - img.offsetWidth) / 2 + \"px\"\r\n        });\r\n\r\n        transforms.reset(img);\r\n\r\n        styler.css(img,{\r\n          visibility: \"visible\"\r\n        });\r\n\r\n        if (loadedCallback) {\r\n          loadedCallback();\r\n        }\r\n    }\r\n\r\n    function onerror() {\r\n\r\n    }\r\n    function _init() {\r\n      style = styler.css(el,[\"position\",\"overflow\"]);\r\n      if (style.position != \"relative\" && style.position != \"absolute\") { \r\n        styler.css(el,\"position\", \"relative\" );\r\n      }\r\n      styler.css(el,\"overflow\", \"hidden\" );\r\n\r\n      img = new Image();\r\n\r\n      styler.css(img,{\r\n        position: \"absolute\",\r\n        border: 0, padding: 0, margin: 0, width: \"auto\", height: \"auto\",\r\n        visibility: \"hidden\"\r\n      });\r\n\r\n      img.onload = onload;\r\n      img.onerror = onerror;\r\n\r\n      noder.append(el,img);\r\n\r\n      if (options.url) {\r\n        _load(options.url);\r\n      }\r\n    }\r\n\r\n    function _load(url) {\r\n        img.style.visibility = \"hidden\";\r\n        img.src = url;\r\n    }\r\n\r\n    function _dispose() {\r\n        noder.remove(img);\r\n        styler.css(el,style);\r\n        img = img.onload = img.onerror = null;\r\n    }\r\n\r\n    _init();\r\n\r\n    var ret =  {\r\n      load : _load,\r\n      dispose : _dispose\r\n    };\r\n\r\n    [\"vertical\",\"horizontal\",\"rotate\",\"left\",\"right\",\"scale\",\"zoom\",\"zoomin\",\"zoomout\",\"reset\"].forEach(\r\n      function(name){\r\n        ret[name] = function() {\r\n          var args = langx.makeArray(arguments);\r\n          args.unshift(img);\r\n          transforms[name].apply(null,args);\r\n        }\r\n      }\r\n    );\r\n\r\n    return ret;\r\n  }\r\n\r\n  $.fn.imagesViewer = function( options ) {\r\n    return viewer(this,options);\r\n  };\r\n\r\n  function images() {\r\n    return images;\r\n  }\r\n\r\n  images.transform = function (el,options) {\r\n  };\r\n\r\n  [\"vertical\",\"horizontal\",\"rotate\",\"left\",\"right\",\"scale\",\"zoom\",\"zoomin\",\"zoomout\",\"reset\"].forEach(\r\n    function(name){\r\n      images.transform[name] = transforms[name];\r\n    }\r\n  );\r\n\r\n\r\n  langx.mixin(images, {\r\n    isCompleted : isCompleted,\r\n\r\n    isLoaded : isLoaded,\r\n\r\n    loaded : loaded,\r\n\r\n    preload : preload,\r\n\r\n    viewer : viewer\r\n  });\r\n\r\n  return dom.images = images;\r\n});\r\n\ndefine('skylark-utils-dom/elmx',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./datax\",\r\n    \"./eventer\",\r\n    \"./finder\",\r\n    \"./fx\",\r\n    \"./geom\",\r\n    \"./noder\",\r\n    \"./styler\",\r\n    \"./query\"\r\n], function(dom, langx, datax, eventer, finder, fx, geom, noder, styler,$) {\r\n    var map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n    /*\r\n     * VisualElement is a skylark class type wrapping a visule dom node,\r\n     * provides a number of prototype methods and supports chain calls.\r\n     */\r\n    var VisualElement = langx.klass({\r\n        klassName: \"VisualElement\",\r\n\r\n        \"init\": function(node) {\r\n            if (langx.isString(node)) {\r\n                node = document.getElementById(node);\r\n            }\r\n            this._elm = node;\r\n        }\r\n    });\r\n\r\n    VisualElement.prototype.$ = VisualElement.prototype.query = function(selector) {\r\n        return $(selector,this._elm);\r\n    };\r\n\r\n    /*\r\n     * the VisualElement object wrapping document.body\r\n     */\r\n    var root = new VisualElement(document.body),\r\n        elmx = function(node) {\r\n            if (node) {\r\n                return new VisualElement(node);\r\n            } else {\r\n                return root;\r\n            }\r\n        };\r\n    /*\r\n     * Extend VisualElement prototype with wrapping the specified methods.\r\n     * @param {ArrayLike} fn\r\n     * @param {Object} context\r\n     */\r\n    function _delegator(fn, context) {\r\n        return function() {\r\n            var self = this,\r\n                elem = self._elm,\r\n                ret = fn.apply(context, [elem].concat(slice.call(arguments)));\r\n\r\n            if (ret) {\r\n                if (ret === context) {\r\n                    return self;\r\n                } else {\r\n                    if (ret instanceof HTMLElement) {\r\n                        ret = new VisualElement(ret);\r\n                    } else if (langx.isArrayLike(ret)) {\r\n                        ret = map.call(ret, function(el) {\r\n                            if (el instanceof HTMLElement) {\r\n                                return new VisualElement(el);\r\n                            } else {\r\n                                return el;\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            return ret;\r\n        };\r\n    }\r\n\r\n    langx.mixin(elmx, {\r\n        batch: function(nodes, action, args) {\r\n            nodes.forEach(function(node) {\r\n                var elm = (node instanceof VisualElement) ? node : elmx(node);\r\n                elm[action].apply(elm, args);\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        root: new VisualElement(document.body),\r\n\r\n        VisualElement: VisualElement,\r\n\r\n        partial: function(name, fn) {\r\n            var props = {};\r\n\r\n            props[name] = fn;\r\n\r\n            VisualElement.partial(props);\r\n        },\r\n\r\n        delegate: function(names, context) {\r\n            var props = {};\r\n\r\n            names.forEach(function(name) {\r\n                props[name] = _delegator(context[name], context);\r\n            });\r\n\r\n            VisualElement.partial(props);\r\n        }\r\n    });\r\n\r\n    // from ./datax\r\n    elmx.delegate([\r\n        \"attr\",\r\n        \"data\",\r\n        \"prop\",\r\n        \"removeAttr\",\r\n        \"removeData\",\r\n        \"text\",\r\n        \"val\"\r\n    ], datax);\r\n\r\n    // from ./eventer\r\n    elmx.delegate([\r\n        \"off\",\r\n        \"on\",\r\n        \"one\",\r\n        \"shortcuts\",\r\n        \"trigger\"\r\n    ], eventer);\r\n\r\n    // from ./finder\r\n    elmx.delegate([\r\n        \"ancestor\",\r\n        \"ancestors\",\r\n        \"children\",\r\n        \"descendant\",\r\n        \"find\",\r\n        \"findAll\",\r\n        \"firstChild\",\r\n        \"lastChild\",\r\n        \"matches\",\r\n        \"nextSibling\",\r\n        \"nextSiblings\",\r\n        \"parent\",\r\n        \"previousSibling\",\r\n        \"previousSiblings\",\r\n        \"siblings\"\r\n    ], finder);\r\n\r\n    /*\r\n     * find a dom element matched by the specified selector.\r\n     * @param {String} selector\r\n     */\r\n    elmx.find = function(selector) {\r\n        if (selector === \"body\") {\r\n            return this.root;\r\n        } else {\r\n            return this.root.descendant(selector);\r\n        }\r\n    };\r\n\r\n    // from ./fx\r\n    elmx.delegate([\r\n        \"animate\",\r\n        \"fadeIn\",\r\n        \"fadeOut\",\r\n        \"fadeTo\",\r\n        \"fadeToggle\",\r\n        \"hide\",\r\n        \"scrollToTop\",\r\n        \"show\",\r\n        \"toggle\"\r\n    ], fx);\r\n\r\n\r\n    // from ./geom\r\n    elmx.delegate([\r\n        \"borderExtents\",\r\n        \"boundingPosition\",\r\n        \"boundingRect\",\r\n        \"clientHeight\",\r\n        \"clientSize\",\r\n        \"clientWidth\",\r\n        \"contentRect\",\r\n        \"height\",\r\n        \"marginExtents\",\r\n        \"offsetParent\",\r\n        \"paddingExtents\",\r\n        \"pagePosition\",\r\n        \"pageRect\",\r\n        \"relativePosition\",\r\n        \"relativeRect\",\r\n        \"scrollIntoView\",\r\n        \"scrollLeft\",\r\n        \"scrollTop\",\r\n        \"size\",\r\n        \"width\"\r\n    ], geom);\r\n\r\n    // from ./noder\r\n    elmx.delegate([\r\n        \"after\",\r\n        \"append\",\r\n        \"before\",\r\n        \"clone\",\r\n        \"contains\",\r\n        \"contents\",\r\n        \"empty\",\r\n        \"html\",\r\n        \"isChildOf\",\r\n        \"ownerDoc\",\r\n        \"prepend\",\r\n        \"remove\",\r\n        \"removeChild\",\r\n        \"replace\",\r\n        \"reverse\",\r\n        \"throb\",\r\n        \"traverse\",\r\n        \"wrapper\",\r\n        \"wrapperInner\",\r\n        \"unwrap\"\r\n    ], noder);\r\n\r\n    // from ./styler\r\n    elmx.delegate([\r\n        \"addClass\",\r\n        \"className\",\r\n        \"css\",\r\n        \"hasClass\",\r\n        \"hide\",\r\n        \"isInvisible\",\r\n        \"removeClass\",\r\n        \"show\",\r\n        \"toggleClass\"\r\n    ], styler);\r\n\r\n    // properties\r\n\r\n    var properties = [ 'position', 'left', 'top', 'right', 'bottom', 'width', 'height', 'border', 'borderLeft',\r\n    'borderTop', 'borderRight', 'borderBottom', 'borderColor', 'display', 'overflow', 'margin', 'marginLeft', 'marginTop', 'marginRight', 'marginBottom', 'padding', 'paddingLeft', 'paddingTop', 'paddingRight', 'paddingBottom', 'color',\r\n    'background', 'backgroundColor', 'opacity', 'fontSize', 'fontWeight', 'textAlign', 'textDecoration', 'textTransform', 'cursor', 'zIndex' ];\r\n\r\n    properties.forEach( function ( property ) {\r\n\r\n        var method = property;\r\n\r\n        VisualElement.prototype[method ] = function (value) {\r\n\r\n            this.css( property, value );\r\n\r\n            return this;\r\n\r\n        };\r\n\r\n    });\r\n\r\n    // events\r\n    var events = [ 'keyUp', 'keyDown', 'mouseOver', 'mouseOut', 'click', 'dblClick', 'change' ];\r\n\r\n    events.forEach( function ( event ) {\r\n\r\n        var method = event;\r\n\r\n        VisualElement.prototype[method ] = function ( callback ) {\r\n\r\n            this.on( event.toLowerCase(), callback);\r\n\r\n            return this;\r\n        };\r\n\r\n    });\r\n\r\n\r\n    return dom.elmx = elmx;\r\n});\ndefine('skylark-utils-dom/plugins',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./eventer\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./fx\",\r\n    \"./query\",\r\n    \"./elmx\"\r\n], function(dom, langx, noder, datax, eventer, finder, geom, styler, fx, $, elmx) {\r\n    \"use strict\";\r\n\r\n    var slice = Array.prototype.slice,\r\n        concat = Array.prototype.concat,\r\n        pluginKlasses = {},\r\n        shortcuts = {};\r\n\r\n    /*\r\n     * Create or get or destory a plugin instance assocated with the element.\r\n     */\r\n    function instantiate(elm,pluginName,options) {\r\n        var pluginInstance = datax.data( elm, pluginName );\r\n\r\n        if (options === \"instance\") {\r\n            return pluginInstance;\r\n        } else if (options === \"destroy\") {\r\n            if (!pluginInstance) {\r\n                throw new Error (\"The plugin instance is not existed\");\r\n            }\r\n            pluginInstance.destroy();\r\n            datax.removeData( elm, pluginName);\r\n            pluginInstance = undefined;\r\n        } else {\r\n            if (!pluginInstance) {\r\n                if (options !== undefined && typeof options !== \"object\") {\r\n                    throw new Error (\"The options must be a plain object\");\r\n                }\r\n                var pluginKlass = pluginKlasses[pluginName]; \r\n                pluginInstance = new pluginKlass(elm,options);\r\n                datax.data( elm, pluginName,pluginInstance );\r\n            } else if (options) {\r\n                pluginInstance.reset(options);\r\n            }\r\n        }\r\n\r\n        return pluginInstance;\r\n    }\r\n\r\n    function shortcutter(pluginName,extfn) {\r\n       /*\r\n        * Create or get or destory a plugin instance assocated with the element,\r\n        * and also you can execute the plugin method directory;\r\n        */\r\n        return function (elm,options) {\r\n            var  plugin = instantiate(elm, pluginName,\"instance\");\r\n            if ( options === \"instance\" ) {\r\n              return plugin || null;\r\n            }\r\n            if (!plugin) {\r\n                plugin = instantiate(elm, pluginName,typeof options == 'object' && options || {});\r\n            }\r\n\r\n            if (options) {\r\n                var args = slice.call(arguments,1);\r\n                if (extfn) {\r\n                    return extfn.apply(plugin,args);\r\n                } else {\r\n                    if (typeof options == 'string') {\r\n                        var methodName = options;\r\n\r\n                        if ( !plugin ) {\r\n                            throw new Error( \"cannot call methods on \" + pluginName +\r\n                                \" prior to initialization; \" +\r\n                                \"attempted to call method '\" + methodName + \"'\" );\r\n                        }\r\n\r\n                        if ( !langx.isFunction( plugin[ methodName ] ) || methodName.charAt( 0 ) === \"_\" ) {\r\n                            throw new Error( \"no such method '\" + methodName + \"' for \" + pluginName +\r\n                                \" plugin instance\" );\r\n                        }\r\n\r\n                        plugin[methodName].apply(plugin,args);\r\n                    }                \r\n                }                \r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    /*\r\n     * Register a plugin type\r\n     */\r\n    function register( pluginKlass,shortcutName,extfn) {\r\n        var pluginName = pluginKlass.prototype.pluginName;\r\n        \r\n        pluginKlasses[pluginName] = pluginKlass;\r\n\r\n        if (shortcutName) {\r\n            var shortcut = shortcuts[shortcutName] = shortcutter(pluginName,extfn);\r\n                \r\n            $.fn[shortcutName] = function(options) {\r\n                var returnValue = this;\r\n\r\n                if ( !this.length && options === \"instance\" ) {\r\n                  returnValue = undefined;\r\n                } else {\r\n                  this.each(function () {\r\n                    var  ret  = shortcut(this,options);\r\n                    if (ret !== undefined) {\r\n                        returnValue = ret;\r\n                        return false;\r\n                    }\r\n                  });\r\n                }\r\n\r\n                return returnValue;\r\n            };\r\n\r\n            elmx.partial(shortcutName,function(options) {\r\n                var  ret  = shortcut(this._elm,options);\r\n                if (ret === undefined) {\r\n                    ret = this;\r\n                }\r\n                return ret;\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n \r\n    var Plugin =   langx.Evented.inherit({\r\n        klassName: \"Plugin\",\r\n\r\n        _construct : function(elm,options) {\r\n           this._elm = elm;\r\n           this._initOptions(options);\r\n        },\r\n\r\n        _initOptions : function(options) {\r\n          var ctor = this.constructor,\r\n              cache = ctor.cache = ctor.cache || {},\r\n              defaults = cache.defaults;\r\n          if (!defaults) {\r\n            var  ctors = [];\r\n            do {\r\n              ctors.unshift(ctor);\r\n              if (ctor === Plugin) {\r\n                break;\r\n              }\r\n              ctor = ctor.superclass;\r\n            } while (ctor);\r\n\r\n            defaults = cache.defaults = {};\r\n            for (var i=0;i<ctors.length;i++) {\r\n              ctor = ctors[i];\r\n              if (ctor.prototype.hasOwnProperty(\"options\")) {\r\n                langx.mixin(defaults,ctor.prototype.options);\r\n              }\r\n              if (ctor.hasOwnProperty(\"options\")) {\r\n                langx.mixin(defaults,ctor.options);\r\n              }\r\n            }\r\n          }\r\n          Object.defineProperty(this,\"options\",{\r\n            value :langx.mixin({},defaults,options)\r\n          });\r\n\r\n          //return this.options = langx.mixin({},defaults,options);\r\n          return this.options;\r\n        },\r\n\r\n\r\n        destroy: function() {\r\n            var that = this;\r\n\r\n            this._destroy();\r\n            // We can probably remove the unbind calls in 2.0\r\n            // all event bindings should go through this._on()\r\n            datax.removeData(this._elm,this.pluginName );\r\n        },\r\n\r\n        _destroy: langx.noop,\r\n\r\n        _delay: function( handler, delay ) {\r\n            function handlerProxy() {\r\n                return ( typeof handler === \"string\" ? instance[ handler ] : handler )\r\n                    .apply( instance, arguments );\r\n            }\r\n            var instance = this;\r\n            return setTimeout( handlerProxy, delay || 0 );\r\n        },\r\n\r\n        option: function( key, value ) {\r\n            var options = key;\r\n            var parts;\r\n            var curOption;\r\n            var i;\r\n\r\n            if ( arguments.length === 0 ) {\r\n\r\n                // Don't return a reference to the internal hash\r\n                return langx.mixin( {}, this.options );\r\n            }\r\n\r\n            if ( typeof key === \"string\" ) {\r\n\r\n                // Handle nested keys, e.g., \"foo.bar\" => { foo: { bar: ___ } }\r\n                options = {};\r\n                parts = key.split( \".\" );\r\n                key = parts.shift();\r\n                if ( parts.length ) {\r\n                    curOption = options[ key ] = langx.mixin( {}, this.options[ key ] );\r\n                    for ( i = 0; i < parts.length - 1; i++ ) {\r\n                        curOption[ parts[ i ] ] = curOption[ parts[ i ] ] || {};\r\n                        curOption = curOption[ parts[ i ] ];\r\n                    }\r\n                    key = parts.pop();\r\n                    if ( arguments.length === 1 ) {\r\n                        return curOption[ key ] === undefined ? null : curOption[ key ];\r\n                    }\r\n                    curOption[ key ] = value;\r\n                } else {\r\n                    if ( arguments.length === 1 ) {\r\n                        return this.options[ key ] === undefined ? null : this.options[ key ];\r\n                    }\r\n                    options[ key ] = value;\r\n                }\r\n            }\r\n\r\n            this._setOptions( options );\r\n\r\n            return this;\r\n        },\r\n\r\n        _setOptions: function( options ) {\r\n            var key;\r\n\r\n            for ( key in options ) {\r\n                this._setOption( key, options[ key ] );\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        _setOption: function( key, value ) {\r\n\r\n            this.options[ key ] = value;\r\n\r\n            return this;\r\n        }\r\n\r\n    });\r\n\r\n    $.fn.plugin = function(name,options) {\r\n        var args = slice.call( arguments, 1 ),\r\n            self = this,\r\n            returnValue = this;\r\n\r\n        this.each(function(){\r\n            returnValue = instantiate.apply(self,[this,name].concat(args));\r\n        });\r\n        return returnValue;\r\n    };\r\n\r\n    elmx.partial(\"plugin\",function(name,options) {\r\n        var args = slice.call( arguments, 1 );\r\n        return instantiate.apply(this,[this.domNode,name].concat(args));\r\n    }); \r\n\r\n\r\n    function plugins() {\r\n        return plugins;\r\n    }\r\n     \r\n    langx.mixin(plugins, {\r\n        instantiate,\r\n        Plugin,\r\n        register,\r\n        shortcuts\r\n    });\r\n\r\n    return plugins;\r\n});\ndefine('skylark-utils-dom/scripter',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./finder\"\r\n], function(dom, langx, noder, finder) {\r\n\r\n    var head = document.getElementsByTagName('head')[0],\r\n        scriptsByUrl = {},\r\n        scriptElementsById = {},\r\n        count = 0;\r\n\r\n    function scripter() {\r\n        return scripter;\r\n    }\r\n\r\n    langx.mixin(scripter, {\r\n        /*\r\n         * Load a script from a url into the document.\r\n         * @param {} url\r\n         * @param {} loadedCallback\r\n         * @param {} errorCallback\r\n         */\r\n        loadJavaScript: function(url, loadedCallback, errorCallback) {\r\n            var script = scriptsByUrl[url];\r\n            if (!script) {\r\n                script = scriptsByUrl[url] = {\r\n                    state: 0, //0:unload,1:loaded,-1:loaderror\r\n                    loadedCallbacks: [],\r\n                    errorCallbacks: []\r\n                }\r\n            }\r\n\r\n            script.loadedCallbacks.push(loadedCallback);\r\n            script.errorCallbacks.push(errorCallback);\r\n\r\n            if (script.state === 1) {\r\n                script.node.onload();\r\n            } else if (script.state === -1) {\r\n                script.node.onerror();\r\n            } else {\r\n                var node = script.node = document.createElement(\"script\"),\r\n                    id = script.id = (count++);\r\n\r\n                node.type = \"text/javascript\";\r\n                node.async = false;\r\n                node.defer = false;\r\n                startTime = new Date().getTime();\r\n                head.appendChild(node);\r\n\r\n                node.onload = function() {\r\n                        script.state = 1;\r\n\r\n                        var callbacks = script.loadedCallbacks,\r\n                            i = callbacks.length;\r\n\r\n                        while (i--) {\r\n                            callbacks[i]();\r\n                        }\r\n                        script.loadedCallbacks = [];\r\n                        script.errorCallbacks = [];\r\n                    },\r\n                    node.onerror = function() {\r\n                        script.state = -1;\r\n                        var callbacks = script.errorCallbacks,\r\n                            i = callbacks.length;\r\n\r\n                        while (i--) {\r\n                            callbacks[i]();\r\n                        }\r\n                        script.loadedCallbacks = [];\r\n                        script.errorCallbacks = [];\r\n                    };\r\n                node.src = url;\r\n\r\n                scriptElementsById[id] = node;\r\n            }\r\n            return script.id;\r\n        },\r\n        /*\r\n         * Remove the specified script from the document.\r\n         * @param {Number} id\r\n         */\r\n        deleteJavaScript: function(id) {\r\n            var node = scriptElementsById[id];\r\n            if (node) {\r\n                var url = node.src;\r\n                noder.remove(node);\r\n                delete scriptElementsById[id];\r\n                delete scriptsByUrl[url];\r\n            }\r\n        }\r\n    });\r\n\r\n    return dom.scripter = scripter;\r\n});\ndefine('skylark-utils-dom/main',[\r\n    \"./dom\",\r\n    \"./browser\",\r\n    \"./css\",\r\n    \"./datax\",\r\n    \"./eventer\",\r\n    \"./finder\",\r\n    \"./fx\",\r\n    \"./geom\",\r\n    \"./images\",\r\n    \"./noder\",\r\n    \"./plugins\",\r\n    \"./query\",\r\n    \"./scripter\",\r\n    \"./styler\",\r\n    \"./transforms\",\r\n    \"./langx\",\r\n    \"./elmx\"\r\n], function(dom) {\r\n    return dom;\r\n})\r\n;\ndefine('skylark-utils-dom', ['skylark-utils-dom/main'], function (main) { return main; });\n\n"]}