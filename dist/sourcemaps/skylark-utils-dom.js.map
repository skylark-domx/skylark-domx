{"version":3,"sources":["skylark-utils-dom.js"],"names":["define","skylark","dom","attach","langx","vendorPrefix","vendorPrefixRE","browser","hoster","transEndEventNames","WebkitTransition","MozTransition","OTransition","transition","transEndEventName","css3PropPrefix","css3EventPrefix","cssStyles","cssProps","vendorPrefixesRE","document","window","testEl","createElement","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","requestFullScreen","requestFullscreen","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","testStyle","exitFullscreen","webkitCancelFullScreen","mozCancelFullScreen","msExitFullscreen","style","name","matched","match","RegExp","toLowerCase","lowerFirst","cssPropName","dasherize","undefined","mixin","isIE","exec","navigator","userAgent","normalizeStyleProperty","normalizeCssProperty","normalizeCssEvent","location","support","end","Array","prototype","every","forEach","camelCase","maybeAddPx","value","cssNumber","column-count","columns","font-weight","line-height","opacity","z-index","zoom","classReCache","classRE","className","node","klass","svg","baseVal","elementDisplay","getStyles","elem","view","ownerDocument","defaultView","opener","getComputedStyle","styler","autocssfix","cssHooks","addClass","elm","this","names","cls","isString","split","re","css","property","arguments","length","computedStyle","getPropertyValue","isArrayLike","props","call","prop","removeProperty","key","cssText","disabled","hasClass","hide","isInvisible","removeClass","replace","trim","show","nodeName","element","display","body","appendChild","parentNode","removeChild","defaultDisplay","toggleClass","when","self","fragmentRE","singleTagRE","div","table","tableBody","tableRow","containers","tr","tbody","thead","tfoot","td","th","*","rootNodeRE","map","slice","ensureNodes","nodes","copyByClone","cloneNode","flatten","append","placing","i","tag","parent","setAttribute","rxhtmlTag","isChildOf","directly","documentElement","contains","ownerDoc","nodeType","noder","active","doc","el","activeElement","error","blur","clone","deep","each","getAttribs","attr","setAttrib","getAttrib","contents","chkName","contentDocument","childNodes","createFragment","html","test","$1","container","innerHTML","child","createTextNode","text","empty","hasChildNodes","firstChild","fullScreen","exitFullScreen","apply","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","focusable","hasTabindex","mapName","img","focusableIfVisible","fieldset","href","$","is","closest","visible","isNumber","isDocument","DOCUMENT_NODE","isInDocument","isWindow","offsetParent","ownerWindow","parentWindow","after","refNode","nextSibling","insertBefore","before","prepend","remove","e","console","warn","children","oldNode","replaceChild","throb","params","timer","time","callback","throbber","overlayDiv","position","top","left","width","height","zIndex","overlay","textNode","clearTimeout","setTimeout","update","nodeValue","traverse","fn","len","reverse","wrapper","wrapperNode","wrapperInner","unwrap","isDoc","velm","local","filter","nativeMatchesSelector","parsed","separatorIndex","combinatorIndex","reversed","from","cache","reverseCache","reUnescape","parse","expression","isReversed","Slick","currentCache","expressions","raw","regexp","parser","reverseCombinator","combinator","exp","last","parts","j","cexp","push","escapeRegExp","string","rawMatch","separator","combinatorChildren","tagName","id","attributeKey","attributeOperator","attributeQuote","attributeValue","pseudoMarker","pseudoClass","pseudoQuote","pseudoClassQuotedValue","pseudoClassValue","currentSeparator","currentParsed","classList","classes","pseudos","type","indexOf","attributes","operator","rinputs","rheader","parseSelector","button","checked","idx","enabled","eq","even","focus","tabindex","first","gt","has","sel","find","header","hidden","input","lt","not","matches","odd","selected","tabbable","tabIndex","offsetWidth","createInputPseudo","createButtonPseudo","item","isArrayFilter","radio","checkbox","file","password","image","submit","reset","ancestors","selector","root","ret","rootIsSelector","inArray","descendants","querySelectorAll","matchError","query","descendant","querySelector","lastChild","previousSibling","isPlainObject","check","adjacent","nextSiblings","previousSiblings","siblings","divide","cond","nativeSelector","customPseudos","JSON","stringify","part","toUpperCase","arrayFilte","pseudo","getAttribute","hasAttribute","currentExpression","simpleExpCounter","filterSingle","matchs","Error","uniq","concat","combine","bit","node1","op","prev","next","divided","single","currentBit","founds","found","currentItems","finder","ancestor","byId","getElementById","findAll","deserializeValue","capitalRE","propMap","readonly","for","class","maxlength","cellspacing","cellpadding","rowspan","colspan","usemap","frameborder","contenteditable","attrName","_store","confirm","store","_attributeData","_setData","data","dataAttrName","camelName","_getData","cleanData","pluck","datax","dataName","aria","removeAttr","removeAttribute","removeData","removeProp","txt","textContent","val","multiple","selectedOptions","option","editable","contentEditable","execCommand","command","insertRuleFunc","head","getElementsByTagName","count","sheetsById","defaultSheetId","_createStyleSheet","defaultSheet","rulesPropName","deleteRuleFunc","deleteRule","removeRule","insertRule","_insertRule","index","addRule","external","options","media","create","rel","async","deleteSheetRule","sheetId","rule","sheet","_rule","addSheetRules","rules","toString","isAtRule","str","startsWith","json","adjust","parentName","depth","strNode","values","atFlg","SPACE","repeat","isArray","n","adjusted","addRules","createStyleSheet","insertSheetRule","removeStyleSheet","uid","ignoreProperties","eventMethods","preventDefault","stopImmediatePropagation","stopPropagation","readyRE","compatible","event","source","isDefaultPrevented","predicate","sourceMethod","returnTrue","returnFalse","segs","ns","sort","join","createEvent","EventCtors","NativeEvents","compositionstart","compositionend","compositionupdate","beforecopy","beforecut","beforepaste","copy","cut","paste","drag","dragend","dragenter","dragexit","dragleave","dragover","dragstart","drop","abort","change","selectionchange","focusin","focusout","keydown","keypress","keyup","message","click","contextmenu","dblclick","mousedown","mouseup","mousemove","mouseover","mouseout","mouseenter","mouseleave","textInput","touchstart","touchmove","touchend","load","resize","select","scroll","unload","wheel","bubbles","cancelable","namespace","ctor","getEventCtor","safeMixin","createProxy","src","proxy","originalEvent","specialEvents","focusinSupported","hover","realEvent","handlers","EventBindings","init","target","_target","_event","_bindings","add","bindings","binding","_listener","domEvt","args","_args","isDefined","isImmediatePropagationStopped","one","currentTarget","liveFired","related","relatedTarget","result","addEventListener","matcher","removing","removeEventListener","EventsHandler","_handler","register","specialEvent","bindingEvent","bindType","bindEventName","events","unregister","listener","findHandler","handler","on","isFunction","ready","readyState","defer","keyCodeLookup","backspace","comma","delete","down","enter","escape","home","page_down","page_up","period","right","space","tab","up","eventer","transitionEnd","delegateType","keys","off","shortcuts","registry","run","shortcut","metaKey","ctrlKey","ctrl","alt","altKey","shift","shiftKey","keyCode","charCode","pattern","shortcutKey","setting","charCodeAt","regKey","special","stop","all","trigger","evented","Event","dispatchEvent","cachedScrollbarWidth","px","toPixel","scrollbarWidth","w1","w2","innerDiv","clientWidth","borderExtents","bottom","s","borderLeftWidth","borderTopWidth","borderRightWidth","borderBottomWidth","boundingPosition","coords","getBoundingClientRect","parentOffset","mex","marginExtents","pbex","relativePosition","boundingRect","size","clientSize","dimension","clientHeight","isBorderBox","bex","pex","paddingExtents","getDocumentSize","max","Math","scrollWidth","scrollHeight","offsetHeight","marginLeft","marginTop","marginRight","marginBottom","marginSize","obj","me","paddingLeft","paddingTop","paddingRight","paddingBottom","pagePosition","pageXOffset","pageYOffset","offset","relativeRect","scrollLeft","hasScrollLeft","scrollTo","scrollY","scrollTop","hasScrollTop","scrollX","innerWidth","innerHeight","geom","contentRect","cs","marginRect","pageRect","round","scrollIntoView","align","x","y","parentWidth","parentHeight","parentElm","pos","rootElm","offsetLeft","offsetTop","getOffset","abs","rhorizontal","rvertical","roffset","rposition","rpercent","getOffsets","offsets","parseFloat","parseCss","parseInt","positions","fit","newOverRight","within","withinOffset","outerWidth","collisionPosLeft","collisionPosition","overLeft","overRight","collisionWidth","newOverBottom","outerHeight","collisionPosTop","overTop","overBottom","collisionHeight","flip","newOverLeft","myOffset","my","elemWidth","atOffset","at","targetWidth","newOverTop","elemHeight","targetHeight","flipfit","posit","targetOffset","basePosition","dimensions","extend","of","withinElement","hasOffset","msize","scrollInfo","overflowX","overflowY","hasOverflowX","getScrollInfo","collision","pageY","pageX","horizontalOffset","verticalOffset","using","dir","feedback","horizontal","vertical","important","animationName","animationDuration","animationTiming","transitionProperty","transitionDuration","transitionTiming","transitionDelay","animationEnd","supportedTransforms","transform","cssReset","animate","properties","duration","ease","delay","endEvent","wrappedCallback","cssValues","cssProperties","transforms","that","fired","easing","complete","fx","speeds","normal","eace","v","debounce","clientLeft","scrollToTop","speed","scale","scrollFrom","freq","interval","setInterval","clearInterval","fadeTo","fadeIn","fadeOut","slideDown","visibility","overflow","slideUp","queue","fast","slow","emulateTransitionEnd","called","fadeToggle","ceasing","allback","slideToggle","toggle","css3Transform","getZoom","d","radian","Cos","Sin","matrix","cos","sin","M11","M12","M21","M22","toFixed","transformData","calcs","PI","rotate","degress","hZoom","vZoom","zoomin","zoomout","calcFunc","makeArray","unshift","isQ","some","rquickExpr","funcArg","isObject","compact","wrapper_map","func","context","wrapper_selector","wrapper_every_act","wrapper_every_act_firstArgFunc","oldValueFunc","arg1","wrapper_name_value","wrapper_value","newValue","NodeList","klassName","charAt","object","get","toArray","isHtmlNode","excludes","parents","parentsUntil","util","pushStack","elms","prevObject","replaceWith","newContent","wrap","structure","wrapAll","wrappingElement","wrapInner","prevAll","nextAll","wrapper_some_chk","detach","fnOver","fnOut","Dimension","m","margin","cb","mb","wrapper_node_operation","argType","arg","appendTo","prependTo","insertAfter","replaceAll","original","elems","insert","toogle","scrollParent","includeHidden","excludeStaticParent","overflowRegex","andSelf","addBack","eventType","place","addContent","content","template","substitute","replaceClass","newClass","oldClass","disableSelection","enableSelection","plugin","returnValue","plugins","instantiate","watch","imgs","totalCount","progressedCount","successedCount","faileredCount","Deferred","resolve","total","successed","failered","progress","isLoaded","progressed","isCompleted","promise","naturalWidth","loaded","addBackgroundImage","elm1","url","Image","childImgs","background","viewer","loadedCallback","onload","onerror","_load","border","padding","_init","dispose","images","imagesLoaded","imagesViewer","preload","urls","VisualElement","_construct","_elm","elmx","batch","action","partial","delegate","HTMLElement","_delegator","method","pluginKlasses","pluginName","pair","instanceDataName","pluginInstance","destroy","pluginKlass","Plugin","Evented","inherit","_initOptions","constructor","defaults","ctors","superclass","hasOwnProperty","Object","defineProperty","_destroy","noop","_delay","instance","curOption","pop","_setOptions","_setOption","domNode","shortcutName","extfn","methodName","shortcutter","args2","scriptsByUrl","scriptElementsById","scripter","loadJavaScript","errorCallback","script","state","loadedCallbacks","errorCallbacks","startTime","Date","getTime","callbacks","deleteJavaScript","main"],"mappings":"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","file":"../skylark-utils-dom.js","sourcesContent":["define('skylark-utils-dom/skylark',[\"skylark-langx/skylark\"], function(skylark) {\r\n    return skylark;\r\n});\r\n\ndefine('skylark-utils-dom/dom',[\"./skylark\"], function(skylark) {\r\n\treturn skylark.dom = skylark.attach(\"utils.dom\",{});\r\n});\r\n\ndefine('skylark-utils-dom/langx',[\r\n    \"skylark-langx/langx\"\r\n], function(langx) {\r\n    return langx;\r\n});\r\n\ndefine('skylark-utils-dom/browser',[\r\n    \"./dom\",\r\n    \"./langx\"\r\n], function(dom,langx) {\r\n    \"use strict\";\r\n\r\n    var browser = langx.hoster.browser;\r\n \r\n    var checkedCssProperties = {\r\n            \"transitionproperty\": \"TransitionProperty\",\r\n        },\r\n        transEndEventNames = {\r\n          WebkitTransition : 'webkitTransitionEnd',\r\n          MozTransition    : 'transitionend',\r\n          OTransition      : 'oTransitionEnd otransitionend',\r\n          transition       : 'transitionend'\r\n        },\r\n        transEndEventName = null;\r\n\r\n\r\n    var css3PropPrefix = \"\",\r\n        css3StylePrefix = \"\",\r\n        css3EventPrefix = \"\",\r\n\r\n        cssStyles = {},\r\n        cssProps = {},\r\n\r\n        vendorPrefix,\r\n        vendorPrefixRE,\r\n        vendorPrefixesRE = /^(Webkit|webkit|O|Moz|moz|ms)(.*)$/,\r\n\r\n        document = window.document,\r\n        testEl = document.createElement(\"div\"),\r\n\r\n        matchesSelector = testEl.webkitMatchesSelector ||\r\n                          testEl.mozMatchesSelector ||\r\n                          testEl.oMatchesSelector ||\r\n                          testEl.matchesSelector,\r\n\r\n        requestFullScreen = testEl.requestFullscreen || \r\n                            testEl.webkitRequestFullscreen || \r\n                            testEl.mozRequestFullScreen || \r\n                            testEl.msRequestFullscreen,\r\n\r\n        exitFullScreen =  document.exitFullscreen ||\r\n                          document.webkitCancelFullScreen ||\r\n                          document.mozCancelFullScreen ||\r\n                          document.msExitFullscreen,\r\n\r\n        testStyle = testEl.style;\r\n\r\n    for (var name in testStyle) {\r\n        var matched = name.match(vendorPrefixRE || vendorPrefixesRE);\r\n        if (matched) {\r\n            if (!vendorPrefixRE) {\r\n                vendorPrefix = matched[1];\r\n                vendorPrefixRE = new RegExp(\"^(\" + vendorPrefix + \")(.*)$\");\r\n\r\n                css3StylePrefix = vendorPrefix;\r\n                css3PropPrefix = '-' + vendorPrefix.toLowerCase() + '-';\r\n                css3EventPrefix = vendorPrefix.toLowerCase();\r\n            }\r\n\r\n            cssStyles[langx.lowerFirst(matched[2])] = name;\r\n            var cssPropName = langx.dasherize(matched[2]);\r\n            cssProps[cssPropName] = css3PropPrefix + cssPropName;\r\n\r\n            if (transEndEventNames[name]) {\r\n              transEndEventName = transEndEventNames[name];\r\n            }\r\n        }\r\n    }\r\n\r\n    if (!transEndEventName) {\r\n        if (testStyle[\"transition\"] !== undefined) {\r\n            transEndEventName = transEndEventNames[\"transition\"];\r\n        }\r\n    }\r\n\r\n    function normalizeCssEvent(name) {\r\n        return css3EventPrefix ? css3EventPrefix + name : name.toLowerCase();\r\n    }\r\n\r\n    function normalizeCssProperty(name) {\r\n        return cssProps[name] || name;\r\n    }\r\n\r\n    function normalizeStyleProperty(name) {\r\n        return cssStyles[name] || name;\r\n    }\r\n\r\n    langx.mixin(browser, {\r\n        css3PropPrefix: css3PropPrefix,\r\n\r\n        isIE : !!/msie/i.exec( window.navigator.userAgent ),\r\n\r\n        normalizeStyleProperty: normalizeStyleProperty,\r\n\r\n        normalizeCssProperty: normalizeCssProperty,\r\n\r\n        normalizeCssEvent: normalizeCssEvent,\r\n\r\n        matchesSelector: matchesSelector,\r\n\r\n        requestFullScreen : requestFullScreen,\r\n\r\n        exitFullscreen : requestFullScreen,\r\n\r\n        location: function() {\r\n            return window.location;\r\n        },\r\n\r\n        support : {\r\n\r\n        }\r\n\r\n    });\r\n\r\n    if  (transEndEventName) {\r\n        browser.support.transition = {\r\n            end : transEndEventName\r\n        };\r\n    }\r\n\r\n    testEl = null;\r\n\r\n    return dom.browser = browser;\r\n});\r\n\ndefine('skylark-utils-dom/styler',[\r\n    \"./dom\",\r\n    \"./langx\"\r\n], function(dom, langx) {\r\n    var every = Array.prototype.every,\r\n        forEach = Array.prototype.forEach,\r\n        camelCase = langx.camelCase,\r\n        dasherize = langx.dasherize;\r\n\r\n    function maybeAddPx(name, value) {\r\n        return (typeof value == \"number\" && !cssNumber[dasherize(name)]) ? value + \"px\" : value\r\n    }\r\n\r\n    var cssNumber = {\r\n            'column-count': 1,\r\n            'columns': 1,\r\n            'font-weight': 1,\r\n            'line-height': 1,\r\n            'opacity': 1,\r\n            'z-index': 1,\r\n            'zoom': 1\r\n        },\r\n        classReCache = {\r\n\r\n        };\r\n\r\n    function classRE(name) {\r\n        return name in classReCache ?\r\n            classReCache[name] : (classReCache[name] = new RegExp('(^|\\\\s)' + name + '(\\\\s|$)'));\r\n    }\r\n\r\n    // access className property while respecting SVGAnimatedString\r\n    /*\r\n     * Adds the specified class(es) to each element in the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {String} value\r\n     */\r\n    function className(node, value) {\r\n        var klass = node.className || '',\r\n            svg = klass && klass.baseVal !== undefined\r\n\r\n        if (value === undefined) return svg ? klass.baseVal : klass\r\n        svg ? (klass.baseVal = value) : (node.className = value)\r\n    }\r\n\r\n    function disabled(elm, value ) {\r\n        if (arguments.length < 2) {\r\n            return !!this.dom.disabled;\r\n        }\r\n\r\n        elm.disabled = value;\r\n\r\n        return this;\r\n    }\r\n\r\n    var elementDisplay = {};\r\n\r\n    function defaultDisplay(nodeName) {\r\n        var element, display\r\n        if (!elementDisplay[nodeName]) {\r\n            element = document.createElement(nodeName)\r\n            document.body.appendChild(element)\r\n            display = getStyles(element).getPropertyValue(\"display\")\r\n            element.parentNode.removeChild(element)\r\n            display == \"none\" && (display = \"block\")\r\n            elementDisplay[nodeName] = display\r\n        }\r\n        return elementDisplay[nodeName]\r\n    }\r\n    /*\r\n     * Display the matched elements.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function show(elm) {\r\n        styler.css(elm, \"display\", \"\");\r\n        if (styler.css(elm, \"display\") == \"none\") {\r\n            styler.css(elm, \"display\", defaultDisplay(elm.nodeName));\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function isInvisible(elm) {\r\n        return styler.css(elm, \"display\") == \"none\" || styler.css(elm, \"opacity\") == 0;\r\n    }\r\n\r\n    /*\r\n     * Hide the matched elements.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function hide(elm) {\r\n        styler.css(elm, \"display\", \"none\");\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Adds the specified class(es) to each element in the set of matched elements.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function addClass(elm, name) {\r\n        if (!name) return this\r\n        var cls = className(elm),\r\n            names;\r\n        if (langx.isString(name)) {\r\n            names = name.split(/\\s+/g);\r\n        } else {\r\n            names = name;\r\n        }\r\n        names.forEach(function(klass) {\r\n            var re = classRE(klass);\r\n            if (!cls.match(re)) {\r\n                cls += (cls ? \" \" : \"\") + klass;\r\n            }\r\n        });\r\n\r\n        className(elm, cls);\r\n\r\n        return this;\r\n    }\r\n\r\n    function getStyles( elem ) {\r\n\r\n        // Support: IE <=11 only, Firefox <=30 (#15098, #14150)\r\n        // IE throws on elements created in popups\r\n        // FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\r\n        var view = elem.ownerDocument.defaultView;\r\n\r\n        if ( !view || !view.opener ) {\r\n            view = window;\r\n        }\r\n\r\n        return view.getComputedStyle( elem);\r\n    }\r\n\r\n\r\n    /*\r\n     * Get the value of a computed style property for the first element in the set of matched elements or set one or more CSS properties for every matched element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} property\r\n     * @param {Any} value\r\n     */\r\n    function css(elm, property, value) {\r\n        if (arguments.length < 3) {\r\n            var computedStyle,\r\n                computedStyle = getStyles(elm)\r\n            if (langx.isString(property)) {\r\n                return elm.style[camelCase(property)] || computedStyle.getPropertyValue(dasherize(property))\r\n            } else if (langx.isArrayLike(property)) {\r\n                var props = {}\r\n                forEach.call(property, function(prop) {\r\n                    props[prop] = (elm.style[camelCase(prop)] || computedStyle.getPropertyValue(dasherize(prop)))\r\n                })\r\n                return props\r\n            }\r\n        }\r\n\r\n        var css = '';\r\n        if (typeof(property) == 'string') {\r\n            if (!value && value !== 0) {\r\n                elm.style.removeProperty(dasherize(property));\r\n            } else {\r\n                css = dasherize(property) + \":\" + maybeAddPx(property, value)\r\n            }\r\n        } else {\r\n            for (key in property) {\r\n                if (property[key] === undefined) {\r\n                    continue;\r\n                }\r\n                if (!property[key] && property[key] !== 0) {\r\n                    elm.style.removeProperty(dasherize(key));\r\n                } else {\r\n                    css += dasherize(key) + ':' + maybeAddPx(key, property[key]) + ';'\r\n                }\r\n            }\r\n        }\r\n\r\n        elm.style.cssText += ';' + css;\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Determine whether any of the matched elements are assigned the given class.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function hasClass(elm, name) {\r\n        var re = classRE(name);\r\n        return elm.className && elm.className.match(re);\r\n    }\r\n\r\n    /*\r\n     * Remove a single class, multiple classes, or all classes from each element in the set of matched elements.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function removeClass(elm, name) {\r\n        if (name) {\r\n            var cls = className(elm),\r\n                names;\r\n\r\n            if (langx.isString(name)) {\r\n                names = name.split(/\\s+/g);\r\n            } else {\r\n                names = name;\r\n            }\r\n\r\n            names.forEach(function(klass) {\r\n                var re = classRE(klass);\r\n                if (cls.match(re)) {\r\n                    cls = cls.replace(re, \" \");\r\n                }\r\n            });\r\n\r\n            className(elm, cls.trim());\r\n        } else {\r\n            className(elm, \"\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Add or remove one or more classes from the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     * @param {} when\r\n     */\r\n    function toggleClass(elm, name, when) {\r\n        var self = this;\r\n        name.split(/\\s+/g).forEach(function(klass) {\r\n            if (when === undefined) {\r\n                when = !self.hasClass(elm, klass);\r\n            }\r\n            if (when) {\r\n                self.addClass(elm, klass);\r\n            } else {\r\n                self.removeClass(elm, klass)\r\n            }\r\n        });\r\n\r\n        return self;\r\n    }\r\n\r\n    var styler = function() {\r\n        return styler;\r\n    };\r\n\r\n    langx.mixin(styler, {\r\n        autocssfix: false,\r\n        cssHooks: {\r\n\r\n        },\r\n\r\n        addClass: addClass,\r\n        className: className,\r\n        css: css,\r\n        disabled : disabled,        \r\n        hasClass: hasClass,\r\n        hide: hide,\r\n        isInvisible: isInvisible,\r\n        removeClass: removeClass,\r\n        show: show,\r\n        toggleClass: toggleClass\r\n    });\r\n\r\n    return dom.styler = styler;\r\n});\ndefine('skylark-utils-dom/noder',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./styler\"\r\n], function(dom, langx, browser, styler) {\r\n    var isIE = !!navigator.userAgent.match(/Trident/g) || !!navigator.userAgent.match(/MSIE/g),\r\n        fragmentRE = /^\\s*<(\\w+|!)[^>]*>/,\r\n        singleTagRE = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\r\n        div = document.createElement(\"div\"),\r\n        table = document.createElement('table'),\r\n        tableBody = document.createElement('tbody'),\r\n        tableRow = document.createElement('tr'),\r\n        containers = {\r\n            'tr': tableBody,\r\n            'tbody': table,\r\n            'thead': table,\r\n            'tfoot': table,\r\n            'td': tableRow,\r\n            'th': tableRow,\r\n            '*': div\r\n        },\r\n        rootNodeRE = /^(?:body|html)$/i,\r\n        map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    function ensureNodes(nodes, copyByClone) {\r\n        if (!langx.isArrayLike(nodes)) {\r\n            nodes = [nodes];\r\n        }\r\n        if (copyByClone) {\r\n            nodes = map.call(nodes, function(node) {\r\n                return node.cloneNode(true);\r\n            });\r\n        }\r\n        return langx.flatten(nodes);\r\n    }\r\n\r\n    function nodeName(elm, chkName) {\r\n        var name = elm.nodeName && elm.nodeName.toLowerCase();\r\n        if (chkName !== undefined) {\r\n            return name === chkName.toLowerCase();\r\n        }\r\n        return name;\r\n    };\r\n\r\n\r\n    function activeElement(doc) {\r\n        doc = doc || document;\r\n        var el;\r\n\r\n        // Support: IE 9 only\r\n        // IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\r\n        try {\r\n            el = doc.activeElement;\r\n        } catch ( error ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        // Support: IE 9 - 11 only\r\n        // IE may return null instead of an element\r\n        // Interestingly, this only seems to occur when NOT in an iframe\r\n        if ( !el ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        // Support: IE 11 only\r\n        // IE11 returns a seemingly empty object in some cases when accessing\r\n        // document.activeElement from an <iframe>\r\n        if ( !el.nodeName ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        return el;\r\n    };\r\n\r\n    function after(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone),\r\n                refNode = refNode.nextSibling;\r\n\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                if (refNode) {\r\n                    parent.insertBefore(nodes[i], refNode);\r\n                } else {\r\n                    parent.appendChild(nodes[i]);\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function append(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            parentNode.appendChild(nodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function before(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone);\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                parent.insertBefore(nodes[i], refNode);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    /*   \r\n     * Get the children of the specified node, including text and comment nodes.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function contents(elm) {\r\n        if (nodeName(elm, \"iframe\")) {\r\n            return elm.contentDocument;\r\n        }\r\n        return elm.childNodes;\r\n    }\r\n\r\n    /*   \r\n     * Create a element and set attributes on it.\r\n     * @param {HTMLElement} tag\r\n     * @param {props} props\r\n     * @param } parent\r\n     */\r\n    function createElement(tag, props, parent) {\r\n        var node = document.createElement(tag);\r\n        if (props) {\r\n            for (var name in props) {\r\n                node.setAttribute(name, props[name]);\r\n            }\r\n        }\r\n        if (parent) {\r\n            append(parent, node);\r\n        }\r\n        return node;\r\n    }\r\n\r\n    /*   \r\n     * Create a DocumentFragment from the HTML fragment.\r\n     * @param {String} html\r\n     */\r\n    function createFragment(html) {\r\n        // A special case optimization for a single tag\r\n        html = langx.trim(html);\r\n        if (singleTagRE.test(html)) {\r\n            return [createElement(RegExp.$1)];\r\n        }\r\n\r\n        var name = fragmentRE.test(html) && RegExp.$1\r\n        if (!(name in containers)) {\r\n            name = \"*\"\r\n        }\r\n        var container = containers[name];\r\n        container.innerHTML = \"\" + html;\r\n        dom = slice.call(container.childNodes);\r\n\r\n        dom.forEach(function(node) {\r\n            container.removeChild(node);\r\n        })\r\n\r\n        return dom;\r\n    }\r\n\r\n    /*   \r\n     * Create a deep copy of the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {Boolean} deep\r\n     */\r\n    function clone(node, deep) {\r\n        var self = this,\r\n            clone;\r\n\r\n        // TODO: Add feature detection here in the future\r\n        if (!isIE || node.nodeType !== 1 || deep) {\r\n            return node.cloneNode(deep);\r\n        }\r\n\r\n        // Make a HTML5 safe shallow copy\r\n        if (!deep) {\r\n            clone = document.createElement(node.nodeName);\r\n\r\n            // Copy attribs\r\n            each(self.getAttribs(node), function(attr) {\r\n                self.setAttrib(clone, attr.nodeName, self.getAttrib(node, attr.nodeName));\r\n            });\r\n\r\n            return clone;\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node .\r\n     * @param {String} node\r\n     * @param {Node} child\r\n     */\r\n    function contains(node, child) {\r\n        return isChildOf(child, node);\r\n    }\r\n\r\n    /*   \r\n     * Create a new Text node.\r\n     * @param {String} text\r\n     * @param {Node} child\r\n     */\r\n    function createTextNode(text) {\r\n        return document.createTextNode(text);\r\n    }\r\n\r\n    /*   \r\n     * Get the current document object.\r\n     */\r\n    function doc() {\r\n        return document;\r\n    }\r\n\r\n    /*   \r\n     * Remove all child nodes of the set of matched elements from the DOM.\r\n     * @param {Object} node\r\n     */\r\n    function empty(node) {\r\n        while (node.hasChildNodes()) {\r\n            var child = node.firstChild;\r\n            node.removeChild(child);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    var fulledEl = null;\r\n\r\n    function fullScreen(el) {\r\n        if (el === false) {\r\n            browser.exitFullScreen.apply(document);\r\n        } else if (el) {\r\n            browser.requestFullScreen.apply(el);\r\n            fulledEl = el;\r\n        } else {\r\n            return (\r\n                document.fullscreenElement ||\r\n                document.webkitFullscreenElement ||\r\n                document.mozFullScreenElement ||\r\n                document.msFullscreenElement\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    // Selectors\r\n    function focusable( element, hasTabindex ) {\r\n        var map, mapName, img, focusableIfVisible, fieldset,\r\n            nodeName = element.nodeName.toLowerCase();\r\n\r\n        if ( \"area\" === nodeName ) {\r\n            map = element.parentNode;\r\n            mapName = map.name;\r\n            if ( !element.href || !mapName || map.nodeName.toLowerCase() !== \"map\" ) {\r\n                return false;\r\n            }\r\n            img = $( \"img[usemap='#\" + mapName + \"']\" );\r\n            return img.length > 0 && img.is( \":visible\" );\r\n        }\r\n\r\n        if ( /^(input|select|textarea|button|object)$/.test( nodeName ) ) {\r\n            focusableIfVisible = !element.disabled;\r\n\r\n            if ( focusableIfVisible ) {\r\n\r\n                // Form controls within a disabled fieldset are disabled.\r\n                // However, controls within the fieldset's legend do not get disabled.\r\n                // Since controls generally aren't placed inside legends, we skip\r\n                // this portion of the check.\r\n                fieldset = $( element ).closest( \"fieldset\" )[ 0 ];\r\n                if ( fieldset ) {\r\n                    focusableIfVisible = !fieldset.disabled;\r\n                }\r\n            }\r\n        } else if ( \"a\" === nodeName ) {\r\n            focusableIfVisible = element.href || hasTabindex;\r\n        } else {\r\n            focusableIfVisible = hasTabindex;\r\n        }\r\n\r\n        return focusableIfVisible && $( element ).is( \":visible\" ) && visible( $( element ) );\r\n    };\r\n\r\n\r\n   var rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/gi;\r\n \r\n    /*   \r\n     * Get the HTML contents of the first element in the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {String} html\r\n     */\r\n    function html(node, html) {\r\n        if (html === undefined) {\r\n            return node.innerHTML;\r\n        } else {\r\n            this.empty(node);\r\n            html = html || \"\";\r\n            if (langx.isString(html)) {\r\n                html = html.replace( rxhtmlTag, \"<$1></$2>\" );\r\n            }\r\n            if (langx.isString(html) || langx.isNumber(html)) {               \r\n                node.innerHTML = html;\r\n            } else if (langx.isArrayLike(html)) {\r\n                for (var i = 0; i < html.length; i++) {\r\n                    node.appendChild(html[i]);\r\n                }\r\n            } else {\r\n                node.appendChild(html);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node.\r\n     * @param {Node} node\r\n     * @param {Node} parent\r\n     * @param {Node} directly\r\n     */\r\n    function isChildOf(node, parent, directly) {\r\n        if (directly) {\r\n            return node.parentNode === parent;\r\n        }\r\n        if (document.documentElement.contains) {\r\n            return parent.contains(node);\r\n        }\r\n        while (node) {\r\n            if (parent === node) {\r\n                return true;\r\n            }\r\n\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is a document.\r\n     * @param {Node} node\r\n     */\r\n    function isDocument(node) {\r\n        return node != null && node.nodeType == node.DOCUMENT_NODE\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is in the document\r\n     * @param {Node} node\r\n     */\r\n    function isInDocument(node) {\r\n      return (node === document.body) ? true : document.body.contains(node);\r\n    }        \r\n\r\n    /*   \r\n     * Get the owner document object for the specified element.\r\n     * @param {Node} elm\r\n     */\r\n    function ownerDoc(elm) {\r\n        if (!elm) {\r\n            return document;\r\n        }\r\n\r\n        if (elm.nodeType == 9) {\r\n            return elm;\r\n        }\r\n\r\n        return elm.ownerDocument;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     */\r\n    function ownerWindow(elm) {\r\n        var doc = ownerDoc(elm);\r\n        return doc.defaultView || doc.parentWindow;\r\n    }\r\n\r\n    /*   \r\n     * insert one or more nodes as the first children of the specified node.\r\n     * @param {Node} node\r\n     * @param {Node or ArrayLike} placing\r\n     * @param {Boolean Optional} copyByClone\r\n     */\r\n    function prepend(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            refNode = parentNode.firstChild,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            if (refNode) {\r\n                parentNode.insertBefore(nodes[i], refNode);\r\n            } else {\r\n                parentNode.appendChild(nodes[i]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     */\r\n    function offsetParent(elm) {\r\n        var parent = elm.offsetParent || document.body;\r\n        while (parent && !rootNodeRE.test(parent.nodeName) && styler.css(parent, \"position\") == \"static\") {\r\n            parent = parent.offsetParent;\r\n        }\r\n        return parent;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     * @param {Node} params\r\n     */\r\n    function overlay(elm, params) {\r\n        var overlayDiv = createElement(\"div\", params);\r\n        styler.css(overlayDiv, {\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            zIndex: 0x7FFFFFFF,\r\n            opacity: 0.7\r\n        });\r\n        elm.appendChild(overlayDiv);\r\n        return overlayDiv;\r\n\r\n    }\r\n\r\n    /*   \r\n     * Remove the set of matched elements from the DOM.\r\n     * @param {Node} node\r\n     */\r\n    function remove(node) {\r\n        if (node && node.parentNode) {\r\n            try {\r\n                node.parentNode.removeChild(node);\r\n            } catch (e) {\r\n                console.warn(\"The node is already removed\", e);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function removeChild(node,children) {\r\n        if (!langx.isArrayLike(children)) {\r\n            children = [children];\r\n        }\r\n        for (var i=0;i<children.length;i++) {\r\n            node.removeChild(children[i]);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function scrollParent( elm, includeHidden ) {\r\n        var position = styler.css(elm,\"position\" ),\r\n            excludeStaticParent = position === \"absolute\",\r\n            overflowRegex = includeHidden ? /(auto|scroll|hidden)/ : /(auto|scroll)/,\r\n            scrollParent = this.parents().filter( function() {\r\n                var parent = $( this );\r\n                if ( excludeStaticParent && parent.css( \"position\" ) === \"static\" ) {\r\n                    return false;\r\n                }\r\n                return overflowRegex.test( parent.css( \"overflow\" ) + parent.css( \"overflow-y\" ) +\r\n                    parent.css( \"overflow-x\" ) );\r\n            } ).eq( 0 );\r\n\r\n        return position === \"fixed\" || !scrollParent.length ?\r\n            $( this[ 0 ].ownerDocument || document ) :\r\n            scrollParent;\r\n    };\r\n\r\n        /*   \r\n     * Replace an old node with the specified node.\r\n     * @param {Node} node\r\n     * @param {Node} oldNode\r\n     */\r\n    function replace(node, oldNode) {\r\n        oldNode.parentNode.replaceChild(node, oldNode);\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Replace an old node with the specified node.\r\n     * @param {HTMLElement} elm\r\n     * @param {Node} params\r\n     */\r\n    function throb(elm, params) {\r\n        params = params || {};\r\n        var self = this,\r\n            text = params.text,\r\n            style = params.style,\r\n            time = params.time,\r\n            callback = params.callback,\r\n            timer,\r\n            throbber = this.createElement(\"div\", {\r\n                className: params.className || \"throbber\",\r\n                style: style\r\n            }),\r\n            _overlay = overlay(throbber, {\r\n                className: 'overlay fade'\r\n            }),\r\n            throb = this.createElement(\"div\", {\r\n                className: \"throb\"\r\n            }),\r\n            textNode = this.createTextNode(text || \"\"),\r\n            remove = function() {\r\n                if (timer) {\r\n                    clearTimeout(timer);\r\n                    timer = null;\r\n                }\r\n                if (throbber) {\r\n                    self.remove(throbber);\r\n                    throbber = null;\r\n                }\r\n            },\r\n            update = function(params) {\r\n                if (params && params.text && throbber) {\r\n                    textNode.nodeValue = params.text;\r\n                }\r\n            };\r\n        throb.appendChild(textNode);\r\n        throbber.appendChild(throb);\r\n        elm.appendChild(throbber);\r\n        var end = function() {\r\n            remove();\r\n            if (callback) callback();\r\n        };\r\n        if (time) {\r\n            timer = setTimeout(end, time);\r\n        }\r\n\r\n        return {\r\n            remove: remove,\r\n            update: update\r\n        };\r\n    }\r\n\r\n\r\n    /*   \r\n     * traverse the specified node and its descendants, perform the callback function on each\r\n     * @param {Node} node\r\n     * @param {Function} fn\r\n     */\r\n    function traverse(node, fn) {\r\n        fn(node)\r\n        for (var i = 0, len = node.childNodes.length; i < len; i++) {\r\n            traverse(node.childNodes[i], fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} node\r\n     */\r\n    function reverse(node) {\r\n        var firstChild = node.firstChild;\r\n        for (var i = node.children.length - 1; i > 0; i--) {\r\n            if (i > 0) {\r\n                var child = node.children[i];\r\n                node.insertBefore(child, firstChild);\r\n            }\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Wrap an HTML structure around each element in the set of matched elements.\r\n     * @param {Node} node\r\n     * @param {Node} wrapperNode\r\n     */\r\n    function wrapper(node, wrapperNode) {\r\n        if (langx.isString(wrapperNode)) {\r\n            wrapperNode = this.createFragment(wrapperNode).firstChild;\r\n        }\r\n        node.parentNode.insertBefore(wrapperNode, node);\r\n        wrapperNode.appendChild(node);\r\n    }\r\n\r\n    /*   \r\n     * Wrap an HTML structure around the content of each element in the set of matched\r\n     * @param {Node} node\r\n     * @param {Node} wrapperNode\r\n     */\r\n    function wrapperInner(node, wrapperNode) {\r\n        var childNodes = slice.call(node.childNodes);\r\n        node.appendChild(wrapperNode);\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            wrapperNode.appendChild(childNodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Remove the parents of the set of matched elements from the DOM, leaving the matched\r\n     * @param {Node} node\r\n     */\r\n    function unwrap(node) {\r\n        var child, parent = node.parentNode;\r\n        if (parent) {\r\n            if (this.isDoc(parent.parentNode)) return;\r\n            parent.parentNode.insertBefore(node, parent);\r\n        }\r\n    }\r\n\r\n    function noder() {\r\n        return noder;\r\n    }\r\n\r\n    langx.mixin(noder, {\r\n        active  : activeElement,\r\n\r\n        blur : function(el) {\r\n            el.blur();\r\n        },\r\n\r\n        body: function() {\r\n            return document.body;\r\n        },\r\n\r\n        clone: clone,\r\n        contents: contents,\r\n\r\n        createElement: createElement,\r\n\r\n        createFragment: createFragment,\r\n\r\n        contains: contains,\r\n\r\n        createTextNode: createTextNode,\r\n\r\n        doc: doc,\r\n\r\n        empty: empty,\r\n\r\n        fullScreen: fullScreen,\r\n\r\n        focusable: focusable,\r\n\r\n        html: html,\r\n\r\n        isChildOf: isChildOf,\r\n\r\n        isDocument: isDocument,\r\n\r\n        isInDocument: isInDocument,\r\n\r\n        isWindow: langx.isWindow,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        ownerDoc: ownerDoc,\r\n\r\n        ownerWindow: ownerWindow,\r\n\r\n        after: after,\r\n\r\n        before: before,\r\n\r\n        prepend: prepend,\r\n\r\n        append: append,\r\n\r\n        remove: remove,\r\n\r\n        removeChild : removeChild,\r\n\r\n        replace: replace,\r\n\r\n        throb: throb,\r\n\r\n        traverse: traverse,\r\n\r\n        reverse: reverse,\r\n\r\n        wrapper: wrapper,\r\n\r\n        wrapperInner: wrapperInner,\r\n\r\n        unwrap: unwrap\r\n    });\r\n\r\n    return dom.noder = noder;\r\n});\ndefine('skylark-utils-dom/finder',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./noder\"\r\n], function(dom, langx, browser, noder, velm) {\r\n    var local = {},\r\n        filter = Array.prototype.filter,\r\n        slice = Array.prototype.slice,\r\n        nativeMatchesSelector = browser.matchesSelector;\r\n\r\n    /*\r\n    ---\r\n    name: Slick.Parser\r\n    description: Standalone CSS3 Selector parser\r\n    provides: Slick.Parser\r\n    ...\r\n    */\r\n    ;\r\n    (function() {\r\n\r\n        var parsed,\r\n            separatorIndex,\r\n            combinatorIndex,\r\n            reversed,\r\n            cache = {},\r\n            reverseCache = {},\r\n            reUnescape = /\\\\/g;\r\n\r\n        var parse = function(expression, isReversed) {\r\n            if (expression == null) return null;\r\n            if (expression.Slick === true) return expression;\r\n            expression = ('' + expression).replace(/^\\s+|\\s+$/g, '');\r\n            reversed = !!isReversed;\r\n            var currentCache = (reversed) ? reverseCache : cache;\r\n            if (currentCache[expression]) return currentCache[expression];\r\n            parsed = {\r\n                Slick: true,\r\n                expressions: [],\r\n                raw: expression,\r\n                reverse: function() {\r\n                    return parse(this.raw, true);\r\n                }\r\n            };\r\n            separatorIndex = -1;\r\n            while (expression != (expression = expression.replace(regexp, parser)));\r\n            parsed.length = parsed.expressions.length;\r\n            return currentCache[parsed.raw] = (reversed) ? reverse(parsed) : parsed;\r\n        };\r\n\r\n        var reverseCombinator = function(combinator) {\r\n            if (combinator === '!') return ' ';\r\n            else if (combinator === ' ') return '!';\r\n            else if ((/^!/).test(combinator)) return combinator.replace(/^!/, '');\r\n            else return '!' + combinator;\r\n        };\r\n\r\n        var reverse = function(expression) {\r\n            var expressions = expression.expressions;\r\n            for (var i = 0; i < expressions.length; i++) {\r\n                var exp = expressions[i];\r\n                var last = {\r\n                    parts: [],\r\n                    tag: '*',\r\n                    combinator: reverseCombinator(exp[0].combinator)\r\n                };\r\n\r\n                for (var j = 0; j < exp.length; j++) {\r\n                    var cexp = exp[j];\r\n                    if (!cexp.reverseCombinator) cexp.reverseCombinator = ' ';\r\n                    cexp.combinator = cexp.reverseCombinator;\r\n                    delete cexp.reverseCombinator;\r\n                }\r\n\r\n                exp.reverse().push(last);\r\n            }\r\n            return expression;\r\n        };\r\n\r\n        var escapeRegExp = (function() {\r\n            // Credit: XRegExp 0.6.1 (c) 2007-2008 Steven Levithan <http://stevenlevithan.com/regex/xregexp/> MIT License\r\n            var from = /(?=[\\-\\[\\]{}()*+?.\\\\\\^$|,#\\s])/g,\r\n                to = '\\\\';\r\n            return function(string) {\r\n                return string.replace(from, to)\r\n            }\r\n        }())\r\n\r\n        var regexp = new RegExp(\r\n            \"^(?:\\\\s*(,)\\\\s*|\\\\s*(<combinator>+)\\\\s*|(\\\\s+)|(<unicode>+|\\\\*)|\\\\#(<unicode>+)|\\\\.(<unicode>+)|\\\\[\\\\s*(<unicode1>+)(?:\\\\s*([*^$!~|]?=)(?:\\\\s*(?:([\\\"']?)(.*?)\\\\9)))?\\\\s*\\\\](?!\\\\])|(:+)(<unicode>+)(?:\\\\((?:(?:([\\\"'])([^\\\\13]*)\\\\13)|((?:\\\\([^)]+\\\\)|[^()]*)+))\\\\))?)\"\r\n            .replace(/<combinator>/, '[' + escapeRegExp(\">+~`!@$%^&={}\\\\;</\") + ']')\r\n            .replace(/<unicode>/g, '(?:[\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n            .replace(/<unicode1>/g, '(?:[:\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n        );\r\n\r\n        function parser(\r\n            rawMatch,\r\n\r\n            separator,\r\n            combinator,\r\n            combinatorChildren,\r\n\r\n            tagName,\r\n            id,\r\n            className,\r\n\r\n            attributeKey,\r\n            attributeOperator,\r\n            attributeQuote,\r\n            attributeValue,\r\n\r\n            pseudoMarker,\r\n            pseudoClass,\r\n            pseudoQuote,\r\n            pseudoClassQuotedValue,\r\n            pseudoClassValue\r\n        ) {\r\n            if (separator || separatorIndex === -1) {\r\n                parsed.expressions[++separatorIndex] = [];\r\n                combinatorIndex = -1;\r\n                if (separator) return '';\r\n            }\r\n\r\n            if (combinator || combinatorChildren || combinatorIndex === -1) {\r\n                combinator = combinator || ' ';\r\n                var currentSeparator = parsed.expressions[separatorIndex];\r\n                if (reversed && currentSeparator[combinatorIndex])\r\n                    currentSeparator[combinatorIndex].reverseCombinator = reverseCombinator(combinator);\r\n                currentSeparator[++combinatorIndex] = {\r\n                    combinator: combinator,\r\n                    tag: '*'\r\n                };\r\n            }\r\n\r\n            var currentParsed = parsed.expressions[separatorIndex][combinatorIndex];\r\n\r\n            if (tagName) {\r\n                currentParsed.tag = tagName.replace(reUnescape, '');\r\n\r\n            } else if (id) {\r\n                currentParsed.id = id.replace(reUnescape, '');\r\n\r\n            } else if (className) {\r\n                className = className.replace(reUnescape, '');\r\n\r\n                if (!currentParsed.classList) currentParsed.classList = [];\r\n                if (!currentParsed.classes) currentParsed.classes = [];\r\n                currentParsed.classList.push(className);\r\n                currentParsed.classes.push({\r\n                    value: className,\r\n                    regexp: new RegExp('(^|\\\\s)' + escapeRegExp(className) + '(\\\\s|$)')\r\n                });\r\n\r\n            } else if (pseudoClass) {\r\n                pseudoClassValue = pseudoClassValue || pseudoClassQuotedValue;\r\n                pseudoClassValue = pseudoClassValue ? pseudoClassValue.replace(reUnescape, '') : null;\r\n\r\n                if (!currentParsed.pseudos) currentParsed.pseudos = [];\r\n                currentParsed.pseudos.push({\r\n                    key: pseudoClass.replace(reUnescape, ''),\r\n                    value: pseudoClassValue,\r\n                    type: pseudoMarker.length == 1 ? 'class' : 'element'\r\n                });\r\n\r\n            } else if (attributeKey) {\r\n                attributeKey = attributeKey.replace(reUnescape, '');\r\n                attributeValue = (attributeValue || '').replace(reUnescape, '');\r\n\r\n                var test, regexp;\r\n\r\n                switch (attributeOperator) {\r\n                    case '^=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue));\r\n                        break;\r\n                    case '$=':\r\n                        regexp = new RegExp(escapeRegExp(attributeValue) + '$');\r\n                        break;\r\n                    case '~=':\r\n                        regexp = new RegExp('(^|\\\\s)' + escapeRegExp(attributeValue) + '(\\\\s|$)');\r\n                        break;\r\n                    case '|=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue) + '(-|$)');\r\n                        break;\r\n                    case '=':\r\n                        test = function(value) {\r\n                            return attributeValue == value;\r\n                        };\r\n                        break;\r\n                    case '*=':\r\n                        test = function(value) {\r\n                            return value && value.indexOf(attributeValue) > -1;\r\n                        };\r\n                        break;\r\n                    case '!=':\r\n                        test = function(value) {\r\n                            return attributeValue != value;\r\n                        };\r\n                        break;\r\n                    default:\r\n                        test = function(value) {\r\n                            return !!value;\r\n                        };\r\n                }\r\n\r\n                if (attributeValue == '' && (/^[*$^]=$/).test(attributeOperator)) test = function() {\r\n                    return false;\r\n                };\r\n\r\n                if (!test) test = function(value) {\r\n                    return value && regexp.test(value);\r\n                };\r\n\r\n                if (!currentParsed.attributes) currentParsed.attributes = [];\r\n                currentParsed.attributes.push({\r\n                    key: attributeKey,\r\n                    operator: attributeOperator,\r\n                    value: attributeValue,\r\n                    test: test\r\n                });\r\n\r\n            }\r\n\r\n            return '';\r\n        };\r\n\r\n        // Slick NS\r\n\r\n        var Slick = (this.Slick || {});\r\n\r\n        Slick.parse = function(expression) {\r\n            return parse(expression);\r\n        };\r\n\r\n        Slick.escapeRegExp = escapeRegExp;\r\n\r\n        if (!this.Slick) this.Slick = Slick;\r\n\r\n    }).apply(local);\r\n\r\n\r\n    var simpleClassSelectorRE = /^\\.([\\w-]*)$/,\r\n        simpleIdSelectorRE = /^#([\\w-]*)$/,\r\n        rinputs = /^(?:input|select|textarea|button)$/i,\r\n        rheader = /^h\\d$/i,\r\n        slice = Array.prototype.slice;\r\n\r\n\r\n    local.parseSelector = local.Slick.parse;\r\n\r\n\r\n    var pseudos = local.pseudos = {\r\n        // custom pseudos\r\n        \"button\": function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === \"button\" || name === \"button\";\r\n        },\r\n\r\n        'checked': function(elm) {\r\n            return !!elm.checked;\r\n        },\r\n\r\n        'contains': function(elm, idx, nodes, text) {\r\n            if ($(this).text().indexOf(text) > -1) return this\r\n        },\r\n\r\n        'disabled': function(elm) {\r\n            return !!elm.disabled;\r\n        },\r\n\r\n        'enabled': function(elm) {\r\n            return !elm.disabled;\r\n        },\r\n\r\n        'eq': function(elm, idx, nodes, value) {\r\n            return (idx == value);\r\n        },\r\n\r\n        'even': function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 0;\r\n        },\r\n\r\n        'focus': function(elm) {\r\n            return document.activeElement === elm && (elm.href || elm.type || elm.tabindex);\r\n        },\r\n\r\n        'focusable': function( elm ) {\r\n            return noder.focusable(elm, elm.tabindex != null );\r\n        },\r\n\r\n        'first': function(elm, idx) {\r\n            return (idx === 0);\r\n        },\r\n\r\n        'gt': function(elm, idx, nodes, value) {\r\n            return (idx > value);\r\n        },\r\n\r\n        'has': function(elm, idx, nodes, sel) {\r\n            return find(elm, sel);\r\n        },\r\n\r\n        // Element/input types\r\n        \"header\": function(elem) {\r\n            return rheader.test(elem.nodeName);\r\n        },\r\n\r\n        'hidden': function(elm) {\r\n            return !local.pseudos[\"visible\"](elm);\r\n        },\r\n\r\n        \"input\": function(elem) {\r\n            return rinputs.test(elem.nodeName);\r\n        },\r\n\r\n        'last': function(elm, idx, nodes) {\r\n            return (idx === nodes.length - 1);\r\n        },\r\n\r\n        'lt': function(elm, idx, nodes, value) {\r\n            return (idx < value);\r\n        },\r\n\r\n        'not': function(elm, idx, nodes, sel) {\r\n            return !matches(elm, sel);\r\n        },\r\n\r\n        'odd': function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 1;\r\n        },\r\n\r\n        /*   \r\n         * Get the parent of each element in the current set of matched elements.\r\n         * @param {Object} elm\r\n         */\r\n        'parent': function(elm) {\r\n            return !!elm.parentNode;\r\n        },\r\n\r\n        'selected': function(elm) {\r\n            return !!elm.selected;\r\n        },\r\n\r\n        'tabbable': function(elm) {\r\n            var tabIndex = elm.tabindex,\r\n                hasTabindex = tabIndex != null;\r\n            return ( !hasTabindex || tabIndex >= 0 ) && noder.focusable( element, hasTabindex );\r\n        },\r\n\r\n        'text': function(elm) {\r\n            return elm.type === \"text\";\r\n        },\r\n\r\n        'visible': function(elm) {\r\n            return elm.offsetWidth && elm.offsetWidth\r\n        }\r\n    };\r\n\r\n    [\"first\", \"eq\", \"last\"].forEach(function(item) {\r\n        pseudos[item].isArrayFilter = true;\r\n    });\r\n\r\n\r\n\r\n    pseudos[\"nth\"] = pseudos[\"eq\"];\r\n\r\n    function createInputPseudo(type) {\r\n        return function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === type;\r\n        };\r\n    }\r\n\r\n    function createButtonPseudo(type) {\r\n        return function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return (name === \"input\" || name === \"button\") && elem.type === type;\r\n        };\r\n    }\r\n\r\n    // Add button/input type pseudos\r\n    for (i in {\r\n        radio: true,\r\n        checkbox: true,\r\n        file: true,\r\n        password: true,\r\n        image: true\r\n    }) {\r\n        pseudos[i] = createInputPseudo(i);\r\n    }\r\n    for (i in {\r\n        submit: true,\r\n        reset: true\r\n    }) {\r\n        pseudos[i] = createButtonPseudo(i);\r\n    }\r\n\r\n\r\n    local.divide = function(cond) {\r\n        var nativeSelector = \"\",\r\n            customPseudos = [],\r\n            tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos;\r\n\r\n\r\n        if (id = cond.id) {\r\n            nativeSelector += (\"#\" + id);\r\n        }\r\n        if (classes = cond.classes) {\r\n            for (var i = classes.length; i--;) {\r\n                nativeSelector += (\".\" + classes[i].value);\r\n            }\r\n        }\r\n        if (attributes = cond.attributes) {\r\n            for (var i = 0; i < attributes.length; i++) {\r\n                if (attributes[i].operator) {\r\n                    nativeSelector += (\"[\" + attributes[i].key + attributes[i].operator + JSON.stringify(attributes[i].value) + \"]\");\r\n                } else {\r\n                    nativeSelector += (\"[\" + attributes[i].key + \"]\");\r\n                }\r\n            }\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (this.pseudos[part.key]) {\r\n                    customPseudos.push(part);\r\n                } else {\r\n                    if (part.value !== undefined) {\r\n                        nativeSelector += (\":\" + part.key + \"(\" + JSON.stringify(part))\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (tag = cond.tag) {\r\n            if (tag !== \"*\") {\r\n                nativeSelector = tag.toUpperCase() + nativeSelector;\r\n            }\r\n        }\r\n\r\n        if (!nativeSelector) {\r\n            nativeSelector = \"*\";\r\n        }\r\n\r\n        return {\r\n            nativeSelector: nativeSelector,\r\n            customPseudos: customPseudos\r\n        }\r\n\r\n    };\r\n\r\n    local.check = function(node, cond, idx, nodes, arrayFilte) {\r\n        var tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos,\r\n\r\n            i, part, cls, pseudo;\r\n\r\n        if (!arrayFilte) {\r\n            if (tag = cond.tag) {\r\n                var nodeName = node.nodeName.toUpperCase();\r\n                if (tag == '*') {\r\n                    if (nodeName < '@') return false; // Fix for comment nodes and closed nodes\r\n                } else {\r\n                    if (nodeName != (tag || \"\").toUpperCase()) return false;\r\n                }\r\n            }\r\n\r\n            if (id = cond.id) {\r\n                if (node.getAttribute('id') != id) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n\r\n            if (classes = cond.classes) {\r\n                for (i = classes.length; i--;) {\r\n                    cls = node.getAttribute('class');\r\n                    if (!(cls && classes[i].regexp.test(cls))) return false;\r\n                }\r\n            }\r\n\r\n            if (attributes = cond.attributes) {\r\n                for (i = attributes.length; i--;) {\r\n                    part = attributes[i];\r\n                    if (part.operator ? !part.test(node.getAttribute(part.key)) : !node.hasAttribute(part.key)) return false;\r\n                }\r\n            }\r\n\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (pseudo = this.pseudos[part.key]) {\r\n                    if ((arrayFilte && pseudo.isArrayFilter) || (!arrayFilte && !pseudo.isArrayFilter)) {\r\n                        if (!pseudo(node, idx, nodes, part.value)) {\r\n                            return false;\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (!arrayFilte && !nativeMatchesSelector.call(node, part.key)) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    local.match = function(node, selector) {\r\n\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            parsed = selector;\r\n        }\r\n\r\n        if (!parsed) {\r\n            return true;\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            simpleExpCounter = 0,\r\n            i,\r\n            currentExpression;\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n                if (this.check(node, exp)) {\r\n                    return true;\r\n                }\r\n                simpleExpCounter++;\r\n            }\r\n        }\r\n\r\n        if (simpleExpCounter == parsed.length) {\r\n            return false;\r\n        }\r\n\r\n        var nodes = this.query(document, parsed),\r\n            item;\r\n        for (i = 0; item = nodes[i++];) {\r\n            if (item === node) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n\r\n    local.filterSingle = function(nodes, exp) {\r\n        var matchs = filter.call(nodes, function(node, idx) {\r\n            return local.check(node, exp, idx, nodes, false);\r\n        });\r\n\r\n        matchs = filter.call(matchs, function(node, idx) {\r\n            return local.check(node, exp, idx, matchs, true);\r\n        });\r\n        return matchs;\r\n    };\r\n\r\n    local.filter = function(nodes, selector) {\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            return local.filterSingle(nodes, selector);\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            i,\r\n            currentExpression,\r\n            ret = [];\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n\r\n                var matchs = local.filterSingle(nodes, exp);\r\n\r\n                ret = langx.uniq(ret.concat(matchs));\r\n            } else {\r\n                throw new Error(\"not supported selector:\" + selector);\r\n            }\r\n        }\r\n\r\n        return ret;\r\n\r\n    };\r\n\r\n    local.combine = function(elm, bit) {\r\n        var op = bit.combinator,\r\n            cond = bit,\r\n            node1,\r\n            nodes = [];\r\n\r\n        switch (op) {\r\n            case '>': // direct children\r\n                nodes = children(elm, cond);\r\n                break;\r\n            case '+': // next sibling\r\n                node1 = nextSibling(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '^': // first child\r\n                node1 = firstChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '~': // next siblings\r\n                nodes = nextSiblings(elm, cond);\r\n                break;\r\n            case '++': // next sibling and previous sibling\r\n                var prev = previousSibling(elm, cond, true),\r\n                    next = nextSibling(elm, cond, true);\r\n                if (prev) {\r\n                    nodes.push(prev);\r\n                }\r\n                if (next) {\r\n                    nodes.push(next);\r\n                }\r\n                break;\r\n            case '~~': // next siblings and previous siblings\r\n                nodes = siblings(elm, cond);\r\n                break;\r\n            case '!': // all parent nodes up to document\r\n                nodes = ancestors(elm, cond);\r\n                break;\r\n            case '!>': // direct parent (one level)\r\n                node1 = parent(elm, cond);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!+': // previous sibling\r\n                nodes = previousSibling(elm, cond, true);\r\n                break;\r\n            case '!^': // last child\r\n                node1 = lastChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!~': // previous siblings\r\n                nodes = previousSiblings(elm, cond);\r\n                break;\r\n            default:\r\n                var divided = this.divide(bit);\r\n                nodes = slice.call(elm.querySelectorAll(divided.nativeSelector));\r\n                if (divided.customPseudos) {\r\n                    for (var i = divided.customPseudos.length - 1; i >= 0; i--) {\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes, false)\r\n                        });\r\n\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes, true)\r\n                        });\r\n                    }\r\n                }\r\n                break;\r\n\r\n        }\r\n        return nodes;\r\n    }\r\n\r\n    local.query = function(node, selector, single) {\r\n\r\n\r\n        var parsed = this.Slick.parse(selector);\r\n\r\n        var\r\n            founds = [],\r\n            currentExpression, currentBit,\r\n            expressions = parsed.expressions;\r\n\r\n        for (var i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            var currentItems = [node],\r\n                found;\r\n            for (var j = 0;\r\n                (currentBit = currentExpression[j]); j++) {\r\n                found = langx.map(currentItems, function(item, i) {\r\n                    return local.combine(item, currentBit)\r\n                });\r\n                if (found) {\r\n                    currentItems = found;\r\n                }\r\n            }\r\n            if (found) {\r\n                founds = founds.concat(found);\r\n            }\r\n        }\r\n\r\n        return founds;\r\n    }\r\n\r\n    /*\r\n     * Get the nearest ancestor of the specified element,optional matched by a selector.\r\n     * @param {HTMLElement} node\r\n     * @param {String Optional } selector\r\n     * @param {Object} root\r\n     */\r\n    function ancestor(node, selector, root) {\r\n        var rootIsSelector = root && langx.isString(root);\r\n        while (node = node.parentNode) {\r\n            if (matches(node, selector)) {\r\n                return node;\r\n            }\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node, root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the ancestors of the specitied element , optionally filtered by a selector.\r\n     * @param {HTMLElement} node\r\n     * @param {String Optional } selector\r\n     * @param {Object} root\r\n     */\r\n    function ancestors(node, selector, root) {\r\n        var ret = [],\r\n            rootIsSelector = root && langx.isString(root);\r\n        while ((node = node.parentNode) && (node.nodeType !== 9)) {\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node, root)) {\r\n                        break;\r\n                    }\r\n                } else if (langx.isArrayLike(root)) {\r\n                    if (langx.inArray(node,root)>-1) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            }\r\n            ret.push(node); // TODO\r\n        }\r\n\r\n        if (selector) {\r\n            ret = local.filter(ret, selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Returns a element by its ID.\r\n     * @param {string} id\r\n     */\r\n    function byId(id, doc) {\r\n        doc = doc || noder.doc();\r\n        return doc.getElementById(id);\r\n    }\r\n\r\n    /*\r\n     * Get the children of the specified element , optionally filtered by a selector.\r\n     * @param {string} node\r\n     * @param {String optionlly} selector\r\n     */\r\n    function children(node, selector) {\r\n        var childNodes = node.childNodes,\r\n            ret = [];\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            var node = childNodes[i];\r\n            if (node.nodeType == 1) {\r\n                ret.push(node);\r\n            }\r\n        }\r\n        if (selector) {\r\n            ret = local.filter(ret, selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function closest(node, selector) {\r\n        while (node && !(matches(node, selector))) {\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    /*\r\n     * Get the decendant of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function descendants(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return slice.call(elm.querySelectorAll(selector));\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        return local.query(elm, selector);\r\n    }\r\n\r\n    /*\r\n     * Get the nearest decendent of the specified element,optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function descendant(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return elm.querySelector(selector);\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        var nodes = local.query(elm, selector);\r\n        if (nodes.length > 0) {\r\n            return nodes[0];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the descendants of each element in the current set of matched elements, filtered by a selector, jQuery object, or element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function find(elm, selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        if (matches(elm, selector)) {\r\n            return elm;\r\n        } else {\r\n            return descendant(elm, selector);\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the findAll of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function findAll(elm, selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        return descendants(elm, selector);\r\n    }\r\n\r\n    /*\r\n     * Get the first child of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {String} first\r\n     */\r\n    function firstChild(elm, selector, first) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[0];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (first) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the last child of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {String } last\r\n     */\r\n    function lastChild(elm, selector, last) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[childNodes.length - 1];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (last) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Check the specified element against a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function matches(elm, selector) {\r\n        if (!selector || !elm || elm.nodeType !== 1) {\r\n            return false\r\n        }\r\n\r\n        if (langx.isString(selector)) {\r\n            try {\r\n                return nativeMatchesSelector.call(elm, selector.replace(/\\[([^=]+)=\\s*([^'\"\\]]+?)\\s*\\]/g, '[$1=\"$2\"]'));\r\n            } catch (matchError) {\r\n                //console.log(matchError);\r\n            }\r\n            return local.match(elm, selector);\r\n        } else if (langx.isArrayLike(selector)) {\r\n            return langx.inArray(elm, selector) > -1;\r\n        } else if (langx.isPlainObject(selector)) {\r\n            return local.check(elm, selector);\r\n        } else {\r\n            return elm === selector;\r\n        }\r\n\r\n    }\r\n\r\n    /*\r\n     * Get the nearest next sibing of the specitied element , optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {Boolean Optional} adjacent\r\n     */\r\n    function nextSibling(elm, selector, adjacent) {\r\n        var node = elm.nextSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the next siblings of the specified element , optional filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function nextSiblings(elm, selector) {\r\n        var node = elm.nextSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Get the parent element of the specified element. if a selector is provided, it retrieves the parent element only if it matches that selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function parent(elm, selector) {\r\n        var node = elm.parentNode;\r\n        if (node && (!selector || matches(node, selector))) {\r\n            return node;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get hte nearest previous sibling of the specified element ,optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {Boolean Optional } adjacent\r\n     */\r\n    function previousSibling(elm, selector, adjacent) {\r\n        var node = elm.previousSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get all preceding siblings of each element in the set of matched elements, optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function previousSiblings(elm, selector) {\r\n        var node = elm.previousSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Selects all sibling elements that follow after the “prev” element, have the same parent, and match the filtering “siblings” selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function siblings(elm, selector) {\r\n        var node = elm.parentNode.firstChild,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1 && node !== elm) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    var finder = function() {\r\n        return finder;\r\n    };\r\n\r\n    langx.mixin(finder, {\r\n\r\n        ancestor: ancestor,\r\n\r\n        ancestors: ancestors,\r\n\r\n        byId: byId,\r\n\r\n        children: children,\r\n\r\n        closest: closest,\r\n\r\n        descendant: descendant,\r\n\r\n        descendants: descendants,\r\n\r\n        find: find,\r\n\r\n        findAll: findAll,\r\n\r\n        firstChild: firstChild,\r\n\r\n        lastChild: lastChild,\r\n\r\n        matches: matches,\r\n\r\n        nextSibling: nextSibling,\r\n\r\n        nextSiblings: nextSiblings,\r\n\r\n        parent: parent,\r\n\r\n        previousSibling,\r\n\r\n        previousSiblings,\r\n\r\n        pseudos: local.pseudos,\r\n\r\n        siblings: siblings\r\n    });\r\n\r\n    return dom.finder = finder;\r\n});\ndefine('skylark-utils-dom/datax',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./finder\"\r\n], function(dom, langx, finder) {\r\n    var map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        camelCase = langx.camelCase,\r\n        deserializeValue = langx.deserializeValue,\r\n\r\n        capitalRE = /([A-Z])/g,\r\n        propMap = {\r\n            'tabindex': 'tabIndex',\r\n            'readonly': 'readOnly',\r\n            'for': 'htmlFor',\r\n            'class': 'className',\r\n            'maxlength': 'maxLength',\r\n            'cellspacing': 'cellSpacing',\r\n            'cellpadding': 'cellPadding',\r\n            'rowspan': 'rowSpan',\r\n            'colspan': 'colSpan',\r\n            'usemap': 'useMap',\r\n            'frameborder': 'frameBorder',\r\n            'contenteditable': 'contentEditable'\r\n        };\r\n    /*\r\n     * Set property values\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n\r\n    function setAttribute(elm, name, value) {\r\n        if (value == null) {\r\n            elm.removeAttribute(name);\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n        }\r\n    }\r\n\r\n    function aria(elm, name, value) {\r\n        return this.attr(elm, \"aria-\" + name, value);\r\n    }\r\n\r\n    /*\r\n     * Set property values\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n\r\n    function attr(elm, name, value) {\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var attrName in name) {\r\n                    attr(elm, attrName, name[attrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                if (elm.hasAttribute && elm.hasAttribute(name)) {\r\n                    return elm.getAttribute(name);\r\n                }\r\n            }\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n            return this;\r\n        }\r\n    }\r\n\r\n\r\n    /*\r\n     *  Read all \"data-*\" attributes from a node\r\n     * @param {Object} elm  \r\n     */\r\n\r\n    function _attributeData(elm) {\r\n        var store = {}\r\n        langx.each(elm.attributes || [], function(i, attr) {\r\n            if (attr.name.indexOf('data-') == 0) {\r\n                store[camelCase(attr.name.replace('data-', ''))] = deserializeValue(attr.value);\r\n            }\r\n        })\r\n        return store;\r\n    }\r\n\r\n    function _store(elm, confirm) {\r\n        var store = elm[\"_$_store\"];\r\n        if (!store && confirm) {\r\n            store = elm[\"_$_store\"] = _attributeData(elm);\r\n        }\r\n        return store;\r\n    }\r\n\r\n    function _getData(elm, name) {\r\n        if (name === undefined) {\r\n            return _store(elm, true);\r\n        } else {\r\n            var store = _store(elm);\r\n            if (store) {\r\n                if (name in store) {\r\n                    return store[name];\r\n                }\r\n                var camelName = camelCase(name);\r\n                if (camelName in store) {\r\n                    return store[camelName];\r\n                }\r\n            }\r\n            var attrName = 'data-' + name.replace(capitalRE, \"-$1\").toLowerCase()\r\n            return attr(elm, attrName);\r\n        }\r\n\r\n    }\r\n\r\n    function _setData(elm, name, value) {\r\n        var store = _store(elm, true);\r\n        store[camelCase(name)] = value;\r\n    }\r\n\r\n\r\n    /*\r\n     * xxx\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n    function data(elm, name, value) {\r\n\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var dataAttrName in name) {\r\n                    _setData(elm, dataAttrName, name[dataAttrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                return _getData(elm, name);\r\n            }\r\n        } else {\r\n            _setData(elm, name, value);\r\n            return this;\r\n        }\r\n    } \r\n    /*\r\n     * Remove from the element all items that have not yet been run. \r\n     * @param {Object} elm  \r\n     */\r\n\r\n    function cleanData(elm) {\r\n        if (elm[\"_$_store\"]) {\r\n            delete elm[\"_$_store\"];\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Remove a previously-stored piece of data. \r\n     * @param {Object} elm  \r\n     * @param {Array} names\r\n     */\r\n    function removeData(elm, names) {\r\n        if (names) {\r\n            if (langx.isString(names)) {\r\n                names = names.split(/\\s+/);\r\n            }\r\n            var store = _store(elm, true);\r\n            names.forEach(function(name) {\r\n                delete store[name];\r\n            });            \r\n        } else {\r\n            cleanData(elm);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * xxx \r\n     * @param {Object} elm  \r\n     * @param {Array} names\r\n     */\r\n    function pluck(nodes, property) {\r\n        return map.call(nodes, function(elm) {\r\n            return elm[property];\r\n        });\r\n    }\r\n\r\n    /*\r\n     * Get or set the value of an property for the specified element.\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n    function prop(elm, name, value) {\r\n        name = propMap[name] || name;\r\n        if (value === undefined) {\r\n            return elm[name];\r\n        } else {\r\n            elm[name] = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * remove Attributes  \r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     */\r\n    function removeAttr(elm, name) {\r\n        name.split(' ').forEach(function(attr) {\r\n            setAttribute(elm, attr);\r\n        });\r\n        return this;\r\n    }\r\n\r\n\r\n    /*\r\n     * Remove the value of a property for the first element in the set of matched elements or set one or more properties for every matched element.\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     */\r\n    function removeProp(elm, name) {\r\n        name.split(' ').forEach(function(prop) {\r\n            delete elm[prop];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Get the combined text contents of each element in the set of matched elements, including their descendants, or set the text contents of the matched elements.  \r\n     * @param {Object} elm  \r\n     * @param {String} txt\r\n     */\r\n    function text(elm, txt) {\r\n        if (txt === undefined) {\r\n            return elm.textContent;\r\n        } else {\r\n            elm.textContent = txt == null ? '' : '' + txt;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Get the current value of the first element in the set of matched elements or set the value of every matched element.\r\n     * @param {Object} elm  \r\n     * @param {String} value\r\n     */\r\n    function val(elm, value) {\r\n        if (value === undefined) {\r\n            if (elm.multiple) {\r\n                // select multiple values\r\n                var selectedOptions = filter.call(finder.find(elm, \"option\"), (function(option) {\r\n                    return option.selected;\r\n                }));\r\n                return pluck(selectedOptions, \"value\");\r\n            } else {\r\n                return elm.value;\r\n            }\r\n        } else {\r\n            elm.value = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n\r\n    finder.pseudos.data = function( elem, i, match,dataName ) {\r\n        return !!data( elem, dataName || match[3]);\r\n    };\r\n   \r\n\r\n    function datax() {\r\n        return datax;\r\n    }\r\n\r\n    langx.mixin(datax, {\r\n        aria: aria,\r\n\r\n        attr: attr,\r\n\r\n        cleanData: cleanData,\r\n\r\n        data: data,\r\n\r\n        pluck: pluck,\r\n\r\n        prop: prop,\r\n\r\n        removeAttr: removeAttr,\r\n\r\n        removeData: removeData,\r\n\r\n        removeProp: removeProp,\r\n\r\n        text: text,\r\n\r\n        val: val\r\n    });\r\n\r\n    return dom.datax = datax;\r\n});\ndefine('skylark-utils-dom/contents',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\"\r\n], function(dom, langx, noder,datax) {\r\n    \"use strict\";\r\n\r\n    var contents = function() {\r\n        return contents;\r\n    };\r\n\r\n    var commands =  [\r\n    \t\"bold\", // toggle \r\n    \t\"insertImage\",\r\n    \t\"insertorderedlist\",\r\n    \t\"insertunorderedlist\",\r\n    \t\"italic\", // toggle\r\n    \t\"justifyLeft\",\r\n    \t\"justifyCenter\",\r\n    \t\"justifyFull\",\r\n    \t\"justifyRight\",\r\n    \t\"strikeThrough\",\r\n    \t\"underline\",\r\n    \t\"undo\"\r\n    ];\r\n\r\n\tcontents.editable = function(node,value) {\r\n\t\tif (value === undefined) {\r\n   \t\t\treturn node.contentEditable == \"true\"\r\n\t\t} else {\r\n\t\t\tif (!value) {\r\n\t\t\t\tvalue = null;\r\n\t\t\t} else {\r\n\t\t\t\tvalue = \"true\";\r\n\t\t\t}\r\n\t\t\tdatax.attr(node,\"contentEditable\",value);\r\n\t\t}\r\n\t\t\r\n\t};\r\n\r\n    contents.execCommand = function(node,command) {\r\n   \t    document.execCommand(command, false, null);\r\n    };\r\n\r\n    return dom.contents =contents;\r\n\r\n});\ndefine('skylark-utils-dom/css',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./noder\"\r\n], function(dom, langx, noder) {\r\n    \"use strict\";\r\n\r\n    var head = document.getElementsByTagName(\"head\")[0],\r\n        count = 0,\r\n        sheetsByUrl = {},\r\n        sheetsById = {},\r\n        defaultSheetId = _createStyleSheet(),\r\n        defaultSheet = sheetsById[defaultSheetId],\r\n        rulesPropName = (\"cssRules\" in defaultSheet) ? \"cssRules\" : \"rules\",\r\n        insertRuleFunc,\r\n        deleteRuleFunc = defaultSheet.deleteRule || defaultSheet.removeRule;\r\n\r\n    if (defaultSheet.insertRule) {\r\n        var _insertRule = defaultSheet.insertRule;\r\n        insertRuleFunc = function(selector, css, index) {\r\n            _insertRule.call(this, selector + \"{\" + css + \"}\", index);\r\n        };\r\n    } else {\r\n        insertRuleFunc = defaultSheet.addRule;\r\n    }\r\n\r\n    function normalizeSelector(selectorText) {\r\n        var selector = [],\r\n            last, len;\r\n        last = defaultSheet[rulesPropName].length;\r\n        insertRuleFunc.call(defaultSheet, selectorText, ';');\r\n        len = defaultSheet[rulesPropName].length;\r\n        for (var i = len - 1; i >= last; i--) {\r\n            selector.push(_sheet[_rules][i].selectorText);\r\n            deleteRuleFunc.call(defaultSheet, i);\r\n        }\r\n        return selector.reverse().join(', ');\r\n    }\r\n\r\n    /*\r\n     * create a stylesheet element.\r\n     * @param {Boolean} external\r\n     * @param {Object} options\r\n     * @param {String} [options.media = null]\r\n     */\r\n    function _createStyleSheet(external,options ) {\r\n        var node,\r\n            props = {\r\n                type : \"text/css\"\r\n            },\r\n            id = (count++);\r\n\r\n        options = options || {};\r\n        if (options.media) {\r\n            props.media = options.media;\r\n        }\r\n\r\n        if (external) {\r\n            node = noder.create(\"link\",langx.mixin(props,{\r\n                rel  : \"stylesheet\",\r\n                async : false\r\n            }));\r\n        } else {\r\n            node = noder.createElement(\"style\",props);\r\n        }\r\n\r\n        noder.append(head,node);\r\n        sheetsById[id] = {\r\n            id : id,\r\n            node :node\r\n        };\r\n\r\n        return id;\r\n    }\r\n\r\n    function createStyleSheet(css,options) {\r\n        if (!options) {\r\n            options = {};\r\n        }\r\n        var sheetId = _createStyleSheet(false,options);\r\n        if (css) {\r\n            addSheetRules(sheetId,css);\r\n        }\r\n\r\n        return sheetId;\r\n    }\r\n\r\n    function loadStyleSheet(url, options) {\r\n        var sheet = sheetsByUrl[url];\r\n        if (!sheet) {\r\n            var sheetId = _createStyleSheet(true,options);\r\n\r\n            sheet = sheetsByUrl[url] = sheetsById[sheetId];\r\n            langx.mixin(sheet,{\r\n                state: 0, //0:unload,1:loaded,-1:loaderror\r\n                url : url,\r\n                deferred : new langx.Deferred()\r\n            });\r\n\r\n            var node = sheet.node;\r\n\r\n            startTime = new Date().getTime();\r\n\r\n            node.onload = function() {\r\n                sheet.state = 1;\r\n                sheet.deferred.resolve(sheet.id);\r\n            },\r\n            node.onerror = function(e) {\r\n                sheet.state = -1;\r\n                sheet.deferred.reject(e);\r\n            };\r\n\r\n            node.href = sheet.url;\r\n        }\r\n        return sheet.deferred.promise;\r\n    }\r\n\r\n    function deleteSheetRule(sheetId, rule) {\r\n        var sheet = sheetsById[sheetId];\r\n        if (langx.isNumber(rule)) {\r\n            deleteRuleFunc.call(sheet, rule);\r\n        } else {\r\n            langx.each(sheet[rulesPropName], function(i, _rule) {\r\n                if (rule === _rule) {\r\n                    deleteRuleFunc.call(sheet, i);\r\n                    return false;\r\n                }\r\n            });\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function deleteRule(rule) {\r\n        deleteSheetRule(defaultSheetId, rule);\r\n        return this;\r\n    }\r\n\r\n    function removeStyleSheet(sheetId) {\r\n        if (sheetId === defaultSheetId) {\r\n            throw new Error(\"The default stylesheet can not be deleted\");\r\n        }\r\n        var sheet = sheetsById[sheetId];\r\n        delete sheetsById[sheetId];\r\n\r\n        noder.remove(sheet.node);\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * insert a rule to the default stylesheet.\r\n     * @param {String} selector\r\n     * @param {String} css\r\n     * @param {Number} index \r\n     */\r\n    function insertRule(selector, css, index) {\r\n        return this.insertSheetRule(defaultSheetId, selector, css, index);\r\n    }\r\n\r\n    /*\r\n     * Add rules to the default stylesheet.\r\n     * @param {Object} rules\r\n     */\r\n    function addRules(rules) {\r\n        return this.addRules(defaultSheetId,rules);\r\n    }\r\n\r\n    /*\r\n     * insert a rule to the stylesheet specified by sheetId.\r\n     * @param {Number} sheetId  \r\n     * @param {String} selector\r\n     * @param {String} css\r\n     * @param {Number} index \r\n     */\r\n    function insertSheetRule(sheetId, selector, css, index) {\r\n        if (!selector || !css) {\r\n            return -1;\r\n        }\r\n\r\n        var sheet = sheetsById[sheetId];\r\n        index = index || sheet[rulesPropName].length;\r\n\r\n        return insertRuleFunc.call(sheet, selector, css, index);\r\n    }\r\n\r\n    /*\r\n     * Add  rules to stylesheet.\r\n     * @param {Number} sheetId  \r\n     * @param {Object|String} rules\r\n     * @return this\r\n     * @example insertSheetRules(sheetId,{\r\n     * \r\n     * });\r\n     */\r\n    function addSheetRules(sheetId,rules) {\r\n        var sheet = sheetsById[sheetId],\r\n            css;\r\n        if (langx.isString(rules)) {\r\n            css = rules;\r\n        } else {\r\n            css = toString(rules);\r\n        }\r\n\r\n        noder.append(sheet.node,noder.createTextNode(css));\r\n        \r\n        return this;\r\n    }\r\n\r\n    function isAtRule(str) {\r\n        return str.startsWith(\"@\");\r\n    }\r\n\r\n    function toString(json){\r\n        var adjust = function(parentName,name,depth) {\r\n            if (parentName) {\r\n                if (isAtRule(parentName)) {\r\n                    depth += 1;\r\n                } else {\r\n                    name =  parentName + \" \" + name;\r\n                }                \r\n            }\r\n            return {\r\n                name : name,\r\n                depth : depth\r\n            }\r\n        };\r\n\r\n        var strNode = function (name, values, depth) {\r\n            var str = \"\",\r\n                atFlg = isAtRule(name);\r\n\r\n\r\n            if (isAtRule(name)) {\r\n                // at rule\r\n                if (langx.isString(values)) {\r\n                    // an at rule without block\r\n                    // ex: (1) @charset 'utf8';\r\n                    str = css.SPACE.repeat(depth) + name.trim() + \" \\\"\" + values.trim() + \" \\\";\\n\";\r\n                } else {\r\n                    // an at rule with block, ex :\r\n                    //  @media 'screen' {\r\n                    //  }\r\n                    str += css.SPACE.repeat(depth) + name.trim() + \" {\\n\";\r\n                    str += strNode(\"\",values,depth+1);\r\n                    str += css.SPACE.repeat(depth) + \" }\\n\";\r\n                }\r\n            } else {\r\n                // a selector or a property\r\n                if (langx.isString(values)) {\r\n                    // a css property \r\n                    // ex : (1) font-color : red;\r\n                    str = css.SPACE.repeat(depth) + name.trim() ;\r\n                    if (atFlg) {\r\n                        str = str +  \" \\\"\" + values.trim() + \" \\\";\\n\";\r\n                    } else {\r\n                        str = str + ': ' + values.trim() + \";\\n\";\r\n                    }\r\n\r\n                } else {\r\n                    // a selector rule \r\n                    // ex : (1) .class1 : {\r\n                    //            font-color : red;\r\n                    //          }\r\n                    if (langx.isArray(values)) {\r\n                        // array for ordering\r\n                        for (var n =0; n<values.length; n ++) {\r\n                           str +=  strNode(name,values[n],depth);\r\n                        }\r\n                    } else {\r\n                        // plain object\r\n\r\n                        if (name) {\r\n                            str += css.SPACE.repeat(depth) + name.trim() + \" {\\n\";\r\n\r\n                            for (var n in values) {\r\n                                var value =values[n];\r\n                                if (langx.isString(value)) {\r\n                                    // css property\r\n                                    str += strNode(n,value,depth+1)\r\n                                }\r\n                            }\r\n\r\n                            str += css.SPACE.repeat(depth) + \"}\\n\";\r\n                        }\r\n\r\n                        for (var n in values) {\r\n                            var value =values[n];\r\n                            if (!langx.isString(value)) {\r\n                                var adjusted = adjust(name,n,depth);\r\n                                str +=  strNode(adjusted.name,value,adjusted.depth);\r\n                            } \r\n                        }\r\n\r\n                    }\r\n                }\r\n            }   \r\n\r\n            return str;\r\n        };\r\n\r\n\r\n        return strNode(\"\",json,0);\r\n    }\r\n \r\n\r\n    function css() {\r\n        return css;\r\n    }\r\n\r\n    langx.mixin(css, {\r\n        SPACE : \"\\t\",\r\n\r\n        addRules : addRules,\r\n\r\n        addSheetRules : addSheetRules,\r\n\r\n        createStyleSheet: createStyleSheet,\r\n\r\n        deleteSheetRule : deleteSheetRule,\r\n\r\n        deleteRule : deleteRule,\r\n\r\n        insertRule : insertRule,\r\n\r\n        insertSheetRule : insertSheetRule,\r\n\r\n        removeStyleSheet : removeStyleSheet,\r\n\r\n        toString : toString\r\n    });\r\n\r\n    return dom.css = css;\r\n});\r\n\ndefine('skylark-utils-dom/eventer',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./finder\",\r\n    \"./noder\",\r\n    \"./datax\"\r\n], function(dom, langx, browser, finder, noder, datax) {\r\n    var mixin = langx.mixin,\r\n        each = langx.each,\r\n        slice = Array.prototype.slice,\r\n        uid = langx.uid,\r\n        ignoreProperties = /^([A-Z]|returnValue$|layer[XY]$)/,\r\n        eventMethods = {\r\n            preventDefault: \"isDefaultPrevented\",\r\n            stopImmediatePropagation: \"isImmediatePropagationStopped\",\r\n            stopPropagation: \"isPropagationStopped\"\r\n        },\r\n        readyRE = /complete|loaded|interactive/;\r\n\r\n    function compatible(event, source) {\r\n        if (source || !event.isDefaultPrevented) {\r\n            if (!source) {\r\n                source = event;\r\n            }\r\n\r\n            langx.each(eventMethods, function(name, predicate) {\r\n                var sourceMethod = source[name];\r\n                event[name] = function() {\r\n                    this[predicate] = langx.returnTrue;\r\n                    return sourceMethod && sourceMethod.apply(source, arguments);\r\n                }\r\n                event[predicate] = langx.returnFalse;\r\n            });\r\n        }\r\n        return event;\r\n    }\r\n\r\n    function parse(event) {\r\n        var segs = (\"\" + event).split(\".\");\r\n        return {\r\n            type: segs[0],\r\n            ns: segs.slice(1).sort().join(\" \")\r\n        };\r\n    }\r\n\r\n    //create a custom dom event\r\n    var createEvent = (function() {\r\n        var EventCtors = [\r\n                window[\"CustomEvent\"], // 0 default\r\n                window[\"CompositionEvent\"], // 1\r\n                window[\"DragEvent\"], // 2\r\n                window[\"Event\"], // 3\r\n                window[\"FocusEvent\"], // 4\r\n                window[\"KeyboardEvent\"], // 5\r\n                window[\"MessageEvent\"], // 6\r\n                window[\"MouseEvent\"], // 7\r\n                window[\"MouseScrollEvent\"], // 8\r\n                window[\"MouseWheelEvent\"], // 9\r\n                window[\"MutationEvent\"], // 10\r\n                window[\"ProgressEvent\"], // 11\r\n                window[\"TextEvent\"], // 12\r\n                window[\"TouchEvent\"], // 13\r\n                window[\"UIEvent\"], // 14\r\n                window[\"WheelEvent\"], // 15\r\n                window[\"ClipboardEvent\"] // 16\r\n            ],\r\n            NativeEvents = {\r\n                \"compositionstart\": 1, // CompositionEvent\r\n                \"compositionend\": 1, // CompositionEvent\r\n                \"compositionupdate\": 1, // CompositionEvent\r\n\r\n                \"beforecopy\": 16, // ClipboardEvent\r\n                \"beforecut\": 16, // ClipboardEvent\r\n                \"beforepaste\": 16, // ClipboardEvent\r\n                \"copy\": 16, // ClipboardEvent\r\n                \"cut\": 16, // ClipboardEvent\r\n                \"paste\": 16, // ClipboardEvent\r\n\r\n                \"drag\": 2, // DragEvent\r\n                \"dragend\": 2, // DragEvent\r\n                \"dragenter\": 2, // DragEvent\r\n                \"dragexit\": 2, // DragEvent\r\n                \"dragleave\": 2, // DragEvent\r\n                \"dragover\": 2, // DragEvent\r\n                \"dragstart\": 2, // DragEvent\r\n                \"drop\": 2, // DragEvent\r\n\r\n                \"abort\": 3, // Event\r\n                \"change\": 3, // Event\r\n                \"error\": 3, // Event\r\n                \"selectionchange\": 3, // Event\r\n                \"submit\": 3, // Event\r\n                \"reset\": 3, // Event\r\n\r\n                \"focus\": 4, // FocusEvent\r\n                \"blur\": 4, // FocusEvent\r\n                \"focusin\": 4, // FocusEvent\r\n                \"focusout\": 4, // FocusEvent\r\n\r\n                \"keydown\": 5, // KeyboardEvent\r\n                \"keypress\": 5, // KeyboardEvent\r\n                \"keyup\": 5, // KeyboardEvent\r\n\r\n                \"message\": 6, // MessageEvent\r\n\r\n                \"click\": 7, // MouseEvent\r\n                \"contextmenu\": 7, // MouseEvent\r\n                \"dblclick\": 7, // MouseEvent\r\n                \"mousedown\": 7, // MouseEvent\r\n                \"mouseup\": 7, // MouseEvent\r\n                \"mousemove\": 7, // MouseEvent\r\n                \"mouseover\": 7, // MouseEvent\r\n                \"mouseout\": 7, // MouseEvent\r\n                \"mouseenter\": 7, // MouseEvent\r\n                \"mouseleave\": 7, // MouseEvent\r\n\r\n\r\n                \"textInput\": 12, // TextEvent\r\n\r\n                \"touchstart\": 13, // TouchEvent\r\n                \"touchmove\": 13, // TouchEvent\r\n                \"touchend\": 13, // TouchEvent\r\n\r\n                \"load\": 14, // UIEvent\r\n                \"resize\": 14, // UIEvent\r\n                \"select\": 14, // UIEvent\r\n                \"scroll\": 14, // UIEvent\r\n                \"unload\": 14, // UIEvent,\r\n\r\n                \"wheel\": 15 // WheelEvent\r\n            };\r\n\r\n        function getEventCtor(type) {\r\n            var idx = NativeEvents[type];\r\n            if (!idx) {\r\n                idx = 0;\r\n            }\r\n            return EventCtors[idx];\r\n        }\r\n\r\n        return function(type, props) {\r\n            //create a custom dom event\r\n\r\n            if (langx.isString(type)) {\r\n                props = props || {};\r\n            } else {\r\n                props = type || {};\r\n                type = props.type || \"\";\r\n            }\r\n            var parsed = parse(type);\r\n            type = parsed.type;\r\n\r\n            props = langx.mixin({\r\n                bubbles: true,\r\n                cancelable: true\r\n            }, props);\r\n\r\n            if (parsed.ns) {\r\n                props.namespace = parsed.ns;\r\n            }\r\n\r\n            var ctor = getEventCtor(type),\r\n                e = new ctor(type, props);\r\n\r\n            langx.safeMixin(e, props);\r\n\r\n            return compatible(e);\r\n        };\r\n    })();\r\n\r\n    function createProxy(src, props) {\r\n        var key,\r\n            proxy = {\r\n                originalEvent: src\r\n            };\r\n        for (key in src) {\r\n            if (key !== \"keyIdentifier\" && !ignoreProperties.test(key) && src[key] !== undefined) {\r\n                proxy[key] = src[key];\r\n            }\r\n        }\r\n        if (props) {\r\n            langx.mixin(proxy, props);\r\n        }\r\n        return compatible(proxy, src);\r\n    }\r\n\r\n    var\r\n        specialEvents = {},\r\n        focusinSupported = \"onfocusin\" in window,\r\n        focus = { focus: \"focusin\", blur: \"focusout\" },\r\n        hover = { mouseenter: \"mouseover\", mouseleave: \"mouseout\" },\r\n        realEvent = function(type) {\r\n            return hover[type] || (focusinSupported && focus[type]) || type;\r\n        },\r\n        handlers = {},\r\n        EventBindings = langx.klass({\r\n            init: function(target, event) {\r\n                this._target = target;\r\n                this._event = event;\r\n                this._bindings = [];\r\n            },\r\n\r\n            add: function(fn, options) {\r\n                var bindings = this._bindings,\r\n                    binding = {\r\n                        fn: fn,\r\n                        options: langx.mixin({}, options)\r\n                    };\r\n\r\n                bindings.push(binding);\r\n\r\n                var self = this;\r\n                if (!self._listener) {\r\n                    self._listener = function(domEvt) {\r\n                        var elm = this,\r\n                            e = createProxy(domEvt),\r\n                            args = domEvt._args,\r\n                            bindings = self._bindings,\r\n                            ns = e.namespace;\r\n\r\n                        if (langx.isDefined(args)) {\r\n                            args = [e].concat(args);\r\n                        } else {\r\n                            args = [e];\r\n                        }\r\n\r\n                        langx.each(bindings, function(idx, binding) {\r\n                            var match = elm;\r\n                            if (e.isImmediatePropagationStopped && e.isImmediatePropagationStopped()) {\r\n                                return false;\r\n                            }\r\n                            var fn = binding.fn,\r\n                                options = binding.options || {},\r\n                                selector = options.selector,\r\n                                one = options.one,\r\n                                data = options.data;\r\n\r\n                            if (ns && ns != options.ns && options.ns.indexOf(ns) === -1) {\r\n                                return;\r\n                            }\r\n                            if (selector) {\r\n                                match = finder.closest(e.target, selector);\r\n                                if (match && match !== elm) {\r\n                                    langx.mixin(e, {\r\n                                        currentTarget: match,\r\n                                        liveFired: elm\r\n                                    });\r\n                                } else {\r\n                                    return;\r\n                                }\r\n                            }\r\n\r\n                            var originalEvent = self._event;\r\n                            if (originalEvent in hover) {\r\n                                var related = e.relatedTarget;\r\n                                if (related && (related === match || noder.contains(match, related))) {\r\n                                    return;\r\n                                }\r\n                            }\r\n\r\n                            if (langx.isDefined(data)) {\r\n                                e.data = data;\r\n                            }\r\n\r\n                            if (one) {\r\n                                self.remove(fn, options);\r\n                            }\r\n\r\n                            var result = fn.apply(match, args);\r\n\r\n                            if (result === false) {\r\n                                e.preventDefault();\r\n                                e.stopPropagation();\r\n                            }\r\n                        });;\r\n                    };\r\n\r\n                    var event = self._event;\r\n                    /*\r\n                                        if (event in hover) {\r\n                                            var l = self._listener;\r\n                                            self._listener = function(e) {\r\n                                                var related = e.relatedTarget;\r\n                                                if (!related || (related !== this && !noder.contains(this, related))) {\r\n                                                    return l.apply(this, arguments);\r\n                                                }\r\n                                            }\r\n                                        }\r\n                    */\r\n\r\n                    if (self._target.addEventListener) {\r\n                        self._target.addEventListener(realEvent(event), self._listener, false);\r\n                    } else {\r\n                        console.warn(\"invalid eventer object\", self._target);\r\n                    }\r\n                }\r\n\r\n            },\r\n            remove: function(fn, options) {\r\n                options = langx.mixin({}, options);\r\n\r\n                function matcherFor(ns) {\r\n                    return new RegExp(\"(?:^| )\" + ns.replace(\" \", \" .* ?\") + \"(?: |$)\");\r\n                }\r\n                var matcher;\r\n                if (options.ns) {\r\n                    matcher = matcherFor(options.ns);\r\n                }\r\n\r\n                this._bindings = this._bindings.filter(function(binding) {\r\n                    var removing = (!fn || fn === binding.fn) &&\r\n                        (!matcher || matcher.test(binding.options.ns)) &&\r\n                        (!options.selector || options.selector == binding.options.selector);\r\n\r\n                    return !removing;\r\n                });\r\n                if (this._bindings.length == 0) {\r\n                    if (this._target.removeEventListener) {\r\n                        this._target.removeEventListener(realEvent(this._event), this._listener, false);\r\n                    }\r\n                    this._listener = null;\r\n                }\r\n            }\r\n        }),\r\n        EventsHandler = langx.klass({\r\n            init: function(elm) {\r\n                this._target = elm;\r\n                this._handler = {};\r\n            },\r\n\r\n            // add a event listener\r\n            // selector Optional\r\n            register: function(event, callback, options) {\r\n                // Seperate the event from the namespace\r\n                var parsed = parse(event),\r\n                    event = parsed.type,\r\n                    specialEvent = specialEvents[event],\r\n                    bindingEvent = specialEvent && (specialEvent.bindType || specialEvent.bindEventName);\r\n\r\n                var events = this._handler;\r\n\r\n                // Check if there is already a handler for this event\r\n                if (events[event] === undefined) {\r\n                    events[event] = new EventBindings(this._target, bindingEvent || event);\r\n                }\r\n\r\n                // Register the new callback function\r\n                events[event].add(callback, langx.mixin({\r\n                    ns: parsed.ns\r\n                }, options)); // options:{selector:xxx}\r\n            },\r\n\r\n            // remove a event listener\r\n            unregister: function(event, fn, options) {\r\n                // Check for parameter validtiy\r\n                var events = this._handler,\r\n                    parsed = parse(event);\r\n                event = parsed.type;\r\n\r\n                if (event) {\r\n                    var listener = events[event];\r\n\r\n                    if (listener) {\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                } else {\r\n                    //remove all events\r\n                    for (event in events) {\r\n                        var listener = events[event];\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                }\r\n            }\r\n        }),\r\n\r\n        findHandler = function(elm) {\r\n            var id = uid(elm),\r\n                handler = handlers[id];\r\n            if (!handler) {\r\n                handler = handlers[id] = new EventsHandler(elm);\r\n            }\r\n            return handler;\r\n        };\r\n\r\n    /*   \r\n     * Remove an event handler for one or more events from the specified element.\r\n     * @param {HTMLElement} elm  \r\n     * @param {String} events\r\n     * @param {String　Optional } selector\r\n     * @param {Function} callback\r\n     */\r\n    function off(elm, events, selector, callback) {\r\n        var $this = this\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                off(elm, type, selector, fn);\r\n            })\r\n            return $this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback) && callback !== false) {\r\n            callback = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        if (events) events.forEach(function(event) {\r\n\r\n            handler.unregister(event, callback, {\r\n                selector: selector,\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Attach an event handler function for one or more events to the selected elements.\r\n     * @param {HTMLElement} elm  \r\n     * @param {String} events\r\n     * @param {String　Optional} selector\r\n     * @param {Anything Optional} data\r\n     * @param {Function} callback\r\n     * @param {Boolean　Optional} one\r\n     */\r\n    function on(elm, events, selector, data, callback, one) {\r\n\r\n        var autoRemove, delegator;\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                on(elm, type, selector, data, fn, one);\r\n            });\r\n            return this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n            callback = data;\r\n            data = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (langx.isFunction(data)) {\r\n            callback = data;\r\n            data = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        events.forEach(function(event) {\r\n            if (event == \"ready\") {\r\n                return ready(callback);\r\n            }\r\n            handler.register(event, callback, {\r\n                data: data,\r\n                selector: selector,\r\n                one: !!one\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Attach a handler to an event for the elements. The handler is executed at most once per \r\n     * @param {HTMLElement} elm  \r\n     * @param {String} event\r\n     * @param {String　Optional} selector\r\n     * @param {Anything Optional} data\r\n     * @param {Function} callback\r\n     */\r\n    function one(elm, events, selector, data, callback) {\r\n        on(elm, events, selector, data, callback, 1);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Prevents propagation and clobbers the default action of the passed event. The same as calling event.preventDefault() and event.stopPropagation(). \r\n     * @param {String} event\r\n     */\r\n    function stop(event) {\r\n        if (window.document.all) {\r\n            event.keyCode = 0;\r\n        }\r\n        if (event.preventDefault) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        return this;\r\n    }\r\n    /*   \r\n     * Execute all handlers and behaviors attached to the matched elements for the given event  \r\n     * @param {String} evented\r\n     * @param {String} type\r\n     * @param {Array or PlainObject } args\r\n     */\r\n    function trigger(evented, type, args) {\r\n        var e;\r\n        if (type instanceof Event) {\r\n            e = type;\r\n        } else {\r\n            e = createEvent(type, args);\r\n        }\r\n        e._args = args;\r\n\r\n        var fn = (evented.dispatchEvent || evented.trigger);\r\n        if (fn) {\r\n            fn.call(evented, e);\r\n        } else {\r\n            console.warn(\"The evented parameter is not a eventable object\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n    /*   \r\n     * Specify a function to execute when the DOM is fully loaded.  \r\n     * @param {Function} callback\r\n     */\r\n    function ready(callback) {\r\n        // need to check if document.body exists for IE as that browser reports\r\n        // document ready when it hasn't yet created the body elm\r\n        if (readyRE.test(document.readyState) && document.body) {\r\n            langx.defer(callback);\r\n        } else {\r\n            document.addEventListener('DOMContentLoaded', callback, false);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    var keyCodeLookup = {\r\n        \"backspace\": 8,\r\n        \"comma\": 188,\r\n        \"delete\": 46,\r\n        \"down\": 40,\r\n        \"end\": 35,\r\n        \"enter\": 13,\r\n        \"escape\": 27,\r\n        \"home\": 36,\r\n        \"left\": 37,\r\n        \"page_down\": 34,\r\n        \"page_up\": 33,\r\n        \"period\": 190,\r\n        \"right\": 39,\r\n        \"space\": 32,\r\n        \"tab\": 9,\r\n        \"up\": 38\r\n    };\r\n    //example:\r\n    //shortcuts(elm).add(\"CTRL+ALT+SHIFT+X\",function(){console.log(\"test!\")});\r\n    function shortcuts(elm) {\r\n\r\n        var registry = datax.data(elm, \"shortcuts\");\r\n        if (!registry) {\r\n            registry = {};\r\n            datax.data(elm, \"shortcuts\", registry);\r\n            var run = function(shortcut, event) {\r\n                var n = event.metaKey || event.ctrlKey;\r\n                if (shortcut.ctrl == n && shortcut.alt == event.altKey && shortcut.shift == event.shiftKey) {\r\n                    if (event.keyCode == shortcut.keyCode || event.charCode && event.charCode == shortcut.charCode) {\r\n                        event.preventDefault();\r\n                        if (\"keydown\" == event.type) {\r\n                            shortcut.fn(event);\r\n                        }\r\n                        return true;\r\n                    }\r\n                }\r\n            };\r\n            on(elm, \"keyup keypress keydown\", function(event) {\r\n                if (!(/INPUT|TEXTAREA/.test(event.target.nodeName))) {\r\n                    for (var key in registry) {\r\n                        run(registry[key], event);\r\n                    }\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        return {\r\n            add: function(pattern, fn) {\r\n                var shortcutKeys;\r\n                if (pattern.indexOf(\",\") > -1) {\r\n                    shortcutKeys = pattern.toLowerCase().split(\",\");\r\n                } else {\r\n                    shortcutKeys = pattern.toLowerCase().split(\" \");\r\n                }\r\n                shortcutKeys.forEach(function(shortcutKey) {\r\n                    var setting = {\r\n                        fn: fn,\r\n                        alt: false,\r\n                        ctrl: false,\r\n                        shift: false\r\n                    };\r\n                    shortcutKey.split(\"+\").forEach(function(key) {\r\n                        switch (key) {\r\n                            case \"alt\":\r\n                            case \"ctrl\":\r\n                            case \"shift\":\r\n                                setting[key] = true;\r\n                                break;\r\n                            default:\r\n                                setting.charCode = key.charCodeAt(0);\r\n                                setting.keyCode = keyCodeLookup[key] || key.toUpperCase().charCodeAt(0);\r\n                        }\r\n                    });\r\n                    var regKey = (setting.ctrl ? \"ctrl\" : \"\") + \",\" + (setting.alt ? \"alt\" : \"\") + \",\" + (setting.shift ? \"shift\" : \"\") + \",\" + setting.keyCode;\r\n                    registry[regKey] = setting;\r\n                })\r\n            }\r\n\r\n        };\r\n\r\n    }\r\n\r\n    if (browser.support.transition) {\r\n        specialEvents.transitionEnd = {\r\n//          handle: function (e) {\r\n//            if ($(e.target).is(this)) return e.handleObj.handler.apply(this, arguments)\r\n//          },\r\n          bindType: browser.support.transition.end,\r\n          delegateType: browser.support.transition.end\r\n        }        \r\n    }\r\n\r\n    function eventer() {\r\n        return eventer;\r\n    }\r\n\r\n    langx.mixin(eventer, {\r\n        create: createEvent,\r\n\r\n        keys: keyCodeLookup,\r\n\r\n        off: off,\r\n\r\n        on: on,\r\n\r\n        one: one,\r\n\r\n        proxy: createProxy,\r\n\r\n        ready: ready,\r\n\r\n        shortcuts: shortcuts,\r\n\r\n        special: specialEvents,\r\n\r\n        stop: stop,\r\n\r\n        trigger: trigger\r\n\r\n    });\r\n\r\n    return dom.eventer = eventer;\r\n});\ndefine('skylark-utils-dom/geom',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./styler\"\r\n], function(dom, langx, noder, styler) {\r\n    var rootNodeRE = /^(?:body|html)$/i,\r\n        px = langx.toPixel,\r\n        offsetParent = noder.offsetParent,\r\n        cachedScrollbarWidth;\r\n\r\n    function scrollbarWidth() {\r\n        if (cachedScrollbarWidth !== undefined) {\r\n            return cachedScrollbarWidth;\r\n        }\r\n        var w1, w2,\r\n            div = noder.createFragment(\"<div style=\" +\r\n                \"'display:block;position:absolute;width:200px;height:200px;overflow:hidden;'>\" +\r\n                \"<div style='height:300px;width:auto;'></div></div>\")[0],\r\n            innerDiv = div.childNodes[0];\r\n\r\n        noder.append(document.body, div);\r\n\r\n        w1 = innerDiv.offsetWidth;\r\n\r\n        styler.css(div, \"overflow\", \"scroll\");\r\n\r\n        w2 = innerDiv.offsetWidth;\r\n\r\n        if (w1 === w2) {\r\n            w2 = div[0].clientWidth;\r\n        }\r\n\r\n        noder.remove(div);\r\n\r\n        return (cachedScrollbarWidth = w1 - w2);\r\n    }\r\n    /*\r\n     * Get the widths of each border of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function borderExtents(elm) {\r\n        if (noder.isWindow(elm)) {\r\n            return {\r\n                left : 0,\r\n                top : 0,\r\n                right : 0,\r\n                bottom : 0\r\n            }\r\n        }        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.borderLeftWidth, elm),\r\n            top: px(s.borderTopWidth, elm),\r\n            right: px(s.borderRightWidth, elm),\r\n            bottom: px(s.borderBottomWidth, elm)\r\n        }\r\n    }\r\n\r\n    //viewport coordinate\r\n    /*\r\n     * Get or set the viewport position of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function boundingPosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            return rootNodeRE.test(elm.nodeName) ? { top: 0, left: 0 } : elm.getBoundingClientRect();\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the viewport rect of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function boundingRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            return elm.getBoundingClientRect()\r\n        } else {\r\n            boundingPosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the height of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function clientHeight(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).height;\r\n        } else {\r\n            return clientSize(elm, {\r\n                height: value\r\n            });\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the size of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} dimension\r\n     */\r\n    function clientSize(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            return {\r\n                width: elm.clientWidth,\r\n                height: elm.clientHeight\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width - pex.left - pex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height - pex.top - pex.bottom;\r\n                }\r\n            } else {\r\n                var bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width + bex.left + bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height + bex.top + bex.bottom;\r\n                }\r\n\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n        return {\r\n            width: elm.clientWidth,\r\n            height: elm.clientHeight\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get or set the width of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} dimension\r\n     */\r\n    function clientWidth(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).width;\r\n        } else {\r\n            clientSize(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the rect of the specified element content box.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function contentRect(elm) {\r\n        var cs = clientSize(elm),\r\n            pex = paddingExtents(elm);\r\n\r\n\r\n        //// On Opera, offsetLeft includes the parent's border\r\n        //if(has(\"opera\")){\r\n        //    pe.l += be.l;\r\n        //    pe.t += be.t;\r\n        //}\r\n        return {\r\n            left: pex.left,\r\n            top: pex.top,\r\n            width: cs.width - pex.left - pex.right,\r\n            height: cs.height - pex.top - pex.bottom\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the document size.\r\n     * @param {HTMLDocument} doc\r\n     */\r\n    function getDocumentSize(doc) {\r\n        var documentElement = doc.documentElement,\r\n            body = doc.body,\r\n            max = Math.max,\r\n            scrollWidth = max(documentElement.scrollWidth, body.scrollWidth),\r\n            clientWidth = max(documentElement.clientWidth, body.clientWidth),\r\n            offsetWidth = max(documentElement.offsetWidth, body.offsetWidth),\r\n            scrollHeight = max(documentElement.scrollHeight, body.scrollHeight),\r\n            clientHeight = max(documentElement.clientHeight, body.clientHeight),\r\n            offsetHeight = max(documentElement.offsetHeight, body.offsetHeight);\r\n\r\n        return {\r\n            width: scrollWidth < offsetWidth ? clientWidth : scrollWidth,\r\n            height: scrollHeight < offsetHeight ? clientHeight : scrollHeight\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the document size.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function height(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).height;\r\n        } else {\r\n            size(elm, {\r\n                height: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the widths of each margin of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function marginExtents(elm) {\r\n        if (noder.isWindow(elm)) {\r\n            return {\r\n                left : 0,\r\n                top : 0,\r\n                right : 0,\r\n                bottom : 0\r\n            }\r\n        }\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.marginLeft),\r\n            top: px(s.marginTop),\r\n            right: px(s.marginRight),\r\n            bottom: px(s.marginBottom),\r\n        }\r\n    }\r\n\r\n\r\n    function marginRect(elm) {\r\n        var obj = relativeRect(elm),\r\n            me = marginExtents(elm);\r\n\r\n        return {\r\n            left: obj.left,\r\n            top: obj.top,\r\n            width: obj.width + me.left + me.right,\r\n            height: obj.height + me.top + me.bottom\r\n        };\r\n    }\r\n\r\n\r\n    function marginSize(elm) {\r\n        var obj = size(elm),\r\n            me = marginExtents(elm);\r\n\r\n        return {\r\n            width: obj.width + me.left + me.right,\r\n            height: obj.height + me.top + me.bottom\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the widths of each padding of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function paddingExtents(elm) {\r\n        if (noder.isWindow(elm)) {\r\n            return {\r\n                left : 0,\r\n                top : 0,\r\n                right : 0,\r\n                bottom : 0\r\n            }\r\n        }\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.paddingLeft),\r\n            top: px(s.paddingTop),\r\n            right: px(s.paddingRight),\r\n            bottom: px(s.paddingBottom),\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the document position of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    //coordinate to the document\r\n    function pagePosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset\r\n            }\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = pagePosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the document rect of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function pageRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset,\r\n                width: Math.round(obj.width),\r\n                height: Math.round(obj.height)\r\n            }\r\n        } else {\r\n            pagePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the position of the specified element border box , relative to parent element.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    // coordinate relative to it's parent\r\n    function relativePosition(elm, coords) {\r\n        if (coords == undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingPosition(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top, // - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left, // - mex.left\r\n            }\r\n        } else {\r\n            var props = {\r\n                top: coords.top,\r\n                left: coords.left\r\n            }\r\n\r\n            if (styler.css(elm, \"position\") == \"static\") {\r\n                props['position'] = \"relative\";\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the rect of the specified element border box , relatived to parent element.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function relativeRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingRect(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top, // - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left, // - mex.left,\r\n                width: offset.width,\r\n                height: offset.height\r\n            }\r\n        } else {\r\n            relativePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Scroll the specified element into view.\r\n     * @param {HTMLElement} elm\r\n     * @param {} align\r\n     */\r\n    function scrollIntoView(elm, align) {\r\n        function getOffset(elm, rootElm) {\r\n            var x, y, parent = elm;\r\n\r\n            x = y = 0;\r\n            while (parent && parent != rootElm && parent.nodeType) {\r\n                x += parent.offsetLeft || 0;\r\n                y += parent.offsetTop || 0;\r\n                parent = parent.offsetParent;\r\n            }\r\n\r\n            return { x: x, y: y };\r\n        }\r\n\r\n        var parentElm = elm.parentNode;\r\n        var x, y, width, height, parentWidth, parentHeight;\r\n        var pos = getOffset(elm, parentElm);\r\n\r\n        x = pos.x;\r\n        y = pos.y;\r\n        width = elm.offsetWidth;\r\n        height = elm.offsetHeight;\r\n        parentWidth = parentElm.clientWidth;\r\n        parentHeight = parentElm.clientHeight;\r\n\r\n        if (align == \"end\") {\r\n            x -= parentWidth - width;\r\n            y -= parentHeight - height;\r\n        } else if (align == \"center\") {\r\n            x -= (parentWidth / 2) - (width / 2);\r\n            y -= (parentHeight / 2) - (height / 2);\r\n        }\r\n\r\n        parentElm.scrollLeft = x;\r\n        parentElm.scrollTop = y;\r\n\r\n        return this;\r\n    }\r\n    /*\r\n     * Get or set the current horizontal position of the scroll bar for the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function scrollLeft(elm, value) {\r\n        var hasScrollLeft = \"scrollLeft\" in elm;\r\n        if (value === undefined) {\r\n            return hasScrollLeft ? elm.scrollLeft : elm.pageXOffset\r\n        } else {\r\n            if (hasScrollLeft) {\r\n                elm.scrollLeft = value;\r\n            } else {\r\n                elm.scrollTo(value, elm.scrollY);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or the current vertical position of the scroll bar for the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function scrollTop(elm, value) {\r\n        var hasScrollTop = \"scrollTop\" in elm;\r\n\r\n        if (value === undefined) {\r\n            return hasScrollTop ? elm.scrollTop : elm.pageYOffset\r\n        } else {\r\n            if (hasScrollTop) {\r\n                elm.scrollTop = value;\r\n            } else {\r\n                elm.scrollTo(elm.scrollX, value);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or set the size of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject}dimension\r\n     */\r\n    function size(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            if (langx.isWindow(elm)) {\r\n                return {\r\n                    width: elm.innerWidth,\r\n                    height: elm.innerHeight\r\n                }\r\n\r\n            } else if (langx.isDocument(elm)) {\r\n                return getDocumentSize(document);\r\n            } else {\r\n                return {\r\n                    width: elm.offsetWidth,\r\n                    height: elm.offsetHeight\r\n                }\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm),\r\n                    bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined && props.width !== \"\" && props.width !== null) {\r\n                    props.width = props.width - pex.left - pex.right - bex.left - bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined && props.height !== \"\" && props.height !== null) {\r\n                    props.height = props.height - pex.top - pex.bottom - bex.top - bex.bottom;\r\n                }\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or set the size of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function width(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).width;\r\n        } else {\r\n            size(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function geom() {\r\n        return geom;\r\n    }\r\n\r\n    langx.mixin(geom, {\r\n        borderExtents: borderExtents,\r\n        //viewport coordinate\r\n        boundingPosition: boundingPosition,\r\n\r\n        boundingRect: boundingRect,\r\n\r\n        clientHeight: clientHeight,\r\n\r\n        clientSize: clientSize,\r\n\r\n        clientWidth: clientWidth,\r\n\r\n        contentRect: contentRect,\r\n\r\n        getDocumentSize: getDocumentSize,\r\n\r\n        height: height,\r\n\r\n        marginExtents: marginExtents,\r\n\r\n        marginRect: marginRect,\r\n\r\n        marginSize: marginSize,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        paddingExtents: paddingExtents,\r\n\r\n        //coordinate to the document\r\n        pagePosition: pagePosition,\r\n\r\n        pageRect: pageRect,\r\n\r\n        // coordinate relative to it's parent\r\n        relativePosition: relativePosition,\r\n\r\n        relativeRect: relativeRect,\r\n\r\n        scrollbarWidth: scrollbarWidth,\r\n\r\n        scrollIntoView: scrollIntoView,\r\n\r\n        scrollLeft: scrollLeft,\r\n\r\n        scrollTop: scrollTop,\r\n\r\n        size: size,\r\n\r\n        width: width\r\n    });\r\n\r\n    ( function() {\r\n        var max = Math.max,\r\n            abs = Math.abs,\r\n            rhorizontal = /left|center|right/,\r\n            rvertical = /top|center|bottom/,\r\n            roffset = /[\\+\\-]\\d+(\\.[\\d]+)?%?/,\r\n            rposition = /^\\w+/,\r\n            rpercent = /%$/;\r\n\r\n        function getOffsets( offsets, width, height ) {\r\n            return [\r\n                parseFloat( offsets[ 0 ] ) * ( rpercent.test( offsets[ 0 ] ) ? width / 100 : 1 ),\r\n                parseFloat( offsets[ 1 ] ) * ( rpercent.test( offsets[ 1 ] ) ? height / 100 : 1 )\r\n            ];\r\n        }\r\n\r\n        function parseCss( element, property ) {\r\n            return parseInt( styler.css( element, property ), 10 ) || 0;\r\n        }\r\n\r\n        function getDimensions( raw ) {\r\n            if ( raw.nodeType === 9 ) {\r\n                return {\r\n                    size: size(raw),\r\n                    offset: { top: 0, left: 0 }\r\n                };\r\n            }\r\n            if ( noder.isWindow( raw ) ) {\r\n                return {\r\n                    size: size(raw),\r\n                    offset: { \r\n                        top: scrollTop(raw), \r\n                        left: scrollLeft(raw) \r\n                    }\r\n                };\r\n            }\r\n            if ( raw.preventDefault ) {\r\n                return {\r\n                    size : {\r\n                        width: 0,\r\n                        height: 0\r\n                    },\r\n                    offset: { \r\n                        top: raw.pageY, \r\n                        left: raw.pageX \r\n                    }\r\n                };\r\n            }\r\n            return {\r\n                size: size(raw),\r\n                offset: pagePosition(raw)\r\n            };\r\n        }\r\n\r\n        function getScrollInfo( within ) {\r\n            var overflowX = within.isWindow || within.isDocument ? \"\" :\r\n                    styler.css(within.element,\"overflow-x\" ),\r\n                overflowY = within.isWindow || within.isDocument ? \"\" :\r\n                    styler.css(within.element,\"overflow-y\" ),\r\n                hasOverflowX = overflowX === \"scroll\" ||\r\n                    ( overflowX === \"auto\" && within.width < scrollWidth(within.element) ),\r\n                hasOverflowY = overflowY === \"scroll\" ||\r\n                    ( overflowY === \"auto\" && within.height < scrollHeight(within.element));\r\n            return {\r\n                width: hasOverflowY ? scrollbarWidth() : 0,\r\n                height: hasOverflowX ? scrollbarWidth() : 0\r\n            };\r\n        }\r\n\r\n        function getWithinInfo( element ) {\r\n            var withinElement = element || window,\r\n                isWindow = noder.isWindow( withinElement),\r\n                isDocument = !!withinElement && withinElement.nodeType === 9,\r\n                hasOffset = !isWindow && !isDocument,\r\n                msize = marginSize(withinElement);\r\n            return {\r\n                element: withinElement,\r\n                isWindow: isWindow,\r\n                isDocument: isDocument,\r\n                offset: hasOffset ? pagePosition(element) : { left: 0, top: 0 },\r\n                scrollLeft: scrollLeft(withinElement),\r\n                scrollTop: scrollTop(withinElement),\r\n                width: msize.width,\r\n                height: msize.height\r\n            };\r\n        }\r\n\r\n        function posit(elm,options ) {\r\n            // Make a copy, we don't want to modify arguments\r\n            options = langx.extend( {}, options );\r\n\r\n            var atOffset, targetWidth, targetHeight, targetOffset, basePosition, dimensions,\r\n                target = options.of,\r\n                within = getWithinInfo( options.within ),\r\n                scrollInfo = getScrollInfo( within ),\r\n                collision = ( options.collision || \"flip\" ).split( \" \" ),\r\n                offsets = {};\r\n\r\n            dimensions = getDimensions( target );\r\n            if ( target.preventDefault ) {\r\n\r\n                // Force left top to allow flipping\r\n                options.at = \"left top\";\r\n            }\r\n            targetWidth = dimensions.size.width;\r\n            targetHeight = dimensions.size.height;\r\n            targetOffset = dimensions.offset;\r\n\r\n            // Clone to reuse original targetOffset later\r\n            basePosition = langx.extend( {}, targetOffset );\r\n\r\n            // Force my and at to have valid horizontal and vertical positions\r\n            // if a value is missing or invalid, it will be converted to center\r\n            langx.each( [ \"my\", \"at\" ], function() {\r\n                var pos = ( options[ this ] || \"\" ).split( \" \" ),\r\n                    horizontalOffset,\r\n                    verticalOffset;\r\n\r\n                if ( pos.length === 1 ) {\r\n                    pos = rhorizontal.test( pos[ 0 ] ) ?\r\n                        pos.concat( [ \"center\" ] ) :\r\n                        rvertical.test( pos[ 0 ] ) ?\r\n                            [ \"center\" ].concat( pos ) :\r\n                            [ \"center\", \"center\" ];\r\n                }\r\n                pos[ 0 ] = rhorizontal.test( pos[ 0 ] ) ? pos[ 0 ] : \"center\";\r\n                pos[ 1 ] = rvertical.test( pos[ 1 ] ) ? pos[ 1 ] : \"center\";\r\n\r\n                // Calculate offsets\r\n                horizontalOffset = roffset.exec( pos[ 0 ] );\r\n                verticalOffset = roffset.exec( pos[ 1 ] );\r\n                offsets[ this ] = [\r\n                    horizontalOffset ? horizontalOffset[ 0 ] : 0,\r\n                    verticalOffset ? verticalOffset[ 0 ] : 0\r\n                ];\r\n\r\n                // Reduce to just the positions without the offsets\r\n                options[ this ] = [\r\n                    rposition.exec( pos[ 0 ] )[ 0 ],\r\n                    rposition.exec( pos[ 1 ] )[ 0 ]\r\n                ];\r\n            } );\r\n\r\n            // Normalize collision option\r\n            if ( collision.length === 1 ) {\r\n                collision[ 1 ] = collision[ 0 ];\r\n            }\r\n\r\n            if ( options.at[ 0 ] === \"right\" ) {\r\n                basePosition.left += targetWidth;\r\n            } else if ( options.at[ 0 ] === \"center\" ) {\r\n                basePosition.left += targetWidth / 2;\r\n            }\r\n\r\n            if ( options.at[ 1 ] === \"bottom\" ) {\r\n                basePosition.top += targetHeight;\r\n            } else if ( options.at[ 1 ] === \"center\" ) {\r\n                basePosition.top += targetHeight / 2;\r\n            }\r\n\r\n            atOffset = getOffsets( offsets.at, targetWidth, targetHeight );\r\n            basePosition.left += atOffset[ 0 ];\r\n            basePosition.top += atOffset[ 1 ];\r\n\r\n            return ( function(elem) {\r\n                var collisionPosition, using,\r\n                    msize = marginSize(elem),\r\n                    elemWidth = msize.width,\r\n                    elemHeight = msize.height,\r\n                    marginLeft = parseCss( elem, \"marginLeft\" ),\r\n                    marginTop = parseCss( elem, \"marginTop\" ),\r\n                    collisionWidth = elemWidth + marginLeft + parseCss( elem, \"marginRight\" ) +\r\n                        scrollInfo.width,\r\n                    collisionHeight = elemHeight + marginTop + parseCss( elem, \"marginBottom\" ) +\r\n                        scrollInfo.height,\r\n                    position = langx.extend( {}, basePosition ),\r\n                    myOffset = getOffsets( offsets.my, msize.width, msize.height);\r\n\r\n                if ( options.my[ 0 ] === \"right\" ) {\r\n                    position.left -= elemWidth;\r\n                } else if ( options.my[ 0 ] === \"center\" ) {\r\n                    position.left -= elemWidth / 2;\r\n                }\r\n\r\n                if ( options.my[ 1 ] === \"bottom\" ) {\r\n                    position.top -= elemHeight;\r\n                } else if ( options.my[ 1 ] === \"center\" ) {\r\n                    position.top -= elemHeight / 2;\r\n                }\r\n\r\n                position.left += myOffset[ 0 ];\r\n                position.top += myOffset[ 1 ];\r\n\r\n                collisionPosition = {\r\n                    marginLeft: marginLeft,\r\n                    marginTop: marginTop\r\n                };\r\n\r\n                langx.each( [ \"left\", \"top\" ], function( i, dir ) {\r\n                    if ( positions[ collision[ i ] ] ) {\r\n                        positions[ collision[ i ] ][ dir ]( position, {\r\n                            targetWidth: targetWidth,\r\n                            targetHeight: targetHeight,\r\n                            elemWidth: elemWidth,\r\n                            elemHeight: elemHeight,\r\n                            collisionPosition: collisionPosition,\r\n                            collisionWidth: collisionWidth,\r\n                            collisionHeight: collisionHeight,\r\n                            offset: [ atOffset[ 0 ] + myOffset[ 0 ], atOffset [ 1 ] + myOffset[ 1 ] ],\r\n                            my: options.my,\r\n                            at: options.at,\r\n                            within: within,\r\n                            elem: elem\r\n                        } );\r\n                    }\r\n                } );\r\n\r\n                if ( options.using ) {\r\n\r\n                    // Adds feedback as second argument to using callback, if present\r\n                    using = function( props ) {\r\n                        var left = targetOffset.left - position.left,\r\n                            right = left + targetWidth - elemWidth,\r\n                            top = targetOffset.top - position.top,\r\n                            bottom = top + targetHeight - elemHeight,\r\n                            feedback = {\r\n                                target: {\r\n                                    element: target,\r\n                                    left: targetOffset.left,\r\n                                    top: targetOffset.top,\r\n                                    width: targetWidth,\r\n                                    height: targetHeight\r\n                                },\r\n                                element: {\r\n                                    element: elem,\r\n                                    left: position.left,\r\n                                    top: position.top,\r\n                                    width: elemWidth,\r\n                                    height: elemHeight\r\n                                },\r\n                                horizontal: right < 0 ? \"left\" : left > 0 ? \"right\" : \"center\",\r\n                                vertical: bottom < 0 ? \"top\" : top > 0 ? \"bottom\" : \"middle\"\r\n                            };\r\n                        if ( targetWidth < elemWidth && abs( left + right ) < targetWidth ) {\r\n                            feedback.horizontal = \"center\";\r\n                        }\r\n                        if ( targetHeight < elemHeight && abs( top + bottom ) < targetHeight ) {\r\n                            feedback.vertical = \"middle\";\r\n                        }\r\n                        if ( max( abs( left ), abs( right ) ) > max( abs( top ), abs( bottom ) ) ) {\r\n                            feedback.important = \"horizontal\";\r\n                        } else {\r\n                            feedback.important = \"vertical\";\r\n                        }\r\n                        options.using.call( this, props, feedback );\r\n                    };\r\n                }\r\n\r\n                pagePosition(elem, langx.extend( position, { using: using } ));\r\n            })(elm);\r\n        }\r\n\r\n        var positions = {\r\n            fit: {\r\n                left: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.isWindow ? within.scrollLeft : within.offset.left,\r\n                        outerWidth = within.width,\r\n                        collisionPosLeft = position.left - data.collisionPosition.marginLeft,\r\n                        overLeft = withinOffset - collisionPosLeft,\r\n                        overRight = collisionPosLeft + data.collisionWidth - outerWidth - withinOffset,\r\n                        newOverRight;\r\n\r\n                    // Element is wider than within\r\n                    if ( data.collisionWidth > outerWidth ) {\r\n\r\n                        // Element is initially over the left side of within\r\n                        if ( overLeft > 0 && overRight <= 0 ) {\r\n                            newOverRight = position.left + overLeft + data.collisionWidth - outerWidth -\r\n                                withinOffset;\r\n                            position.left += overLeft - newOverRight;\r\n\r\n                        // Element is initially over right side of within\r\n                        } else if ( overRight > 0 && overLeft <= 0 ) {\r\n                            position.left = withinOffset;\r\n\r\n                        // Element is initially over both left and right sides of within\r\n                        } else {\r\n                            if ( overLeft > overRight ) {\r\n                                position.left = withinOffset + outerWidth - data.collisionWidth;\r\n                            } else {\r\n                                position.left = withinOffset;\r\n                            }\r\n                        }\r\n\r\n                    // Too far left -> align with left edge\r\n                    } else if ( overLeft > 0 ) {\r\n                        position.left += overLeft;\r\n\r\n                    // Too far right -> align with right edge\r\n                    } else if ( overRight > 0 ) {\r\n                        position.left -= overRight;\r\n\r\n                    // Adjust based on position and margin\r\n                    } else {\r\n                        position.left = max( position.left - collisionPosLeft, position.left );\r\n                    }\r\n                },\r\n                top: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.isWindow ? within.scrollTop : within.offset.top,\r\n                        outerHeight = data.within.height,\r\n                        collisionPosTop = position.top - data.collisionPosition.marginTop,\r\n                        overTop = withinOffset - collisionPosTop,\r\n                        overBottom = collisionPosTop + data.collisionHeight - outerHeight - withinOffset,\r\n                        newOverBottom;\r\n\r\n                    // Element is taller than within\r\n                    if ( data.collisionHeight > outerHeight ) {\r\n\r\n                        // Element is initially over the top of within\r\n                        if ( overTop > 0 && overBottom <= 0 ) {\r\n                            newOverBottom = position.top + overTop + data.collisionHeight - outerHeight -\r\n                                withinOffset;\r\n                            position.top += overTop - newOverBottom;\r\n\r\n                        // Element is initially over bottom of within\r\n                        } else if ( overBottom > 0 && overTop <= 0 ) {\r\n                            position.top = withinOffset;\r\n\r\n                        // Element is initially over both top and bottom of within\r\n                        } else {\r\n                            if ( overTop > overBottom ) {\r\n                                position.top = withinOffset + outerHeight - data.collisionHeight;\r\n                            } else {\r\n                                position.top = withinOffset;\r\n                            }\r\n                        }\r\n\r\n                    // Too far up -> align with top\r\n                    } else if ( overTop > 0 ) {\r\n                        position.top += overTop;\r\n\r\n                    // Too far down -> align with bottom edge\r\n                    } else if ( overBottom > 0 ) {\r\n                        position.top -= overBottom;\r\n\r\n                    // Adjust based on position and margin\r\n                    } else {\r\n                        position.top = max( position.top - collisionPosTop, position.top );\r\n                    }\r\n                }\r\n            },\r\n            flip: {\r\n                left: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.offset.left + within.scrollLeft,\r\n                        outerWidth = within.width,\r\n                        offsetLeft = within.isWindow ? within.scrollLeft : within.offset.left,\r\n                        collisionPosLeft = position.left - data.collisionPosition.marginLeft,\r\n                        overLeft = collisionPosLeft - offsetLeft,\r\n                        overRight = collisionPosLeft + data.collisionWidth - outerWidth - offsetLeft,\r\n                        myOffset = data.my[ 0 ] === \"left\" ?\r\n                            -data.elemWidth :\r\n                            data.my[ 0 ] === \"right\" ?\r\n                                data.elemWidth :\r\n                                0,\r\n                        atOffset = data.at[ 0 ] === \"left\" ?\r\n                            data.targetWidth :\r\n                            data.at[ 0 ] === \"right\" ?\r\n                                -data.targetWidth :\r\n                                0,\r\n                        offset = -2 * data.offset[ 0 ],\r\n                        newOverRight,\r\n                        newOverLeft;\r\n\r\n                    if ( overLeft < 0 ) {\r\n                        newOverRight = position.left + myOffset + atOffset + offset + data.collisionWidth -\r\n                            outerWidth - withinOffset;\r\n                        if ( newOverRight < 0 || newOverRight < abs( overLeft ) ) {\r\n                            position.left += myOffset + atOffset + offset;\r\n                        }\r\n                    } else if ( overRight > 0 ) {\r\n                        newOverLeft = position.left - data.collisionPosition.marginLeft + myOffset +\r\n                            atOffset + offset - offsetLeft;\r\n                        if ( newOverLeft > 0 || abs( newOverLeft ) < overRight ) {\r\n                            position.left += myOffset + atOffset + offset;\r\n                        }\r\n                    }\r\n                },\r\n                top: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.offset.top + within.scrollTop,\r\n                        outerHeight = within.height,\r\n                        offsetTop = within.isWindow ? within.scrollTop : within.offset.top,\r\n                        collisionPosTop = position.top - data.collisionPosition.marginTop,\r\n                        overTop = collisionPosTop - offsetTop,\r\n                        overBottom = collisionPosTop + data.collisionHeight - outerHeight - offsetTop,\r\n                        top = data.my[ 1 ] === \"top\",\r\n                        myOffset = top ?\r\n                            -data.elemHeight :\r\n                            data.my[ 1 ] === \"bottom\" ?\r\n                                data.elemHeight :\r\n                                0,\r\n                        atOffset = data.at[ 1 ] === \"top\" ?\r\n                            data.targetHeight :\r\n                            data.at[ 1 ] === \"bottom\" ?\r\n                                -data.targetHeight :\r\n                                0,\r\n                        offset = -2 * data.offset[ 1 ],\r\n                        newOverTop,\r\n                        newOverBottom;\r\n                    if ( overTop < 0 ) {\r\n                        newOverBottom = position.top + myOffset + atOffset + offset + data.collisionHeight -\r\n                            outerHeight - withinOffset;\r\n                        if ( newOverBottom < 0 || newOverBottom < abs( overTop ) ) {\r\n                            position.top += myOffset + atOffset + offset;\r\n                        }\r\n                    } else if ( overBottom > 0 ) {\r\n                        newOverTop = position.top - data.collisionPosition.marginTop + myOffset + atOffset +\r\n                            offset - offsetTop;\r\n                        if ( newOverTop > 0 || abs( newOverTop ) < overBottom ) {\r\n                            position.top += myOffset + atOffset + offset;\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            flipfit: {\r\n                left: function() {\r\n                    positions.flip.left.apply( this, arguments );\r\n                    positions.fit.left.apply( this, arguments );\r\n                },\r\n                top: function() {\r\n                    positions.flip.top.apply( this, arguments );\r\n                    positions.fit.top.apply( this, arguments );\r\n                }\r\n            }\r\n        };\r\n\r\n        geom.posit = posit;\r\n    })();\r\n\r\n    return dom.geom = geom;\r\n});\ndefine('skylark-utils-dom/fx',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./eventer\"\r\n], function(dom, langx, browser, geom, styler, eventer) {\r\n    var animationName,\r\n        animationDuration,\r\n        animationTiming,\r\n        animationDelay,\r\n        transitionProperty,\r\n        transitionDuration,\r\n        transitionTiming,\r\n        transitionDelay,\r\n\r\n        animationEnd = browser.normalizeCssEvent('AnimationEnd'),\r\n        transitionEnd = browser.normalizeCssEvent('TransitionEnd'),\r\n\r\n        supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i,\r\n        transform = browser.css3PropPrefix + \"transform\",\r\n        cssReset = {};\r\n\r\n\r\n    cssReset[animationName = browser.normalizeCssProperty(\"animation-name\")] =\r\n        cssReset[animationDuration = browser.normalizeCssProperty(\"animation-duration\")] =\r\n        cssReset[animationDelay = browser.normalizeCssProperty(\"animation-delay\")] =\r\n        cssReset[animationTiming = browser.normalizeCssProperty(\"animation-timing-function\")] = \"\";\r\n\r\n    cssReset[transitionProperty = browser.normalizeCssProperty(\"transition-property\")] =\r\n        cssReset[transitionDuration = browser.normalizeCssProperty(\"transition-duration\")] =\r\n        cssReset[transitionDelay = browser.normalizeCssProperty(\"transition-delay\")] =\r\n        cssReset[transitionTiming = browser.normalizeCssProperty(\"transition-timing-function\")] = \"\";\r\n\r\n\r\n\r\n    /*   \r\n     * Perform a custom animation of a set of CSS properties.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} properties\r\n     * @param {String} ease\r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     * @param {Number or String} delay\r\n     */\r\n    function animate(elm, properties, duration, ease, callback, delay) {\r\n        var key,\r\n            cssValues = {},\r\n            cssProperties = [],\r\n            transforms = \"\",\r\n            that = this,\r\n            endEvent,\r\n            wrappedCallback,\r\n            fired = false,\r\n            hasScrollTop = false,\r\n            resetClipAuto = false;\r\n\r\n        if (langx.isPlainObject(duration)) {\r\n            ease = duration.easing;\r\n            callback = duration.complete;\r\n            delay = duration.delay;\r\n            duration = duration.duration;\r\n        }\r\n\r\n        if (langx.isString(duration)) {\r\n            duration = fx.speeds[duration];\r\n        }\r\n        if (duration === undefined) {\r\n            duration = fx.speeds.normal;\r\n        }\r\n        duration = duration / 1000;\r\n        if (fx.off) {\r\n            duration = 0;\r\n        }\r\n\r\n        if (langx.isFunction(ease)) {\r\n            callback = ease;\r\n            eace = \"swing\";\r\n        } else {\r\n            ease = ease || \"swing\";\r\n        }\r\n\r\n        if (delay) {\r\n            delay = delay / 1000;\r\n        } else {\r\n            delay = 0;\r\n        }\r\n\r\n        if (langx.isString(properties)) {\r\n            // keyframe animation\r\n            cssValues[animationName] = properties;\r\n            cssValues[animationDuration] = duration + \"s\";\r\n            cssValues[animationTiming] = ease;\r\n            endEvent = animationEnd;\r\n        } else {\r\n            // CSS transitions\r\n            for (key in properties) {\r\n                var v = properties[key];\r\n                if (supportedTransforms.test(key)) {\r\n                    transforms += key + \"(\" + v + \") \";\r\n                } else {\r\n                    if (key === \"scrollTop\") {\r\n                        hasScrollTop = true;\r\n                    }\r\n                    if (key == \"clip\" && langx.isPlainObject(v)) {\r\n                        cssValues[key] = \"rect(\" + v.top+\"px,\"+ v.right +\"px,\"+ v.bottom +\"px,\"+ v.left+\"px)\";\r\n                        if (styler.css(elm,\"clip\") == \"auto\") {\r\n                            var size = geom.size(elm);\r\n                            styler.css(elm,\"clip\",\"rect(\"+\"0px,\"+ size.width +\"px,\"+ size.height +\"px,\"+\"0px)\");  \r\n                            resetClipAuto = true;\r\n                        }\r\n\r\n                    } else {\r\n                        cssValues[key] = v;\r\n                    }\r\n                    cssProperties.push(langx.dasherize(key));\r\n                }\r\n            }\r\n            endEvent = transitionEnd;\r\n        }\r\n\r\n        if (transforms) {\r\n            cssValues[transform] = transforms;\r\n            cssProperties.push(transform);\r\n        }\r\n\r\n        if (duration > 0 && langx.isPlainObject(properties)) {\r\n            cssValues[transitionProperty] = cssProperties.join(\", \");\r\n            cssValues[transitionDuration] = duration + \"s\";\r\n            cssValues[transitionDelay] = delay + \"s\";\r\n            cssValues[transitionTiming] = ease;\r\n        }\r\n\r\n        wrappedCallback = function(event) {\r\n            fired = true;\r\n            if (event) {\r\n                if (event.target !== event.currentTarget) {\r\n                    return // makes sure the event didn't bubble from \"below\"\r\n                }\r\n                eventer.off(event.target, endEvent, wrappedCallback)\r\n            } else {\r\n                eventer.off(elm, animationEnd, wrappedCallback) // triggered by setTimeout\r\n            }\r\n            styler.css(elm, cssReset);\r\n            if (resetClipAuto) {\r\n //               styler.css(elm,\"clip\",\"auto\");\r\n            }\r\n            callback && callback.call(this);\r\n        };\r\n\r\n        if (duration > 0) {\r\n            eventer.on(elm, endEvent, wrappedCallback);\r\n            // transitionEnd is not always firing on older Android phones\r\n            // so make sure it gets fired\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, ((duration + delay) * 1000) + 25)();\r\n        }\r\n\r\n        // trigger page reflow so new elements can animate\r\n        elm.clientLeft;\r\n\r\n        styler.css(elm, cssValues);\r\n\r\n        if (duration <= 0) {\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, 0)();\r\n        }\r\n\r\n        if (hasScrollTop) {\r\n            scrollToTop(elm, properties[\"scrollTop\"], duration, callback);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display an element.\r\n     * @param {Object} elm  \r\n     * @param {String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function show(elm, speed, callback) {\r\n        styler.show(elm);\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            styler.css(elm, \"opacity\", 0)\r\n            animate(elm, { opacity: 1, scale: \"1,1\" }, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Hide an element.\r\n     * @param {Object} elm  \r\n     * @param {String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function hide(elm, speed, callback) {\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            animate(elm, { opacity: 0, scale: \"0,0\" }, speed, function() {\r\n                styler.hide(elm);\r\n                if (callback) {\r\n                    callback.call(elm);\r\n                }\r\n            });\r\n        } else {\r\n            styler.hide(elm);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Set the vertical position of the scroll bar for an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} pos\r\n     * @param {Number or String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function scrollToTop(elm, pos, speed, callback) {\r\n        var scrollFrom = parseInt(elm.scrollTop),\r\n            i = 0,\r\n            runEvery = 5, // run every 5ms\r\n            freq = speed * 1000 / runEvery,\r\n            scrollTo = parseInt(pos);\r\n\r\n        var interval = setInterval(function() {\r\n            i++;\r\n\r\n            if (i <= freq) elm.scrollTop = (scrollTo - scrollFrom) / freq * i + scrollFrom;\r\n\r\n            if (i >= freq + 1) {\r\n                clearInterval(interval);\r\n                if (callback) langx.debounce(callback, 1000)();\r\n            }\r\n        }, runEvery);\r\n    }\r\n\r\n    /*   \r\n     * Display or hide an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function toggle(elm, speed, callback) {\r\n        if (styler.isInvisible(elm)) {\r\n            show(elm, speed, callback);\r\n        } else {\r\n            hide(elm, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Adjust the opacity of an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {Number or String} opacity\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeTo(elm, speed, opacity, easing, callback) {\r\n        animate(elm, { opacity: opacity }, speed, easing, callback);\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Display an element by fading them to opaque.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeIn(elm, speed, easing, callback) {\r\n        var target = styler.css(elm, \"opacity\");\r\n        if (target > 0) {\r\n            styler.css(elm, \"opacity\", 0);\r\n        } else {\r\n            target = 1;\r\n        }\r\n        styler.show(elm);\r\n\r\n        fadeTo(elm, speed, target, easing, callback);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Hide an element by fading them to transparent.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeOut(elm, speed, easing, callback) {\r\n        var _elm = elm,\r\n            complete,\r\n            opacity = styler.css(elm,\"opacity\"),\r\n            options = {};\r\n\r\n        if (langx.isPlainObject(speed)) {\r\n            options.easing = speed.easing;\r\n            options.duration = speed.duration;\r\n            complete = speed.complete;\r\n        } else {\r\n            options.duration = speed;\r\n            if (callback) {\r\n                complete = callback;\r\n                options.easing = easing;\r\n            } else {\r\n                complete = easing;\r\n            }\r\n        }\r\n        options.complete = function() {\r\n            styler.css(elm,\"opacity\",opacity);\r\n            styler.hide(elm);\r\n            if (complete) {\r\n                complete.call(elm);\r\n            }\r\n        }\r\n\r\n        fadeTo(elm, options, 0);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display or hide an element by animating its opacity.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} ceasing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeToggle(elm, speed, ceasing, allback) {\r\n        if (styler.isInvisible(elm)) {\r\n            fadeIn(elm, speed, easing, callback);\r\n        } else {\r\n            fadeOut(elm, speed, easing, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideDown(elm, duration, callback) {\r\n\r\n        // get the element position to restore it then\r\n        var position = styler.css(elm, 'position');\r\n\r\n        // show element if it is hidden\r\n        show(elm);\r\n\r\n        // place it so it displays as usually but hidden\r\n        styler.css(elm, {\r\n            position: 'absolute',\r\n            visibility: 'hidden'\r\n        });\r\n\r\n        // get naturally height, margin, padding\r\n        var marginTop = styler.css(elm, 'margin-top');\r\n        var marginBottom = styler.css(elm, 'margin-bottom');\r\n        var paddingTop = styler.css(elm, 'padding-top');\r\n        var paddingBottom = styler.css(elm, 'padding-bottom');\r\n        var height = styler.css(elm, 'height');\r\n\r\n        // set initial css for animation\r\n        styler.css(elm, {\r\n            position: position,\r\n            visibility: 'visible',\r\n            overflow: 'hidden',\r\n            height: 0,\r\n            marginTop: 0,\r\n            marginBottom: 0,\r\n            paddingTop: 0,\r\n            paddingBottom: 0\r\n        });\r\n\r\n        // animate to gotten height, margin and padding\r\n        animate(elm, {\r\n            height: height,\r\n            marginTop: marginTop,\r\n            marginBottom: marginBottom,\r\n            paddingTop: paddingTop,\r\n            paddingBottom: paddingBottom\r\n        }, {\r\n            duration: duration,\r\n            complete: function() {\r\n                if (callback) {\r\n                    callback.apply(elm);\r\n                }\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Hide an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideUp(elm, duration, callback) {\r\n        // active the function only if the element is visible\r\n        if (geom.height(elm) > 0) {\r\n\r\n            // get the element position to restore it then\r\n            var position = styler.css(elm, 'position');\r\n\r\n            // get the element height, margin and padding to restore them then\r\n            var height = styler.css(elm, 'height');\r\n            var marginTop = styler.css(elm, 'margin-top');\r\n            var marginBottom = styler.css(elm, 'margin-bottom');\r\n            var paddingTop = styler.css(elm, 'padding-top');\r\n            var paddingBottom = styler.css(elm, 'padding-bottom');\r\n\r\n            // set initial css for animation\r\n            styler.css(elm, {\r\n                visibility: 'visible',\r\n                overflow: 'hidden',\r\n                height: height,\r\n                marginTop: marginTop,\r\n                marginBottom: marginBottom,\r\n                paddingTop: paddingTop,\r\n                paddingBottom: paddingBottom\r\n            });\r\n\r\n            // animate element height, margin and padding to zero\r\n            animate(elm, {\r\n                height: 0,\r\n                marginTop: 0,\r\n                marginBottom: 0,\r\n                paddingTop: 0,\r\n                paddingBottom: 0\r\n            }, {\r\n                // callback : restore the element position, height, margin and padding to original values\r\n                duration: duration,\r\n                queue: false,\r\n                complete: function() {\r\n                    hide(elm);\r\n                    styler.css(elm, {\r\n                        visibility: 'visible',\r\n                        overflow: 'hidden',\r\n                        height: height,\r\n                        marginTop: marginTop,\r\n                        marginBottom: marginBottom,\r\n                        paddingTop: paddingTop,\r\n                        paddingBottom: paddingBottom\r\n                    });\r\n                    if (callback) {\r\n                        callback.apply(elm);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Display or hide an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideToggle(elm, duration, callback) {\r\n\r\n        // if the element is hidden, slideDown !\r\n        if (geom.height(elm) == 0) {\r\n            slideDown(elm, duration, callback);\r\n        }\r\n        // if the element is visible, slideUp !\r\n        else {\r\n            slideUp(elm, duration, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function emulateTransitionEnd(elm,duration) {\r\n        var called = false;\r\n        eventer.one(elm,'transitionEnd', function () { \r\n            called = true;\r\n        })\r\n        var callback = function () { \r\n            if (!called) {\r\n                eventer.trigger(elm,'transitionEnd') \r\n            }\r\n        };\r\n        setTimeout(callback, duration);\r\n        \r\n        return this;\r\n    } \r\n\r\n    function fx() {\r\n        return fx;\r\n    }\r\n\r\n    langx.mixin(fx, {\r\n        off: false,\r\n\r\n        speeds: {\r\n            normal: 400,\r\n            fast: 200,\r\n            slow: 600\r\n        },\r\n\r\n        animate,\r\n        emulateTransitionEnd,\r\n        fadeIn,\r\n        fadeOut,\r\n        fadeTo,\r\n        fadeToggle,\r\n        hide,\r\n        scrollToTop,\r\n\r\n        slideDown,\r\n        slideToggle,\r\n        slideUp,\r\n        show,\r\n        toggle\r\n    });\r\n\r\n    return dom.fx = fx;\r\n});\ndefine('skylark-utils-dom/transforms',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./datax\",\r\n    \"./styler\"\r\n], function(dom,langx,browser,datax,styler) {\r\n  var css3Transform = browser.normalizeCssProperty(\"transform\");\r\n\r\n  function getMatrix(radian, x, y) {\r\n    var Cos = Math.cos(radian), Sin = Math.sin(radian);\r\n    return {\r\n      M11: Cos * x, \r\n      M12: -Sin * y,\r\n      M21: Sin * x, \r\n      M22: Cos * y\r\n    };\r\n  }\r\n\r\n  function getZoom(scale, zoom) {\r\n      return scale > 0 && scale > -zoom ? zoom :\r\n        scale < 0 && scale < zoom ? -zoom : 0;\r\n  }\r\n\r\n    function change(el,d) {\r\n      var matrix = getMatrix(d.radian, d.y, d.x);\r\n      styler.css(el,css3Transform, \"matrix(\"\r\n        + matrix.M11.toFixed(16) + \",\" + matrix.M21.toFixed(16) + \",\"\r\n        + matrix.M12.toFixed(16) + \",\" + matrix.M22.toFixed(16) + \", 0, 0)\"\r\n      );      \r\n  }\r\n\r\n  function transformData(el,d) {\r\n    if (d) {\r\n      datax.data(el,\"transform\",d);\r\n    } else {\r\n      d = datax.data(el,\"transform\") || {};\r\n      d.radian = d.radian || 0;\r\n      d.x = d.x || 1;\r\n      d.y = d.y || 1;\r\n      d.zoom = d.zoom || 1;\r\n      return d;     \r\n    }\r\n  }\r\n\r\n  var calcs = {\r\n    //Vertical flip\r\n    vertical : function (d) {\r\n        d.radian = Math.PI - d.radian; \r\n        d.y *= -1;\r\n    },\r\n\r\n   //Horizontal flip\r\n    horizontal : function (d) {\r\n        d.radian = Math.PI - d.radian; \r\n        d.x *= -1;\r\n    },\r\n\r\n    //Rotate according to angle\r\n    rotate : function (d,degress) {\r\n        d.radian = degress * Math.PI / 180;; \r\n    },\r\n\r\n    //Turn left 90 degrees\r\n    left : function (d) {\r\n        d.radian -= Math.PI / 2; \r\n    },\r\n\r\n    //Turn right 90 degrees\r\n    right : function (d) {\r\n        d.radian += Math.PI / 2; \r\n    },\r\n \r\n    //zoom\r\n    scale: function (d,zoom) {\r\n        var hZoom = getZoom(d.y, zoom), vZoom = getZoom(d.x, zoom);\r\n        if (hZoom && vZoom) {\r\n          d.y += hZoom; \r\n          d.x += vZoom;\r\n        }\r\n    }, \r\n\r\n    //zoom in\r\n    zoomin: function (d) { \r\n      calcs.scale(d,0.1); \r\n    },\r\n    \r\n    //zoom out\r\n    zoomout: function (d) { \r\n      calcs.scale(d,-0.1); \r\n    }\r\n\r\n  };\r\n  \r\n  \r\n  function _createApiMethod(calcFunc) {\r\n    return function() {\r\n      var args = langx.makeArray(arguments),\r\n        el = args.shift(),\r\n          d = transformData(el);\r\n        args.unshift(d);\r\n        calcFunc.apply(this,args)\r\n        change(el,d);\r\n        transformData(el,d);\r\n    }\r\n  }\r\n  \r\n  function transforms() {\r\n    return transforms;\r\n  }\r\n\r\n  [\"vertical\",\"horizontal\",\"rotate\",\"left\",\"right\",\"scale\",\"zoom\",\"zoomin\",\"zoomout\"].forEach(function(name){\r\n    transforms[name] = _createApiMethod(calcs[name]);\r\n  });\r\n\r\n  langx.mixin(transforms, {\r\n    reset : function(el) {\r\n      var d = {\r\n        x : 1,\r\n        y : 1,\r\n        radian : 0,\r\n      }\r\n      change(el,d);\r\n      transformData(el,d);\r\n    }\r\n  });\r\n\r\n\r\n  return dom.transforms = transforms;\r\n});\r\n\ndefine('skylark-utils-dom/query',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./eventer\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./fx\"\r\n], function(dom, langx, noder, datax, eventer, finder, geom, styler, fx) {\r\n    var some = Array.prototype.some,\r\n        push = Array.prototype.push,\r\n        every = Array.prototype.every,\r\n        concat = Array.prototype.concat,\r\n        slice = Array.prototype.slice,\r\n        map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        forEach = Array.prototype.forEach,\r\n        indexOf = Array.prototype.indexOf,\r\n        sort = Array.prototype.sort,\r\n        isQ;\r\n\r\n    var rquickExpr = /^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)/;\r\n\r\n    var funcArg = langx.funcArg,\r\n        isArrayLike = langx.isArrayLike,\r\n        isString = langx.isString,\r\n        uniq = langx.uniq,\r\n        isFunction = langx.isFunction;\r\n\r\n    var type = langx.type,\r\n        isArray = langx.isArray,\r\n\r\n        isWindow = langx.isWindow,\r\n\r\n        isDocument = langx.isDocument,\r\n\r\n        isObject = langx.isObject,\r\n\r\n        isPlainObject = langx.isPlainObject,\r\n\r\n        compact = langx.compact,\r\n\r\n        flatten = langx.flatten,\r\n\r\n        camelCase = langx.camelCase,\r\n\r\n        dasherize = langx.dasherize,\r\n        children = finder.children;\r\n\r\n    function wrapper_map(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = langx.map(self, function(elem, idx) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n            return query(uniq(result));\r\n        }\r\n    }\r\n\r\n    function wrapper_selector(func, context, last) {\r\n        return function(selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                //if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem] : [elem, selector]);\r\n                //}\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper_selector_until(func, context, last) {\r\n        return function(util, selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            //if (selector === undefined) { //TODO : needs confirm?\r\n            //    selector = util;\r\n            //    util = undefined;\r\n            //}\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) { // TODO\r\n                //if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem, util] : [elem, selector, util]);\r\n                //}\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function wrapper_every_act(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            this.each(function(idx,node) {\r\n                func.apply(context, [this].concat(params));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_every_act_firstArgFunc(func, context, oldValueFunc) {\r\n        return function(arg1) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            forEach.call(self, function(elem, idx) {\r\n                var newArg1 = funcArg(elem, arg1, idx, oldValueFunc(elem));\r\n                func.apply(context, [elem, arg1].concat(params.slice(1)));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_some_chk(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            return some.call(self, function(elem) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n        }\r\n    }\r\n\r\n    function wrapper_name_value(func, context, oldValueFunc) {\r\n        return function(name, value) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n\r\n            if (langx.isPlainObject(name) || langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem, name));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem].concat(params));\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0], name]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    function wrapper_value(func, context, oldValueFunc) {\r\n        return function(value) {\r\n            var self = this;\r\n\r\n            if (langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem, newValue]);\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0]]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    var NodeList = langx.klass({\r\n        klassName: \"SkNodeList\",\r\n        init: function(selector, context) {\r\n            var self = this,\r\n                match, nodes, node, props;\r\n\r\n            if (selector) {\r\n                self.context = context = context || noder.doc();\r\n\r\n                if (isString(selector)) {\r\n                    // a html string or a css selector is expected\r\n                    self.selector = selector;\r\n\r\n                    if (selector.charAt(0) === \"<\" && selector.charAt(selector.length - 1) === \">\" && selector.length >= 3) {\r\n                        match = [null, selector, null];\r\n                    } else {\r\n                        match = rquickExpr.exec(selector);\r\n                    }\r\n\r\n                    if (match) {\r\n                        if (match[1]) {\r\n                            // if selector is html\r\n                            nodes = noder.createFragment(selector);\r\n\r\n                            if (langx.isPlainObject(context)) {\r\n                                props = context;\r\n                            }\r\n\r\n                        } else {\r\n                            node = finder.byId(match[2], noder.ownerDoc(context));\r\n\r\n                            if (node) {\r\n                                // if selector is id\r\n                                nodes = [node];\r\n                            }\r\n\r\n                        }\r\n                    } else {\r\n                        // if selector is css selector\r\n                        if (langx.isString(context)) {\r\n                            context = finder.find(context);\r\n                        }\r\n\r\n                        nodes = finder.descendants(context, selector);\r\n                    }\r\n                } else {\r\n                    if (selector !== window && isArrayLike(selector)) {\r\n                        // a dom node array is expected\r\n                        nodes = selector;\r\n                    } else {\r\n                        // a dom node is expected\r\n                        nodes = [selector];\r\n                    }\r\n                    //self.add(selector, false);\r\n                }\r\n            }\r\n\r\n\r\n            if (nodes) {\r\n\r\n                push.apply(self, nodes);\r\n\r\n                if (props) {\r\n                    for ( var name  in props ) {\r\n                        // Properties of context are called as methods if possible\r\n                        if ( langx.isFunction( this[ name ] ) ) {\r\n                            this[ name ]( props[ name ] );\r\n                        } else {\r\n                            this.attr( name, props[ name ] );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return self;\r\n        }\r\n    });\r\n\r\n    var query = (function() {\r\n        isQ = function(object) {\r\n            return object instanceof NodeList;\r\n        }\r\n        init = function(selector, context) {\r\n            return new NodeList(selector, context);\r\n        }\r\n\r\n        var $ = function(selector, context) {\r\n            if (isFunction(selector)) {\r\n                eventer.ready(function() {\r\n                    selector($);\r\n                });\r\n            } else if (isQ(selector)) {\r\n                return selector;\r\n            } else {\r\n                if (context && isQ(context) && isString(selector)) {\r\n                    return context.find(selector);\r\n                }\r\n                return init(selector, context);\r\n            }\r\n        };\r\n\r\n        $.fn = NodeList.prototype;\r\n        langx.mixin($.fn, {\r\n            // `map` and `slice` in the jQuery API work differently\r\n            // from their array counterparts\r\n            length : 0,\r\n\r\n            map: function(fn) {\r\n                return $(uniq(langx.map(this, function(el, i) {\r\n                    return fn.call(el, i, el)\r\n                })));\r\n            },\r\n\r\n            slice: function() {\r\n                return $(slice.apply(this, arguments))\r\n            },\r\n\r\n            forEach: function() {\r\n                return forEach.apply(this,arguments);\r\n            },\r\n\r\n            get: function(idx) {\r\n                return idx === undefined ? slice.call(this) : this[idx >= 0 ? idx : idx + this.length]\r\n            },\r\n\r\n            indexOf: function() {\r\n                return indexOf.apply(this,arguments);\r\n            },\r\n\r\n            sort : function() {\r\n                return sort.apply(this,arguments);\r\n            },\r\n\r\n            toArray: function() {\r\n                return slice.call(this);\r\n            },\r\n\r\n            size: function() {\r\n                return this.length\r\n            },\r\n\r\n            remove: wrapper_every_act(noder.remove, noder),\r\n\r\n            each: function(callback) {\r\n                langx.each(this, callback);\r\n                return this;\r\n            },\r\n\r\n            filter: function(selector) {\r\n                if (isFunction(selector)) return this.not(this.not(selector))\r\n                return $(filter.call(this, function(element) {\r\n                    return finder.matches(element, selector)\r\n                }))\r\n            },\r\n\r\n            add: function(selector, context) {\r\n                return $(uniq(this.toArray().concat($(selector, context).toArray())));\r\n            },\r\n\r\n            is: function(selector) {\r\n                if (this.length > 0) {\r\n                    var self = this;\r\n                    if (langx.isString(selector)) {\r\n                        return some.call(self,function(elem) {\r\n                            return finder.matches(elem, selector);\r\n                        });\r\n                    } else if (langx.isArrayLike(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return langx.inArray(elem, selector) > -1;\r\n                        });\r\n                    } else if (langx.isHtmlNode(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return elem ==  selector;\r\n                        });\r\n                    }\r\n                }\r\n                return false;\r\n            },\r\n            \r\n            not: function(selector) {\r\n                var nodes = []\r\n                if (isFunction(selector) && selector.call !== undefined)\r\n                    this.each(function(idx,node) {\r\n                        if (!selector.call(this, idx,node)) nodes.push(this)\r\n                    })\r\n                else {\r\n                    var excludes = typeof selector == 'string' ? this.filter(selector) :\r\n                        (isArrayLike(selector) && isFunction(selector.item)) ? slice.call(selector) : $(selector)\r\n                    this.forEach(function(el) {\r\n                        if (excludes.indexOf(el) < 0) nodes.push(el)\r\n                    })\r\n                }\r\n                return $(nodes)\r\n            },\r\n\r\n            has: function(selector) {\r\n                return this.filter(function() {\r\n                    return isObject(selector) ?\r\n                        noder.contains(this, selector) :\r\n                        $(this).find(selector).size()\r\n                })\r\n            },\r\n\r\n            eq: function(idx) {\r\n                return idx === -1 ? this.slice(idx) : this.slice(idx, +idx + 1);\r\n            },\r\n\r\n            first: function() {\r\n                return this.eq(0);\r\n            },\r\n\r\n            last: function() {\r\n                return this.eq(-1);\r\n            },\r\n\r\n            find: wrapper_selector(finder.descendants, finder),\r\n\r\n            closest: wrapper_selector(finder.closest, finder),\r\n            /*\r\n                        closest: function(selector, context) {\r\n                            var node = this[0],\r\n                                collection = false\r\n                            if (typeof selector == 'object') collection = $(selector)\r\n                            while (node && !(collection ? collection.indexOf(node) >= 0 : finder.matches(node, selector)))\r\n                                node = node !== context && !isDocument(node) && node.parentNode\r\n                            return $(node)\r\n                        },\r\n            */\r\n\r\n\r\n            parents: wrapper_selector(finder.ancestors, finder),\r\n\r\n            parentsUntil: wrapper_selector_until(finder.ancestors, finder),\r\n\r\n\r\n            parent: wrapper_selector(finder.parent, finder),\r\n\r\n            children: wrapper_selector(finder.children, finder),\r\n\r\n            contents: wrapper_map(noder.contents, noder),\r\n\r\n            empty: wrapper_every_act(noder.empty, noder),\r\n\r\n            // `pluck` is borrowed from Prototype.js\r\n            pluck: function(property) {\r\n                return langx.map(this, function(el) {\r\n                    return el[property]\r\n                })\r\n            },\r\n\r\n            pushStack : function(elms) {\r\n                var ret = $(elms);\r\n                ret.prevObject = this;\r\n                return ret;\r\n            },\r\n            \r\n            replaceWith: function(newContent) {\r\n                return this.before(newContent).remove();\r\n            },\r\n\r\n            wrap: function(structure) {\r\n                var func = isFunction(structure)\r\n                if (this[0] && !func)\r\n                    var dom = $(structure).get(0),\r\n                        clone = dom.parentNode || this.length > 1\r\n\r\n                return this.each(function(index,node) {\r\n                    $(this).wrapAll(\r\n                        func ? structure.call(this, index,node) :\r\n                        clone ? dom.cloneNode(true) : dom\r\n                    )\r\n                })\r\n            },\r\n\r\n            wrapAll: function(wrappingElement) {\r\n                if (this[0]) {\r\n                    $(this[0]).before(wrappingElement = $(wrappingElement));\r\n                    var children;\r\n                    // drill down to the inmost element\r\n                    while ((children = wrappingElement.children()).length) {\r\n                        wrappingElement = children.first();\r\n                    }\r\n                    $(wrappingElement).append(this);\r\n                }\r\n                return this\r\n            },\r\n\r\n            wrapInner: function(wrappingElement) {\r\n                var func = isFunction(wrappingElement)\r\n                return this.each(function(index,node) {\r\n                    var self = $(this),\r\n                        contents = self.contents(),\r\n                        dom = func ? wrappingElement.call(this, index,node) : wrappingElement\r\n                    contents.length ? contents.wrapAll(dom) : self.append(dom)\r\n                })\r\n            },\r\n\r\n            unwrap: function(selector) {\r\n                if (this.parent().children().length === 0) {\r\n                    // remove dom without text\r\n                    this.parent(selector).not(\"body\").each(function() {\r\n                        $(this).replaceWith(document.createTextNode(this.childNodes[0].textContent));\r\n                    });\r\n                } else {\r\n                    this.parent().each(function() {\r\n                        $(this).replaceWith($(this).children())\r\n                    });\r\n                }\r\n                return this\r\n            },\r\n\r\n            clone: function() {\r\n                return this.map(function() {\r\n                    return this.cloneNode(true)\r\n                })\r\n            },\r\n\r\n            hide: wrapper_every_act(fx.hide, fx),\r\n\r\n            toggle: function(setting) {\r\n                return this.each(function() {\r\n                    var el = $(this);\r\n                    (setting === undefined ? el.css(\"display\") == \"none\" : setting) ? el.show(): el.hide()\r\n                })\r\n            },\r\n\r\n            prev: function(selector) {\r\n                return $(this.pluck('previousElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            prevAll: wrapper_selector(finder.previousSibling, finder),\r\n\r\n            next: function(selector) {\r\n                return $(this.pluck('nextElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            nextAll: wrapper_selector(finder.nextSiblings, finder),\r\n\r\n            siblings: wrapper_selector(finder.siblings, finder),\r\n\r\n            html: wrapper_value(noder.html, noder, noder.html),\r\n\r\n            text: wrapper_value(datax.text, datax, datax.text),\r\n\r\n            attr: wrapper_name_value(datax.attr, datax, datax.attr),\r\n\r\n            removeAttr: wrapper_every_act(datax.removeAttr, datax),\r\n\r\n            prop: wrapper_name_value(datax.prop, datax, datax.prop),\r\n\r\n            removeProp: wrapper_every_act(datax.removeProp, datax),\r\n\r\n            data: wrapper_name_value(datax.data, datax, datax.data),\r\n\r\n            removeData: wrapper_every_act(datax.removeData, datax),\r\n\r\n            val: wrapper_value(datax.val, datax, datax.val),\r\n\r\n            offset: wrapper_value(geom.pagePosition, geom, geom.pagePosition),\r\n\r\n            style: wrapper_name_value(styler.css, styler),\r\n\r\n            css: wrapper_name_value(styler.css, styler),\r\n\r\n            index: function(elem) {\r\n                if (elem) {\r\n                    return this.indexOf($(elem)[0]);\r\n                } else {\r\n                    return this.parent().children().indexOf(this[0]);\r\n                }\r\n            },\r\n\r\n            //hasClass(name)\r\n            hasClass: wrapper_some_chk(styler.hasClass, styler),\r\n\r\n            //addClass(name)\r\n            addClass: wrapper_every_act_firstArgFunc(styler.addClass, styler, styler.className),\r\n\r\n            //removeClass(name)\r\n            removeClass: wrapper_every_act_firstArgFunc(styler.removeClass, styler, styler.className),\r\n\r\n            //toogleClass(name,when)\r\n            toggleClass: wrapper_every_act_firstArgFunc(styler.toggleClass, styler, styler.className),\r\n\r\n            scrollTop: wrapper_value(geom.scrollTop, geom),\r\n\r\n            scrollLeft: wrapper_value(geom.scrollLeft, geom),\r\n\r\n            position: function(options) {\r\n                if (!this.length) return\r\n\r\n                if (options) {\r\n                    if (options.of && options.of.length) {\r\n                        options = langx.clone(options);\r\n                        options.of = options.of[0];\r\n                    }\r\n                    return this.each( function() {\r\n                        geom.posit(this,options);\r\n                    });\r\n                } else {\r\n                    var elem = this[0];\r\n\r\n                    return geom.relativePosition(elem);\r\n\r\n                }             \r\n            },\r\n\r\n            offsetParent: wrapper_map(geom.offsetParent, geom)\r\n        });\r\n\r\n        // for now\r\n        $.fn.detach = $.fn.remove;\r\n\r\n        $.fn.hover = function(fnOver, fnOut) {\r\n            return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);\r\n        };\r\n\r\n        $.fn.size = wrapper_value(geom.size, geom);\r\n\r\n        $.fn.width = wrapper_value(geom.width, geom, geom.width);\r\n\r\n        $.fn.height = wrapper_value(geom.height, geom, geom.height);\r\n\r\n        $.fn.clientSize = wrapper_value(geom.clientSize, geom.clientSize);\r\n\r\n        ['width', 'height'].forEach(function(dimension) {\r\n            var offset, Dimension = dimension.replace(/./, function(m) {\r\n                return m[0].toUpperCase()\r\n            });\r\n\r\n            $.fn['outer' + Dimension] = function(margin, value) {\r\n                if (arguments.length) {\r\n                    if (typeof margin !== 'boolean') {\r\n                        value = margin;\r\n                        margin = false;\r\n                    }\r\n                } else {\r\n                    margin = false;\r\n                    value = undefined;\r\n                }\r\n\r\n                if (value === undefined) {\r\n                    var el = this[0];\r\n                    if (!el) {\r\n                        return undefined;\r\n                    }\r\n                    var cb = geom.size(el);\r\n                    if (margin) {\r\n                        var me = geom.marginExtents(el);\r\n                        cb.width = cb.width + me.left + me.right;\r\n                        cb.height = cb.height + me.top + me.bottom;\r\n                    }\r\n                    return dimension === \"width\" ? cb.width : cb.height;\r\n                } else {\r\n                    return this.each(function(idx, el) {\r\n                        var mb = {};\r\n                        var me = geom.marginExtents(el);\r\n                        if (dimension === \"width\") {\r\n                            mb.width = value;\r\n                            if (margin) {\r\n                                mb.width = mb.width - me.left - me.right\r\n                            }\r\n                        } else {\r\n                            mb.height = value;\r\n                            if (margin) {\r\n                                mb.height = mb.height - me.top - me.bottom;\r\n                            }\r\n                        }\r\n                        geom.size(el, mb);\r\n                    })\r\n\r\n                }\r\n            };\r\n        })\r\n\r\n        $.fn.innerWidth = wrapper_value(geom.clientWidth, geom, geom.clientWidth);\r\n\r\n        $.fn.innerHeight = wrapper_value(geom.clientHeight, geom, geom.clientHeight);\r\n\r\n        var traverseNode = noder.traverse;\r\n\r\n        function wrapper_node_operation(func, context, oldValueFunc) {\r\n            return function(html) {\r\n                var argType, nodes = langx.map(arguments, function(arg) {\r\n                    argType = type(arg)\r\n                    return argType == \"object\" || argType == \"array\" || arg == null ?\r\n                        arg : noder.createFragment(arg)\r\n                });\r\n                if (nodes.length < 1) {\r\n                    return this\r\n                }\r\n                this.each(function(idx) {\r\n                    func.apply(context, [this, nodes, idx > 0]);\r\n                });\r\n                return this;\r\n            }\r\n        }\r\n\r\n\r\n        $.fn.after = wrapper_node_operation(noder.after, noder);\r\n\r\n        $.fn.prepend = wrapper_node_operation(noder.prepend, noder);\r\n\r\n        $.fn.before = wrapper_node_operation(noder.before, noder);\r\n\r\n        $.fn.append = wrapper_node_operation(noder.append, noder);\r\n\r\n\r\n        langx.each( {\r\n            appendTo: \"append\",\r\n            prependTo: \"prepend\",\r\n            insertBefore: \"before\",\r\n            insertAfter: \"after\",\r\n            replaceAll: \"replaceWith\"\r\n        }, function( name, original ) {\r\n            $.fn[ name ] = function( selector ) {\r\n                var elems,\r\n                    ret = [],\r\n                    insert = $( selector ),\r\n                    last = insert.length - 1,\r\n                    i = 0;\r\n\r\n                for ( ; i <= last; i++ ) {\r\n                    elems = i === last ? this : this.clone( true );\r\n                    $( insert[ i ] )[ original ]( elems );\r\n\r\n                    // Support: Android <=4.0 only, PhantomJS 1 only\r\n                    // .get() because push.apply(_, arraylike) throws on ancient WebKit\r\n                    push.apply( ret, elems.get() );\r\n                }\r\n\r\n                return this.pushStack( ret );\r\n            };\r\n        } );\r\n\r\n/*\r\n        $.fn.insertAfter = function(html) {\r\n            $(html).after(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.insertBefore = function(html) {\r\n            $(html).before(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.appendTo = function(html) {\r\n            $(html).append(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.prependTo = function(html) {\r\n            $(html).prepend(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.replaceAll = function(selector) {\r\n            $(selector).replaceWith(this);\r\n            return this;\r\n        };\r\n*/\r\n        return $;\r\n    })();\r\n\r\n    (function($) {\r\n        $.fn.on = wrapper_every_act(eventer.on, eventer);\r\n\r\n        $.fn.off = wrapper_every_act(eventer.off, eventer);\r\n\r\n        $.fn.trigger = wrapper_every_act(eventer.trigger, eventer);\r\n\r\n        ('focusin focusout focus blur load resize scroll unload click dblclick ' +\r\n            'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave ' +\r\n            'change select keydown keypress keyup error transitionEnd').split(' ').forEach(function(event) {\r\n            $.fn[event] = function(data, callback) {\r\n                return (0 in arguments) ?\r\n                    this.on(event, data, callback) :\r\n                    this.trigger(event)\r\n            }\r\n        });\r\n\r\n        $.fn.one = function(event, selector, data, callback) {\r\n            if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n                callback = data;\r\n                data = selector;\r\n                selector = null;\r\n            }\r\n\r\n            if (langx.isFunction(data)) {\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            return this.on(event, selector, data, callback, 1)\r\n        };\r\n\r\n        $.fn.animate = wrapper_every_act(fx.animate, fx);\r\n        $.fn.emulateTransitionEnd = wrapper_every_act(fx.emulateTransitionEnd, fx);\r\n\r\n        $.fn.show = wrapper_every_act(fx.show, fx);\r\n        $.fn.hide = wrapper_every_act(fx.hide, fx);\r\n        $.fn.toogle = wrapper_every_act(fx.toogle, fx);\r\n        $.fn.fadeTo = wrapper_every_act(fx.fadeTo, fx);\r\n        $.fn.fadeIn = wrapper_every_act(fx.fadeIn, fx);\r\n        $.fn.fadeOut = wrapper_every_act(fx.fadeOut, fx);\r\n        $.fn.fadeToggle = wrapper_every_act(fx.fadeToggle, fx);\r\n\r\n        $.fn.slideDown = wrapper_every_act(fx.slideDown, fx);\r\n        $.fn.slideToggle = wrapper_every_act(fx.slideToggle, fx);\r\n        $.fn.slideUp = wrapper_every_act(fx.slideUp, fx);\r\n\r\n        $.fn.scrollParent = function( includeHidden ) {\r\n            var position = this.css( \"position\" ),\r\n                excludeStaticParent = position === \"absolute\",\r\n                overflowRegex = includeHidden ? /(auto|scroll|hidden)/ : /(auto|scroll)/,\r\n                scrollParent = this.parents().filter( function() {\r\n                    var parent = $( this );\r\n                    if ( excludeStaticParent && parent.css( \"position\" ) === \"static\" ) {\r\n                        return false;\r\n                    }\r\n                    return overflowRegex.test( parent.css( \"overflow\" ) + parent.css( \"overflow-y\" ) +\r\n                        parent.css( \"overflow-x\" ) );\r\n                } ).eq( 0 );\r\n\r\n            return position === \"fixed\" || !scrollParent.length ?\r\n                $( this[ 0 ].ownerDocument || document ) :\r\n                scrollParent;\r\n        };\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.end = function() {\r\n            return this.prevObject || $()\r\n        }\r\n\r\n        $.fn.andSelf = function() {\r\n            return this.add(this.prevObject || $())\r\n        }\r\n\r\n        $.fn.addBack = function(selector) {\r\n            if (this.prevObject) {\r\n                if (selector) {\r\n                    return this.add(this.prevObject.filter(selector));\r\n                } else {\r\n                    return this.add(this.prevObject);\r\n                }\r\n            } else {\r\n                return this;\r\n            }\r\n        }\r\n\r\n        'filter,add,not,eq,first,last,find,closest,parents,parent,children,siblings'.split(',').forEach(function(property) {\r\n            var fn = $.fn[property]\r\n            $.fn[property] = function() {\r\n                var ret = fn.apply(this, arguments)\r\n                ret.prevObject = this\r\n                return ret\r\n            }\r\n        })\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.query = $.fn.find;\r\n\r\n        $.fn.place = function(refNode, position) {\r\n            // summary:\r\n            //      places elements of this node list relative to the first element matched\r\n            //      by queryOrNode. Returns the original NodeList. See: `dojo/dom-construct.place`\r\n            // queryOrNode:\r\n            //      may be a string representing any valid CSS3 selector or a DOM node.\r\n            //      In the selector case, only the first matching element will be used\r\n            //      for relative positioning.\r\n            // position:\r\n            //      can be one of:\r\n            //\r\n            //      -   \"last\" (default)\r\n            //      -   \"first\"\r\n            //      -   \"before\"\r\n            //      -   \"after\"\r\n            //      -   \"only\"\r\n            //      -   \"replace\"\r\n            //\r\n            //      or an offset in the childNodes\r\n            if (langx.isString(refNode)) {\r\n                refNode = finder.descendant(refNode);\r\n            } else if (isQ(refNode)) {\r\n                refNode = refNode[0];\r\n            }\r\n            return this.each(function(i, node) {\r\n                switch (position) {\r\n                    case \"before\":\r\n                        noder.before(refNode, node);\r\n                        break;\r\n                    case \"after\":\r\n                        noder.after(refNode, node);\r\n                        break;\r\n                    case \"replace\":\r\n                        noder.replace(refNode, node);\r\n                        break;\r\n                    case \"only\":\r\n                        noder.empty(refNode);\r\n                        noder.append(refNode, node);\r\n                        break;\r\n                    case \"first\":\r\n                        noder.prepend(refNode, node);\r\n                        break;\r\n                        // else fallthrough...\r\n                    default: // aka: last\r\n                        noder.append(refNode, node);\r\n                }\r\n            });\r\n        };\r\n\r\n        $.fn.addContent = function(content, position) {\r\n            if (content.template) {\r\n                content = langx.substitute(content.template, content);\r\n            }\r\n            return this.append(content);\r\n        };\r\n\r\n        $.fn.replaceClass = function(newClass, oldClass) {\r\n            this.removeClass(oldClass);\r\n            this.addClass(newClass);\r\n            return this;\r\n        };\r\n\r\n        $.fn.replaceClass = function(newClass, oldClass) {\r\n            this.removeClass(oldClass);\r\n            this.addClass(newClass);\r\n            return this;\r\n        };\r\n\r\n        $.fn.disableSelection = ( function() {\r\n            var eventType = \"onselectstart\" in document.createElement( \"div\" ) ?\r\n                \"selectstart\" :\r\n                \"mousedown\";\r\n\r\n            return function() {\r\n                return this.on( eventType + \".ui-disableSelection\", function( event ) {\r\n                    event.preventDefault();\r\n                } );\r\n            };\r\n        } )();\r\n\r\n        $.fn.enableSelection = function() {\r\n            return this.off( \".ui-disableSelection\" );\r\n        };\r\n       \r\n\r\n    })(query);\r\n\r\n    query.fn.plugin = function(name,options) {\r\n        var args = slice.call( arguments, 1 ),\r\n            self = this,\r\n            returnValue = this;\r\n\r\n        this.each(function(){\r\n            returnValue = plugins.instantiate.apply(self,[this,name].concat(args));\r\n        });\r\n        return returnValue;\r\n    };\r\n\r\n    return dom.query = query;\r\n\r\n});\ndefine('skylark-utils-dom/images',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./eventer\",\r\n    \"./noder\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./datax\",\r\n    \"./transforms\",\r\n    \"./query\"\r\n], function(dom,langx,eventer,noder,finder,geom,styler,datax,transforms,$) {\r\n\r\n  function watch(imgs) {\r\n    if (!langx.isArray(imgs)) {\r\n      imgs = [imgs];\r\n    }\r\n    var totalCount = imgs.length,\r\n        progressedCount = 0,\r\n        successedCount = 0,\r\n        faileredCount = 0,\r\n        d = new langx.Deferred();\r\n\r\n\r\n    function complete() {\r\n\r\n      d.resolve({\r\n        \"total\" : totalCount,\r\n        \"successed\" : successedCount,\r\n        \"failered\" : faileredCount,\r\n        \"imgs\" : imgs \r\n      });\r\n    }\r\n\r\n    function progress(img,isLoaded) {\r\n\r\n      progressedCount++;\r\n      if (isLoaded) {\r\n        successedCount ++ ; \r\n      } else {\r\n        faileredCount ++ ;\r\n      }\r\n\r\n      // progress event\r\n      d.progress({\r\n        \"img\" : img,\r\n        \"isLoaded\" : isLoaded,\r\n        \"progressed\" : progressedCount,\r\n        \"total\" : totalCount,\r\n        \"imgs\" : imgs \r\n      });\r\n\r\n      // check if completed\r\n      if ( progressedCount == totalCount ) {\r\n        complete();\r\n      }\r\n    }\r\n\r\n    function check() {\r\n      if (!imgs.length ) {\r\n        complete();\r\n        return;\r\n      }\r\n\r\n      imgs.forEach(function(img) {\r\n        if (isCompleted(img)) {\r\n          progress(img,isLoaded(img));\r\n        } else {\r\n          eventer.on(img,{\r\n            \"load\" : function() {\r\n              progress(img,true);\r\n            },\r\n\r\n            \"error\" : function() {\r\n              progress(img,false);\r\n            }\r\n          });      \r\n        }\r\n      });\r\n    }\r\n\r\n    langx.defer(check);\r\n\r\n    d.promise.totalCount = totalCount;\r\n    return d.promise;\r\n  }\r\n\r\n\r\n  function isCompleted(img) {\r\n     return img.complete && img.naturalWidth !== undefined;\r\n  }\r\n\r\n  function isLoaded(img) {\r\n    return img.complete && img.naturalWidth !== 0;\r\n  }\r\n\r\n  function loaded(elm,options) {\r\n    var imgs = [];\r\n\r\n    options = options || {};\r\n\r\n    function addBackgroundImage (elm1) {\r\n\r\n      var reURL = /url\\((['\"])?(.*?)\\1\\)/gi;\r\n      var matches = reURL.exec( styler.css(elm1,\"background-image\"));\r\n      var url = matches && matches[2];\r\n      if ( url ) {\r\n        var img = new Image();\r\n        img.src = url;\r\n        imgs.push(img);\r\n      }\r\n    }\r\n\r\n    // filter siblings\r\n    if ( elm.nodeName == 'IMG' ) {\r\n      imgs.push( elm );\r\n    } else {\r\n      // find children\r\n      var childImgs = finder.findAll(elm,'img');\r\n      // concat childElems to filterFound array\r\n      for ( var i=0; i < childImgs.length; i++ ) {\r\n        imgs.push(childImgs[i]);\r\n      }\r\n\r\n      // get background image on element\r\n      if ( options.background === true ) {\r\n        addBackgroundImage(elm);\r\n      } else  if ( typeof options.background == 'string' ) {\r\n        var children = finder.findAll(elm, options.background );\r\n        for ( i=0; i < children.length; i++ ) {\r\n          addBackgroundImage( children[i] );\r\n        }\r\n      }\r\n    }\r\n\r\n    return watch(imgs);\r\n  }\r\n\r\n  function preload(urls,options) {\r\n      if (langx.isString(urls)) {\r\n        urls = [urls];\r\n      }\r\n      var images = [];\r\n\r\n      urls.forEach(function(url){\r\n        var img = new Image();\r\n        img.src = url;\r\n        images.push(img);\r\n      });\r\n\r\n      return watch(images);\r\n  }\r\n\r\n\r\n  $.fn.imagesLoaded = function( options ) {\r\n    return loaded(this,options);\r\n  };\r\n\r\n\r\n  function viewer(el,options) {\r\n    var img ,\r\n        style = {},\r\n        clientSize = geom.clientSize(el),\r\n        loadedCallback = options.loaded,\r\n        faileredCallback = options.failered;\r\n\r\n    function onload() {\r\n        styler.css(img,{//居中\r\n          top: (clientSize.height - img.offsetHeight) / 2 + \"px\",\r\n          left: (clientSize.width - img.offsetWidth) / 2 + \"px\"\r\n        });\r\n\r\n        transforms.reset(img);\r\n\r\n        styler.css(img,{\r\n          visibility: \"visible\"\r\n        });\r\n\r\n        if (loadedCallback) {\r\n          loadedCallback();\r\n        }\r\n    }\r\n\r\n    function onerror() {\r\n\r\n    }\r\n    function _init() {\r\n      style = styler.css(el,[\"position\",\"overflow\"]);\r\n      if (style.position != \"relative\" && style.position != \"absolute\") { \r\n        styler.css(el,\"position\", \"relative\" );\r\n      }\r\n      styler.css(el,\"overflow\", \"hidden\" );\r\n\r\n      img = new Image();\r\n\r\n      styler.css(img,{\r\n        position: \"absolute\",\r\n        border: 0, padding: 0, margin: 0, width: \"auto\", height: \"auto\",\r\n        visibility: \"hidden\"\r\n      });\r\n\r\n      img.onload = onload;\r\n      img.onerror = onerror;\r\n\r\n      noder.append(el,img);\r\n\r\n      if (options.url) {\r\n        _load(options.url);\r\n      }\r\n    }\r\n\r\n    function _load(url) {\r\n        img.style.visibility = \"hidden\";\r\n        img.src = url;\r\n    }\r\n\r\n    function _dispose() {\r\n        noder.remove(img);\r\n        styler.css(el,style);\r\n        img = img.onload = img.onerror = null;\r\n    }\r\n\r\n    _init();\r\n\r\n    var ret =  {\r\n      load : _load,\r\n      dispose : _dispose\r\n    };\r\n\r\n    [\"vertical\",\"horizontal\",\"rotate\",\"left\",\"right\",\"scale\",\"zoom\",\"zoomin\",\"zoomout\",\"reset\"].forEach(\r\n      function(name){\r\n        ret[name] = function() {\r\n          var args = langx.makeArray(arguments);\r\n          args.unshift(img);\r\n          transforms[name].apply(null,args);\r\n        }\r\n      }\r\n    );\r\n\r\n    return ret;\r\n  }\r\n\r\n  $.fn.imagesViewer = function( options ) {\r\n    return viewer(this,options);\r\n  };\r\n\r\n  function images() {\r\n    return images;\r\n  }\r\n\r\n  images.transform = function (el,options) {\r\n  };\r\n\r\n  [\"vertical\",\"horizontal\",\"rotate\",\"left\",\"right\",\"scale\",\"zoom\",\"zoomin\",\"zoomout\",\"reset\"].forEach(\r\n    function(name){\r\n      images.transform[name] = transforms[name];\r\n    }\r\n  );\r\n\r\n\r\n  langx.mixin(images, {\r\n    isCompleted : isCompleted,\r\n\r\n    isLoaded : isLoaded,\r\n\r\n    loaded : loaded,\r\n\r\n    preload : preload,\r\n\r\n    viewer : viewer\r\n  });\r\n\r\n  return dom.images = images;\r\n});\r\n\ndefine('skylark-utils-dom/elmx',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./datax\",\r\n    \"./eventer\",\r\n    \"./finder\",\r\n    \"./fx\",\r\n    \"./geom\",\r\n    \"./noder\",\r\n    \"./styler\",\r\n    \"./query\"\r\n], function(dom, langx, datax, eventer, finder, fx, geom, noder, styler,$) {\r\n    var map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n    /*\r\n     * VisualElement is a skylark class type wrapping a visule dom node,\r\n     * provides a number of prototype methods and supports chain calls.\r\n     */\r\n    var VisualElement = langx.klass({\r\n        klassName: \"VisualElement\",\r\n\r\n        \"_construct\": function(node) {\r\n            if (langx.isString(node)) {\r\n                if (node.charAt(0) === \"<\") {\r\n                    //html\r\n                    node = noder.createFragment(node)[0];\r\n                } else {\r\n                    // id\r\n                    node = document.getElementById(node);\r\n                }\r\n            }\r\n            this._elm = node;\r\n        }\r\n    });\r\n\r\n    VisualElement.prototype.$ = VisualElement.prototype.query = function(selector) {\r\n        return $(selector,this._elm);\r\n    };\r\n\r\n    VisualElement.prototype.elm = function() {\r\n        return this._elm;\r\n    };\r\n\r\n    /*\r\n     * the VisualElement object wrapping document.body\r\n     */\r\n    var root = new VisualElement(document.body),\r\n        elmx = function(node) {\r\n            if (node) {\r\n                return new VisualElement(node);\r\n            } else {\r\n                return root;\r\n            }\r\n        };\r\n    /*\r\n     * Extend VisualElement prototype with wrapping the specified methods.\r\n     * @param {ArrayLike} fn\r\n     * @param {Object} context\r\n     */\r\n    function _delegator(fn, context) {\r\n        return function() {\r\n            var self = this,\r\n                elem = self._elm,\r\n                ret = fn.apply(context, [elem].concat(slice.call(arguments)));\r\n\r\n            if (ret) {\r\n                if (ret === context) {\r\n                    return self;\r\n                } else {\r\n                    if (ret instanceof HTMLElement) {\r\n                        ret = new VisualElement(ret);\r\n                    } else if (langx.isArrayLike(ret)) {\r\n                        ret = map.call(ret, function(el) {\r\n                            if (el instanceof HTMLElement) {\r\n                                return new VisualElement(el);\r\n                            } else {\r\n                                return el;\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            return ret;\r\n        };\r\n    }\r\n\r\n    langx.mixin(elmx, {\r\n        batch: function(nodes, action, args) {\r\n            nodes.forEach(function(node) {\r\n                var elm = (node instanceof VisualElement) ? node : elmx(node);\r\n                elm[action].apply(elm, args);\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        root: new VisualElement(document.body),\r\n\r\n        VisualElement: VisualElement,\r\n\r\n        partial: function(name, fn) {\r\n            var props = {};\r\n\r\n            props[name] = fn;\r\n\r\n            VisualElement.partial(props);\r\n        },\r\n\r\n        delegate: function(names, context) {\r\n            var props = {};\r\n\r\n            names.forEach(function(name) {\r\n                props[name] = _delegator(context[name], context);\r\n            });\r\n\r\n            VisualElement.partial(props);\r\n        }\r\n    });\r\n\r\n    // from ./datax\r\n    elmx.delegate([\r\n        \"attr\",\r\n        \"data\",\r\n        \"prop\",\r\n        \"removeAttr\",\r\n        \"removeData\",\r\n        \"text\",\r\n        \"val\"\r\n    ], datax);\r\n\r\n    // from ./eventer\r\n    elmx.delegate([\r\n        \"off\",\r\n        \"on\",\r\n        \"one\",\r\n        \"shortcuts\",\r\n        \"trigger\"\r\n    ], eventer);\r\n\r\n    // from ./finder\r\n    elmx.delegate([\r\n        \"ancestor\",\r\n        \"ancestors\",\r\n        \"children\",\r\n        \"descendant\",\r\n        \"find\",\r\n        \"findAll\",\r\n        \"firstChild\",\r\n        \"lastChild\",\r\n        \"matches\",\r\n        \"nextSibling\",\r\n        \"nextSiblings\",\r\n        \"parent\",\r\n        \"previousSibling\",\r\n        \"previousSiblings\",\r\n        \"siblings\"\r\n    ], finder);\r\n\r\n    /*\r\n     * find a dom element matched by the specified selector.\r\n     * @param {String} selector\r\n     */\r\n    elmx.find = function(selector) {\r\n        if (selector === \"body\") {\r\n            return this.root;\r\n        } else {\r\n            return this.root.descendant(selector);\r\n        }\r\n    };\r\n\r\n    // from ./fx\r\n    elmx.delegate([\r\n        \"animate\",\r\n        \"fadeIn\",\r\n        \"fadeOut\",\r\n        \"fadeTo\",\r\n        \"fadeToggle\",\r\n        \"hide\",\r\n        \"scrollToTop\",\r\n        \"show\",\r\n        \"toggle\"\r\n    ], fx);\r\n\r\n\r\n    // from ./geom\r\n    elmx.delegate([\r\n        \"borderExtents\",\r\n        \"boundingPosition\",\r\n        \"boundingRect\",\r\n        \"clientHeight\",\r\n        \"clientSize\",\r\n        \"clientWidth\",\r\n        \"contentRect\",\r\n        \"height\",\r\n        \"marginExtents\",\r\n        \"offsetParent\",\r\n        \"paddingExtents\",\r\n        \"pagePosition\",\r\n        \"pageRect\",\r\n        \"relativePosition\",\r\n        \"relativeRect\",\r\n        \"scrollIntoView\",\r\n        \"scrollLeft\",\r\n        \"scrollTop\",\r\n        \"size\",\r\n        \"width\"\r\n    ], geom);\r\n\r\n    // from ./noder\r\n    elmx.delegate([\r\n        \"after\",\r\n        \"append\",\r\n        \"before\",\r\n        \"clone\",\r\n        \"contains\",\r\n        \"contents\",\r\n        \"empty\",\r\n        \"html\",\r\n        \"isChildOf\",\r\n        \"isDocument\",\r\n        \"isInDocument\",\r\n        \"isWindow\",\r\n        \"ownerDoc\",\r\n        \"prepend\",\r\n        \"remove\",\r\n        \"removeChild\",\r\n        \"replace\",\r\n        \"reverse\",\r\n        \"throb\",\r\n        \"traverse\",\r\n        \"wrapper\",\r\n        \"wrapperInner\",\r\n        \"unwrap\"\r\n    ], noder);\r\n\r\n    // from ./styler\r\n    elmx.delegate([\r\n        \"addClass\",\r\n        \"className\",\r\n        \"css\",\r\n        \"hasClass\",\r\n        \"hide\",\r\n        \"isInvisible\",\r\n        \"removeClass\",\r\n        \"show\",\r\n        \"toggleClass\"\r\n    ], styler);\r\n\r\n    // properties\r\n\r\n    var properties = [ 'position', 'left', 'top', 'right', 'bottom', 'width', 'height', 'border', 'borderLeft',\r\n    'borderTop', 'borderRight', 'borderBottom', 'borderColor', 'display', 'overflow', 'margin', 'marginLeft', 'marginTop', 'marginRight', 'marginBottom', 'padding', 'paddingLeft', 'paddingTop', 'paddingRight', 'paddingBottom', 'color',\r\n    'background', 'backgroundColor', 'opacity', 'fontSize', 'fontWeight', 'textAlign', 'textDecoration', 'textTransform', 'cursor', 'zIndex' ];\r\n\r\n    properties.forEach( function ( property ) {\r\n\r\n        var method = property;\r\n\r\n        VisualElement.prototype[method ] = function (value) {\r\n\r\n            this.css( property, value );\r\n\r\n            return this;\r\n\r\n        };\r\n\r\n    });\r\n\r\n    // events\r\n    var events = [ 'keyUp', 'keyDown', 'mouseOver', 'mouseOut', 'click', 'dblClick', 'change' ];\r\n\r\n    events.forEach( function ( event ) {\r\n\r\n        var method = event;\r\n\r\n        VisualElement.prototype[method ] = function ( callback ) {\r\n\r\n            this.on( event.toLowerCase(), callback);\r\n\r\n            return this;\r\n        };\r\n\r\n    });\r\n\r\n\r\n    return dom.elmx = elmx;\r\n});\ndefine('skylark-utils-dom/plugins',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./eventer\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./fx\",\r\n    \"./query\",\r\n    \"./elmx\"\r\n], function(dom, langx, noder, datax, eventer, finder, geom, styler, fx, $, elmx) {\r\n    \"use strict\";\r\n\r\n    var slice = Array.prototype.slice,\r\n        concat = Array.prototype.concat,\r\n        pluginKlasses = {},\r\n        shortcuts = {};\r\n\r\n    /*\r\n     * Create or get or destory a plugin instance assocated with the element.\r\n     */\r\n    function instantiate(elm,pluginName,options) {\r\n        var pair = pluginName.split(\":\"),\r\n            instanceDataName = pair[1];\r\n        pluginName = pair[0];\r\n\r\n        if (!instanceDataName) {\r\n            instanceDataName = pluginName;\r\n        }\r\n\r\n        var pluginInstance = datax.data( elm, instanceDataName );\r\n\r\n        if (options === \"instance\") {\r\n            return pluginInstance;\r\n        } else if (options === \"destroy\") {\r\n            if (!pluginInstance) {\r\n                throw new Error (\"The plugin instance is not existed\");\r\n            }\r\n            pluginInstance.destroy();\r\n            datax.removeData( elm, pluginName);\r\n            pluginInstance = undefined;\r\n        } else {\r\n            if (!pluginInstance) {\r\n                if (options !== undefined && typeof options !== \"object\") {\r\n                    throw new Error (\"The options must be a plain object\");\r\n                }\r\n                var pluginKlass = pluginKlasses[pluginName]; \r\n                pluginInstance = new pluginKlass(elm,options);\r\n                datax.data( elm, instanceDataName,pluginInstance );\r\n            } else if (options) {\r\n                pluginInstance.reset(options);\r\n            }\r\n        }\r\n\r\n        return pluginInstance;\r\n    }\r\n\r\n    function shortcutter(pluginName,extfn) {\r\n       /*\r\n        * Create or get or destory a plugin instance assocated with the element,\r\n        * and also you can execute the plugin method directory;\r\n        */\r\n        return function (elm,options) {\r\n            var  plugin = instantiate(elm, pluginName,\"instance\");\r\n            if ( options === \"instance\" ) {\r\n              return plugin || null;\r\n            }\r\n            if (!plugin) {\r\n                plugin = instantiate(elm, pluginName,typeof options == 'object' && options || {});\r\n            }\r\n\r\n            if (options) {\r\n                var args = slice.call(arguments,1); //2\r\n                if (extfn) {\r\n                    return extfn.apply(plugin,args);\r\n                } else {\r\n                    if (typeof options == 'string') {\r\n                        var methodName = options;\r\n\r\n                        if ( !plugin ) {\r\n                            throw new Error( \"cannot call methods on \" + pluginName +\r\n                                \" prior to initialization; \" +\r\n                                \"attempted to call method '\" + methodName + \"'\" );\r\n                        }\r\n\r\n                        if ( !langx.isFunction( plugin[ methodName ] ) || methodName.charAt( 0 ) === \"_\" ) {\r\n                            throw new Error( \"no such method '\" + methodName + \"' for \" + pluginName +\r\n                                \" plugin instance\" );\r\n                        }\r\n\r\n                        return plugin[methodName].apply(plugin,args);\r\n                    }                \r\n                }                \r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    /*\r\n     * Register a plugin type\r\n     */\r\n    function register( pluginKlass,shortcutName,instanceDataName,extfn) {\r\n        var pluginName = pluginKlass.prototype.pluginName;\r\n        \r\n        pluginKlasses[pluginName] = pluginKlass;\r\n\r\n        if (shortcutName) {\r\n            if (instanceDataName && langx.isFunction(instanceDataName)) {\r\n                extfn = instanceDataName;\r\n                instanceDataName = null;\r\n            } \r\n            if (instanceDataName) {\r\n                pluginName = pluginName + \":\" + instanceDataName;\r\n            }\r\n\r\n            var shortcut = shortcuts[shortcutName] = shortcutter(pluginName,extfn);\r\n                \r\n            $.fn[shortcutName] = function(options) {\r\n                var returnValue = this;\r\n\r\n                if ( !this.length && options === \"instance\" ) {\r\n                  returnValue = undefined;\r\n                } else {\r\n                  var args = slice.call(arguments);\r\n                  this.each(function () {\r\n                    var args2 = slice.call(args);\r\n                    args2.unshift(this);\r\n                    var  ret  = shortcut.apply(null,args2);\r\n                    if (ret !== undefined) {\r\n                        returnValue = ret;\r\n                        return false;\r\n                    }\r\n                  });\r\n                }\r\n\r\n                return returnValue;\r\n            };\r\n\r\n            elmx.partial(shortcutName,function(options) {\r\n                var  ret  = shortcut(this._elm,options);\r\n                if (ret === undefined) {\r\n                    ret = this;\r\n                }\r\n                return ret;\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n \r\n    var Plugin =   langx.Evented.inherit({\r\n        klassName: \"Plugin\",\r\n\r\n        _construct : function(elm,options) {\r\n           this._elm = elm;\r\n           this._initOptions(options);\r\n        },\r\n\r\n        _initOptions : function(options) {\r\n          var ctor = this.constructor,\r\n              cache = ctor.cache = ctor.cache || {},\r\n              defaults = cache.defaults;\r\n          if (!defaults) {\r\n            var  ctors = [];\r\n            do {\r\n              ctors.unshift(ctor);\r\n              if (ctor === Plugin) {\r\n                break;\r\n              }\r\n              ctor = ctor.superclass;\r\n            } while (ctor);\r\n\r\n            defaults = cache.defaults = {};\r\n            for (var i=0;i<ctors.length;i++) {\r\n              ctor = ctors[i];\r\n              if (ctor.prototype.hasOwnProperty(\"options\")) {\r\n                langx.mixin(defaults,ctor.prototype.options);\r\n              }\r\n              if (ctor.hasOwnProperty(\"options\")) {\r\n                langx.mixin(defaults,ctor.options);\r\n              }\r\n            }\r\n          }\r\n          Object.defineProperty(this,\"options\",{\r\n            value :langx.mixin({},defaults,options)\r\n          });\r\n\r\n          //return this.options = langx.mixin({},defaults,options);\r\n          return this.options;\r\n        },\r\n\r\n\r\n        destroy: function() {\r\n            var that = this;\r\n\r\n            this._destroy();\r\n            // We can probably remove the unbind calls in 2.0\r\n            // all event bindings should go through this._on()\r\n            datax.removeData(this._elm,this.pluginName );\r\n        },\r\n\r\n        _destroy: langx.noop,\r\n\r\n        _delay: function( handler, delay ) {\r\n            function handlerProxy() {\r\n                return ( typeof handler === \"string\" ? instance[ handler ] : handler )\r\n                    .apply( instance, arguments );\r\n            }\r\n            var instance = this;\r\n            return setTimeout( handlerProxy, delay || 0 );\r\n        },\r\n\r\n        option: function( key, value ) {\r\n            var options = key;\r\n            var parts;\r\n            var curOption;\r\n            var i;\r\n\r\n            if ( arguments.length === 0 ) {\r\n\r\n                // Don't return a reference to the internal hash\r\n                return langx.mixin( {}, this.options );\r\n            }\r\n\r\n            if ( typeof key === \"string\" ) {\r\n\r\n                // Handle nested keys, e.g., \"foo.bar\" => { foo: { bar: ___ } }\r\n                options = {};\r\n                parts = key.split( \".\" );\r\n                key = parts.shift();\r\n                if ( parts.length ) {\r\n                    curOption = options[ key ] = langx.mixin( {}, this.options[ key ] );\r\n                    for ( i = 0; i < parts.length - 1; i++ ) {\r\n                        curOption[ parts[ i ] ] = curOption[ parts[ i ] ] || {};\r\n                        curOption = curOption[ parts[ i ] ];\r\n                    }\r\n                    key = parts.pop();\r\n                    if ( arguments.length === 1 ) {\r\n                        return curOption[ key ] === undefined ? null : curOption[ key ];\r\n                    }\r\n                    curOption[ key ] = value;\r\n                } else {\r\n                    if ( arguments.length === 1 ) {\r\n                        return this.options[ key ] === undefined ? null : this.options[ key ];\r\n                    }\r\n                    options[ key ] = value;\r\n                }\r\n            }\r\n\r\n            this._setOptions( options );\r\n\r\n            return this;\r\n        },\r\n\r\n        _setOptions: function( options ) {\r\n            var key;\r\n\r\n            for ( key in options ) {\r\n                this._setOption( key, options[ key ] );\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        _setOption: function( key, value ) {\r\n\r\n            this.options[ key ] = value;\r\n\r\n            return this;\r\n        },\r\n\r\n        elm : function() {\r\n            return this._elm;\r\n        }\r\n\r\n    });\r\n\r\n    $.fn.plugin = function(name,options) {\r\n        var args = slice.call( arguments, 1 ),\r\n            self = this,\r\n            returnValue = this;\r\n\r\n        this.each(function(){\r\n            returnValue = instantiate.apply(self,[this,name].concat(args));\r\n        });\r\n        return returnValue;\r\n    };\r\n\r\n    elmx.partial(\"plugin\",function(name,options) {\r\n        var args = slice.call( arguments, 1 );\r\n        return instantiate.apply(this,[this.domNode,name].concat(args));\r\n    }); \r\n\r\n\r\n    function plugins() {\r\n        return plugins;\r\n    }\r\n     \r\n    langx.mixin(plugins, {\r\n        instantiate,\r\n        Plugin,\r\n        register,\r\n        shortcuts\r\n    });\r\n\r\n    return plugins;\r\n});\ndefine('skylark-utils-dom/scripter',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./finder\"\r\n], function(dom, langx, noder, finder) {\r\n\r\n    var head = document.getElementsByTagName('head')[0],\r\n        scriptsByUrl = {},\r\n        scriptElementsById = {},\r\n        count = 0;\r\n\r\n    function scripter() {\r\n        return scripter;\r\n    }\r\n\r\n    langx.mixin(scripter, {\r\n        /*\r\n         * Load a script from a url into the document.\r\n         * @param {} url\r\n         * @param {} loadedCallback\r\n         * @param {} errorCallback\r\n         */\r\n        loadJavaScript: function(url, loadedCallback, errorCallback) {\r\n            var script = scriptsByUrl[url];\r\n            if (!script) {\r\n                script = scriptsByUrl[url] = {\r\n                    state: 0, //0:unload,1:loaded,-1:loaderror\r\n                    loadedCallbacks: [],\r\n                    errorCallbacks: []\r\n                }\r\n            }\r\n\r\n            script.loadedCallbacks.push(loadedCallback);\r\n            script.errorCallbacks.push(errorCallback);\r\n\r\n            if (script.state === 1) {\r\n                script.node.onload();\r\n            } else if (script.state === -1) {\r\n                script.node.onerror();\r\n            } else {\r\n                var node = script.node = document.createElement(\"script\"),\r\n                    id = script.id = (count++);\r\n\r\n                node.type = \"text/javascript\";\r\n                node.async = false;\r\n                node.defer = false;\r\n                startTime = new Date().getTime();\r\n                head.appendChild(node);\r\n\r\n                node.onload = function() {\r\n                        script.state = 1;\r\n\r\n                        var callbacks = script.loadedCallbacks,\r\n                            i = callbacks.length;\r\n\r\n                        while (i--) {\r\n                            callbacks[i]();\r\n                        }\r\n                        script.loadedCallbacks = [];\r\n                        script.errorCallbacks = [];\r\n                    },\r\n                    node.onerror = function() {\r\n                        script.state = -1;\r\n                        var callbacks = script.errorCallbacks,\r\n                            i = callbacks.length;\r\n\r\n                        while (i--) {\r\n                            callbacks[i]();\r\n                        }\r\n                        script.loadedCallbacks = [];\r\n                        script.errorCallbacks = [];\r\n                    };\r\n                node.src = url;\r\n\r\n                scriptElementsById[id] = node;\r\n            }\r\n            return script.id;\r\n        },\r\n        /*\r\n         * Remove the specified script from the document.\r\n         * @param {Number} id\r\n         */\r\n        deleteJavaScript: function(id) {\r\n            var node = scriptElementsById[id];\r\n            if (node) {\r\n                var url = node.src;\r\n                noder.remove(node);\r\n                delete scriptElementsById[id];\r\n                delete scriptsByUrl[url];\r\n            }\r\n        }\r\n    });\r\n\r\n    return dom.scripter = scripter;\r\n});\ndefine('skylark-utils-dom/main',[\r\n    \"./dom\",\r\n    \"./browser\",\r\n    \"./contents\",\r\n    \"./css\",\r\n    \"./datax\",\r\n    \"./eventer\",\r\n    \"./finder\",\r\n    \"./fx\",\r\n    \"./geom\",\r\n    \"./images\",\r\n    \"./noder\",\r\n    \"./plugins\",\r\n    \"./query\",\r\n    \"./scripter\",\r\n    \"./styler\",\r\n    \"./transforms\",\r\n    \"./langx\",\r\n    \"./elmx\"\r\n], function(dom) {\r\n    return dom;\r\n})\r\n;\ndefine('skylark-utils-dom', ['skylark-utils-dom/main'], function (main) { return main; });\n\n"]}