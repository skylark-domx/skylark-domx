{"version":3,"sources":["skylark-utils-dom.js"],"names":["factory","globals","absolute","relative","base","stack","split","parts","pop","i","length","push","join","define","require","isAmd","amd","isCmd","exports","map","id","deps","dep","hasOwnProperty","Error","module","args","forEach","apply","skylarkjs","skylark","dom","langx","normalizeCssEvent","name","css3EventPrefix","toLowerCase","normalizeCssProperty","cssProps","normalizeStyleProperty","cssStyles","browser","vendorPrefix","vendorPrefixRE","transEndEventNames","WebkitTransition","MozTransition","OTransition","transition","transEndEventName","css3PropPrefix","css3StylePrefix","vendorPrefixesRE","document","window","testEl","createElement","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","requestFullScreen","requestFullscreen","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","testStyle","exitFullscreen","webkitCancelFullScreen","mozCancelFullScreen","msExitFullscreen","style","matched","match","RegExp","lowerFirst","cssPropName","dasherize","undefined","mixin","isIE","exec","navigator","userAgent","location","support","end","maybeAddPx","value","cssNumber","classRE","classReCache","className","node","klass","svg","baseVal","disabled","elm","arguments","this","defaultDisplay","nodeName","element","display","elementDisplay","body","appendChild","getComputedStyle","getPropertyValue","parentNode","removeChild","show","styler","css","isInvisible","hide","addClass","names","cls","isString","re","property","computedStyle","camelCase","isArrayLike","props","call","prop","removeProperty","key","cssText","hasClass","removeClass","replace","trim","toggleClass","when","self","Array","prototype","every","column-count","columns","font-weight","line-height","opacity","z-index","zoom","autocssfix","cssHooks","ensureNodes","nodes","copyByClone","cloneNode","flatten","chkName","activeElement","doc","el","error","after","placing","refNode","parent","nextSibling","insertBefore","append","before","contents","contentDocument","childNodes","tag","setAttribute","createFragment","html","singleTagRE","test","$1","fragmentRE","containers","container","innerHTML","slice","clone","deep","nodeType","each","getAttribs","attr","setAttrib","getAttrib","contains","child","isChildOf","createTextNode","text","empty","hasChildNodes","firstChild","fullScreen","exitFullScreen","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","fulledEl","focusable","hasTabindex","mapName","img","focusableIfVisible","fieldset","href","$","is","closest","visible","rxhtmlTag","isNumber","directly","documentElement","isDoc","DOCUMENT_NODE","ownerDoc","ownerDocument","ownerWindow","defaultView","parentWindow","prepend","offsetParent","rootNodeRE","overlay","params","overlayDiv","position","top","left","width","height","zIndex","remove","e","console","warn","children","oldNode","replaceChild","throb","timer","time","callback","throbber","textNode","clearTimeout","update","nodeValue","setTimeout","traverse","fn","len","reverse","wrapper","wrapperNode","wrapperInner","unwrap","noder","div","table","tableBody","tableRow","tr","tbody","thead","tfoot","td","th","*","active","blur","isWindow","_createStyleSheet","external","options","type","count","media","create","rel","async","head","sheetsById","createStyleSheet","sheetId","addSheetRules","deleteSheetRule","rule","sheet","deleteRuleFunc","rulesPropName","_rule","deleteRule","defaultSheetId","removeStyleSheet","insertRule","selector","index","insertSheetRule","addRules","rules","insertRuleFunc","toString","isAtRule","str","startsWith","json","adjust","parentName","depth","strNode","values","atFlg","SPACE","repeat","isArray","n","adjusted","getElementsByTagName","defaultSheet","removeRule","_insertRule","addRule","velm","createInputPseudo","elem","createButtonPseudo","ancestor","root","rootIsSelector","matches","ancestors","ret","local","filter","byId","getElementById","descendants","querySelectorAll","matchError","query","descendant","querySelector","find","findAll","first","lastChild","last","previousSibling","nativeMatchesSelector","inArray","isPlainObject","check","adjacent","nextSiblings","previousSiblings","siblings","parser","rawMatch","separator","combinator","combinatorChildren","tagName","attributeKey","attributeOperator","attributeQuote","attributeValue","pseudoMarker","pseudoClass","pseudoQuote","pseudoClassQuotedValue","pseudoClassValue","separatorIndex","parsed","expressions","combinatorIndex","currentSeparator","reversed","reverseCombinator","currentParsed","reUnescape","classList","classes","regexp","escapeRegExp","pseudos","indexOf","attributes","operator","cache","reverseCache","parse","expression","isReversed","Slick","currentCache","raw","exp","j","cexp","from","to","string","rinputs","rheader","parseSelector","button","checked","idx","enabled","eq","even","focus","tabindex","gt","has","sel","header","hidden","input","lt","not","odd","selected","tabbable","tabIndex","offsetWidth","item","isArrayFilter","radio","checkbox","file","password","image","submit","reset","divide","cond","nativeSelector","customPseudos","JSON","stringify","part","toUpperCase","arrayFilte","pseudo","getAttribute","hasAttribute","currentExpression","simpleExpCounter","filterSingle","matchs","uniq","concat","combine","bit","node1","op","prev","next","divided","single","currentBit","founds","found","currentItems","finder","removeAttribute","aria","attrName","_attributeData","store","deserializeValue","_store","confirm","_getData","camelName","capitalRE","_setData","data","dataAttrName","cleanData","removeData","pluck","propMap","removeAttr","removeProp","txt","textContent","val","multiple","selectedOptions","option","datax","readonly","for","class","maxlength","cellspacing","cellpadding","rowspan","colspan","usemap","frameborder","contenteditable","dataName","compatible","event","source","isDefaultPrevented","eventMethods","predicate","sourceMethod","returnTrue","returnFalse","segs","ns","sort","createProxy","src","proxy","originalEvent","ignoreProperties","off","events","$this","isFunction","handler","findHandler","unregister","on","one","ready","register","stop","all","keyCode","preventDefault","stopPropagation","trigger","evented","Event","createEvent","_args","dispatchEvent","readyRE","readyState","defer","addEventListener","shortcuts","registry","run","shortcut","metaKey","ctrlKey","ctrl","alt","altKey","shift","shiftKey","charCode","target","add","pattern","shortcutKeys","shortcutKey","setting","charCodeAt","keyCodeLookup","regKey","eventer","uid","stopImmediatePropagation","getEventCtor","NativeEvents","EventCtors","compositionstart","compositionend","compositionupdate","beforecopy","beforecut","beforepaste","copy","cut","paste","drag","dragend","dragenter","dragexit","dragleave","dragover","dragstart","drop","abort","change","selectionchange","focusin","focusout","keydown","keypress","keyup","message","click","contextmenu","dblclick","mousedown","mouseup","mousemove","mouseover","mouseout","mouseenter","mouseleave","textInput","touchstart","touchmove","touchend","load","resize","select","scroll","unload","wheel","bubbles","cancelable","namespace","ctor","safeMixin","specialEvents","focusinSupported","hover","realEvent","handlers","EventBindings","init","_target","_event","_bindings","bindings","binding","_listener","domEvt","isDefined","isImmediatePropagationStopped","currentTarget","liveFired","related","relatedTarget","result","matcherFor","matcher","removing","removeEventListener","EventsHandler","_handler","specialEvent","bindingEvent","bindType","bindEventName","listener","backspace","comma","delete","down","enter","escape","home","page_down","page_up","period","right","space","tab","up","transitionEnd","delegateType","keys","special","scrollbarWidth","cachedScrollbarWidth","w1","w2","innerDiv","clientWidth","borderExtents","bottom","s","px","borderLeftWidth","borderTopWidth","borderRightWidth","borderBottomWidth","boundingPosition","coords","getBoundingClientRect","parentOffset","mex","marginExtents","pbex","relativePosition","boundingRect","size","clientHeight","clientSize","dimension","isBorderBox","bex","pex","paddingExtents","contentRect","cs","getDocumentSize","max","Math","scrollWidth","scrollHeight","offsetHeight","marginLeft","marginTop","marginRight","marginBottom","marginRect","obj","relativeRect","me","marginSize","paddingLeft","paddingTop","paddingRight","paddingBottom","pagePosition","pageXOffset","pageYOffset","pageRect","round","offset","scrollIntoView","align","getOffset","rootElm","x","y","offsetLeft","offsetTop","parentWidth","parentHeight","parentElm","pos","scrollLeft","scrollTop","hasScrollLeft","scrollTo","scrollY","hasScrollTop","scrollX","innerWidth","innerHeight","isDocument","geom","toPixel","getOffsets","offsets","parseFloat","rpercent","parseCss","parseInt","getDimensions","pageY","pageX","getScrollInfo","within","overflowX","overflowY","hasOverflowX","hasOverflowY","getWithinInfo","withinElement","hasOffset","msize","posit","extend","atOffset","targetWidth","targetHeight","targetOffset","basePosition","dimensions","of","scrollInfo","collision","at","horizontalOffset","verticalOffset","rhorizontal","rvertical","roffset","rposition","collisionPosition","using","elemWidth","elemHeight","collisionWidth","collisionHeight","myOffset","my","dir","positions","feedback","horizontal","vertical","abs","important","fit","newOverRight","withinOffset","outerWidth","collisionPosLeft","overLeft","overRight","newOverBottom","outerHeight","collisionPosTop","overTop","overBottom","flip","newOverLeft","newOverTop","flipfit","animate","properties","duration","ease","delay","endEvent","wrappedCallback","cssValues","cssProperties","transforms","that","fired","resetClipAuto","easing","complete","fx","speeds","normal","eace","animationName","animationDuration","animationTiming","animationEnd","v","supportedTransforms","transform","transitionProperty","transitionDuration","transitionDelay","transitionTiming","cssReset","debounce","clientLeft","scrollToTop","speed","scale","scrollFrom","runEvery","freq","interval","setInterval","clearInterval","toggle","fadeTo","fadeIn","fadeOut","fadeToggle","ceasing","allback","slideDown","visibility","overflow","slideUp","queue","slideToggle","animationDelay","fast","slow","getMatrix","radian","Cos","cos","Sin","sin","M11","M12","M21","M22","getZoom","d","matrix","css3Transform","toFixed","transformData","_createApiMethod","calcFunc","makeArray","unshift","calcs","PI","rotate","degress","hZoom","vZoom","zoomin","zoomout","wrapper_map","func","context","wrapper_selector","wrapper_selector_until","util","wrapper_every_act","wrapper_every_act_firstArgFunc","oldValueFunc","arg1","funcArg","wrapper_some_chk","some","wrapper_name_value","newValue","wrapper_value","isQ","rquickExpr","isObject","NodeList","compact","klassName","charAt","wrapper_node_operation","argType","arg","object","get","toArray","isHtmlNode","excludes","parents","parentsUntil","pushStack","elms","prevObject","replaceWith","newContent","wrap","structure","wrapAll","wrappingElement","wrapInner","prevAll","nextAll","detach","fnOver","fnOut","Dimension","m","margin","cb","mb","appendTo","prependTo","insertAfter","replaceAll","original","elems","insert","toogle","scrollParent","includeHidden","excludeStaticParent","overflowRegex","andSelf","addBack","place","addContent","content","template","substitute","replaceClass","newClass","oldClass","disableSelection","eventType","enableSelection","plugin","returnValue","plugins","instantiate","watch","imgs","resolve","total","totalCount","successed","successedCount","failered","faileredCount","progress","isLoaded","progressedCount","progressed","isCompleted","Deferred","promise","naturalWidth","loaded","addBackgroundImage","elm1","reURL","url","Image","childImgs","background","preload","urls","images","viewer","onload","loadedCallback","onerror","_init","border","padding","_load","_dispose","dispose","imagesLoaded","imagesViewer","_delegator","domNode","HTMLElement","VisualElement","elmx","batch","action","partial","delegate","method","pluginKlass","pluginName","pluginKlasses","pluginInstance","isMethodCall","methodName","Plugin","Evented","inherit","_construct","_elm","_initOptions","constructor","defaults","ctors","superclass","destroy","_destroy","noop","_delay","handlerProxy","instance","curOption","_setOptions","_setOption","scripter","scriptsByUrl","scriptElementsById","loadJavaScript","errorCallback","script","state","loadedCallbacks","errorCallbacks","startTime","Date","getTime","callbacks","deleteJavaScript","main"],"mappings":"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SAAAqD,MACA86B,EAAA,SAAA37B,GACA,MAAAA,GACA,GAAA07B,GAAA17B,GAEAoP,EAmCAjT,GAAA+C,MAAAy8B,GACAC,MAAA,SAAAj4B,EAAAk4B,EAAAhgC,GAMA,MALA8H,GAAA7H,QAAA,SAAAkE,GACA,GAAAK,GAAAL,YAAA07B,GAAA17B,EAAA27B,EAAA37B,EACAK,GAAAw7B,GAAA9/B,MAAAsE,EAAAxE,KAGA0E,MAGA6O,KAAA,GAAAssB,GAAAl+B,SAAAqD,MAEA66B,cAAAA,EAEAI,QAAA,SAAAz/B,EAAAiO,GACA,GAAArI,KAEAA,GAAA5F,GAAAiO,EAEAoxB,EAAAI,QAAA75B,IAGA85B,SAAA,SAAAt6B,EAAAsyB,GACA,GAAA9xB,KAEAR,GAAA3F,QAAA,SAAAO,GACA4F,EAAA5F,GAAAk/B,EAAAxH,EAAA13B,GAAA03B,KAGA2H,EAAAI,QAAA75B,MAKA05B,EAAAI,UACA,OACA,OACA,OACA,aACA,aACA,OACA,OACAtiB,GAGAkiB,EAAAI,UACA,MACA,KACA,MACA,YACA,WACAzd,GAGAqd,EAAAI,UACA,WACA,YACA,WACA,aACA,OACA,UACA,aACA,YACA,UACA,cACA,eACA,SACA,kBACA,mBACA,YACAjkB,GAMA6jB,EAAAxrB,KAAA,SAAA/C,GACA,MAAA,SAAAA,EACA7M,KAAA6O,KAEA7O,KAAA6O,KAAAa,WAAA7C,IAKAuuB,EAAAI,UACA,UACA,SACA,UACA,SACA,aACA,OACA,cACA,OACA,UACAzM,GAIAqM,EAAAI,UACA,gBACA,mBACA,eACA,eACA,aACA,cACA,cACA,SACA,gBACA,eACA,iBACA,eACA,WACA,mBACA,eACA,iBACA,aACA,YACA,OACA,SACA9R,GAGA0R,EAAAI,UACA,QACA,SACA,SACA,QACA,WACA,WACA,QACA,OACA,YACA,WACA,UACA,SACA,cACA,UACA,UACA,QACA,WACA,UACA,eACA,UACAlxB,GAGA8wB,EAAAI,UACA,WACA,YACA,MACA,WACA,OACA,cACA,cACA,OACA,eACA36B,EAIA,IAAAotB,IAAA,WAAA,OA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","file":"../skylark-utils-dom.js","sourcesContent":["define('skylark-utils-dom/skylark',[\"skylark-langx/skylark\"], function(skylark) {\r\n    return skylark;\r\n});\r\n\ndefine('skylark-utils-dom/dom',[\"./skylark\"], function(skylark) {\r\n\treturn skylark.dom = {};\r\n});\r\n\ndefine('skylark-utils-dom/langx',[\r\n    \"skylark-langx/langx\"\r\n], function(langx) {\r\n    return langx;\r\n});\r\n\ndefine('skylark-utils-dom/browser',[\r\n    \"./dom\",\r\n    \"./langx\"\r\n], function(dom,langx) {\r\n    \"use strict\";\r\n \r\n    var checkedCssProperties = {\r\n            \"transitionproperty\": \"TransitionProperty\",\r\n        },\r\n        transEndEventNames = {\r\n          WebkitTransition : 'webkitTransitionEnd',\r\n          MozTransition    : 'transitionend',\r\n          OTransition      : 'oTransitionEnd otransitionend',\r\n          transition       : 'transitionend'\r\n        },\r\n        transEndEventName = null;\r\n\r\n\r\n    var css3PropPrefix = \"\",\r\n        css3StylePrefix = \"\",\r\n        css3EventPrefix = \"\",\r\n\r\n        cssStyles = {},\r\n        cssProps = {},\r\n\r\n        vendorPrefix,\r\n        vendorPrefixRE,\r\n        vendorPrefixesRE = /^(Webkit|webkit|O|Moz|moz|ms)(.*)$/,\r\n\r\n        document = window.document,\r\n        testEl = document.createElement(\"div\"),\r\n\r\n        matchesSelector = testEl.webkitMatchesSelector ||\r\n                          testEl.mozMatchesSelector ||\r\n                          testEl.oMatchesSelector ||\r\n                          testEl.matchesSelector,\r\n\r\n        requestFullScreen = testEl.requestFullscreen || \r\n                            testEl.webkitRequestFullscreen || \r\n                            testEl.mozRequestFullScreen || \r\n                            testEl.msRequestFullscreen,\r\n\r\n        exitFullScreen =  document.exitFullscreen ||\r\n                          document.webkitCancelFullScreen ||\r\n                          document.mozCancelFullScreen ||\r\n                          document.msExitFullscreen,\r\n\r\n        testStyle = testEl.style;\r\n\r\n    for (var name in testStyle) {\r\n        var matched = name.match(vendorPrefixRE || vendorPrefixesRE);\r\n        if (matched) {\r\n            if (!vendorPrefixRE) {\r\n                vendorPrefix = matched[1];\r\n                vendorPrefixRE = new RegExp(\"^(\" + vendorPrefix + \")(.*)$\");\r\n\r\n                css3StylePrefix = vendorPrefix;\r\n                css3PropPrefix = '-' + vendorPrefix.toLowerCase() + '-';\r\n                css3EventPrefix = vendorPrefix.toLowerCase();\r\n            }\r\n\r\n            cssStyles[langx.lowerFirst(matched[2])] = name;\r\n            var cssPropName = langx.dasherize(matched[2]);\r\n            cssProps[cssPropName] = css3PropPrefix + cssPropName;\r\n\r\n            if (transEndEventNames[name]) {\r\n              transEndEventName = transEndEventNames[name];\r\n            }\r\n        }\r\n    }\r\n\r\n    if (!transEndEventName) {\r\n        if (testStyle[\"transition\"] !== undefined) {\r\n            transEndEventName = transEndEventNames[\"transition\"];\r\n        }\r\n    }\r\n\r\n    function normalizeCssEvent(name) {\r\n        return css3EventPrefix ? css3EventPrefix + name : name.toLowerCase();\r\n    }\r\n\r\n    function normalizeCssProperty(name) {\r\n        return cssProps[name] || name;\r\n    }\r\n\r\n    function normalizeStyleProperty(name) {\r\n        return cssStyles[name] || name;\r\n    }\r\n\r\n    function browser() {\r\n        return browser;\r\n    }\r\n\r\n    langx.mixin(browser, {\r\n        css3PropPrefix: css3PropPrefix,\r\n\r\n        isIE : !!/msie/i.exec( window.navigator.userAgent ),\r\n\r\n        normalizeStyleProperty: normalizeStyleProperty,\r\n\r\n        normalizeCssProperty: normalizeCssProperty,\r\n\r\n        normalizeCssEvent: normalizeCssEvent,\r\n\r\n        matchesSelector: matchesSelector,\r\n\r\n        requestFullScreen : requestFullScreen,\r\n\r\n        exitFullscreen : requestFullScreen,\r\n\r\n        location: function() {\r\n            return window.location;\r\n        },\r\n\r\n        support : {\r\n\r\n        }\r\n\r\n    });\r\n\r\n    if  (transEndEventName) {\r\n        browser.support.transition = {\r\n            end : transEndEventName\r\n        };\r\n    }\r\n\r\n    testEl = null;\r\n\r\n    return dom.browser = browser;\r\n});\r\n\ndefine('skylark-utils-dom/styler',[\r\n    \"./dom\",\r\n    \"./langx\"\r\n], function(dom, langx) {\r\n    var every = Array.prototype.every,\r\n        forEach = Array.prototype.forEach,\r\n        camelCase = langx.camelCase,\r\n        dasherize = langx.dasherize;\r\n\r\n    function maybeAddPx(name, value) {\r\n        return (typeof value == \"number\" && !cssNumber[dasherize(name)]) ? value + \"px\" : value\r\n    }\r\n\r\n    var cssNumber = {\r\n            'column-count': 1,\r\n            'columns': 1,\r\n            'font-weight': 1,\r\n            'line-height': 1,\r\n            'opacity': 1,\r\n            'z-index': 1,\r\n            'zoom': 1\r\n        },\r\n        classReCache = {\r\n\r\n        };\r\n\r\n    function classRE(name) {\r\n        return name in classReCache ?\r\n            classReCache[name] : (classReCache[name] = new RegExp('(^|\\\\s)' + name + '(\\\\s|$)'));\r\n    }\r\n\r\n    // access className property while respecting SVGAnimatedString\r\n    /*\r\n     * Adds the specified class(es) to each element in the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {String} value\r\n     */\r\n    function className(node, value) {\r\n        var klass = node.className || '',\r\n            svg = klass && klass.baseVal !== undefined\r\n\r\n        if (value === undefined) return svg ? klass.baseVal : klass\r\n        svg ? (klass.baseVal = value) : (node.className = value)\r\n    }\r\n\r\n    function disabled(elm, value ) {\r\n        if (arguments.length < 2) {\r\n            return !!this.dom.disabled;\r\n        }\r\n\r\n        elm.disabled = value;\r\n\r\n        return this;\r\n    }\r\n\r\n    var elementDisplay = {};\r\n\r\n    function defaultDisplay(nodeName) {\r\n        var element, display\r\n        if (!elementDisplay[nodeName]) {\r\n            element = document.createElement(nodeName)\r\n            document.body.appendChild(element)\r\n            display = getComputedStyle(element, '').getPropertyValue(\"display\")\r\n            element.parentNode.removeChild(element)\r\n            display == \"none\" && (display = \"block\")\r\n            elementDisplay[nodeName] = display\r\n        }\r\n        return elementDisplay[nodeName]\r\n    }\r\n    /*\r\n     * Display the matched elements.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function show(elm) {\r\n        styler.css(elm, \"display\", \"\");\r\n        if (styler.css(elm, \"display\") == \"none\") {\r\n            styler.css(elm, \"display\", defaultDisplay(elm.nodeName));\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function isInvisible(elm) {\r\n        return styler.css(elm, \"display\") == \"none\" || styler.css(elm, \"opacity\") == 0;\r\n    }\r\n\r\n    /*\r\n     * Hide the matched elements.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function hide(elm) {\r\n        styler.css(elm, \"display\", \"none\");\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Adds the specified class(es) to each element in the set of matched elements.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function addClass(elm, name) {\r\n        if (!name) return this\r\n        var cls = className(elm),\r\n            names;\r\n        if (langx.isString(name)) {\r\n            names = name.split(/\\s+/g);\r\n        } else {\r\n            names = name;\r\n        }\r\n        names.forEach(function(klass) {\r\n            var re = classRE(klass);\r\n            if (!cls.match(re)) {\r\n                cls += (cls ? \" \" : \"\") + klass;\r\n            }\r\n        });\r\n\r\n        className(elm, cls);\r\n\r\n        return this;\r\n    }\r\n    /*\r\n     * Get the value of a computed style property for the first element in the set of matched elements or set one or more CSS properties for every matched element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} property\r\n     * @param {Any} value\r\n     */\r\n    function css(elm, property, value) {\r\n        if (arguments.length < 3) {\r\n            var computedStyle,\r\n                computedStyle = getComputedStyle(elm, '')\r\n            if (langx.isString(property)) {\r\n                return elm.style[camelCase(property)] || computedStyle.getPropertyValue(dasherize(property))\r\n            } else if (langx.isArrayLike(property)) {\r\n                var props = {}\r\n                forEach.call(property, function(prop) {\r\n                    props[prop] = (elm.style[camelCase(prop)] || computedStyle.getPropertyValue(dasherize(prop)))\r\n                })\r\n                return props\r\n            }\r\n        }\r\n\r\n        var css = '';\r\n        if (typeof(property) == 'string') {\r\n            if (!value && value !== 0) {\r\n                elm.style.removeProperty(dasherize(property));\r\n            } else {\r\n                css = dasherize(property) + \":\" + maybeAddPx(property, value)\r\n            }\r\n        } else {\r\n            for (key in property) {\r\n                if (property[key] === undefined) {\r\n                    continue;\r\n                }\r\n                if (!property[key] && property[key] !== 0) {\r\n                    elm.style.removeProperty(dasherize(key));\r\n                } else {\r\n                    css += dasherize(key) + ':' + maybeAddPx(key, property[key]) + ';'\r\n                }\r\n            }\r\n        }\r\n\r\n        elm.style.cssText += ';' + css;\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Determine whether any of the matched elements are assigned the given class.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function hasClass(elm, name) {\r\n        var re = classRE(name);\r\n        return elm.className && elm.className.match(re);\r\n    }\r\n\r\n    /*\r\n     * Remove a single class, multiple classes, or all classes from each element in the set of matched elements.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function removeClass(elm, name) {\r\n        if (name) {\r\n            var cls = className(elm),\r\n                names;\r\n\r\n            if (langx.isString(name)) {\r\n                names = name.split(/\\s+/g);\r\n            } else {\r\n                names = name;\r\n            }\r\n\r\n            names.forEach(function(klass) {\r\n                var re = classRE(klass);\r\n                if (cls.match(re)) {\r\n                    cls = cls.replace(re, \" \");\r\n                }\r\n            });\r\n\r\n            className(elm, cls.trim());\r\n        } else {\r\n            className(elm, \"\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Add or remove one or more classes from the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     * @param {} when\r\n     */\r\n    function toggleClass(elm, name, when) {\r\n        var self = this;\r\n        name.split(/\\s+/g).forEach(function(klass) {\r\n            if (when === undefined) {\r\n                when = !self.hasClass(elm, klass);\r\n            }\r\n            if (when) {\r\n                self.addClass(elm, klass);\r\n            } else {\r\n                self.removeClass(elm, klass)\r\n            }\r\n        });\r\n\r\n        return self;\r\n    }\r\n\r\n    var styler = function() {\r\n        return styler;\r\n    };\r\n\r\n    langx.mixin(styler, {\r\n        autocssfix: false,\r\n        cssHooks: {\r\n\r\n        },\r\n\r\n        addClass: addClass,\r\n        className: className,\r\n        css: css,\r\n        disabled : disabled,        \r\n        hasClass: hasClass,\r\n        hide: hide,\r\n        isInvisible: isInvisible,\r\n        removeClass: removeClass,\r\n        show: show,\r\n        toggleClass: toggleClass\r\n    });\r\n\r\n    return dom.styler = styler;\r\n});\ndefine('skylark-utils-dom/noder',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./styler\"\r\n], function(dom, langx, browser, styler) {\r\n    var isIE = !!navigator.userAgent.match(/Trident/g) || !!navigator.userAgent.match(/MSIE/g),\r\n        fragmentRE = /^\\s*<(\\w+|!)[^>]*>/,\r\n        singleTagRE = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\r\n        div = document.createElement(\"div\"),\r\n        table = document.createElement('table'),\r\n        tableBody = document.createElement('tbody'),\r\n        tableRow = document.createElement('tr'),\r\n        containers = {\r\n            'tr': tableBody,\r\n            'tbody': table,\r\n            'thead': table,\r\n            'tfoot': table,\r\n            'td': tableRow,\r\n            'th': tableRow,\r\n            '*': div\r\n        },\r\n        rootNodeRE = /^(?:body|html)$/i,\r\n        map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    function ensureNodes(nodes, copyByClone) {\r\n        if (!langx.isArrayLike(nodes)) {\r\n            nodes = [nodes];\r\n        }\r\n        if (copyByClone) {\r\n            nodes = map.call(nodes, function(node) {\r\n                return node.cloneNode(true);\r\n            });\r\n        }\r\n        return langx.flatten(nodes);\r\n    }\r\n\r\n    function nodeName(elm, chkName) {\r\n        var name = elm.nodeName && elm.nodeName.toLowerCase();\r\n        if (chkName !== undefined) {\r\n            return name === chkName.toLowerCase();\r\n        }\r\n        return name;\r\n    };\r\n\r\n\r\n    function activeElement(doc) {\r\n        doc = doc || document;\r\n        var el;\r\n\r\n        // Support: IE 9 only\r\n        // IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\r\n        try {\r\n            el = doc.activeElement;\r\n        } catch ( error ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        // Support: IE 9 - 11 only\r\n        // IE may return null instead of an element\r\n        // Interestingly, this only seems to occur when NOT in an iframe\r\n        if ( !el ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        // Support: IE 11 only\r\n        // IE11 returns a seemingly empty object in some cases when accessing\r\n        // document.activeElement from an <iframe>\r\n        if ( !el.nodeName ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        return el;\r\n    };\r\n\r\n    function after(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone),\r\n                refNode = refNode.nextSibling;\r\n\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                if (refNode) {\r\n                    parent.insertBefore(nodes[i], refNode);\r\n                } else {\r\n                    parent.appendChild(nodes[i]);\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function append(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            parentNode.appendChild(nodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function before(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone);\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                parent.insertBefore(nodes[i], refNode);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    /*   \r\n     * Get the children of the specified node, including text and comment nodes.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function contents(elm) {\r\n        if (nodeName(elm, \"iframe\")) {\r\n            return elm.contentDocument;\r\n        }\r\n        return elm.childNodes;\r\n    }\r\n\r\n    /*   \r\n     * Create a element and set attributes on it.\r\n     * @param {HTMLElement} tag\r\n     * @param {props} props\r\n     * @param } parent\r\n     */\r\n    function createElement(tag, props, parent) {\r\n        var node = document.createElement(tag);\r\n        if (props) {\r\n            for (var name in props) {\r\n                node.setAttribute(name, props[name]);\r\n            }\r\n        }\r\n        if (parent) {\r\n            append(parent, node);\r\n        }\r\n        return node;\r\n    }\r\n\r\n    /*   \r\n     * Create a DocumentFragment from the HTML fragment.\r\n     * @param {String} html\r\n     */\r\n    function createFragment(html) {\r\n        // A special case optimization for a single tag\r\n        html = langx.trim(html);\r\n        if (singleTagRE.test(html)) {\r\n            return [createElement(RegExp.$1)];\r\n        }\r\n\r\n        var name = fragmentRE.test(html) && RegExp.$1\r\n        if (!(name in containers)) {\r\n            name = \"*\"\r\n        }\r\n        var container = containers[name];\r\n        container.innerHTML = \"\" + html;\r\n        dom = slice.call(container.childNodes);\r\n\r\n        dom.forEach(function(node) {\r\n            container.removeChild(node);\r\n        })\r\n\r\n        return dom;\r\n    }\r\n\r\n    /*   \r\n     * Create a deep copy of the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {Boolean} deep\r\n     */\r\n    function clone(node, deep) {\r\n        var self = this,\r\n            clone;\r\n\r\n        // TODO: Add feature detection here in the future\r\n        if (!isIE || node.nodeType !== 1 || deep) {\r\n            return node.cloneNode(deep);\r\n        }\r\n\r\n        // Make a HTML5 safe shallow copy\r\n        if (!deep) {\r\n            clone = document.createElement(node.nodeName);\r\n\r\n            // Copy attribs\r\n            each(self.getAttribs(node), function(attr) {\r\n                self.setAttrib(clone, attr.nodeName, self.getAttrib(node, attr.nodeName));\r\n            });\r\n\r\n            return clone;\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node .\r\n     * @param {String} node\r\n     * @param {Node} child\r\n     */\r\n    function contains(node, child) {\r\n        return isChildOf(child, node);\r\n    }\r\n\r\n    /*   \r\n     * Create a new Text node.\r\n     * @param {String} text\r\n     * @param {Node} child\r\n     */\r\n    function createTextNode(text) {\r\n        return document.createTextNode(text);\r\n    }\r\n\r\n    /*   \r\n     * Get the current document object.\r\n     */\r\n    function doc() {\r\n        return document;\r\n    }\r\n\r\n    /*   \r\n     * Remove all child nodes of the set of matched elements from the DOM.\r\n     * @param {Object} node\r\n     */\r\n    function empty(node) {\r\n        while (node.hasChildNodes()) {\r\n            var child = node.firstChild;\r\n            node.removeChild(child);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    var fulledEl = null;\r\n\r\n    function fullScreen(el) {\r\n        if (el === false) {\r\n            browser.exitFullScreen.apply(document);\r\n        } else if (el) {\r\n            browser.requestFullScreen.apply(el);\r\n            fulledEl = el;\r\n        } else {\r\n            return (\r\n                document.fullscreenElement ||\r\n                document.webkitFullscreenElement ||\r\n                document.mozFullScreenElement ||\r\n                document.msFullscreenElement\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    // Selectors\r\n    function focusable( element, hasTabindex ) {\r\n        var map, mapName, img, focusableIfVisible, fieldset,\r\n            nodeName = element.nodeName.toLowerCase();\r\n\r\n        if ( \"area\" === nodeName ) {\r\n            map = element.parentNode;\r\n            mapName = map.name;\r\n            if ( !element.href || !mapName || map.nodeName.toLowerCase() !== \"map\" ) {\r\n                return false;\r\n            }\r\n            img = $( \"img[usemap='#\" + mapName + \"']\" );\r\n            return img.length > 0 && img.is( \":visible\" );\r\n        }\r\n\r\n        if ( /^(input|select|textarea|button|object)$/.test( nodeName ) ) {\r\n            focusableIfVisible = !element.disabled;\r\n\r\n            if ( focusableIfVisible ) {\r\n\r\n                // Form controls within a disabled fieldset are disabled.\r\n                // However, controls within the fieldset's legend do not get disabled.\r\n                // Since controls generally aren't placed inside legends, we skip\r\n                // this portion of the check.\r\n                fieldset = $( element ).closest( \"fieldset\" )[ 0 ];\r\n                if ( fieldset ) {\r\n                    focusableIfVisible = !fieldset.disabled;\r\n                }\r\n            }\r\n        } else if ( \"a\" === nodeName ) {\r\n            focusableIfVisible = element.href || hasTabindex;\r\n        } else {\r\n            focusableIfVisible = hasTabindex;\r\n        }\r\n\r\n        return focusableIfVisible && $( element ).is( \":visible\" ) && visible( $( element ) );\r\n    };\r\n\r\n\r\n   var rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/gi;\r\n \r\n    /*   \r\n     * Get the HTML contents of the first element in the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {String} html\r\n     */\r\n    function html(node, html) {\r\n        if (html === undefined) {\r\n            return node.innerHTML;\r\n        } else {\r\n            this.empty(node);\r\n            html = html || \"\";\r\n            if (langx.isString(html)) {\r\n                html = html.replace( rxhtmlTag, \"<$1></$2>\" );\r\n            }\r\n            if (langx.isString(html) || langx.isNumber(html)) {               \r\n                node.innerHTML = html;\r\n            } else if (langx.isArrayLike(html)) {\r\n                for (var i = 0; i < html.length; i++) {\r\n                    node.appendChild(html[i]);\r\n                }\r\n            } else {\r\n                node.appendChild(html);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node.\r\n     * @param {Node} node\r\n     * @param {Node} parent\r\n     * @param {Node} directly\r\n     */\r\n    function isChildOf(node, parent, directly) {\r\n        if (directly) {\r\n            return node.parentNode === parent;\r\n        }\r\n        if (document.documentElement.contains) {\r\n            return parent.contains(node);\r\n        }\r\n        while (node) {\r\n            if (parent === node) {\r\n                return true;\r\n            }\r\n\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node.\r\n     * @param {Node} node\r\n     * @param {Node} parent\r\n     * @param {Node} directly\r\n     */\r\n    function isDoc(node) {\r\n        return node != null && node.nodeType == node.DOCUMENT_NODE\r\n    }\r\n\r\n    /*   \r\n     * Get the owner document object for the specified element.\r\n     * @param {Node} elm\r\n     */\r\n    function ownerDoc(elm) {\r\n        if (!elm) {\r\n            return document;\r\n        }\r\n\r\n        if (elm.nodeType == 9) {\r\n            return elm;\r\n        }\r\n\r\n        return elm.ownerDocument;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     */\r\n    function ownerWindow(elm) {\r\n        var doc = ownerDoc(elm);\r\n        return doc.defaultView || doc.parentWindow;\r\n    }\r\n\r\n    /*   \r\n     * insert one or more nodes as the first children of the specified node.\r\n     * @param {Node} node\r\n     * @param {Node or ArrayLike} placing\r\n     * @param {Boolean Optional} copyByClone\r\n     */\r\n    function prepend(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            refNode = parentNode.firstChild,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            if (refNode) {\r\n                parentNode.insertBefore(nodes[i], refNode);\r\n            } else {\r\n                parentNode.appendChild(nodes[i]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     */\r\n    function offsetParent(elm) {\r\n        var parent = elm.offsetParent || document.body;\r\n        while (parent && !rootNodeRE.test(parent.nodeName) && styler.css(parent, \"position\") == \"static\") {\r\n            parent = parent.offsetParent;\r\n        }\r\n        return parent;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     * @param {Node} params\r\n     */\r\n    function overlay(elm, params) {\r\n        var overlayDiv = createElement(\"div\", params);\r\n        styler.css(overlayDiv, {\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            zIndex: 0x7FFFFFFF,\r\n            opacity: 0.7\r\n        });\r\n        elm.appendChild(overlayDiv);\r\n        return overlayDiv;\r\n\r\n    }\r\n\r\n    /*   \r\n     * Remove the set of matched elements from the DOM.\r\n     * @param {Node} node\r\n     */\r\n    function remove(node) {\r\n        if (node && node.parentNode) {\r\n            try {\r\n                node.parentNode.removeChild(node);\r\n            } catch (e) {\r\n                console.warn(\"The node is already removed\", e);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function removeChild(node,children) {\r\n        if (!langx.isArrayLike(children)) {\r\n            children = [children];\r\n        }\r\n        for (var i=0;i<children.length;i++) {\r\n            node.removeChild(children[i]);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function scrollParent( elm, includeHidden ) {\r\n        var position = styler.css(elm,\"position\" ),\r\n            excludeStaticParent = position === \"absolute\",\r\n            overflowRegex = includeHidden ? /(auto|scroll|hidden)/ : /(auto|scroll)/,\r\n            scrollParent = this.parents().filter( function() {\r\n                var parent = $( this );\r\n                if ( excludeStaticParent && parent.css( \"position\" ) === \"static\" ) {\r\n                    return false;\r\n                }\r\n                return overflowRegex.test( parent.css( \"overflow\" ) + parent.css( \"overflow-y\" ) +\r\n                    parent.css( \"overflow-x\" ) );\r\n            } ).eq( 0 );\r\n\r\n        return position === \"fixed\" || !scrollParent.length ?\r\n            $( this[ 0 ].ownerDocument || document ) :\r\n            scrollParent;\r\n    };\r\n\r\n        /*   \r\n     * Replace an old node with the specified node.\r\n     * @param {Node} node\r\n     * @param {Node} oldNode\r\n     */\r\n    function replace(node, oldNode) {\r\n        oldNode.parentNode.replaceChild(node, oldNode);\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Replace an old node with the specified node.\r\n     * @param {HTMLElement} elm\r\n     * @param {Node} params\r\n     */\r\n    function throb(elm, params) {\r\n        params = params || {};\r\n        var self = this,\r\n            text = params.text,\r\n            style = params.style,\r\n            time = params.time,\r\n            callback = params.callback,\r\n            timer,\r\n            throbber = this.createElement(\"div\", {\r\n                className: params.className || \"throbber\",\r\n                style: style\r\n            }),\r\n            _overlay = overlay(throbber, {\r\n                className: 'overlay fade'\r\n            }),\r\n            throb = this.createElement(\"div\", {\r\n                className: \"throb\"\r\n            }),\r\n            textNode = this.createTextNode(text || \"\"),\r\n            remove = function() {\r\n                if (timer) {\r\n                    clearTimeout(timer);\r\n                    timer = null;\r\n                }\r\n                if (throbber) {\r\n                    self.remove(throbber);\r\n                    throbber = null;\r\n                }\r\n            },\r\n            update = function(params) {\r\n                if (params && params.text && throbber) {\r\n                    textNode.nodeValue = params.text;\r\n                }\r\n            };\r\n        throb.appendChild(textNode);\r\n        throbber.appendChild(throb);\r\n        elm.appendChild(throbber);\r\n        var end = function() {\r\n            remove();\r\n            if (callback) callback();\r\n        };\r\n        if (time) {\r\n            timer = setTimeout(end, time);\r\n        }\r\n\r\n        return {\r\n            remove: remove,\r\n            update: update\r\n        };\r\n    }\r\n\r\n\r\n    /*   \r\n     * traverse the specified node and its descendants, perform the callback function on each\r\n     * @param {Node} node\r\n     * @param {Function} fn\r\n     */\r\n    function traverse(node, fn) {\r\n        fn(node)\r\n        for (var i = 0, len = node.childNodes.length; i < len; i++) {\r\n            traverse(node.childNodes[i], fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} node\r\n     */\r\n    function reverse(node) {\r\n        var firstChild = node.firstChild;\r\n        for (var i = node.children.length - 1; i > 0; i--) {\r\n            if (i > 0) {\r\n                var child = node.children[i];\r\n                node.insertBefore(child, firstChild);\r\n            }\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Wrap an HTML structure around each element in the set of matched elements.\r\n     * @param {Node} node\r\n     * @param {Node} wrapperNode\r\n     */\r\n    function wrapper(node, wrapperNode) {\r\n        if (langx.isString(wrapperNode)) {\r\n            wrapperNode = this.createFragment(wrapperNode).firstChild;\r\n        }\r\n        node.parentNode.insertBefore(wrapperNode, node);\r\n        wrapperNode.appendChild(node);\r\n    }\r\n\r\n    /*   \r\n     * Wrap an HTML structure around the content of each element in the set of matched\r\n     * @param {Node} node\r\n     * @param {Node} wrapperNode\r\n     */\r\n    function wrapperInner(node, wrapperNode) {\r\n        var childNodes = slice.call(node.childNodes);\r\n        node.appendChild(wrapperNode);\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            wrapperNode.appendChild(childNodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Remove the parents of the set of matched elements from the DOM, leaving the matched\r\n     * @param {Node} node\r\n     */\r\n    function unwrap(node) {\r\n        var child, parent = node.parentNode;\r\n        if (parent) {\r\n            if (this.isDoc(parent.parentNode)) return;\r\n            parent.parentNode.insertBefore(node, parent);\r\n        }\r\n    }\r\n\r\n    function noder() {\r\n        return noder;\r\n    }\r\n\r\n    langx.mixin(noder, {\r\n        active  : activeElement,\r\n\r\n        blur : function(el) {\r\n            el.blur();\r\n        },\r\n\r\n        body: function() {\r\n            return document.body;\r\n        },\r\n\r\n        clone: clone,\r\n        contents: contents,\r\n\r\n        createElement: createElement,\r\n\r\n        createFragment: createFragment,\r\n\r\n        contains: contains,\r\n\r\n        createTextNode: createTextNode,\r\n\r\n        doc: doc,\r\n\r\n        empty: empty,\r\n\r\n        fullScreen: fullScreen,\r\n\r\n        focusable: focusable,\r\n\r\n        html: html,\r\n\r\n        isChildOf: isChildOf,\r\n\r\n        isDoc: isDoc,\r\n\r\n        isWindow: langx.isWindow,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        ownerDoc: ownerDoc,\r\n\r\n        ownerWindow: ownerWindow,\r\n\r\n        after: after,\r\n\r\n        before: before,\r\n\r\n        prepend: prepend,\r\n\r\n        append: append,\r\n\r\n        remove: remove,\r\n\r\n        removeChild : removeChild,\r\n\r\n        replace: replace,\r\n\r\n        throb: throb,\r\n\r\n        traverse: traverse,\r\n\r\n        reverse: reverse,\r\n\r\n        wrapper: wrapper,\r\n\r\n        wrapperInner: wrapperInner,\r\n\r\n        unwrap: unwrap\r\n    });\r\n\r\n    return dom.noder = noder;\r\n});\ndefine('skylark-utils-dom/css',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./noder\"\r\n], function(dom, langx, noder) {\r\n    \"use strict\";\r\n\r\n    var head = document.getElementsByTagName(\"head\")[0],\r\n        count = 0,\r\n        sheetsByUrl = {},\r\n        sheetsById = {},\r\n        defaultSheetId = _createStyleSheet(),\r\n        defaultSheet = sheetsById[defaultSheetId],\r\n        rulesPropName = (\"cssRules\" in defaultSheet) ? \"cssRules\" : \"rules\",\r\n        insertRuleFunc,\r\n        deleteRuleFunc = defaultSheet.deleteRule || defaultSheet.removeRule;\r\n\r\n    if (defaultSheet.insertRule) {\r\n        var _insertRule = defaultSheet.insertRule;\r\n        insertRuleFunc = function(selector, css, index) {\r\n            _insertRule.call(this, selector + \"{\" + css + \"}\", index);\r\n        };\r\n    } else {\r\n        insertRuleFunc = defaultSheet.addRule;\r\n    }\r\n\r\n    function normalizeSelector(selectorText) {\r\n        var selector = [],\r\n            last, len;\r\n        last = defaultSheet[rulesPropName].length;\r\n        insertRuleFunc.call(defaultSheet, selectorText, ';');\r\n        len = defaultSheet[rulesPropName].length;\r\n        for (var i = len - 1; i >= last; i--) {\r\n            selector.push(_sheet[_rules][i].selectorText);\r\n            deleteRuleFunc.call(defaultSheet, i);\r\n        }\r\n        return selector.reverse().join(', ');\r\n    }\r\n\r\n    /*\r\n     * create a stylesheet element.\r\n     * @param {Boolean} external\r\n     * @param {Object} options\r\n     * @param {String} [options.media = null]\r\n     */\r\n    function _createStyleSheet(external,options ) {\r\n        var node,\r\n            props = {\r\n                type : \"text/css\"\r\n            },\r\n            id = (count++);\r\n\r\n        options = options || {};\r\n        if (options.media) {\r\n            props.media = options.media;\r\n        }\r\n\r\n        if (external) {\r\n            node = noder.create(\"link\",langx.mixin(props,{\r\n                rel  : \"stylesheet\",\r\n                async : false\r\n            }));\r\n        } else {\r\n            node = noder.createElement(\"style\",props);\r\n        }\r\n\r\n        noder.append(head,node);\r\n        sheetsById[id] = {\r\n            id : id,\r\n            node :node\r\n        };\r\n\r\n        return id;\r\n    }\r\n\r\n    function createStyleSheet(css,options) {\r\n        if (!options) {\r\n            options = {};\r\n        }\r\n        var sheetId = _createStyleSheet(false,options);\r\n        if (css) {\r\n            addSheetRules(sheetId,css);\r\n        }\r\n\r\n        return sheetId;\r\n    }\r\n\r\n    function loadStyleSheet(url, options) {\r\n        var sheet = sheetsByUrl[url];\r\n        if (!sheet) {\r\n            var sheetId = _createStyleSheet(true,options);\r\n\r\n            sheet = sheetsByUrl[url] = sheetsById[sheetId];\r\n            langx.mixin(sheet,{\r\n                state: 0, //0:unload,1:loaded,-1:loaderror\r\n                url : url,\r\n                deferred : new langx.Deferred()\r\n            });\r\n\r\n            var node = sheet.node;\r\n\r\n            startTime = new Date().getTime();\r\n\r\n            node.onload = function() {\r\n                sheet.state = 1;\r\n                sheet.deferred.resolve(sheet.id);\r\n            },\r\n            node.onerror = function(e) {\r\n                sheet.state = -1;\r\n                sheet.deferred.reject(e);\r\n            };\r\n\r\n            node.href = sheet.url;\r\n        }\r\n        return sheet.deferred.promise;\r\n    }\r\n\r\n    function deleteSheetRule(sheetId, rule) {\r\n        var sheet = sheetsById[sheetId];\r\n        if (langx.isNumber(rule)) {\r\n            deleteRuleFunc.call(sheet, rule);\r\n        } else {\r\n            langx.each(sheet[rulesPropName], function(i, _rule) {\r\n                if (rule === _rule) {\r\n                    deleteRuleFunc.call(sheet, i);\r\n                    return false;\r\n                }\r\n            });\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function deleteRule(rule) {\r\n        deleteSheetRule(defaultSheetId, rule);\r\n        return this;\r\n    }\r\n\r\n    function removeStyleSheet(sheetId) {\r\n        if (sheetId === defaultSheetId) {\r\n            throw new Error(\"The default stylesheet can not be deleted\");\r\n        }\r\n        var sheet = sheetsById[sheetId];\r\n        delete sheetsById[sheetId];\r\n\r\n        noder.remove(sheet.node);\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * insert a rule to the default stylesheet.\r\n     * @param {String} selector\r\n     * @param {String} css\r\n     * @param {Number} index \r\n     */\r\n    function insertRule(selector, css, index) {\r\n        return this.insertSheetRule(defaultSheetId, selector, css, index);\r\n    }\r\n\r\n    /*\r\n     * Add rules to the default stylesheet.\r\n     * @param {Object} rules\r\n     */\r\n    function addRules(rules) {\r\n        return this.addRules(defaultSheetId,rules);\r\n    }\r\n\r\n    /*\r\n     * insert a rule to the stylesheet specified by sheetId.\r\n     * @param {Number} sheetId  \r\n     * @param {String} selector\r\n     * @param {String} css\r\n     * @param {Number} index \r\n     */\r\n    function insertSheetRule(sheetId, selector, css, index) {\r\n        if (!selector || !css) {\r\n            return -1;\r\n        }\r\n\r\n        var sheet = sheetsById[sheetId];\r\n        index = index || sheet[rulesPropName].length;\r\n\r\n        return insertRuleFunc.call(sheet, selector, css, index);\r\n    }\r\n\r\n    /*\r\n     * Add  rules to stylesheet.\r\n     * @param {Number} sheetId  \r\n     * @param {Object|String} rules\r\n     * @return this\r\n     * @example insertSheetRules(sheetId,{\r\n     * \r\n     * });\r\n     */\r\n    function addSheetRules(sheetId,rules) {\r\n        var sheet = sheetsById[sheetId],\r\n            css;\r\n        if (langx.isString(rules)) {\r\n            css = rules;\r\n        } else {\r\n            css = toString(rules);\r\n        }\r\n\r\n        noder.append(sheet.node,noder.createTextNode(css));\r\n        \r\n        return this;\r\n    }\r\n\r\n    function isAtRule(str) {\r\n        return str.startsWith(\"@\");\r\n    }\r\n\r\n    function toString(json){\r\n        var adjust = function(parentName,name,depth) {\r\n            if (parentName) {\r\n                if (isAtRule(parentName)) {\r\n                    depth += 1;\r\n                } else {\r\n                    name =  parentName + \" \" + name;\r\n                }                \r\n            }\r\n            return {\r\n                name : name,\r\n                depth : depth\r\n            }\r\n        };\r\n\r\n        var strNode = function (name, values, depth) {\r\n            var str = \"\",\r\n                atFlg = isAtRule(name);\r\n\r\n\r\n            if (isAtRule(name)) {\r\n                // at rule\r\n                if (langx.isString(values)) {\r\n                    // an at rule without block\r\n                    // ex: (1) @charset 'utf8';\r\n                    str = css.SPACE.repeat(depth) + name.trim() + \" \\\"\" + values.trim() + \" \\\";\\n\";\r\n                } else {\r\n                    // an at rule with block, ex :\r\n                    //  @media 'screen' {\r\n                    //  }\r\n                    str += css.SPACE.repeat(depth) + name.trim() + \" {\\n\";\r\n                    str += strNode(\"\",values,depth+1);\r\n                    str += css.SPACE.repeat(depth) + \" }\\n\";\r\n                }\r\n            } else {\r\n                // a selector or a property\r\n                if (langx.isString(values)) {\r\n                    // a css property \r\n                    // ex : (1) font-color : red;\r\n                    str = css.SPACE.repeat(depth) + name.trim() ;\r\n                    if (atFlg) {\r\n                        str = str +  \" \\\"\" + values.trim() + \" \\\";\\n\";\r\n                    } else {\r\n                        str = str + ': ' + values.trim() + \";\\n\";\r\n                    }\r\n\r\n                } else {\r\n                    // a selector rule \r\n                    // ex : (1) .class1 : {\r\n                    //            font-color : red;\r\n                    //          }\r\n                    if (langx.isArray(values)) {\r\n                        // array for ordering\r\n                        for (var n =0; n<values.length; n ++) {\r\n                           str +=  strNode(name,values[n],depth);\r\n                        }\r\n                    } else {\r\n                        // plain object\r\n\r\n                        if (name) {\r\n                            str += css.SPACE.repeat(depth) + name.trim() + \" {\\n\";\r\n\r\n                            for (var n in values) {\r\n                                var value =values[n];\r\n                                if (langx.isString(value)) {\r\n                                    // css property\r\n                                    str += strNode(n,value,depth+1)\r\n                                }\r\n                            }\r\n\r\n                            str += css.SPACE.repeat(depth) + \"}\\n\";\r\n                        }\r\n\r\n                        for (var n in values) {\r\n                            var value =values[n];\r\n                            if (!langx.isString(value)) {\r\n                                var adjusted = adjust(name,n,depth);\r\n                                str +=  strNode(adjusted.name,value,adjusted.depth);\r\n                            } \r\n                        }\r\n\r\n                    }\r\n                }\r\n            }   \r\n\r\n            return str;\r\n        };\r\n\r\n\r\n        return strNode(\"\",json,0);\r\n    }\r\n \r\n\r\n    function css() {\r\n        return css;\r\n    }\r\n\r\n    langx.mixin(css, {\r\n        SPACE : \"\\t\",\r\n\r\n        addRules : addRules,\r\n\r\n        addSheetRules : addSheetRules,\r\n\r\n        createStyleSheet: createStyleSheet,\r\n\r\n        deleteSheetRule : deleteSheetRule,\r\n\r\n        deleteRule : deleteRule,\r\n\r\n        insertRule : insertRule,\r\n\r\n        insertSheetRule : insertSheetRule,\r\n\r\n        removeStyleSheet : removeStyleSheet,\r\n\r\n        toString : toString\r\n    });\r\n\r\n    return dom.css = css;\r\n});\r\n\ndefine('skylark-utils-dom/finder',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./noder\"\r\n], function(dom, langx, browser, noder, velm) {\r\n    var local = {},\r\n        filter = Array.prototype.filter,\r\n        slice = Array.prototype.slice,\r\n        nativeMatchesSelector = browser.matchesSelector;\r\n\r\n    /*\r\n    ---\r\n    name: Slick.Parser\r\n    description: Standalone CSS3 Selector parser\r\n    provides: Slick.Parser\r\n    ...\r\n    */\r\n    ;\r\n    (function() {\r\n\r\n        var parsed,\r\n            separatorIndex,\r\n            combinatorIndex,\r\n            reversed,\r\n            cache = {},\r\n            reverseCache = {},\r\n            reUnescape = /\\\\/g;\r\n\r\n        var parse = function(expression, isReversed) {\r\n            if (expression == null) return null;\r\n            if (expression.Slick === true) return expression;\r\n            expression = ('' + expression).replace(/^\\s+|\\s+$/g, '');\r\n            reversed = !!isReversed;\r\n            var currentCache = (reversed) ? reverseCache : cache;\r\n            if (currentCache[expression]) return currentCache[expression];\r\n            parsed = {\r\n                Slick: true,\r\n                expressions: [],\r\n                raw: expression,\r\n                reverse: function() {\r\n                    return parse(this.raw, true);\r\n                }\r\n            };\r\n            separatorIndex = -1;\r\n            while (expression != (expression = expression.replace(regexp, parser)));\r\n            parsed.length = parsed.expressions.length;\r\n            return currentCache[parsed.raw] = (reversed) ? reverse(parsed) : parsed;\r\n        };\r\n\r\n        var reverseCombinator = function(combinator) {\r\n            if (combinator === '!') return ' ';\r\n            else if (combinator === ' ') return '!';\r\n            else if ((/^!/).test(combinator)) return combinator.replace(/^!/, '');\r\n            else return '!' + combinator;\r\n        };\r\n\r\n        var reverse = function(expression) {\r\n            var expressions = expression.expressions;\r\n            for (var i = 0; i < expressions.length; i++) {\r\n                var exp = expressions[i];\r\n                var last = {\r\n                    parts: [],\r\n                    tag: '*',\r\n                    combinator: reverseCombinator(exp[0].combinator)\r\n                };\r\n\r\n                for (var j = 0; j < exp.length; j++) {\r\n                    var cexp = exp[j];\r\n                    if (!cexp.reverseCombinator) cexp.reverseCombinator = ' ';\r\n                    cexp.combinator = cexp.reverseCombinator;\r\n                    delete cexp.reverseCombinator;\r\n                }\r\n\r\n                exp.reverse().push(last);\r\n            }\r\n            return expression;\r\n        };\r\n\r\n        var escapeRegExp = (function() {\r\n            // Credit: XRegExp 0.6.1 (c) 2007-2008 Steven Levithan <http://stevenlevithan.com/regex/xregexp/> MIT License\r\n            var from = /(?=[\\-\\[\\]{}()*+?.\\\\\\^$|,#\\s])/g,\r\n                to = '\\\\';\r\n            return function(string) {\r\n                return string.replace(from, to)\r\n            }\r\n        }())\r\n\r\n        var regexp = new RegExp(\r\n            \"^(?:\\\\s*(,)\\\\s*|\\\\s*(<combinator>+)\\\\s*|(\\\\s+)|(<unicode>+|\\\\*)|\\\\#(<unicode>+)|\\\\.(<unicode>+)|\\\\[\\\\s*(<unicode1>+)(?:\\\\s*([*^$!~|]?=)(?:\\\\s*(?:([\\\"']?)(.*?)\\\\9)))?\\\\s*\\\\](?!\\\\])|(:+)(<unicode>+)(?:\\\\((?:(?:([\\\"'])([^\\\\13]*)\\\\13)|((?:\\\\([^)]+\\\\)|[^()]*)+))\\\\))?)\"\r\n            .replace(/<combinator>/, '[' + escapeRegExp(\">+~`!@$%^&={}\\\\;</\") + ']')\r\n            .replace(/<unicode>/g, '(?:[\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n            .replace(/<unicode1>/g, '(?:[:\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n        );\r\n\r\n        function parser(\r\n            rawMatch,\r\n\r\n            separator,\r\n            combinator,\r\n            combinatorChildren,\r\n\r\n            tagName,\r\n            id,\r\n            className,\r\n\r\n            attributeKey,\r\n            attributeOperator,\r\n            attributeQuote,\r\n            attributeValue,\r\n\r\n            pseudoMarker,\r\n            pseudoClass,\r\n            pseudoQuote,\r\n            pseudoClassQuotedValue,\r\n            pseudoClassValue\r\n        ) {\r\n            if (separator || separatorIndex === -1) {\r\n                parsed.expressions[++separatorIndex] = [];\r\n                combinatorIndex = -1;\r\n                if (separator) return '';\r\n            }\r\n\r\n            if (combinator || combinatorChildren || combinatorIndex === -1) {\r\n                combinator = combinator || ' ';\r\n                var currentSeparator = parsed.expressions[separatorIndex];\r\n                if (reversed && currentSeparator[combinatorIndex])\r\n                    currentSeparator[combinatorIndex].reverseCombinator = reverseCombinator(combinator);\r\n                currentSeparator[++combinatorIndex] = {\r\n                    combinator: combinator,\r\n                    tag: '*'\r\n                };\r\n            }\r\n\r\n            var currentParsed = parsed.expressions[separatorIndex][combinatorIndex];\r\n\r\n            if (tagName) {\r\n                currentParsed.tag = tagName.replace(reUnescape, '');\r\n\r\n            } else if (id) {\r\n                currentParsed.id = id.replace(reUnescape, '');\r\n\r\n            } else if (className) {\r\n                className = className.replace(reUnescape, '');\r\n\r\n                if (!currentParsed.classList) currentParsed.classList = [];\r\n                if (!currentParsed.classes) currentParsed.classes = [];\r\n                currentParsed.classList.push(className);\r\n                currentParsed.classes.push({\r\n                    value: className,\r\n                    regexp: new RegExp('(^|\\\\s)' + escapeRegExp(className) + '(\\\\s|$)')\r\n                });\r\n\r\n            } else if (pseudoClass) {\r\n                pseudoClassValue = pseudoClassValue || pseudoClassQuotedValue;\r\n                pseudoClassValue = pseudoClassValue ? pseudoClassValue.replace(reUnescape, '') : null;\r\n\r\n                if (!currentParsed.pseudos) currentParsed.pseudos = [];\r\n                currentParsed.pseudos.push({\r\n                    key: pseudoClass.replace(reUnescape, ''),\r\n                    value: pseudoClassValue,\r\n                    type: pseudoMarker.length == 1 ? 'class' : 'element'\r\n                });\r\n\r\n            } else if (attributeKey) {\r\n                attributeKey = attributeKey.replace(reUnescape, '');\r\n                attributeValue = (attributeValue || '').replace(reUnescape, '');\r\n\r\n                var test, regexp;\r\n\r\n                switch (attributeOperator) {\r\n                    case '^=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue));\r\n                        break;\r\n                    case '$=':\r\n                        regexp = new RegExp(escapeRegExp(attributeValue) + '$');\r\n                        break;\r\n                    case '~=':\r\n                        regexp = new RegExp('(^|\\\\s)' + escapeRegExp(attributeValue) + '(\\\\s|$)');\r\n                        break;\r\n                    case '|=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue) + '(-|$)');\r\n                        break;\r\n                    case '=':\r\n                        test = function(value) {\r\n                            return attributeValue == value;\r\n                        };\r\n                        break;\r\n                    case '*=':\r\n                        test = function(value) {\r\n                            return value && value.indexOf(attributeValue) > -1;\r\n                        };\r\n                        break;\r\n                    case '!=':\r\n                        test = function(value) {\r\n                            return attributeValue != value;\r\n                        };\r\n                        break;\r\n                    default:\r\n                        test = function(value) {\r\n                            return !!value;\r\n                        };\r\n                }\r\n\r\n                if (attributeValue == '' && (/^[*$^]=$/).test(attributeOperator)) test = function() {\r\n                    return false;\r\n                };\r\n\r\n                if (!test) test = function(value) {\r\n                    return value && regexp.test(value);\r\n                };\r\n\r\n                if (!currentParsed.attributes) currentParsed.attributes = [];\r\n                currentParsed.attributes.push({\r\n                    key: attributeKey,\r\n                    operator: attributeOperator,\r\n                    value: attributeValue,\r\n                    test: test\r\n                });\r\n\r\n            }\r\n\r\n            return '';\r\n        };\r\n\r\n        // Slick NS\r\n\r\n        var Slick = (this.Slick || {});\r\n\r\n        Slick.parse = function(expression) {\r\n            return parse(expression);\r\n        };\r\n\r\n        Slick.escapeRegExp = escapeRegExp;\r\n\r\n        if (!this.Slick) this.Slick = Slick;\r\n\r\n    }).apply(local);\r\n\r\n\r\n    var simpleClassSelectorRE = /^\\.([\\w-]*)$/,\r\n        simpleIdSelectorRE = /^#([\\w-]*)$/,\r\n        rinputs = /^(?:input|select|textarea|button)$/i,\r\n        rheader = /^h\\d$/i,\r\n        slice = Array.prototype.slice;\r\n\r\n\r\n    local.parseSelector = local.Slick.parse;\r\n\r\n\r\n    var pseudos = local.pseudos = {\r\n        // custom pseudos\r\n        \"button\": function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === \"button\" || name === \"button\";\r\n        },\r\n\r\n        'checked': function(elm) {\r\n            return !!elm.checked;\r\n        },\r\n\r\n        'contains': function(elm, idx, nodes, text) {\r\n            if ($(this).text().indexOf(text) > -1) return this\r\n        },\r\n\r\n        'disabled': function(elm) {\r\n            return !!elm.disabled;\r\n        },\r\n\r\n        'enabled': function(elm) {\r\n            return !elm.disabled;\r\n        },\r\n\r\n        'eq': function(elm, idx, nodes, value) {\r\n            return (idx == value);\r\n        },\r\n\r\n        'even': function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 0;\r\n        },\r\n\r\n        'focus': function(elm) {\r\n            return document.activeElement === elm && (elm.href || elm.type || elm.tabindex);\r\n        },\r\n\r\n        'focusable': function( elm ) {\r\n            return noder.focusable(elm, elm.tabindex != null );\r\n        },\r\n\r\n        'first': function(elm, idx) {\r\n            return (idx === 0);\r\n        },\r\n\r\n        'gt': function(elm, idx, nodes, value) {\r\n            return (idx > value);\r\n        },\r\n\r\n        'has': function(elm, idx, nodes, sel) {\r\n            return find(elm, sel);\r\n        },\r\n\r\n        // Element/input types\r\n        \"header\": function(elem) {\r\n            return rheader.test(elem.nodeName);\r\n        },\r\n\r\n        'hidden': function(elm) {\r\n            return !local.pseudos[\"visible\"](elm);\r\n        },\r\n\r\n        \"input\": function(elem) {\r\n            return rinputs.test(elem.nodeName);\r\n        },\r\n\r\n        'last': function(elm, idx, nodes) {\r\n            return (idx === nodes.length - 1);\r\n        },\r\n\r\n        'lt': function(elm, idx, nodes, value) {\r\n            return (idx < value);\r\n        },\r\n\r\n        'not': function(elm, idx, nodes, sel) {\r\n            return !matches(elm, sel);\r\n        },\r\n\r\n        'odd': function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 1;\r\n        },\r\n\r\n        /*   \r\n         * Get the parent of each element in the current set of matched elements.\r\n         * @param {Object} elm\r\n         */\r\n        'parent': function(elm) {\r\n            return !!elm.parentNode;\r\n        },\r\n\r\n        'selected': function(elm) {\r\n            return !!elm.selected;\r\n        },\r\n\r\n        'tabbable': function(elm) {\r\n            var tabIndex = elm.tabindex,\r\n                hasTabindex = tabIndex != null;\r\n            return ( !hasTabindex || tabIndex >= 0 ) && noder.focusable( element, hasTabindex );\r\n        },\r\n\r\n        'text': function(elm) {\r\n            return elm.type === \"text\";\r\n        },\r\n\r\n        'visible': function(elm) {\r\n            return elm.offsetWidth && elm.offsetWidth\r\n        }\r\n    };\r\n\r\n    [\"first\", \"eq\", \"last\"].forEach(function(item) {\r\n        pseudos[item].isArrayFilter = true;\r\n    });\r\n\r\n\r\n\r\n    pseudos[\"nth\"] = pseudos[\"eq\"];\r\n\r\n    function createInputPseudo(type) {\r\n        return function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === type;\r\n        };\r\n    }\r\n\r\n    function createButtonPseudo(type) {\r\n        return function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return (name === \"input\" || name === \"button\") && elem.type === type;\r\n        };\r\n    }\r\n\r\n    // Add button/input type pseudos\r\n    for (i in {\r\n        radio: true,\r\n        checkbox: true,\r\n        file: true,\r\n        password: true,\r\n        image: true\r\n    }) {\r\n        pseudos[i] = createInputPseudo(i);\r\n    }\r\n    for (i in {\r\n        submit: true,\r\n        reset: true\r\n    }) {\r\n        pseudos[i] = createButtonPseudo(i);\r\n    }\r\n\r\n\r\n    local.divide = function(cond) {\r\n        var nativeSelector = \"\",\r\n            customPseudos = [],\r\n            tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos;\r\n\r\n\r\n        if (id = cond.id) {\r\n            nativeSelector += (\"#\" + id);\r\n        }\r\n        if (classes = cond.classes) {\r\n            for (var i = classes.length; i--;) {\r\n                nativeSelector += (\".\" + classes[i].value);\r\n            }\r\n        }\r\n        if (attributes = cond.attributes) {\r\n            for (var i = 0; i < attributes.length; i++) {\r\n                if (attributes[i].operator) {\r\n                    nativeSelector += (\"[\" + attributes[i].key + attributes[i].operator + JSON.stringify(attributes[i].value) + \"]\");\r\n                } else {\r\n                    nativeSelector += (\"[\" + attributes[i].key + \"]\");\r\n                }\r\n            }\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (this.pseudos[part.key]) {\r\n                    customPseudos.push(part);\r\n                } else {\r\n                    if (part.value !== undefined) {\r\n                        nativeSelector += (\":\" + part.key + \"(\" + JSON.stringify(part))\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (tag = cond.tag) {\r\n            if (tag !== \"*\") {\r\n                nativeSelector = tag.toUpperCase() + nativeSelector;\r\n            }\r\n        }\r\n\r\n        if (!nativeSelector) {\r\n            nativeSelector = \"*\";\r\n        }\r\n\r\n        return {\r\n            nativeSelector: nativeSelector,\r\n            customPseudos: customPseudos\r\n        }\r\n\r\n    };\r\n\r\n    local.check = function(node, cond, idx, nodes, arrayFilte) {\r\n        var tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos,\r\n\r\n            i, part, cls, pseudo;\r\n\r\n        if (!arrayFilte) {\r\n            if (tag = cond.tag) {\r\n                var nodeName = node.nodeName.toUpperCase();\r\n                if (tag == '*') {\r\n                    if (nodeName < '@') return false; // Fix for comment nodes and closed nodes\r\n                } else {\r\n                    if (nodeName != (tag || \"\").toUpperCase()) return false;\r\n                }\r\n            }\r\n\r\n            if (id = cond.id) {\r\n                if (node.getAttribute('id') != id) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n\r\n            if (classes = cond.classes) {\r\n                for (i = classes.length; i--;) {\r\n                    cls = node.getAttribute('class');\r\n                    if (!(cls && classes[i].regexp.test(cls))) return false;\r\n                }\r\n            }\r\n\r\n            if (attributes = cond.attributes) {\r\n                for (i = attributes.length; i--;) {\r\n                    part = attributes[i];\r\n                    if (part.operator ? !part.test(node.getAttribute(part.key)) : !node.hasAttribute(part.key)) return false;\r\n                }\r\n            }\r\n\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (pseudo = this.pseudos[part.key]) {\r\n                    if ((arrayFilte && pseudo.isArrayFilter) || (!arrayFilte && !pseudo.isArrayFilter)) {\r\n                        if (!pseudo(node, idx, nodes, part.value)) {\r\n                            return false;\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (!arrayFilte && !nativeMatchesSelector.call(node, part.key)) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    local.match = function(node, selector) {\r\n\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            parsed = selector;\r\n        }\r\n\r\n        if (!parsed) {\r\n            return true;\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            simpleExpCounter = 0,\r\n            i,\r\n            currentExpression;\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n                if (this.check(node, exp)) {\r\n                    return true;\r\n                }\r\n                simpleExpCounter++;\r\n            }\r\n        }\r\n\r\n        if (simpleExpCounter == parsed.length) {\r\n            return false;\r\n        }\r\n\r\n        var nodes = this.query(document, parsed),\r\n            item;\r\n        for (i = 0; item = nodes[i++];) {\r\n            if (item === node) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n\r\n    local.filterSingle = function(nodes, exp) {\r\n        var matchs = filter.call(nodes, function(node, idx) {\r\n            return local.check(node, exp, idx, nodes, false);\r\n        });\r\n\r\n        matchs = filter.call(matchs, function(node, idx) {\r\n            return local.check(node, exp, idx, matchs, true);\r\n        });\r\n        return matchs;\r\n    };\r\n\r\n    local.filter = function(nodes, selector) {\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            return local.filterSingle(nodes, selector);\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            i,\r\n            currentExpression,\r\n            ret = [];\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n\r\n                var matchs = local.filterSingle(nodes, exp);\r\n\r\n                ret = langx.uniq(ret.concat(matchs));\r\n            } else {\r\n                throw new Error(\"not supported selector:\" + selector);\r\n            }\r\n        }\r\n\r\n        return ret;\r\n\r\n    };\r\n\r\n    local.combine = function(elm, bit) {\r\n        var op = bit.combinator,\r\n            cond = bit,\r\n            node1,\r\n            nodes = [];\r\n\r\n        switch (op) {\r\n            case '>': // direct children\r\n                nodes = children(elm, cond);\r\n                break;\r\n            case '+': // next sibling\r\n                node1 = nextSibling(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '^': // first child\r\n                node1 = firstChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '~': // next siblings\r\n                nodes = nextSiblings(elm, cond);\r\n                break;\r\n            case '++': // next sibling and previous sibling\r\n                var prev = previousSibling(elm, cond, true),\r\n                    next = nextSibling(elm, cond, true);\r\n                if (prev) {\r\n                    nodes.push(prev);\r\n                }\r\n                if (next) {\r\n                    nodes.push(next);\r\n                }\r\n                break;\r\n            case '~~': // next siblings and previous siblings\r\n                nodes = siblings(elm, cond);\r\n                break;\r\n            case '!': // all parent nodes up to document\r\n                nodes = ancestors(elm, cond);\r\n                break;\r\n            case '!>': // direct parent (one level)\r\n                node1 = parent(elm, cond);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!+': // previous sibling\r\n                nodes = previousSibling(elm, cond, true);\r\n                break;\r\n            case '!^': // last child\r\n                node1 = lastChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!~': // previous siblings\r\n                nodes = previousSiblings(elm, cond);\r\n                break;\r\n            default:\r\n                var divided = this.divide(bit);\r\n                nodes = slice.call(elm.querySelectorAll(divided.nativeSelector));\r\n                if (divided.customPseudos) {\r\n                    for (var i = divided.customPseudos.length - 1; i >= 0; i--) {\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes, false)\r\n                        });\r\n\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes, true)\r\n                        });\r\n                    }\r\n                }\r\n                break;\r\n\r\n        }\r\n        return nodes;\r\n    }\r\n\r\n    local.query = function(node, selector, single) {\r\n\r\n\r\n        var parsed = this.Slick.parse(selector);\r\n\r\n        var\r\n            founds = [],\r\n            currentExpression, currentBit,\r\n            expressions = parsed.expressions;\r\n\r\n        for (var i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            var currentItems = [node],\r\n                found;\r\n            for (var j = 0;\r\n                (currentBit = currentExpression[j]); j++) {\r\n                found = langx.map(currentItems, function(item, i) {\r\n                    return local.combine(item, currentBit)\r\n                });\r\n                if (found) {\r\n                    currentItems = found;\r\n                }\r\n            }\r\n            if (found) {\r\n                founds = founds.concat(found);\r\n            }\r\n        }\r\n\r\n        return founds;\r\n    }\r\n\r\n    /*\r\n     * Get the nearest ancestor of the specified element,optional matched by a selector.\r\n     * @param {HTMLElement} node\r\n     * @param {String Optional } selector\r\n     * @param {Object} root\r\n     */\r\n    function ancestor(node, selector, root) {\r\n        var rootIsSelector = root && langx.isString(root);\r\n        while (node = node.parentNode) {\r\n            if (matches(node, selector)) {\r\n                return node;\r\n            }\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node, root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the ancestors of the specitied element , optionally filtered by a selector.\r\n     * @param {HTMLElement} node\r\n     * @param {String Optional } selector\r\n     * @param {Object} root\r\n     */\r\n    function ancestors(node, selector, root) {\r\n        var ret = [],\r\n            rootIsSelector = root && langx.isString(root);\r\n        while ((node = node.parentNode) && (node.nodeType !== 9)) {\r\n            ret.push(node);\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node, root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (selector) {\r\n            ret = local.filter(ret, selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Returns a element by its ID.\r\n     * @param {string} id\r\n     */\r\n    function byId(id, doc) {\r\n        doc = doc || noder.doc();\r\n        return doc.getElementById(id);\r\n    }\r\n\r\n    /*\r\n     * Get the children of the specified element , optionally filtered by a selector.\r\n     * @param {string} node\r\n     * @param {String optionlly} selector\r\n     */\r\n    function children(node, selector) {\r\n        var childNodes = node.childNodes,\r\n            ret = [];\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            var node = childNodes[i];\r\n            if (node.nodeType == 1) {\r\n                ret.push(node);\r\n            }\r\n        }\r\n        if (selector) {\r\n            ret = local.filter(ret, selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function closest(node, selector) {\r\n        while (node && !(matches(node, selector))) {\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    /*\r\n     * Get the decendant of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function descendants(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return slice.call(elm.querySelectorAll(selector));\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        return local.query(elm, selector);\r\n    }\r\n\r\n    /*\r\n     * Get the nearest decendent of the specified element,optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function descendant(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return elm.querySelector(selector);\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        var nodes = local.query(elm, selector);\r\n        if (nodes.length > 0) {\r\n            return nodes[0];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the descendants of each element in the current set of matched elements, filtered by a selector, jQuery object, or element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function find(elm, selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        if (matches(elm, selector)) {\r\n            return elm;\r\n        } else {\r\n            return descendant(elm, selector);\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the findAll of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function findAll(elm, selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        return descendants(elm, selector);\r\n    }\r\n\r\n    /*\r\n     * Get the first child of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {String} first\r\n     */\r\n    function firstChild(elm, selector, first) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[0];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (first) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the last child of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {String } last\r\n     */\r\n    function lastChild(elm, selector, last) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[childNodes.length - 1];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (last) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Check the specified element against a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function matches(elm, selector) {\r\n        if (!selector || !elm || elm.nodeType !== 1) {\r\n            return false\r\n        }\r\n\r\n        if (langx.isString(selector)) {\r\n            try {\r\n                return nativeMatchesSelector.call(elm, selector.replace(/\\[([^=]+)=\\s*([^'\"\\]]+?)\\s*\\]/g, '[$1=\"$2\"]'));\r\n            } catch (matchError) {\r\n                //console.log(matchError);\r\n            }\r\n            return local.match(elm, selector);\r\n        } else if (langx.isArrayLike(selector)) {\r\n            return langx.inArray(elm, selector) > -1;\r\n        } else if (langx.isPlainObject(selector)) {\r\n            return local.check(elm, selector);\r\n        } else {\r\n            return elm === selector;\r\n        }\r\n\r\n    }\r\n\r\n    /*\r\n     * Get the nearest next sibing of the specitied element , optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {Boolean Optional} adjacent\r\n     */\r\n    function nextSibling(elm, selector, adjacent) {\r\n        var node = elm.nextSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the next siblings of the specified element , optional filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function nextSiblings(elm, selector) {\r\n        var node = elm.nextSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Get the parent element of the specified element. if a selector is provided, it retrieves the parent element only if it matches that selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function parent(elm, selector) {\r\n        var node = elm.parentNode;\r\n        if (node && (!selector || matches(node, selector))) {\r\n            return node;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get hte nearest previous sibling of the specified element ,optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {Boolean Optional } adjacent\r\n     */\r\n    function previousSibling(elm, selector, adjacent) {\r\n        var node = elm.previousSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get all preceding siblings of each element in the set of matched elements, optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function previousSiblings(elm, selector) {\r\n        var node = elm.previousSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Selects all sibling elements that follow after the “prev” element, have the same parent, and match the filtering “siblings” selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function siblings(elm, selector) {\r\n        var node = elm.parentNode.firstChild,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1 && node !== elm) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    var finder = function() {\r\n        return finder;\r\n    };\r\n\r\n    langx.mixin(finder, {\r\n\r\n        ancestor: ancestor,\r\n\r\n        ancestors: ancestors,\r\n\r\n        byId: byId,\r\n\r\n        children: children,\r\n\r\n        closest: closest,\r\n\r\n        descendant: descendant,\r\n\r\n        descendants: descendants,\r\n\r\n        find: find,\r\n\r\n        findAll: findAll,\r\n\r\n        firstChild: firstChild,\r\n\r\n        lastChild: lastChild,\r\n\r\n        matches: matches,\r\n\r\n        nextSibling: nextSibling,\r\n\r\n        nextSiblings: nextSiblings,\r\n\r\n        parent: parent,\r\n\r\n        previousSibling: previousSibling,\r\n\r\n        previousSiblings: previousSiblings,\r\n\r\n        pseudos: local.pseudos,\r\n\r\n        siblings: siblings\r\n    });\r\n\r\n    return dom.finder = finder;\r\n});\ndefine('skylark-utils-dom/datax',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./finder\"\r\n], function(dom, langx, finder) {\r\n    var map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        camelCase = langx.camelCase,\r\n        deserializeValue = langx.deserializeValue,\r\n\r\n        capitalRE = /([A-Z])/g,\r\n        propMap = {\r\n            'tabindex': 'tabIndex',\r\n            'readonly': 'readOnly',\r\n            'for': 'htmlFor',\r\n            'class': 'className',\r\n            'maxlength': 'maxLength',\r\n            'cellspacing': 'cellSpacing',\r\n            'cellpadding': 'cellPadding',\r\n            'rowspan': 'rowSpan',\r\n            'colspan': 'colSpan',\r\n            'usemap': 'useMap',\r\n            'frameborder': 'frameBorder',\r\n            'contenteditable': 'contentEditable'\r\n        };\r\n    /*\r\n     * Set property values\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n\r\n    function setAttribute(elm, name, value) {\r\n        if (value == null) {\r\n            elm.removeAttribute(name);\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n        }\r\n    }\r\n\r\n    function aria(elm, name, value) {\r\n        return this.attr(elm, \"aria-\" + name, value);\r\n    }\r\n\r\n    /*\r\n     * Set property values\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n\r\n    function attr(elm, name, value) {\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var attrName in name) {\r\n                    attr(elm, attrName, name[attrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                if (elm.hasAttribute && elm.hasAttribute(name)) {\r\n                    return elm.getAttribute(name);\r\n                }\r\n            }\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n            return this;\r\n        }\r\n    }\r\n\r\n\r\n    /*\r\n     *  Read all \"data-*\" attributes from a node\r\n     * @param {Object} elm  \r\n     */\r\n\r\n    function _attributeData(elm) {\r\n        var store = {}\r\n        langx.each(elm.attributes || [], function(i, attr) {\r\n            if (attr.name.indexOf('data-') == 0) {\r\n                store[camelCase(attr.name.replace('data-', ''))] = deserializeValue(attr.value);\r\n            }\r\n        })\r\n        return store;\r\n    }\r\n\r\n    function _store(elm, confirm) {\r\n        var store = elm[\"_$_store\"];\r\n        if (!store && confirm) {\r\n            store = elm[\"_$_store\"] = _attributeData(elm);\r\n        }\r\n        return store;\r\n    }\r\n\r\n    function _getData(elm, name) {\r\n        if (name === undefined) {\r\n            return _store(elm, true);\r\n        } else {\r\n            var store = _store(elm);\r\n            if (store) {\r\n                if (name in store) {\r\n                    return store[name];\r\n                }\r\n                var camelName = camelCase(name);\r\n                if (camelName in store) {\r\n                    return store[camelName];\r\n                }\r\n            }\r\n            var attrName = 'data-' + name.replace(capitalRE, \"-$1\").toLowerCase()\r\n            return attr(elm, attrName);\r\n        }\r\n\r\n    }\r\n\r\n    function _setData(elm, name, value) {\r\n        var store = _store(elm, true);\r\n        store[camelCase(name)] = value;\r\n    }\r\n\r\n\r\n    /*\r\n     * xxx\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n    function data(elm, name, value) {\r\n\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var dataAttrName in name) {\r\n                    _setData(elm, dataAttrName, name[dataAttrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                return _getData(elm, name);\r\n            }\r\n        } else {\r\n            _setData(elm, name, value);\r\n            return this;\r\n        }\r\n    } \r\n    /*\r\n     * Remove from the element all items that have not yet been run. \r\n     * @param {Object} elm  \r\n     */\r\n\r\n    function cleanData(elm) {\r\n        if (elm[\"_$_store\"]) {\r\n            delete elm[\"_$_store\"];\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Remove a previously-stored piece of data. \r\n     * @param {Object} elm  \r\n     * @param {Array} names\r\n     */\r\n    function removeData(elm, names) {\r\n        if (langx.isString(names)) {\r\n            names = names.split(/\\s+/);\r\n        }\r\n        var store = _store(elm, true);\r\n        names.forEach(function(name) {\r\n            delete store[name];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * xxx \r\n     * @param {Object} elm  \r\n     * @param {Array} names\r\n     */\r\n    function pluck(nodes, property) {\r\n        return map.call(nodes, function(elm) {\r\n            return elm[property];\r\n        });\r\n    }\r\n\r\n    /*\r\n     * Get or set the value of an property for the specified element.\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n    function prop(elm, name, value) {\r\n        name = propMap[name] || name;\r\n        if (value === undefined) {\r\n            return elm[name];\r\n        } else {\r\n            elm[name] = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * remove Attributes  \r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     */\r\n    function removeAttr(elm, name) {\r\n        name.split(' ').forEach(function(attr) {\r\n            setAttribute(elm, attr);\r\n        });\r\n        return this;\r\n    }\r\n\r\n\r\n    /*\r\n     * Remove the value of a property for the first element in the set of matched elements or set one or more properties for every matched element.\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     */\r\n    function removeProp(elm, name) {\r\n        name.split(' ').forEach(function(prop) {\r\n            delete elm[prop];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Get the combined text contents of each element in the set of matched elements, including their descendants, or set the text contents of the matched elements.  \r\n     * @param {Object} elm  \r\n     * @param {String} txt\r\n     */\r\n    function text(elm, txt) {\r\n        if (txt === undefined) {\r\n            return elm.textContent;\r\n        } else {\r\n            elm.textContent = txt == null ? '' : '' + txt;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Get the current value of the first element in the set of matched elements or set the value of every matched element.\r\n     * @param {Object} elm  \r\n     * @param {String} value\r\n     */\r\n    function val(elm, value) {\r\n        if (value === undefined) {\r\n            if (elm.multiple) {\r\n                // select multiple values\r\n                var selectedOptions = filter.call(finder.find(elm, \"option\"), (function(option) {\r\n                    return option.selected;\r\n                }));\r\n                return pluck(selectedOptions, \"value\");\r\n            } else {\r\n                return elm.value;\r\n            }\r\n        } else {\r\n            elm.value = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n\r\n    finder.pseudos.data = function( elem, i, match,dataName ) {\r\n        return !!data( elem, dataName || match[3]);\r\n    };\r\n   \r\n\r\n    function datax() {\r\n        return datax;\r\n    }\r\n\r\n    langx.mixin(datax, {\r\n        aria: aria,\r\n\r\n        attr: attr,\r\n\r\n        cleanData: cleanData,\r\n\r\n        data: data,\r\n\r\n        pluck: pluck,\r\n\r\n        prop: prop,\r\n\r\n        removeAttr: removeAttr,\r\n\r\n        removeData: removeData,\r\n\r\n        removeProp: removeProp,\r\n\r\n        text: text,\r\n\r\n        val: val\r\n    });\r\n\r\n    return dom.datax = datax;\r\n});\ndefine('skylark-utils-dom/eventer',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./finder\",\r\n    \"./noder\",\r\n    \"./datax\"\r\n], function(dom, langx, browser, finder, noder, datax) {\r\n    var mixin = langx.mixin,\r\n        each = langx.each,\r\n        slice = Array.prototype.slice,\r\n        uid = langx.uid,\r\n        ignoreProperties = /^([A-Z]|returnValue$|layer[XY]$)/,\r\n        eventMethods = {\r\n            preventDefault: \"isDefaultPrevented\",\r\n            stopImmediatePropagation: \"isImmediatePropagationStopped\",\r\n            stopPropagation: \"isPropagationStopped\"\r\n        },\r\n        readyRE = /complete|loaded|interactive/;\r\n\r\n    function compatible(event, source) {\r\n        if (source || !event.isDefaultPrevented) {\r\n            if (!source) {\r\n                source = event;\r\n            }\r\n\r\n            langx.each(eventMethods, function(name, predicate) {\r\n                var sourceMethod = source[name];\r\n                event[name] = function() {\r\n                    this[predicate] = langx.returnTrue;\r\n                    return sourceMethod && sourceMethod.apply(source, arguments);\r\n                }\r\n                event[predicate] = langx.returnFalse;\r\n            });\r\n        }\r\n        return event;\r\n    }\r\n\r\n    function parse(event) {\r\n        var segs = (\"\" + event).split(\".\");\r\n        return {\r\n            type: segs[0],\r\n            ns: segs.slice(1).sort().join(\" \")\r\n        };\r\n    }\r\n\r\n    //create a custom dom event\r\n    var createEvent = (function() {\r\n        var EventCtors = [\r\n                window[\"CustomEvent\"], // 0 default\r\n                window[\"CompositionEvent\"], // 1\r\n                window[\"DragEvent\"], // 2\r\n                window[\"Event\"], // 3\r\n                window[\"FocusEvent\"], // 4\r\n                window[\"KeyboardEvent\"], // 5\r\n                window[\"MessageEvent\"], // 6\r\n                window[\"MouseEvent\"], // 7\r\n                window[\"MouseScrollEvent\"], // 8\r\n                window[\"MouseWheelEvent\"], // 9\r\n                window[\"MutationEvent\"], // 10\r\n                window[\"ProgressEvent\"], // 11\r\n                window[\"TextEvent\"], // 12\r\n                window[\"TouchEvent\"], // 13\r\n                window[\"UIEvent\"], // 14\r\n                window[\"WheelEvent\"], // 15\r\n                window[\"ClipboardEvent\"] // 16\r\n            ],\r\n            NativeEvents = {\r\n                \"compositionstart\": 1, // CompositionEvent\r\n                \"compositionend\": 1, // CompositionEvent\r\n                \"compositionupdate\": 1, // CompositionEvent\r\n\r\n                \"beforecopy\": 16, // ClipboardEvent\r\n                \"beforecut\": 16, // ClipboardEvent\r\n                \"beforepaste\": 16, // ClipboardEvent\r\n                \"copy\": 16, // ClipboardEvent\r\n                \"cut\": 16, // ClipboardEvent\r\n                \"paste\": 16, // ClipboardEvent\r\n\r\n                \"drag\": 2, // DragEvent\r\n                \"dragend\": 2, // DragEvent\r\n                \"dragenter\": 2, // DragEvent\r\n                \"dragexit\": 2, // DragEvent\r\n                \"dragleave\": 2, // DragEvent\r\n                \"dragover\": 2, // DragEvent\r\n                \"dragstart\": 2, // DragEvent\r\n                \"drop\": 2, // DragEvent\r\n\r\n                \"abort\": 3, // Event\r\n                \"change\": 3, // Event\r\n                \"error\": 3, // Event\r\n                \"selectionchange\": 3, // Event\r\n                \"submit\": 3, // Event\r\n                \"reset\": 3, // Event\r\n\r\n                \"focus\": 4, // FocusEvent\r\n                \"blur\": 4, // FocusEvent\r\n                \"focusin\": 4, // FocusEvent\r\n                \"focusout\": 4, // FocusEvent\r\n\r\n                \"keydown\": 5, // KeyboardEvent\r\n                \"keypress\": 5, // KeyboardEvent\r\n                \"keyup\": 5, // KeyboardEvent\r\n\r\n                \"message\": 6, // MessageEvent\r\n\r\n                \"click\": 7, // MouseEvent\r\n                \"contextmenu\": 7, // MouseEvent\r\n                \"dblclick\": 7, // MouseEvent\r\n                \"mousedown\": 7, // MouseEvent\r\n                \"mouseup\": 7, // MouseEvent\r\n                \"mousemove\": 7, // MouseEvent\r\n                \"mouseover\": 7, // MouseEvent\r\n                \"mouseout\": 7, // MouseEvent\r\n                \"mouseenter\": 7, // MouseEvent\r\n                \"mouseleave\": 7, // MouseEvent\r\n\r\n\r\n                \"textInput\": 12, // TextEvent\r\n\r\n                \"touchstart\": 13, // TouchEvent\r\n                \"touchmove\": 13, // TouchEvent\r\n                \"touchend\": 13, // TouchEvent\r\n\r\n                \"load\": 14, // UIEvent\r\n                \"resize\": 14, // UIEvent\r\n                \"select\": 14, // UIEvent\r\n                \"scroll\": 14, // UIEvent\r\n                \"unload\": 14, // UIEvent,\r\n\r\n                \"wheel\": 15 // WheelEvent\r\n            };\r\n\r\n        function getEventCtor(type) {\r\n            var idx = NativeEvents[type];\r\n            if (!idx) {\r\n                idx = 0;\r\n            }\r\n            return EventCtors[idx];\r\n        }\r\n\r\n        return function(type, props) {\r\n            //create a custom dom event\r\n\r\n            if (langx.isString(type)) {\r\n                props = props || {};\r\n            } else {\r\n                props = type || {};\r\n                type = props.type || \"\";\r\n            }\r\n            var parsed = parse(type);\r\n            type = parsed.type;\r\n\r\n            props = langx.mixin({\r\n                bubbles: true,\r\n                cancelable: true\r\n            }, props);\r\n\r\n            if (parsed.ns) {\r\n                props.namespace = parsed.ns;\r\n            }\r\n\r\n            var ctor = getEventCtor(type),\r\n                e = new ctor(type, props);\r\n\r\n            langx.safeMixin(e, props);\r\n\r\n            return compatible(e);\r\n        };\r\n    })();\r\n\r\n    function createProxy(src, props) {\r\n        var key,\r\n            proxy = {\r\n                originalEvent: src\r\n            };\r\n        for (key in src) {\r\n            if (key !== \"keyIdentifier\" && !ignoreProperties.test(key) && src[key] !== undefined) {\r\n                proxy[key] = src[key];\r\n            }\r\n        }\r\n        if (props) {\r\n            langx.mixin(proxy, props);\r\n        }\r\n        return compatible(proxy, src);\r\n    }\r\n\r\n    var\r\n        specialEvents = {},\r\n        focusinSupported = \"onfocusin\" in window,\r\n        focus = { focus: \"focusin\", blur: \"focusout\" },\r\n        hover = { mouseenter: \"mouseover\", mouseleave: \"mouseout\" },\r\n        realEvent = function(type) {\r\n            return hover[type] || (focusinSupported && focus[type]) || type;\r\n        },\r\n        handlers = {},\r\n        EventBindings = langx.klass({\r\n            init: function(target, event) {\r\n                this._target = target;\r\n                this._event = event;\r\n                this._bindings = [];\r\n            },\r\n\r\n            add: function(fn, options) {\r\n                var bindings = this._bindings,\r\n                    binding = {\r\n                        fn: fn,\r\n                        options: langx.mixin({}, options)\r\n                    };\r\n\r\n                bindings.push(binding);\r\n\r\n                var self = this;\r\n                if (!self._listener) {\r\n                    self._listener = function(domEvt) {\r\n                        var elm = this,\r\n                            e = createProxy(domEvt),\r\n                            args = domEvt._args,\r\n                            bindings = self._bindings,\r\n                            ns = e.namespace;\r\n\r\n                        if (langx.isDefined(args)) {\r\n                            args = [e].concat(args);\r\n                        } else {\r\n                            args = [e];\r\n                        }\r\n\r\n                        langx.each(bindings, function(idx, binding) {\r\n                            var match = elm;\r\n                            if (e.isImmediatePropagationStopped && e.isImmediatePropagationStopped()) {\r\n                                return false;\r\n                            }\r\n                            var fn = binding.fn,\r\n                                options = binding.options || {},\r\n                                selector = options.selector,\r\n                                one = options.one,\r\n                                data = options.data;\r\n\r\n                            if (ns && ns != options.ns && options.ns.indexOf(ns) === -1) {\r\n                                return;\r\n                            }\r\n                            if (selector) {\r\n                                match = finder.closest(e.target, selector);\r\n                                if (match && match !== elm) {\r\n                                    langx.mixin(e, {\r\n                                        currentTarget: match,\r\n                                        liveFired: elm\r\n                                    });\r\n                                } else {\r\n                                    return;\r\n                                }\r\n                            }\r\n\r\n                            var originalEvent = self._event;\r\n                            if (originalEvent in hover) {\r\n                                var related = e.relatedTarget;\r\n                                if (related && (related === match || noder.contains(match, related))) {\r\n                                    return;\r\n                                }\r\n                            }\r\n\r\n                            if (langx.isDefined(data)) {\r\n                                e.data = data;\r\n                            }\r\n\r\n                            if (one) {\r\n                                self.remove(fn, options);\r\n                            }\r\n\r\n                            var result = fn.apply(match, args);\r\n\r\n                            if (result === false) {\r\n                                e.preventDefault();\r\n                                e.stopPropagation();\r\n                            }\r\n                        });;\r\n                    };\r\n\r\n                    var event = self._event;\r\n                    /*\r\n                                        if (event in hover) {\r\n                                            var l = self._listener;\r\n                                            self._listener = function(e) {\r\n                                                var related = e.relatedTarget;\r\n                                                if (!related || (related !== this && !noder.contains(this, related))) {\r\n                                                    return l.apply(this, arguments);\r\n                                                }\r\n                                            }\r\n                                        }\r\n                    */\r\n\r\n                    if (self._target.addEventListener) {\r\n                        self._target.addEventListener(realEvent(event), self._listener, false);\r\n                    } else {\r\n                        console.warn(\"invalid eventer object\", self._target);\r\n                    }\r\n                }\r\n\r\n            },\r\n            remove: function(fn, options) {\r\n                options = langx.mixin({}, options);\r\n\r\n                function matcherFor(ns) {\r\n                    return new RegExp(\"(?:^| )\" + ns.replace(\" \", \" .* ?\") + \"(?: |$)\");\r\n                }\r\n                var matcher;\r\n                if (options.ns) {\r\n                    matcher = matcherFor(options.ns);\r\n                }\r\n\r\n                this._bindings = this._bindings.filter(function(binding) {\r\n                    var removing = (!fn || fn === binding.fn) &&\r\n                        (!matcher || matcher.test(binding.options.ns)) &&\r\n                        (!options.selector || options.selector == binding.options.selector);\r\n\r\n                    return !removing;\r\n                });\r\n                if (this._bindings.length == 0) {\r\n                    if (this._target.removeEventListener) {\r\n                        this._target.removeEventListener(realEvent(this._event), this._listener, false);\r\n                    }\r\n                    this._listener = null;\r\n                }\r\n            }\r\n        }),\r\n        EventsHandler = langx.klass({\r\n            init: function(elm) {\r\n                this._target = elm;\r\n                this._handler = {};\r\n            },\r\n\r\n            // add a event listener\r\n            // selector Optional\r\n            register: function(event, callback, options) {\r\n                // Seperate the event from the namespace\r\n                var parsed = parse(event),\r\n                    event = parsed.type,\r\n                    specialEvent = specialEvents[event],\r\n                    bindingEvent = specialEvent && (specialEvent.bindType || specialEvent.bindEventName);\r\n\r\n                var events = this._handler;\r\n\r\n                // Check if there is already a handler for this event\r\n                if (events[event] === undefined) {\r\n                    events[event] = new EventBindings(this._target, bindingEvent || event);\r\n                }\r\n\r\n                // Register the new callback function\r\n                events[event].add(callback, langx.mixin({\r\n                    ns: parsed.ns\r\n                }, options)); // options:{selector:xxx}\r\n            },\r\n\r\n            // remove a event listener\r\n            unregister: function(event, fn, options) {\r\n                // Check for parameter validtiy\r\n                var events = this._handler,\r\n                    parsed = parse(event);\r\n                event = parsed.type;\r\n\r\n                if (event) {\r\n                    var listener = events[event];\r\n\r\n                    if (listener) {\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                } else {\r\n                    //remove all events\r\n                    for (event in events) {\r\n                        var listener = events[event];\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                }\r\n            }\r\n        }),\r\n\r\n        findHandler = function(elm) {\r\n            var id = uid(elm),\r\n                handler = handlers[id];\r\n            if (!handler) {\r\n                handler = handlers[id] = new EventsHandler(elm);\r\n            }\r\n            return handler;\r\n        };\r\n\r\n    /*   \r\n     * Remove an event handler for one or more events from the specified element.\r\n     * @param {HTMLElement} elm  \r\n     * @param {String} events\r\n     * @param {String　Optional } selector\r\n     * @param {Function} callback\r\n     */\r\n    function off(elm, events, selector, callback) {\r\n        var $this = this\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                off(elm, type, selector, fn);\r\n            })\r\n            return $this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback) && callback !== false) {\r\n            callback = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        if (events) events.forEach(function(event) {\r\n\r\n            handler.unregister(event, callback, {\r\n                selector: selector,\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Attach an event handler function for one or more events to the selected elements.\r\n     * @param {HTMLElement} elm  \r\n     * @param {String} events\r\n     * @param {String　Optional} selector\r\n     * @param {Anything Optional} data\r\n     * @param {Function} callback\r\n     * @param {Boolean　Optional} one\r\n     */\r\n    function on(elm, events, selector, data, callback, one) {\r\n\r\n        var autoRemove, delegator;\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                on(elm, type, selector, data, fn, one);\r\n            });\r\n            return this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n            callback = data;\r\n            data = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (langx.isFunction(data)) {\r\n            callback = data;\r\n            data = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        events.forEach(function(event) {\r\n            if (event == \"ready\") {\r\n                return ready(callback);\r\n            }\r\n            handler.register(event, callback, {\r\n                data: data,\r\n                selector: selector,\r\n                one: !!one\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Attach a handler to an event for the elements. The handler is executed at most once per \r\n     * @param {HTMLElement} elm  \r\n     * @param {String} event\r\n     * @param {String　Optional} selector\r\n     * @param {Anything Optional} data\r\n     * @param {Function} callback\r\n     */\r\n    function one(elm, events, selector, data, callback) {\r\n        on(elm, events, selector, data, callback, 1);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Prevents propagation and clobbers the default action of the passed event. The same as calling event.preventDefault() and event.stopPropagation(). \r\n     * @param {String} event\r\n     */\r\n    function stop(event) {\r\n        if (window.document.all) {\r\n            event.keyCode = 0;\r\n        }\r\n        if (event.preventDefault) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        return this;\r\n    }\r\n    /*   \r\n     * Execute all handlers and behaviors attached to the matched elements for the given event  \r\n     * @param {String} evented\r\n     * @param {String} type\r\n     * @param {Array or PlainObject } args\r\n     */\r\n    function trigger(evented, type, args) {\r\n        var e;\r\n        if (type instanceof Event) {\r\n            e = type;\r\n        } else {\r\n            e = createEvent(type, args);\r\n        }\r\n        e._args = args;\r\n\r\n        var fn = (evented.dispatchEvent || evented.trigger);\r\n        if (fn) {\r\n            fn.call(evented, e);\r\n        } else {\r\n            console.warn(\"The evented parameter is not a eventable object\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n    /*   \r\n     * Specify a function to execute when the DOM is fully loaded.  \r\n     * @param {Function} callback\r\n     */\r\n    function ready(callback) {\r\n        // need to check if document.body exists for IE as that browser reports\r\n        // document ready when it hasn't yet created the body elm\r\n        if (readyRE.test(document.readyState) && document.body) {\r\n            langx.defer(callback);\r\n        } else {\r\n            document.addEventListener('DOMContentLoaded', callback, false);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    var keyCodeLookup = {\r\n        \"backspace\": 8,\r\n        \"comma\": 188,\r\n        \"delete\": 46,\r\n        \"down\": 40,\r\n        \"end\": 35,\r\n        \"enter\": 13,\r\n        \"escape\": 27,\r\n        \"home\": 36,\r\n        \"left\": 37,\r\n        \"page_down\": 34,\r\n        \"page_up\": 33,\r\n        \"period\": 190,\r\n        \"right\": 39,\r\n        \"space\": 32,\r\n        \"tab\": 9,\r\n        \"up\": 38\r\n    };\r\n    //example:\r\n    //shortcuts(elm).add(\"CTRL+ALT+SHIFT+X\",function(){console.log(\"test!\")});\r\n    function shortcuts(elm) {\r\n\r\n        var registry = datax.data(elm, \"shortcuts\");\r\n        if (!registry) {\r\n            registry = {};\r\n            datax.data(elm, \"shortcuts\", registry);\r\n            var run = function(shortcut, event) {\r\n                var n = event.metaKey || event.ctrlKey;\r\n                if (shortcut.ctrl == n && shortcut.alt == event.altKey && shortcut.shift == event.shiftKey) {\r\n                    if (event.keyCode == shortcut.keyCode || event.charCode && event.charCode == shortcut.charCode) {\r\n                        event.preventDefault();\r\n                        if (\"keydown\" == event.type) {\r\n                            shortcut.fn(event);\r\n                        }\r\n                        return true;\r\n                    }\r\n                }\r\n            };\r\n            on(elm, \"keyup keypress keydown\", function(event) {\r\n                if (!(/INPUT|TEXTAREA/.test(event.target.nodeName))) {\r\n                    for (var key in registry) {\r\n                        run(registry[key], event);\r\n                    }\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        return {\r\n            add: function(pattern, fn) {\r\n                var shortcutKeys;\r\n                if (pattern.indexOf(\",\") > -1) {\r\n                    shortcutKeys = pattern.toLowerCase().split(\",\");\r\n                } else {\r\n                    shortcutKeys = pattern.toLowerCase().split(\" \");\r\n                }\r\n                shortcutKeys.forEach(function(shortcutKey) {\r\n                    var setting = {\r\n                        fn: fn,\r\n                        alt: false,\r\n                        ctrl: false,\r\n                        shift: false\r\n                    };\r\n                    shortcutKey.split(\"+\").forEach(function(key) {\r\n                        switch (key) {\r\n                            case \"alt\":\r\n                            case \"ctrl\":\r\n                            case \"shift\":\r\n                                setting[key] = true;\r\n                                break;\r\n                            default:\r\n                                setting.charCode = key.charCodeAt(0);\r\n                                setting.keyCode = keyCodeLookup[key] || key.toUpperCase().charCodeAt(0);\r\n                        }\r\n                    });\r\n                    var regKey = (setting.ctrl ? \"ctrl\" : \"\") + \",\" + (setting.alt ? \"alt\" : \"\") + \",\" + (setting.shift ? \"shift\" : \"\") + \",\" + setting.keyCode;\r\n                    registry[regKey] = setting;\r\n                })\r\n            }\r\n\r\n        };\r\n\r\n    }\r\n\r\n    if (browser.support.transition) {\r\n        specialEvents.transitionEnd = {\r\n//          handle: function (e) {\r\n//            if ($(e.target).is(this)) return e.handleObj.handler.apply(this, arguments)\r\n//          },\r\n          bindType: browser.support.transition.end,\r\n          delegateType: browser.support.transition.end\r\n        }        \r\n    }\r\n\r\n    function eventer() {\r\n        return eventer;\r\n    }\r\n\r\n    langx.mixin(eventer, {\r\n        create: createEvent,\r\n\r\n        keys: keyCodeLookup,\r\n\r\n        off: off,\r\n\r\n        on: on,\r\n\r\n        one: one,\r\n\r\n        proxy: createProxy,\r\n\r\n        ready: ready,\r\n\r\n        shortcuts: shortcuts,\r\n\r\n        special: specialEvents,\r\n\r\n        stop: stop,\r\n\r\n        trigger: trigger\r\n\r\n    });\r\n\r\n    return dom.eventer = eventer;\r\n});\ndefine('skylark-utils-dom/geom',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./styler\"\r\n], function(dom, langx, noder, styler) {\r\n    var rootNodeRE = /^(?:body|html)$/i,\r\n        px = langx.toPixel,\r\n        offsetParent = noder.offsetParent,\r\n        cachedScrollbarWidth;\r\n\r\n    function scrollbarWidth() {\r\n        if (cachedScrollbarWidth !== undefined) {\r\n            return cachedScrollbarWidth;\r\n        }\r\n        var w1, w2,\r\n            div = noder.createFragment(\"<div style=\" +\r\n                \"'display:block;position:absolute;width:200px;height:200px;overflow:hidden;'>\" +\r\n                \"<div style='height:300px;width:auto;'></div></div>\")[0],\r\n            innerDiv = div.childNodes[0];\r\n\r\n        noder.append(document.body, div);\r\n\r\n        w1 = innerDiv.offsetWidth;\r\n\r\n        styler.css(div, \"overflow\", \"scroll\");\r\n\r\n        w2 = innerDiv.offsetWidth;\r\n\r\n        if (w1 === w2) {\r\n            w2 = div[0].clientWidth;\r\n        }\r\n\r\n        noder.remove(div);\r\n\r\n        return (cachedScrollbarWidth = w1 - w2);\r\n    }\r\n    /*\r\n     * Get the widths of each border of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function borderExtents(elm) {\r\n        if (noder.isWindow(elm)) {\r\n            return {\r\n                left : 0,\r\n                top : 0,\r\n                right : 0,\r\n                bottom : 0\r\n            }\r\n        }        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.borderLeftWidth, elm),\r\n            top: px(s.borderTopWidth, elm),\r\n            right: px(s.borderRightWidth, elm),\r\n            bottom: px(s.borderBottomWidth, elm)\r\n        }\r\n    }\r\n\r\n    //viewport coordinate\r\n    /*\r\n     * Get or set the viewport position of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function boundingPosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            return rootNodeRE.test(elm.nodeName) ? { top: 0, left: 0 } : elm.getBoundingClientRect();\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the viewport rect of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function boundingRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            return elm.getBoundingClientRect()\r\n        } else {\r\n            boundingPosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the height of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function clientHeight(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).height;\r\n        } else {\r\n            return clientSize(elm, {\r\n                height: value\r\n            });\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the size of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} dimension\r\n     */\r\n    function clientSize(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            return {\r\n                width: elm.clientWidth,\r\n                height: elm.clientHeight\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width - pex.left - pex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height - pex.top - pex.bottom;\r\n                }\r\n            } else {\r\n                var bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width + bex.left + bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height + bex.top + bex.bottom;\r\n                }\r\n\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n        return {\r\n            width: elm.clientWidth,\r\n            height: elm.clientHeight\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get or set the width of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} dimension\r\n     */\r\n    function clientWidth(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).width;\r\n        } else {\r\n            clientSize(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the rect of the specified element content box.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function contentRect(elm) {\r\n        var cs = clientSize(elm),\r\n            pex = paddingExtents(elm);\r\n\r\n\r\n        //// On Opera, offsetLeft includes the parent's border\r\n        //if(has(\"opera\")){\r\n        //    pe.l += be.l;\r\n        //    pe.t += be.t;\r\n        //}\r\n        return {\r\n            left: pex.left,\r\n            top: pex.top,\r\n            width: cs.width - pex.left - pex.right,\r\n            height: cs.height - pex.top - pex.bottom\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the document size.\r\n     * @param {HTMLDocument} doc\r\n     */\r\n    function getDocumentSize(doc) {\r\n        var documentElement = doc.documentElement,\r\n            body = doc.body,\r\n            max = Math.max,\r\n            scrollWidth = max(documentElement.scrollWidth, body.scrollWidth),\r\n            clientWidth = max(documentElement.clientWidth, body.clientWidth),\r\n            offsetWidth = max(documentElement.offsetWidth, body.offsetWidth),\r\n            scrollHeight = max(documentElement.scrollHeight, body.scrollHeight),\r\n            clientHeight = max(documentElement.clientHeight, body.clientHeight),\r\n            offsetHeight = max(documentElement.offsetHeight, body.offsetHeight);\r\n\r\n        return {\r\n            width: scrollWidth < offsetWidth ? clientWidth : scrollWidth,\r\n            height: scrollHeight < offsetHeight ? clientHeight : scrollHeight\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the document size.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function height(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).height;\r\n        } else {\r\n            size(elm, {\r\n                height: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the widths of each margin of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function marginExtents(elm) {\r\n        if (noder.isWindow(elm)) {\r\n            return {\r\n                left : 0,\r\n                top : 0,\r\n                right : 0,\r\n                bottom : 0\r\n            }\r\n        }\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.marginLeft),\r\n            top: px(s.marginTop),\r\n            right: px(s.marginRight),\r\n            bottom: px(s.marginBottom),\r\n        }\r\n    }\r\n\r\n\r\n    function marginRect(elm) {\r\n        var obj = relativeRect(elm),\r\n            me = marginExtents(elm);\r\n\r\n        return {\r\n            left: obj.left,\r\n            top: obj.top,\r\n            width: obj.width + me.left + me.right,\r\n            height: obj.height + me.top + me.bottom\r\n        };\r\n    }\r\n\r\n\r\n    function marginSize(elm) {\r\n        var obj = size(elm),\r\n            me = marginExtents(elm);\r\n\r\n        return {\r\n            width: obj.width + me.left + me.right,\r\n            height: obj.height + me.top + me.bottom\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the widths of each padding of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function paddingExtents(elm) {\r\n        if (noder.isWindow(elm)) {\r\n            return {\r\n                left : 0,\r\n                top : 0,\r\n                right : 0,\r\n                bottom : 0\r\n            }\r\n        }\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.paddingLeft),\r\n            top: px(s.paddingTop),\r\n            right: px(s.paddingRight),\r\n            bottom: px(s.paddingBottom),\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the document position of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    //coordinate to the document\r\n    function pagePosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset\r\n            }\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = pagePosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the document rect of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function pageRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset,\r\n                width: Math.round(obj.width),\r\n                height: Math.round(obj.height)\r\n            }\r\n        } else {\r\n            pagePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the position of the specified element border box , relative to parent element.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    // coordinate relative to it's parent\r\n    function relativePosition(elm, coords) {\r\n        if (coords == undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingPosition(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top, // - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left, // - mex.left\r\n            }\r\n        } else {\r\n            var props = {\r\n                top: coords.top,\r\n                left: coords.left\r\n            }\r\n\r\n            if (styler.css(elm, \"position\") == \"static\") {\r\n                props['position'] = \"relative\";\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the rect of the specified element border box , relatived to parent element.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function relativeRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingRect(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top, // - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left, // - mex.left,\r\n                width: offset.width,\r\n                height: offset.height\r\n            }\r\n        } else {\r\n            relativePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Scroll the specified element into view.\r\n     * @param {HTMLElement} elm\r\n     * @param {} align\r\n     */\r\n    function scrollIntoView(elm, align) {\r\n        function getOffset(elm, rootElm) {\r\n            var x, y, parent = elm;\r\n\r\n            x = y = 0;\r\n            while (parent && parent != rootElm && parent.nodeType) {\r\n                x += parent.offsetLeft || 0;\r\n                y += parent.offsetTop || 0;\r\n                parent = parent.offsetParent;\r\n            }\r\n\r\n            return { x: x, y: y };\r\n        }\r\n\r\n        var parentElm = elm.parentNode;\r\n        var x, y, width, height, parentWidth, parentHeight;\r\n        var pos = getOffset(elm, parentElm);\r\n\r\n        x = pos.x;\r\n        y = pos.y;\r\n        width = elm.offsetWidth;\r\n        height = elm.offsetHeight;\r\n        parentWidth = parentElm.clientWidth;\r\n        parentHeight = parentElm.clientHeight;\r\n\r\n        if (align == \"end\") {\r\n            x -= parentWidth - width;\r\n            y -= parentHeight - height;\r\n        } else if (align == \"center\") {\r\n            x -= (parentWidth / 2) - (width / 2);\r\n            y -= (parentHeight / 2) - (height / 2);\r\n        }\r\n\r\n        parentElm.scrollLeft = x;\r\n        parentElm.scrollTop = y;\r\n\r\n        return this;\r\n    }\r\n    /*\r\n     * Get or set the current horizontal position of the scroll bar for the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function scrollLeft(elm, value) {\r\n        var hasScrollLeft = \"scrollLeft\" in elm;\r\n        if (value === undefined) {\r\n            return hasScrollLeft ? elm.scrollLeft : elm.pageXOffset\r\n        } else {\r\n            if (hasScrollLeft) {\r\n                elm.scrollLeft = value;\r\n            } else {\r\n                elm.scrollTo(value, elm.scrollY);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or the current vertical position of the scroll bar for the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function scrollTop(elm, value) {\r\n        var hasScrollTop = \"scrollTop\" in elm;\r\n\r\n        if (value === undefined) {\r\n            return hasScrollTop ? elm.scrollTop : elm.pageYOffset\r\n        } else {\r\n            if (hasScrollTop) {\r\n                elm.scrollTop = value;\r\n            } else {\r\n                elm.scrollTo(elm.scrollX, value);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or set the size of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject}dimension\r\n     */\r\n    function size(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            if (langx.isWindow(elm)) {\r\n                return {\r\n                    width: elm.innerWidth,\r\n                    height: elm.innerHeight\r\n                }\r\n\r\n            } else if (langx.isDocument(elm)) {\r\n                return getDocumentSize(document);\r\n            } else {\r\n                return {\r\n                    width: elm.offsetWidth,\r\n                    height: elm.offsetHeight\r\n                }\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm),\r\n                    bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined && props.width !== \"\" && props.width !== null) {\r\n                    props.width = props.width - pex.left - pex.right - bex.left - bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined && props.height !== \"\" && props.height !== null) {\r\n                    props.height = props.height - pex.top - pex.bottom - bex.top - bex.bottom;\r\n                }\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or set the size of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function width(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).width;\r\n        } else {\r\n            size(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function geom() {\r\n        return geom;\r\n    }\r\n\r\n    langx.mixin(geom, {\r\n        borderExtents: borderExtents,\r\n        //viewport coordinate\r\n        boundingPosition: boundingPosition,\r\n\r\n        boundingRect: boundingRect,\r\n\r\n        clientHeight: clientHeight,\r\n\r\n        clientSize: clientSize,\r\n\r\n        clientWidth: clientWidth,\r\n\r\n        contentRect: contentRect,\r\n\r\n        getDocumentSize: getDocumentSize,\r\n\r\n        height: height,\r\n\r\n        marginExtents: marginExtents,\r\n\r\n        marginRect: marginRect,\r\n\r\n        marginSize: marginSize,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        paddingExtents: paddingExtents,\r\n\r\n        //coordinate to the document\r\n        pagePosition: pagePosition,\r\n\r\n        pageRect: pageRect,\r\n\r\n        // coordinate relative to it's parent\r\n        relativePosition: relativePosition,\r\n\r\n        relativeRect: relativeRect,\r\n\r\n        scrollbarWidth: scrollbarWidth,\r\n\r\n        scrollIntoView: scrollIntoView,\r\n\r\n        scrollLeft: scrollLeft,\r\n\r\n        scrollTop: scrollTop,\r\n\r\n        size: size,\r\n\r\n        width: width\r\n    });\r\n\r\n    ( function() {\r\n        var max = Math.max,\r\n            abs = Math.abs,\r\n            rhorizontal = /left|center|right/,\r\n            rvertical = /top|center|bottom/,\r\n            roffset = /[\\+\\-]\\d+(\\.[\\d]+)?%?/,\r\n            rposition = /^\\w+/,\r\n            rpercent = /%$/;\r\n\r\n        function getOffsets( offsets, width, height ) {\r\n            return [\r\n                parseFloat( offsets[ 0 ] ) * ( rpercent.test( offsets[ 0 ] ) ? width / 100 : 1 ),\r\n                parseFloat( offsets[ 1 ] ) * ( rpercent.test( offsets[ 1 ] ) ? height / 100 : 1 )\r\n            ];\r\n        }\r\n\r\n        function parseCss( element, property ) {\r\n            return parseInt( styler.css( element, property ), 10 ) || 0;\r\n        }\r\n\r\n        function getDimensions( raw ) {\r\n            if ( raw.nodeType === 9 ) {\r\n                return {\r\n                    size: size(raw),\r\n                    offset: { top: 0, left: 0 }\r\n                };\r\n            }\r\n            if ( noder.isWindow( raw ) ) {\r\n                return {\r\n                    size: size(raw),\r\n                    offset: { \r\n                        top: scrollTop(raw), \r\n                        left: scrollLeft(raw) \r\n                    }\r\n                };\r\n            }\r\n            if ( raw.preventDefault ) {\r\n                return {\r\n                    size : {\r\n                        width: 0,\r\n                        height: 0\r\n                    },\r\n                    offset: { \r\n                        top: raw.pageY, \r\n                        left: raw.pageX \r\n                    }\r\n                };\r\n            }\r\n            return {\r\n                size: size(raw),\r\n                offset: pagePosition(raw)\r\n            };\r\n        }\r\n\r\n        function getScrollInfo( within ) {\r\n            var overflowX = within.isWindow || within.isDocument ? \"\" :\r\n                    styler.css(within.element,\"overflow-x\" ),\r\n                overflowY = within.isWindow || within.isDocument ? \"\" :\r\n                    styler.css(within.element,\"overflow-y\" ),\r\n                hasOverflowX = overflowX === \"scroll\" ||\r\n                    ( overflowX === \"auto\" && within.width < scrollWidth(within.element) ),\r\n                hasOverflowY = overflowY === \"scroll\" ||\r\n                    ( overflowY === \"auto\" && within.height < scrollHeight(within.element));\r\n            return {\r\n                width: hasOverflowY ? scrollbarWidth() : 0,\r\n                height: hasOverflowX ? scrollbarWidth() : 0\r\n            };\r\n        }\r\n\r\n        function getWithinInfo( element ) {\r\n            var withinElement = element || window,\r\n                isWindow = noder.isWindow( withinElement),\r\n                isDocument = !!withinElement && withinElement.nodeType === 9,\r\n                hasOffset = !isWindow && !isDocument,\r\n                msize = marginSize(withinElement);\r\n            return {\r\n                element: withinElement,\r\n                isWindow: isWindow,\r\n                isDocument: isDocument,\r\n                offset: hasOffset ? pagePosition(element) : { left: 0, top: 0 },\r\n                scrollLeft: scrollLeft(withinElement),\r\n                scrollTop: scrollTop(withinElement),\r\n                width: msize.width,\r\n                height: msize.height\r\n            };\r\n        }\r\n\r\n        function posit(elm,options ) {\r\n            // Make a copy, we don't want to modify arguments\r\n            options = langx.extend( {}, options );\r\n\r\n            var atOffset, targetWidth, targetHeight, targetOffset, basePosition, dimensions,\r\n                target = options.of,\r\n                within = getWithinInfo( options.within ),\r\n                scrollInfo = getScrollInfo( within ),\r\n                collision = ( options.collision || \"flip\" ).split( \" \" ),\r\n                offsets = {};\r\n\r\n            dimensions = getDimensions( target );\r\n            if ( target.preventDefault ) {\r\n\r\n                // Force left top to allow flipping\r\n                options.at = \"left top\";\r\n            }\r\n            targetWidth = dimensions.size.width;\r\n            targetHeight = dimensions.size.height;\r\n            targetOffset = dimensions.offset;\r\n\r\n            // Clone to reuse original targetOffset later\r\n            basePosition = langx.extend( {}, targetOffset );\r\n\r\n            // Force my and at to have valid horizontal and vertical positions\r\n            // if a value is missing or invalid, it will be converted to center\r\n            langx.each( [ \"my\", \"at\" ], function() {\r\n                var pos = ( options[ this ] || \"\" ).split( \" \" ),\r\n                    horizontalOffset,\r\n                    verticalOffset;\r\n\r\n                if ( pos.length === 1 ) {\r\n                    pos = rhorizontal.test( pos[ 0 ] ) ?\r\n                        pos.concat( [ \"center\" ] ) :\r\n                        rvertical.test( pos[ 0 ] ) ?\r\n                            [ \"center\" ].concat( pos ) :\r\n                            [ \"center\", \"center\" ];\r\n                }\r\n                pos[ 0 ] = rhorizontal.test( pos[ 0 ] ) ? pos[ 0 ] : \"center\";\r\n                pos[ 1 ] = rvertical.test( pos[ 1 ] ) ? pos[ 1 ] : \"center\";\r\n\r\n                // Calculate offsets\r\n                horizontalOffset = roffset.exec( pos[ 0 ] );\r\n                verticalOffset = roffset.exec( pos[ 1 ] );\r\n                offsets[ this ] = [\r\n                    horizontalOffset ? horizontalOffset[ 0 ] : 0,\r\n                    verticalOffset ? verticalOffset[ 0 ] : 0\r\n                ];\r\n\r\n                // Reduce to just the positions without the offsets\r\n                options[ this ] = [\r\n                    rposition.exec( pos[ 0 ] )[ 0 ],\r\n                    rposition.exec( pos[ 1 ] )[ 0 ]\r\n                ];\r\n            } );\r\n\r\n            // Normalize collision option\r\n            if ( collision.length === 1 ) {\r\n                collision[ 1 ] = collision[ 0 ];\r\n            }\r\n\r\n            if ( options.at[ 0 ] === \"right\" ) {\r\n                basePosition.left += targetWidth;\r\n            } else if ( options.at[ 0 ] === \"center\" ) {\r\n                basePosition.left += targetWidth / 2;\r\n            }\r\n\r\n            if ( options.at[ 1 ] === \"bottom\" ) {\r\n                basePosition.top += targetHeight;\r\n            } else if ( options.at[ 1 ] === \"center\" ) {\r\n                basePosition.top += targetHeight / 2;\r\n            }\r\n\r\n            atOffset = getOffsets( offsets.at, targetWidth, targetHeight );\r\n            basePosition.left += atOffset[ 0 ];\r\n            basePosition.top += atOffset[ 1 ];\r\n\r\n            return ( function(elem) {\r\n                var collisionPosition, using,\r\n                    msize = marginSize(elem),\r\n                    elemWidth = msize.width,\r\n                    elemHeight = msize.height,\r\n                    marginLeft = parseCss( elem, \"marginLeft\" ),\r\n                    marginTop = parseCss( elem, \"marginTop\" ),\r\n                    collisionWidth = elemWidth + marginLeft + parseCss( elem, \"marginRight\" ) +\r\n                        scrollInfo.width,\r\n                    collisionHeight = elemHeight + marginTop + parseCss( elem, \"marginBottom\" ) +\r\n                        scrollInfo.height,\r\n                    position = langx.extend( {}, basePosition ),\r\n                    myOffset = getOffsets( offsets.my, msize.width, msize.height);\r\n\r\n                if ( options.my[ 0 ] === \"right\" ) {\r\n                    position.left -= elemWidth;\r\n                } else if ( options.my[ 0 ] === \"center\" ) {\r\n                    position.left -= elemWidth / 2;\r\n                }\r\n\r\n                if ( options.my[ 1 ] === \"bottom\" ) {\r\n                    position.top -= elemHeight;\r\n                } else if ( options.my[ 1 ] === \"center\" ) {\r\n                    position.top -= elemHeight / 2;\r\n                }\r\n\r\n                position.left += myOffset[ 0 ];\r\n                position.top += myOffset[ 1 ];\r\n\r\n                collisionPosition = {\r\n                    marginLeft: marginLeft,\r\n                    marginTop: marginTop\r\n                };\r\n\r\n                langx.each( [ \"left\", \"top\" ], function( i, dir ) {\r\n                    if ( positions[ collision[ i ] ] ) {\r\n                        positions[ collision[ i ] ][ dir ]( position, {\r\n                            targetWidth: targetWidth,\r\n                            targetHeight: targetHeight,\r\n                            elemWidth: elemWidth,\r\n                            elemHeight: elemHeight,\r\n                            collisionPosition: collisionPosition,\r\n                            collisionWidth: collisionWidth,\r\n                            collisionHeight: collisionHeight,\r\n                            offset: [ atOffset[ 0 ] + myOffset[ 0 ], atOffset [ 1 ] + myOffset[ 1 ] ],\r\n                            my: options.my,\r\n                            at: options.at,\r\n                            within: within,\r\n                            elem: elem\r\n                        } );\r\n                    }\r\n                } );\r\n\r\n                if ( options.using ) {\r\n\r\n                    // Adds feedback as second argument to using callback, if present\r\n                    using = function( props ) {\r\n                        var left = targetOffset.left - position.left,\r\n                            right = left + targetWidth - elemWidth,\r\n                            top = targetOffset.top - position.top,\r\n                            bottom = top + targetHeight - elemHeight,\r\n                            feedback = {\r\n                                target: {\r\n                                    element: target,\r\n                                    left: targetOffset.left,\r\n                                    top: targetOffset.top,\r\n                                    width: targetWidth,\r\n                                    height: targetHeight\r\n                                },\r\n                                element: {\r\n                                    element: elem,\r\n                                    left: position.left,\r\n                                    top: position.top,\r\n                                    width: elemWidth,\r\n                                    height: elemHeight\r\n                                },\r\n                                horizontal: right < 0 ? \"left\" : left > 0 ? \"right\" : \"center\",\r\n                                vertical: bottom < 0 ? \"top\" : top > 0 ? \"bottom\" : \"middle\"\r\n                            };\r\n                        if ( targetWidth < elemWidth && abs( left + right ) < targetWidth ) {\r\n                            feedback.horizontal = \"center\";\r\n                        }\r\n                        if ( targetHeight < elemHeight && abs( top + bottom ) < targetHeight ) {\r\n                            feedback.vertical = \"middle\";\r\n                        }\r\n                        if ( max( abs( left ), abs( right ) ) > max( abs( top ), abs( bottom ) ) ) {\r\n                            feedback.important = \"horizontal\";\r\n                        } else {\r\n                            feedback.important = \"vertical\";\r\n                        }\r\n                        options.using.call( this, props, feedback );\r\n                    };\r\n                }\r\n\r\n                pagePosition(elem, langx.extend( position, { using: using } ));\r\n            })(elm);\r\n        }\r\n\r\n        var positions = {\r\n            fit: {\r\n                left: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.isWindow ? within.scrollLeft : within.offset.left,\r\n                        outerWidth = within.width,\r\n                        collisionPosLeft = position.left - data.collisionPosition.marginLeft,\r\n                        overLeft = withinOffset - collisionPosLeft,\r\n                        overRight = collisionPosLeft + data.collisionWidth - outerWidth - withinOffset,\r\n                        newOverRight;\r\n\r\n                    // Element is wider than within\r\n                    if ( data.collisionWidth > outerWidth ) {\r\n\r\n                        // Element is initially over the left side of within\r\n                        if ( overLeft > 0 && overRight <= 0 ) {\r\n                            newOverRight = position.left + overLeft + data.collisionWidth - outerWidth -\r\n                                withinOffset;\r\n                            position.left += overLeft - newOverRight;\r\n\r\n                        // Element is initially over right side of within\r\n                        } else if ( overRight > 0 && overLeft <= 0 ) {\r\n                            position.left = withinOffset;\r\n\r\n                        // Element is initially over both left and right sides of within\r\n                        } else {\r\n                            if ( overLeft > overRight ) {\r\n                                position.left = withinOffset + outerWidth - data.collisionWidth;\r\n                            } else {\r\n                                position.left = withinOffset;\r\n                            }\r\n                        }\r\n\r\n                    // Too far left -> align with left edge\r\n                    } else if ( overLeft > 0 ) {\r\n                        position.left += overLeft;\r\n\r\n                    // Too far right -> align with right edge\r\n                    } else if ( overRight > 0 ) {\r\n                        position.left -= overRight;\r\n\r\n                    // Adjust based on position and margin\r\n                    } else {\r\n                        position.left = max( position.left - collisionPosLeft, position.left );\r\n                    }\r\n                },\r\n                top: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.isWindow ? within.scrollTop : within.offset.top,\r\n                        outerHeight = data.within.height,\r\n                        collisionPosTop = position.top - data.collisionPosition.marginTop,\r\n                        overTop = withinOffset - collisionPosTop,\r\n                        overBottom = collisionPosTop + data.collisionHeight - outerHeight - withinOffset,\r\n                        newOverBottom;\r\n\r\n                    // Element is taller than within\r\n                    if ( data.collisionHeight > outerHeight ) {\r\n\r\n                        // Element is initially over the top of within\r\n                        if ( overTop > 0 && overBottom <= 0 ) {\r\n                            newOverBottom = position.top + overTop + data.collisionHeight - outerHeight -\r\n                                withinOffset;\r\n                            position.top += overTop - newOverBottom;\r\n\r\n                        // Element is initially over bottom of within\r\n                        } else if ( overBottom > 0 && overTop <= 0 ) {\r\n                            position.top = withinOffset;\r\n\r\n                        // Element is initially over both top and bottom of within\r\n                        } else {\r\n                            if ( overTop > overBottom ) {\r\n                                position.top = withinOffset + outerHeight - data.collisionHeight;\r\n                            } else {\r\n                                position.top = withinOffset;\r\n                            }\r\n                        }\r\n\r\n                    // Too far up -> align with top\r\n                    } else if ( overTop > 0 ) {\r\n                        position.top += overTop;\r\n\r\n                    // Too far down -> align with bottom edge\r\n                    } else if ( overBottom > 0 ) {\r\n                        position.top -= overBottom;\r\n\r\n                    // Adjust based on position and margin\r\n                    } else {\r\n                        position.top = max( position.top - collisionPosTop, position.top );\r\n                    }\r\n                }\r\n            },\r\n            flip: {\r\n                left: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.offset.left + within.scrollLeft,\r\n                        outerWidth = within.width,\r\n                        offsetLeft = within.isWindow ? within.scrollLeft : within.offset.left,\r\n                        collisionPosLeft = position.left - data.collisionPosition.marginLeft,\r\n                        overLeft = collisionPosLeft - offsetLeft,\r\n                        overRight = collisionPosLeft + data.collisionWidth - outerWidth - offsetLeft,\r\n                        myOffset = data.my[ 0 ] === \"left\" ?\r\n                            -data.elemWidth :\r\n                            data.my[ 0 ] === \"right\" ?\r\n                                data.elemWidth :\r\n                                0,\r\n                        atOffset = data.at[ 0 ] === \"left\" ?\r\n                            data.targetWidth :\r\n                            data.at[ 0 ] === \"right\" ?\r\n                                -data.targetWidth :\r\n                                0,\r\n                        offset = -2 * data.offset[ 0 ],\r\n                        newOverRight,\r\n                        newOverLeft;\r\n\r\n                    if ( overLeft < 0 ) {\r\n                        newOverRight = position.left + myOffset + atOffset + offset + data.collisionWidth -\r\n                            outerWidth - withinOffset;\r\n                        if ( newOverRight < 0 || newOverRight < abs( overLeft ) ) {\r\n                            position.left += myOffset + atOffset + offset;\r\n                        }\r\n                    } else if ( overRight > 0 ) {\r\n                        newOverLeft = position.left - data.collisionPosition.marginLeft + myOffset +\r\n                            atOffset + offset - offsetLeft;\r\n                        if ( newOverLeft > 0 || abs( newOverLeft ) < overRight ) {\r\n                            position.left += myOffset + atOffset + offset;\r\n                        }\r\n                    }\r\n                },\r\n                top: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.offset.top + within.scrollTop,\r\n                        outerHeight = within.height,\r\n                        offsetTop = within.isWindow ? within.scrollTop : within.offset.top,\r\n                        collisionPosTop = position.top - data.collisionPosition.marginTop,\r\n                        overTop = collisionPosTop - offsetTop,\r\n                        overBottom = collisionPosTop + data.collisionHeight - outerHeight - offsetTop,\r\n                        top = data.my[ 1 ] === \"top\",\r\n                        myOffset = top ?\r\n                            -data.elemHeight :\r\n                            data.my[ 1 ] === \"bottom\" ?\r\n                                data.elemHeight :\r\n                                0,\r\n                        atOffset = data.at[ 1 ] === \"top\" ?\r\n                            data.targetHeight :\r\n                            data.at[ 1 ] === \"bottom\" ?\r\n                                -data.targetHeight :\r\n                                0,\r\n                        offset = -2 * data.offset[ 1 ],\r\n                        newOverTop,\r\n                        newOverBottom;\r\n                    if ( overTop < 0 ) {\r\n                        newOverBottom = position.top + myOffset + atOffset + offset + data.collisionHeight -\r\n                            outerHeight - withinOffset;\r\n                        if ( newOverBottom < 0 || newOverBottom < abs( overTop ) ) {\r\n                            position.top += myOffset + atOffset + offset;\r\n                        }\r\n                    } else if ( overBottom > 0 ) {\r\n                        newOverTop = position.top - data.collisionPosition.marginTop + myOffset + atOffset +\r\n                            offset - offsetTop;\r\n                        if ( newOverTop > 0 || abs( newOverTop ) < overBottom ) {\r\n                            position.top += myOffset + atOffset + offset;\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            flipfit: {\r\n                left: function() {\r\n                    positions.flip.left.apply( this, arguments );\r\n                    positions.fit.left.apply( this, arguments );\r\n                },\r\n                top: function() {\r\n                    positions.flip.top.apply( this, arguments );\r\n                    positions.fit.top.apply( this, arguments );\r\n                }\r\n            }\r\n        };\r\n\r\n        geom.posit = posit;\r\n    })();\r\n\r\n    return dom.geom = geom;\r\n});\ndefine('skylark-utils-dom/fx',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./eventer\"\r\n], function(dom, langx, browser, geom, styler, eventer) {\r\n    var animationName,\r\n        animationDuration,\r\n        animationTiming,\r\n        animationDelay,\r\n        transitionProperty,\r\n        transitionDuration,\r\n        transitionTiming,\r\n        transitionDelay,\r\n\r\n        animationEnd = browser.normalizeCssEvent('AnimationEnd'),\r\n        transitionEnd = browser.normalizeCssEvent('TransitionEnd'),\r\n\r\n        supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i,\r\n        transform = browser.css3PropPrefix + \"transform\",\r\n        cssReset = {};\r\n\r\n\r\n    cssReset[animationName = browser.normalizeCssProperty(\"animation-name\")] =\r\n        cssReset[animationDuration = browser.normalizeCssProperty(\"animation-duration\")] =\r\n        cssReset[animationDelay = browser.normalizeCssProperty(\"animation-delay\")] =\r\n        cssReset[animationTiming = browser.normalizeCssProperty(\"animation-timing-function\")] = \"\";\r\n\r\n    cssReset[transitionProperty = browser.normalizeCssProperty(\"transition-property\")] =\r\n        cssReset[transitionDuration = browser.normalizeCssProperty(\"transition-duration\")] =\r\n        cssReset[transitionDelay = browser.normalizeCssProperty(\"transition-delay\")] =\r\n        cssReset[transitionTiming = browser.normalizeCssProperty(\"transition-timing-function\")] = \"\";\r\n\r\n\r\n\r\n    /*   \r\n     * Perform a custom animation of a set of CSS properties.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} properties\r\n     * @param {String} ease\r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     * @param {Number or String} delay\r\n     */\r\n    function animate(elm, properties, duration, ease, callback, delay) {\r\n        var key,\r\n            cssValues = {},\r\n            cssProperties = [],\r\n            transforms = \"\",\r\n            that = this,\r\n            endEvent,\r\n            wrappedCallback,\r\n            fired = false,\r\n            hasScrollTop = false,\r\n            resetClipAuto = false;\r\n\r\n        if (langx.isPlainObject(duration)) {\r\n            ease = duration.easing;\r\n            callback = duration.complete;\r\n            delay = duration.delay;\r\n            duration = duration.duration;\r\n        }\r\n\r\n        if (langx.isString(duration)) {\r\n            duration = fx.speeds[duration];\r\n        }\r\n        if (duration === undefined) {\r\n            duration = fx.speeds.normal;\r\n        }\r\n        duration = duration / 1000;\r\n        if (fx.off) {\r\n            duration = 0;\r\n        }\r\n\r\n        if (langx.isFunction(ease)) {\r\n            callback = ease;\r\n            eace = \"swing\";\r\n        } else {\r\n            ease = ease || \"swing\";\r\n        }\r\n\r\n        if (delay) {\r\n            delay = delay / 1000;\r\n        } else {\r\n            delay = 0;\r\n        }\r\n\r\n        if (langx.isString(properties)) {\r\n            // keyframe animation\r\n            cssValues[animationName] = properties;\r\n            cssValues[animationDuration] = duration + \"s\";\r\n            cssValues[animationTiming] = ease;\r\n            endEvent = animationEnd;\r\n        } else {\r\n            // CSS transitions\r\n            for (key in properties) {\r\n                var v = properties[key];\r\n                if (supportedTransforms.test(key)) {\r\n                    transforms += key + \"(\" + v + \") \";\r\n                } else {\r\n                    if (key === \"scrollTop\") {\r\n                        hasScrollTop = true;\r\n                    }\r\n                    if (key == \"clip\" && langx.isPlainObject(v)) {\r\n                        cssValues[key] = \"rect(\" + v.top+\"px,\"+ v.right +\"px,\"+ v.bottom +\"px,\"+ v.left+\"px)\";\r\n                        if (styler.css(elm,\"clip\") == \"auto\") {\r\n                            var size = geom.size(elm);\r\n                            styler.css(elm,\"clip\",\"rect(\"+\"0px,\"+ size.width +\"px,\"+ size.height +\"px,\"+\"0px)\");  \r\n                            resetClipAuto = true;\r\n                        }\r\n\r\n                    } else {\r\n                        cssValues[key] = v;\r\n                    }\r\n                    cssProperties.push(langx.dasherize(key));\r\n                }\r\n            }\r\n            endEvent = transitionEnd;\r\n        }\r\n\r\n        if (transforms) {\r\n            cssValues[transform] = transforms;\r\n            cssProperties.push(transform);\r\n        }\r\n\r\n        if (duration > 0 && langx.isPlainObject(properties)) {\r\n            cssValues[transitionProperty] = cssProperties.join(\", \");\r\n            cssValues[transitionDuration] = duration + \"s\";\r\n            cssValues[transitionDelay] = delay + \"s\";\r\n            cssValues[transitionTiming] = ease;\r\n        }\r\n\r\n        wrappedCallback = function(event) {\r\n            fired = true;\r\n            if (event) {\r\n                if (event.target !== event.currentTarget) {\r\n                    return // makes sure the event didn't bubble from \"below\"\r\n                }\r\n                eventer.off(event.target, endEvent, wrappedCallback)\r\n            } else {\r\n                eventer.off(elm, animationEnd, wrappedCallback) // triggered by setTimeout\r\n            }\r\n            styler.css(elm, cssReset);\r\n            if (resetClipAuto) {\r\n //               styler.css(elm,\"clip\",\"auto\");\r\n            }\r\n            callback && callback.call(this);\r\n        };\r\n\r\n        if (duration > 0) {\r\n            eventer.on(elm, endEvent, wrappedCallback);\r\n            // transitionEnd is not always firing on older Android phones\r\n            // so make sure it gets fired\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, ((duration + delay) * 1000) + 25)();\r\n        }\r\n\r\n        // trigger page reflow so new elements can animate\r\n        elm.clientLeft;\r\n\r\n        styler.css(elm, cssValues);\r\n\r\n        if (duration <= 0) {\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, 0)();\r\n        }\r\n\r\n        if (hasScrollTop) {\r\n            scrollToTop(elm, properties[\"scrollTop\"], duration, callback);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display an element.\r\n     * @param {Object} elm  \r\n     * @param {String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function show(elm, speed, callback) {\r\n        styler.show(elm);\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            styler.css(elm, \"opacity\", 0)\r\n            animate(elm, { opacity: 1, scale: \"1,1\" }, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Hide an element.\r\n     * @param {Object} elm  \r\n     * @param {String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function hide(elm, speed, callback) {\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            animate(elm, { opacity: 0, scale: \"0,0\" }, speed, function() {\r\n                styler.hide(elm);\r\n                if (callback) {\r\n                    callback.call(elm);\r\n                }\r\n            });\r\n        } else {\r\n            styler.hide(elm);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Set the vertical position of the scroll bar for an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} pos\r\n     * @param {Number or String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function scrollToTop(elm, pos, speed, callback) {\r\n        var scrollFrom = parseInt(elm.scrollTop),\r\n            i = 0,\r\n            runEvery = 5, // run every 5ms\r\n            freq = speed * 1000 / runEvery,\r\n            scrollTo = parseInt(pos);\r\n\r\n        var interval = setInterval(function() {\r\n            i++;\r\n\r\n            if (i <= freq) elm.scrollTop = (scrollTo - scrollFrom) / freq * i + scrollFrom;\r\n\r\n            if (i >= freq + 1) {\r\n                clearInterval(interval);\r\n                if (callback) langx.debounce(callback, 1000)();\r\n            }\r\n        }, runEvery);\r\n    }\r\n\r\n    /*   \r\n     * Display or hide an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function toggle(elm, speed, callback) {\r\n        if (styler.isInvisible(elm)) {\r\n            show(elm, speed, callback);\r\n        } else {\r\n            hide(elm, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Adjust the opacity of an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {Number or String} opacity\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeTo(elm, speed, opacity, easing, callback) {\r\n        animate(elm, { opacity: opacity }, speed, easing, callback);\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Display an element by fading them to opaque.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeIn(elm, speed, easing, callback) {\r\n        var target = styler.css(elm, \"opacity\");\r\n        if (target > 0) {\r\n            styler.css(elm, \"opacity\", 0);\r\n        } else {\r\n            target = 1;\r\n        }\r\n        styler.show(elm);\r\n\r\n        fadeTo(elm, speed, target, easing, callback);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Hide an element by fading them to transparent.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeOut(elm, speed, easing, callback) {\r\n        var _elm = elm,\r\n            complete,\r\n            opacity = styler.css(elm,\"opacity\"),\r\n            options = {};\r\n\r\n        if (langx.isPlainObject(speed)) {\r\n            options.easing = speed.easing;\r\n            options.duration = speed.duration;\r\n            complete = speed.complete;\r\n        } else {\r\n            options.duration = speed;\r\n            if (callback) {\r\n                complete = callback;\r\n                options.easing = easing;\r\n            } else {\r\n                complete = easing;\r\n            }\r\n        }\r\n        options.complete = function() {\r\n            styler.css(elm,\"opacity\",opacity);\r\n            styler.hide(elm);\r\n            if (complete) {\r\n                complete.call(elm);\r\n            }\r\n        }\r\n\r\n        fadeTo(elm, options, 0);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display or hide an element by animating its opacity.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} ceasing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeToggle(elm, speed, ceasing, allback) {\r\n        if (styler.isInvisible(elm)) {\r\n            fadeIn(elm, speed, easing, callback);\r\n        } else {\r\n            fadeOut(elm, speed, easing, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideDown(elm, duration, callback) {\r\n\r\n        // get the element position to restore it then\r\n        var position = styler.css(elm, 'position');\r\n\r\n        // show element if it is hidden\r\n        show(elm);\r\n\r\n        // place it so it displays as usually but hidden\r\n        styler.css(elm, {\r\n            position: 'absolute',\r\n            visibility: 'hidden'\r\n        });\r\n\r\n        // get naturally height, margin, padding\r\n        var marginTop = styler.css(elm, 'margin-top');\r\n        var marginBottom = styler.css(elm, 'margin-bottom');\r\n        var paddingTop = styler.css(elm, 'padding-top');\r\n        var paddingBottom = styler.css(elm, 'padding-bottom');\r\n        var height = styler.css(elm, 'height');\r\n\r\n        // set initial css for animation\r\n        styler.css(elm, {\r\n            position: position,\r\n            visibility: 'visible',\r\n            overflow: 'hidden',\r\n            height: 0,\r\n            marginTop: 0,\r\n            marginBottom: 0,\r\n            paddingTop: 0,\r\n            paddingBottom: 0\r\n        });\r\n\r\n        // animate to gotten height, margin and padding\r\n        animate(elm, {\r\n            height: height,\r\n            marginTop: marginTop,\r\n            marginBottom: marginBottom,\r\n            paddingTop: paddingTop,\r\n            paddingBottom: paddingBottom\r\n        }, {\r\n            duration: duration,\r\n            complete: function() {\r\n                if (callback) {\r\n                    callback.apply(elm);\r\n                }\r\n            }\r\n        });\r\n\r\n        return this;\r\n    };\r\n\r\n    /*   \r\n     * Hide an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideUp(elm, duration, callback) {\r\n        // active the function only if the element is visible\r\n        if (geom.height(elm) > 0) {\r\n\r\n            // get the element position to restore it then\r\n            var position = styler.css(elm, 'position');\r\n\r\n            // get the element height, margin and padding to restore them then\r\n            var height = styler.css(elm, 'height');\r\n            var marginTop = styler.css(elm, 'margin-top');\r\n            var marginBottom = styler.css(elm, 'margin-bottom');\r\n            var paddingTop = styler.css(elm, 'padding-top');\r\n            var paddingBottom = styler.css(elm, 'padding-bottom');\r\n\r\n            // set initial css for animation\r\n            styler.css(elm, {\r\n                visibility: 'visible',\r\n                overflow: 'hidden',\r\n                height: height,\r\n                marginTop: marginTop,\r\n                marginBottom: marginBottom,\r\n                paddingTop: paddingTop,\r\n                paddingBottom: paddingBottom\r\n            });\r\n\r\n            // animate element height, margin and padding to zero\r\n            animate(elm, {\r\n                height: 0,\r\n                marginTop: 0,\r\n                marginBottom: 0,\r\n                paddingTop: 0,\r\n                paddingBottom: 0\r\n            }, {\r\n                // callback : restore the element position, height, margin and padding to original values\r\n                duration: duration,\r\n                queue: false,\r\n                complete: function() {\r\n                    hide(elm);\r\n                    styler.css(elm, {\r\n                        visibility: 'visible',\r\n                        overflow: 'hidden',\r\n                        height: height,\r\n                        marginTop: marginTop,\r\n                        marginBottom: marginBottom,\r\n                        paddingTop: paddingTop,\r\n                        paddingBottom: paddingBottom\r\n                    });\r\n                    if (callback) {\r\n                        callback.apply(elm);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        return this;\r\n    };\r\n\r\n\r\n    /*   \r\n     * Display or hide an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideToggle(elm, duration, callback) {\r\n\r\n        // if the element is hidden, slideDown !\r\n        if (geom.height(elm) == 0) {\r\n            slideDown(elm, duration, callback);\r\n        }\r\n        // if the element is visible, slideUp !\r\n        else {\r\n            slideUp(elm, duration, callback);\r\n        }\r\n        return this;\r\n    };\r\n\r\n\r\n    function fx() {\r\n        return fx;\r\n    }\r\n\r\n    langx.mixin(fx, {\r\n        off: false,\r\n\r\n        speeds: {\r\n            normal: 400,\r\n            fast: 200,\r\n            slow: 600\r\n        },\r\n\r\n        animate: animate,\r\n        fadeIn: fadeIn,\r\n        fadeOut: fadeOut,\r\n        fadeTo: fadeTo,\r\n        fadeToggle: fadeToggle,\r\n        hide: hide,\r\n        scrollToTop: scrollToTop,\r\n\r\n        slideDown: slideDown,\r\n        slideToggle: slideToggle,\r\n        slideUp: slideUp,\r\n        show: show,\r\n        toggle: toggle\r\n    });\r\n\r\n    return dom.fx = fx;\r\n});\ndefine('skylark-utils-dom/transforms',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./datax\",\r\n    \"./styler\"\r\n], function(dom,langx,browser,datax,styler) {\r\n  var css3Transform = browser.normalizeCssProperty(\"transform\");\r\n\r\n  function getMatrix(radian, x, y) {\r\n    var Cos = Math.cos(radian), Sin = Math.sin(radian);\r\n    return {\r\n      M11: Cos * x, \r\n      M12: -Sin * y,\r\n      M21: Sin * x, \r\n      M22: Cos * y\r\n    };\r\n  }\r\n\r\n  function getZoom(scale, zoom) {\r\n      return scale > 0 && scale > -zoom ? zoom :\r\n        scale < 0 && scale < zoom ? -zoom : 0;\r\n  }\r\n\r\n    function change(el,d) {\r\n      var matrix = getMatrix(d.radian, d.y, d.x);\r\n      styler.css(el,css3Transform, \"matrix(\"\r\n        + matrix.M11.toFixed(16) + \",\" + matrix.M21.toFixed(16) + \",\"\r\n        + matrix.M12.toFixed(16) + \",\" + matrix.M22.toFixed(16) + \", 0, 0)\"\r\n      );      \r\n  }\r\n\r\n  function transformData(el,d) {\r\n    if (d) {\r\n      datax.data(el,\"transform\",d);\r\n    } else {\r\n      d = datax.data(el,\"transform\") || {};\r\n      d.radian = d.radian || 0;\r\n      d.x = d.x || 1;\r\n      d.y = d.y || 1;\r\n      d.zoom = d.zoom || 1;\r\n      return d;     \r\n    }\r\n  }\r\n\r\n  var calcs = {\r\n    //Vertical flip\r\n    vertical : function (d) {\r\n        d.radian = Math.PI - d.radian; \r\n        d.y *= -1;\r\n    },\r\n\r\n   //Horizontal flip\r\n    horizontal : function (d) {\r\n        d.radian = Math.PI - d.radian; \r\n        d.x *= -1;\r\n    },\r\n\r\n    //Rotate according to angle\r\n    rotate : function (d,degress) {\r\n        d.radian = degress * Math.PI / 180;; \r\n    },\r\n\r\n    //Turn left 90 degrees\r\n    left : function (d) {\r\n        d.radian -= Math.PI / 2; \r\n    },\r\n\r\n    //Turn right 90 degrees\r\n    right : function (d) {\r\n        d.radian += Math.PI / 2; \r\n    },\r\n \r\n    //zoom\r\n    scale: function (d,zoom) {\r\n        var hZoom = getZoom(d.y, zoom), vZoom = getZoom(d.x, zoom);\r\n        if (hZoom && vZoom) {\r\n          d.y += hZoom; \r\n          d.x += vZoom;\r\n        }\r\n    }, \r\n\r\n    //zoom in\r\n    zoomin: function (d) { \r\n      calcs.scale(d,0.1); \r\n    },\r\n    \r\n    //zoom out\r\n    zoomout: function (d) { \r\n      calcs.scale(d,-0.1); \r\n    }\r\n\r\n  };\r\n  \r\n  \r\n  function _createApiMethod(calcFunc) {\r\n    return function() {\r\n      var args = langx.makeArray(arguments),\r\n        el = args.shift(),\r\n          d = transformData(el);\r\n        args.unshift(d);\r\n        calcFunc.apply(this,args)\r\n        change(el,d);\r\n        transformData(el,d);\r\n    }\r\n  }\r\n  \r\n  function transforms() {\r\n    return transforms;\r\n  }\r\n\r\n  [\"vertical\",\"horizontal\",\"rotate\",\"left\",\"right\",\"scale\",\"zoom\",\"zoomin\",\"zoomout\"].forEach(function(name){\r\n    transforms[name] = _createApiMethod(calcs[name]);\r\n  });\r\n\r\n  langx.mixin(transforms, {\r\n    reset : function(el) {\r\n      var d = {\r\n        x : 1,\r\n        y : 1,\r\n        radian : 0,\r\n      }\r\n      change(el,d);\r\n      transformData(el,d);\r\n    }\r\n  });\r\n\r\n\r\n  return dom.transforms = transforms;\r\n});\r\n\ndefine('skylark-utils-dom/query',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./eventer\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./fx\"\r\n], function(dom, langx, noder, datax, eventer, finder, geom, styler, fx) {\r\n    var some = Array.prototype.some,\r\n        push = Array.prototype.push,\r\n        every = Array.prototype.every,\r\n        concat = Array.prototype.concat,\r\n        slice = Array.prototype.slice,\r\n        map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        forEach = Array.prototype.forEach,\r\n        indexOf = Array.prototype.indexOf,\r\n        sort = Array.prototype.sort,\r\n        isQ;\r\n\r\n    var rquickExpr = /^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)/;\r\n\r\n    var funcArg = langx.funcArg,\r\n        isArrayLike = langx.isArrayLike,\r\n        isString = langx.isString,\r\n        uniq = langx.uniq,\r\n        isFunction = langx.isFunction;\r\n\r\n    var type = langx.type,\r\n        isArray = langx.isArray,\r\n\r\n        isWindow = langx.isWindow,\r\n\r\n        isDocument = langx.isDocument,\r\n\r\n        isObject = langx.isObject,\r\n\r\n        isPlainObject = langx.isPlainObject,\r\n\r\n        compact = langx.compact,\r\n\r\n        flatten = langx.flatten,\r\n\r\n        camelCase = langx.camelCase,\r\n\r\n        dasherize = langx.dasherize,\r\n        children = finder.children;\r\n\r\n    function wrapper_map(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = langx.map(self, function(elem, idx) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n            return query(uniq(result));\r\n        }\r\n    }\r\n\r\n    function wrapper_selector(func, context, last) {\r\n        return function(selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem] : [elem, selector]);\r\n                }\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper_selector_until(func, context, last) {\r\n        return function(util, selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            if (selector === undefined) {\r\n                selector = util;\r\n                util = undefined;\r\n            }\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem, util] : [elem, selector, util]);\r\n                }\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function wrapper_every_act(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            this.each(function(idx) {\r\n                func.apply(context, [this].concat(params));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_every_act_firstArgFunc(func, context, oldValueFunc) {\r\n        return function(arg1) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            forEach.call(self, function(elem, idx) {\r\n                var newArg1 = funcArg(elem, arg1, idx, oldValueFunc(elem));\r\n                func.apply(context, [elem, arg1].concat(params.slice(1)));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_some_chk(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            return some.call(self, function(elem) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n        }\r\n    }\r\n\r\n    function wrapper_name_value(func, context, oldValueFunc) {\r\n        return function(name, value) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n\r\n            if (langx.isPlainObject(name) || langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem, name));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem].concat(params));\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0], name]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    function wrapper_value(func, context, oldValueFunc) {\r\n        return function(value) {\r\n            var self = this;\r\n\r\n            if (langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem, newValue]);\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0]]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    var NodeList = langx.klass({\r\n        klassName: \"SkNodeList\",\r\n        init: function(selector, context) {\r\n            var self = this,\r\n                match, nodes, node, props;\r\n\r\n            if (selector) {\r\n                self.context = context = context || noder.doc();\r\n\r\n                if (isString(selector)) {\r\n                    // a html string or a css selector is expected\r\n                    self.selector = selector;\r\n\r\n                    if (selector.charAt(0) === \"<\" && selector.charAt(selector.length - 1) === \">\" && selector.length >= 3) {\r\n                        match = [null, selector, null];\r\n                    } else {\r\n                        match = rquickExpr.exec(selector);\r\n                    }\r\n\r\n                    if (match) {\r\n                        if (match[1]) {\r\n                            // if selector is html\r\n                            nodes = noder.createFragment(selector);\r\n\r\n                            if (langx.isPlainObject(context)) {\r\n                                props = context;\r\n                            }\r\n\r\n                        } else {\r\n                            node = finder.byId(match[2], noder.ownerDoc(context));\r\n\r\n                            if (node) {\r\n                                // if selector is id\r\n                                nodes = [node];\r\n                            }\r\n\r\n                        }\r\n                    } else {\r\n                        // if selector is css selector\r\n                        if (langx.isString(context)) {\r\n                            context = finder.find(context);\r\n                        }\r\n\r\n                        nodes = finder.descendants(context, selector);\r\n                    }\r\n                } else {\r\n                    if (isArray(selector)) {\r\n                        // a dom node array is expected\r\n                        nodes = selector;\r\n                    } else {\r\n                        // a dom node is expected\r\n                        nodes = [selector];\r\n                    }\r\n                    //self.add(selector, false);\r\n                }\r\n            }\r\n\r\n\r\n            if (nodes) {\r\n\r\n                push.apply(self, nodes);\r\n\r\n                if (props) {\r\n                    for ( var name  in props ) {\r\n                        // Properties of context are called as methods if possible\r\n                        if ( langx.isFunction( this[ name ] ) ) {\r\n                            this[ name ]( props[ name ] );\r\n                        } else {\r\n                            this.attr( name, props[ name ] );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return self;\r\n        }\r\n    });\r\n\r\n    var query = (function() {\r\n        isQ = function(object) {\r\n            return object instanceof NodeList;\r\n        }\r\n        init = function(selector, context) {\r\n            return new NodeList(selector, context);\r\n        }\r\n\r\n        var $ = function(selector, context) {\r\n            if (isFunction(selector)) {\r\n                eventer.ready(function() {\r\n                    selector($);\r\n                });\r\n            } else if (isQ(selector)) {\r\n                return selector;\r\n            } else {\r\n                if (context && isQ(context) && isString(selector)) {\r\n                    return context.find(selector);\r\n                }\r\n                return init(selector, context);\r\n            }\r\n        };\r\n\r\n        $.fn = NodeList.prototype;\r\n        langx.mixin($.fn, {\r\n            // `map` and `slice` in the jQuery API work differently\r\n            // from their array counterparts\r\n            length : 0,\r\n\r\n            map: function(fn) {\r\n                return $(uniq(langx.map(this, function(el, i) {\r\n                    return fn.call(el, i, el)\r\n                })));\r\n            },\r\n\r\n            slice: function() {\r\n                return $(slice.apply(this, arguments))\r\n            },\r\n\r\n            forEach: function() {\r\n                return forEach.apply(this,arguments);\r\n            },\r\n\r\n            get: function(idx) {\r\n                return idx === undefined ? slice.call(this) : this[idx >= 0 ? idx : idx + this.length]\r\n            },\r\n\r\n            indexOf: function() {\r\n                return indexOf.apply(this,arguments);\r\n            },\r\n\r\n            sort : function() {\r\n                return sort.apply(this,arguments);\r\n            },\r\n\r\n            toArray: function() {\r\n                return slice.call(this);\r\n            },\r\n\r\n            size: function() {\r\n                return this.length\r\n            },\r\n\r\n            remove: wrapper_every_act(noder.remove, noder),\r\n\r\n            each: function(callback) {\r\n                langx.each(this, callback);\r\n                return this;\r\n            },\r\n\r\n            filter: function(selector) {\r\n                if (isFunction(selector)) return this.not(this.not(selector))\r\n                return $(filter.call(this, function(element) {\r\n                    return finder.matches(element, selector)\r\n                }))\r\n            },\r\n\r\n            add: function(selector, context) {\r\n                return $(uniq(this.toArray().concat($(selector, context).toArray())));\r\n            },\r\n\r\n            is: function(selector) {\r\n                if (this.length > 0) {\r\n                    var self = this;\r\n                    if (langx.isString(selector)) {\r\n                        return some.call(self,function(elem) {\r\n                            return finder.matches(elem, selector);\r\n                        });\r\n                    } else if (langx.isArrayLike(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return langx.inArray(elem, selector) > -1;\r\n                        });\r\n                    } else if (langx.isHtmlNode(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return elem ==  selector;\r\n                        });\r\n                    }\r\n                }\r\n                return false;\r\n            },\r\n            \r\n            not: function(selector) {\r\n                var nodes = []\r\n                if (isFunction(selector) && selector.call !== undefined)\r\n                    this.each(function(idx) {\r\n                        if (!selector.call(this, idx)) nodes.push(this)\r\n                    })\r\n                else {\r\n                    var excludes = typeof selector == 'string' ? this.filter(selector) :\r\n                        (isArrayLike(selector) && isFunction(selector.item)) ? slice.call(selector) : $(selector)\r\n                    this.forEach(function(el) {\r\n                        if (excludes.indexOf(el) < 0) nodes.push(el)\r\n                    })\r\n                }\r\n                return $(nodes)\r\n            },\r\n\r\n            has: function(selector) {\r\n                return this.filter(function() {\r\n                    return isObject(selector) ?\r\n                        noder.contains(this, selector) :\r\n                        $(this).find(selector).size()\r\n                })\r\n            },\r\n\r\n            eq: function(idx) {\r\n                return idx === -1 ? this.slice(idx) : this.slice(idx, +idx + 1);\r\n            },\r\n\r\n            first: function() {\r\n                return this.eq(0);\r\n            },\r\n\r\n            last: function() {\r\n                return this.eq(-1);\r\n            },\r\n\r\n            find: wrapper_selector(finder.descendants, finder),\r\n\r\n            closest: wrapper_selector(finder.closest, finder),\r\n            /*\r\n                        closest: function(selector, context) {\r\n                            var node = this[0],\r\n                                collection = false\r\n                            if (typeof selector == 'object') collection = $(selector)\r\n                            while (node && !(collection ? collection.indexOf(node) >= 0 : finder.matches(node, selector)))\r\n                                node = node !== context && !isDocument(node) && node.parentNode\r\n                            return $(node)\r\n                        },\r\n            */\r\n\r\n\r\n            parents: wrapper_selector(finder.ancestors, finder),\r\n\r\n            parentsUntil: wrapper_selector_until(finder.ancestors, finder),\r\n\r\n\r\n            parent: wrapper_selector(finder.parent, finder),\r\n\r\n            children: wrapper_selector(finder.children, finder),\r\n\r\n            contents: wrapper_map(noder.contents, noder),\r\n\r\n            empty: wrapper_every_act(noder.empty, noder),\r\n\r\n            // `pluck` is borrowed from Prototype.js\r\n            pluck: function(property) {\r\n                return langx.map(this, function(el) {\r\n                    return el[property]\r\n                })\r\n            },\r\n\r\n            pushStack : function(elms) {\r\n                var ret = $(elms);\r\n                ret.prevObject = this;\r\n                return ret;\r\n            },\r\n            \r\n            show: wrapper_every_act(fx.show, fx),\r\n\r\n            replaceWith: function(newContent) {\r\n                return this.before(newContent).remove();\r\n            },\r\n\r\n            wrap: function(structure) {\r\n                var func = isFunction(structure)\r\n                if (this[0] && !func)\r\n                    var dom = $(structure).get(0),\r\n                        clone = dom.parentNode || this.length > 1\r\n\r\n                return this.each(function(index) {\r\n                    $(this).wrapAll(\r\n                        func ? structure.call(this, index) :\r\n                        clone ? dom.cloneNode(true) : dom\r\n                    )\r\n                })\r\n            },\r\n\r\n            wrapAll: function(wrappingElement) {\r\n                if (this[0]) {\r\n                    $(this[0]).before(wrappingElement = $(wrappingElement));\r\n                    var children;\r\n                    // drill down to the inmost element\r\n                    while ((children = wrappingElement.children()).length) {\r\n                        wrappingElement = children.first();\r\n                    }\r\n                    $(wrappingElement).append(this);\r\n                }\r\n                return this\r\n            },\r\n\r\n            wrapInner: function(wrappingElement) {\r\n                var func = isFunction(wrappingElement)\r\n                return this.each(function(index) {\r\n                    var self = $(this),\r\n                        contents = self.contents(),\r\n                        dom = func ? wrappingElement.call(this, index) : wrappingElement\r\n                    contents.length ? contents.wrapAll(dom) : self.append(dom)\r\n                })\r\n            },\r\n\r\n            unwrap: function(selector) {\r\n                if (this.parent().children().length === 0) {\r\n                    // remove dom without text\r\n                    this.parent(selector).not(\"body\").each(function() {\r\n                        $(this).replaceWith(document.createTextNode(this.childNodes[0].textContent));\r\n                    });\r\n                } else {\r\n                    this.parent().each(function() {\r\n                        $(this).replaceWith($(this).children())\r\n                    });\r\n                }\r\n                return this\r\n            },\r\n\r\n            clone: function() {\r\n                return this.map(function() {\r\n                    return this.cloneNode(true)\r\n                })\r\n            },\r\n\r\n            hide: wrapper_every_act(fx.hide, fx),\r\n\r\n            toggle: function(setting) {\r\n                return this.each(function() {\r\n                    var el = $(this);\r\n                    (setting === undefined ? el.css(\"display\") == \"none\" : setting) ? el.show(): el.hide()\r\n                })\r\n            },\r\n\r\n            prev: function(selector) {\r\n                return $(this.pluck('previousElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            prevAll: wrapper_selector(finder.previousSibling, finder),\r\n\r\n            next: function(selector) {\r\n                return $(this.pluck('nextElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            nextAll: wrapper_selector(finder.nextSiblings, finder),\r\n\r\n            siblings: wrapper_selector(finder.siblings, finder),\r\n\r\n            html: wrapper_value(noder.html, noder, noder.html),\r\n\r\n            text: wrapper_value(datax.text, datax, datax.text),\r\n\r\n            attr: wrapper_name_value(datax.attr, datax, datax.attr),\r\n\r\n            removeAttr: wrapper_every_act(datax.removeAttr, datax),\r\n\r\n            prop: wrapper_name_value(datax.prop, datax, datax.prop),\r\n\r\n            removeProp: wrapper_every_act(datax.removeProp, datax),\r\n\r\n            data: wrapper_name_value(datax.data, datax, datax.data),\r\n\r\n            removeData: wrapper_every_act(datax.removeData, datax),\r\n\r\n            val: wrapper_value(datax.val, datax, datax.val),\r\n\r\n            offset: wrapper_value(geom.pagePosition, geom, geom.pagePosition),\r\n\r\n            style: wrapper_name_value(styler.css, styler),\r\n\r\n            css: wrapper_name_value(styler.css, styler),\r\n\r\n            index: function(elem) {\r\n                if (elem) {\r\n                    return this.indexOf($(elem)[0]);\r\n                } else {\r\n                    return this.parent().children().indexOf(this[0]);\r\n                }\r\n            },\r\n\r\n            //hasClass(name)\r\n            hasClass: wrapper_some_chk(styler.hasClass, styler),\r\n\r\n            //addClass(name)\r\n            addClass: wrapper_every_act_firstArgFunc(styler.addClass, styler, styler.className),\r\n\r\n            //removeClass(name)\r\n            removeClass: wrapper_every_act_firstArgFunc(styler.removeClass, styler, styler.className),\r\n\r\n            //toogleClass(name,when)\r\n            toggleClass: wrapper_every_act_firstArgFunc(styler.toggleClass, styler, styler.className),\r\n\r\n            scrollTop: wrapper_value(geom.scrollTop, geom),\r\n\r\n            scrollLeft: wrapper_value(geom.scrollLeft, geom),\r\n\r\n            position: function(options) {\r\n                if (!this.length) return\r\n\r\n                if (options) {\r\n                    if (options.of && options.of.length) {\r\n                        options = langx.clone(options);\r\n                        options.of = options.of[0];\r\n                    }\r\n                    return this.each( function() {\r\n                        geom.posit(this,options);\r\n                    });\r\n                } else {\r\n                    var elem = this[0];\r\n\r\n                    return geom.relativePosition(elem);\r\n\r\n                }             \r\n            },\r\n\r\n            offsetParent: wrapper_map(geom.offsetParent, geom)\r\n        });\r\n\r\n        // for now\r\n        $.fn.detach = $.fn.remove;\r\n\r\n        $.fn.hover = function(fnOver, fnOut) {\r\n            return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);\r\n        };\r\n\r\n        $.fn.size = wrapper_value(geom.size, geom);\r\n\r\n        $.fn.width = wrapper_value(geom.width, geom, geom.width);\r\n\r\n        $.fn.height = wrapper_value(geom.height, geom, geom.height);\r\n\r\n        $.fn.clientSize = wrapper_value(geom.clientSize, geom.clientSize);\r\n\r\n        ['width', 'height'].forEach(function(dimension) {\r\n            var offset, Dimension = dimension.replace(/./, function(m) {\r\n                return m[0].toUpperCase()\r\n            });\r\n\r\n            $.fn['outer' + Dimension] = function(margin, value) {\r\n                if (arguments.length) {\r\n                    if (typeof margin !== 'boolean') {\r\n                        value = margin;\r\n                        margin = false;\r\n                    }\r\n                } else {\r\n                    margin = false;\r\n                    value = undefined;\r\n                }\r\n\r\n                if (value === undefined) {\r\n                    var el = this[0];\r\n                    if (!el) {\r\n                        return undefined;\r\n                    }\r\n                    var cb = geom.size(el);\r\n                    if (margin) {\r\n                        var me = geom.marginExtents(el);\r\n                        cb.width = cb.width + me.left + me.right;\r\n                        cb.height = cb.height + me.top + me.bottom;\r\n                    }\r\n                    return dimension === \"width\" ? cb.width : cb.height;\r\n                } else {\r\n                    return this.each(function(idx, el) {\r\n                        var mb = {};\r\n                        var me = geom.marginExtents(el);\r\n                        if (dimension === \"width\") {\r\n                            mb.width = value;\r\n                            if (margin) {\r\n                                mb.width = mb.width - me.left - me.right\r\n                            }\r\n                        } else {\r\n                            mb.height = value;\r\n                            if (margin) {\r\n                                mb.height = mb.height - me.top - me.bottom;\r\n                            }\r\n                        }\r\n                        geom.size(el, mb);\r\n                    })\r\n\r\n                }\r\n            };\r\n        })\r\n\r\n        $.fn.innerWidth = wrapper_value(geom.clientWidth, geom, geom.clientWidth);\r\n\r\n        $.fn.innerHeight = wrapper_value(geom.clientHeight, geom, geom.clientHeight);\r\n\r\n        var traverseNode = noder.traverse;\r\n\r\n        function wrapper_node_operation(func, context, oldValueFunc) {\r\n            return function(html) {\r\n                var argType, nodes = langx.map(arguments, function(arg) {\r\n                    argType = type(arg)\r\n                    return argType == \"object\" || argType == \"array\" || arg == null ?\r\n                        arg : noder.createFragment(arg)\r\n                });\r\n                if (nodes.length < 1) {\r\n                    return this\r\n                }\r\n                this.each(function(idx) {\r\n                    func.apply(context, [this, nodes, idx > 0]);\r\n                });\r\n                return this;\r\n            }\r\n        }\r\n\r\n\r\n        $.fn.after = wrapper_node_operation(noder.after, noder);\r\n\r\n        $.fn.prepend = wrapper_node_operation(noder.prepend, noder);\r\n\r\n        $.fn.before = wrapper_node_operation(noder.before, noder);\r\n\r\n        $.fn.append = wrapper_node_operation(noder.append, noder);\r\n\r\n\r\n        langx.each( {\r\n            appendTo: \"append\",\r\n            prependTo: \"prepend\",\r\n            insertBefore: \"before\",\r\n            insertAfter: \"after\",\r\n            replaceAll: \"replaceWith\"\r\n        }, function( name, original ) {\r\n            $.fn[ name ] = function( selector ) {\r\n                var elems,\r\n                    ret = [],\r\n                    insert = $( selector ),\r\n                    last = insert.length - 1,\r\n                    i = 0;\r\n\r\n                for ( ; i <= last; i++ ) {\r\n                    elems = i === last ? this : this.clone( true );\r\n                    $( insert[ i ] )[ original ]( elems );\r\n\r\n                    // Support: Android <=4.0 only, PhantomJS 1 only\r\n                    // .get() because push.apply(_, arraylike) throws on ancient WebKit\r\n                    push.apply( ret, elems.get() );\r\n                }\r\n\r\n                return this.pushStack( ret );\r\n            };\r\n        } );\r\n\r\n/*\r\n        $.fn.insertAfter = function(html) {\r\n            $(html).after(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.insertBefore = function(html) {\r\n            $(html).before(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.appendTo = function(html) {\r\n            $(html).append(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.prependTo = function(html) {\r\n            $(html).prepend(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.replaceAll = function(selector) {\r\n            $(selector).replaceWith(this);\r\n            return this;\r\n        };\r\n*/\r\n        return $;\r\n    })();\r\n\r\n    (function($) {\r\n        $.fn.on = wrapper_every_act(eventer.on, eventer);\r\n\r\n        $.fn.off = wrapper_every_act(eventer.off, eventer);\r\n\r\n        $.fn.trigger = wrapper_every_act(eventer.trigger, eventer);\r\n\r\n        ('focusin focusout focus blur load resize scroll unload click dblclick ' +\r\n            'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave ' +\r\n            'change select keydown keypress keyup error transitionEnd').split(' ').forEach(function(event) {\r\n            $.fn[event] = function(data, callback) {\r\n                return (0 in arguments) ?\r\n                    this.on(event, data, callback) :\r\n                    this.trigger(event)\r\n            }\r\n        });\r\n\r\n        $.fn.one = function(event, selector, data, callback) {\r\n            if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n                callback = data;\r\n                data = selector;\r\n                selector = null;\r\n            }\r\n\r\n            if (langx.isFunction(data)) {\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            return this.on(event, selector, data, callback, 1)\r\n        };\r\n\r\n        $.fn.animate = wrapper_every_act(fx.animate, fx);\r\n\r\n        $.fn.show = wrapper_every_act(fx.show, fx);\r\n        $.fn.hide = wrapper_every_act(fx.hide, fx);\r\n        $.fn.toogle = wrapper_every_act(fx.toogle, fx);\r\n        $.fn.fadeTo = wrapper_every_act(fx.fadeTo, fx);\r\n        $.fn.fadeIn = wrapper_every_act(fx.fadeIn, fx);\r\n        $.fn.fadeOut = wrapper_every_act(fx.fadeOut, fx);\r\n        $.fn.fadeToggle = wrapper_every_act(fx.fadeToggle, fx);\r\n\r\n        $.fn.slideDown = wrapper_every_act(fx.slideDown, fx);\r\n        $.fn.slideToggle = wrapper_every_act(fx.slideToggle, fx);\r\n        $.fn.slideUp = wrapper_every_act(fx.slideUp, fx);\r\n\r\n        $.fn.scrollParent = function( includeHidden ) {\r\n            var position = this.css( \"position\" ),\r\n                excludeStaticParent = position === \"absolute\",\r\n                overflowRegex = includeHidden ? /(auto|scroll|hidden)/ : /(auto|scroll)/,\r\n                scrollParent = this.parents().filter( function() {\r\n                    var parent = $( this );\r\n                    if ( excludeStaticParent && parent.css( \"position\" ) === \"static\" ) {\r\n                        return false;\r\n                    }\r\n                    return overflowRegex.test( parent.css( \"overflow\" ) + parent.css( \"overflow-y\" ) +\r\n                        parent.css( \"overflow-x\" ) );\r\n                } ).eq( 0 );\r\n\r\n            return position === \"fixed\" || !scrollParent.length ?\r\n                $( this[ 0 ].ownerDocument || document ) :\r\n                scrollParent;\r\n        };\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.end = function() {\r\n            return this.prevObject || $()\r\n        }\r\n\r\n        $.fn.andSelf = function() {\r\n            return this.add(this.prevObject || $())\r\n        }\r\n\r\n        $.fn.addBack = function(selector) {\r\n            if (this.prevObject) {\r\n                if (selector) {\r\n                    return this.add(this.prevObject.filter(selector));\r\n                } else {\r\n                    return this.add(this.prevObject);\r\n                }\r\n            } else {\r\n                return this;\r\n            }\r\n        }\r\n\r\n        'filter,add,not,eq,first,last,find,closest,parents,parent,children,siblings'.split(',').forEach(function(property) {\r\n            var fn = $.fn[property]\r\n            $.fn[property] = function() {\r\n                var ret = fn.apply(this, arguments)\r\n                ret.prevObject = this\r\n                return ret\r\n            }\r\n        })\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.query = $.fn.find;\r\n\r\n        $.fn.place = function(refNode, position) {\r\n            // summary:\r\n            //      places elements of this node list relative to the first element matched\r\n            //      by queryOrNode. Returns the original NodeList. See: `dojo/dom-construct.place`\r\n            // queryOrNode:\r\n            //      may be a string representing any valid CSS3 selector or a DOM node.\r\n            //      In the selector case, only the first matching element will be used\r\n            //      for relative positioning.\r\n            // position:\r\n            //      can be one of:\r\n            //\r\n            //      -   \"last\" (default)\r\n            //      -   \"first\"\r\n            //      -   \"before\"\r\n            //      -   \"after\"\r\n            //      -   \"only\"\r\n            //      -   \"replace\"\r\n            //\r\n            //      or an offset in the childNodes\r\n            if (langx.isString(refNode)) {\r\n                refNode = finder.descendant(refNode);\r\n            } else if (isQ(refNode)) {\r\n                refNode = refNode[0];\r\n            }\r\n            return this.each(function(i, node) {\r\n                switch (position) {\r\n                    case \"before\":\r\n                        noder.before(refNode, node);\r\n                        break;\r\n                    case \"after\":\r\n                        noder.after(refNode, node);\r\n                        break;\r\n                    case \"replace\":\r\n                        noder.replace(refNode, node);\r\n                        break;\r\n                    case \"only\":\r\n                        noder.empty(refNode);\r\n                        noder.append(refNode, node);\r\n                        break;\r\n                    case \"first\":\r\n                        noder.prepend(refNode, node);\r\n                        break;\r\n                        // else fallthrough...\r\n                    default: // aka: last\r\n                        noder.append(refNode, node);\r\n                }\r\n            });\r\n        };\r\n\r\n        $.fn.addContent = function(content, position) {\r\n            if (content.template) {\r\n                content = langx.substitute(content.template, content);\r\n            }\r\n            return this.append(content);\r\n        };\r\n\r\n        $.fn.replaceClass = function(newClass, oldClass) {\r\n            this.removeClass(oldClass);\r\n            this.addClass(newClass);\r\n            return this;\r\n        };\r\n\r\n        $.fn.replaceClass = function(newClass, oldClass) {\r\n            this.removeClass(oldClass);\r\n            this.addClass(newClass);\r\n            return this;\r\n        };\r\n\r\n        $.fn.disableSelection = ( function() {\r\n            var eventType = \"onselectstart\" in document.createElement( \"div\" ) ?\r\n                \"selectstart\" :\r\n                \"mousedown\";\r\n\r\n            return function() {\r\n                return this.on( eventType + \".ui-disableSelection\", function( event ) {\r\n                    event.preventDefault();\r\n                } );\r\n            };\r\n        } )();\r\n\r\n        $.fn.enableSelection = function() {\r\n            return this.off( \".ui-disableSelection\" );\r\n        };\r\n       \r\n\r\n    })(query);\r\n\r\n    query.fn.plugin = function(name,options) {\r\n        var args = slice.call( arguments, 1 ),\r\n            self = this,\r\n            returnValue = this;\r\n\r\n        this.each(function(){\r\n            returnValue = plugins.instantiate.apply(self,[this,name].concat(args));\r\n        });\r\n        return returnValue;\r\n    };\r\n\r\n    return dom.query = query;\r\n\r\n});\ndefine('skylark-utils-dom/images',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./eventer\",\r\n    \"./noder\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./datax\",\r\n    \"./transforms\",\r\n    \"./query\"\r\n], function(dom,langx,eventer,noder,finder,geom,styler,datax,transforms,$) {\r\n\r\n  function watch(imgs) {\r\n    if (!langx.isArray(imgs)) {\r\n      imgs = [imgs];\r\n    }\r\n    var totalCount = imgs.length,\r\n        progressedCount = 0,\r\n        successedCount = 0,\r\n        faileredCount = 0,\r\n        d = new langx.Deferred();\r\n\r\n\r\n    function complete() {\r\n\r\n      d.resolve({\r\n        \"total\" : totalCount,\r\n        \"successed\" : successedCount,\r\n        \"failered\" : faileredCount,\r\n        \"imgs\" : imgs \r\n      });\r\n    }\r\n\r\n    function progress(img,isLoaded) {\r\n\r\n      progressedCount++;\r\n      if (isLoaded) {\r\n        successedCount ++ ; \r\n      } else {\r\n        faileredCount ++ ;\r\n      }\r\n\r\n      // progress event\r\n      d.progress({\r\n        \"img\" : img,\r\n        \"isLoaded\" : isLoaded,\r\n        \"progressed\" : progressedCount,\r\n        \"total\" : totalCount,\r\n        \"imgs\" : imgs \r\n      });\r\n\r\n      // check if completed\r\n      if ( progressedCount == totalCount ) {\r\n        complete();\r\n      }\r\n    }\r\n\r\n    function check() {\r\n      if (!imgs.length ) {\r\n        complete();\r\n        return;\r\n      }\r\n\r\n      imgs.forEach(function(img) {\r\n        if (isCompleted(img)) {\r\n          progress(img,isLoaded(img));\r\n        } else {\r\n          eventer.on(img,{\r\n            \"load\" : function() {\r\n              progress(img,true);\r\n            },\r\n\r\n            \"error\" : function() {\r\n              progress(img,false);\r\n            }\r\n          });      \r\n        }\r\n      });\r\n    }\r\n\r\n    langx.defer(check);\r\n\r\n    d.promise.totalCount = totalCount;\r\n    return d.promise;\r\n  }\r\n\r\n\r\n  function isCompleted(img) {\r\n     return img.complete && img.naturalWidth !== undefined;\r\n  }\r\n\r\n  function isLoaded(img) {\r\n    return img.complete && img.naturalWidth !== 0;\r\n  }\r\n\r\n  function loaded(elm,options) {\r\n    var imgs = [];\r\n\r\n    options = options || {};\r\n\r\n    function addBackgroundImage (elm1) {\r\n\r\n      var reURL = /url\\((['\"])?(.*?)\\1\\)/gi;\r\n      var matches = reURL.exec( styler.css(elm1,\"background-image\"));\r\n      var url = matches && matches[2];\r\n      if ( url ) {\r\n        var img = new Image();\r\n        img.src = url;\r\n        imgs.push(img);\r\n      }\r\n    }\r\n\r\n    // filter siblings\r\n    if ( elm.nodeName == 'IMG' ) {\r\n      imgs.push( elm );\r\n    } else {\r\n      // find children\r\n      var childImgs = finder.findAll(elm,'img');\r\n      // concat childElems to filterFound array\r\n      for ( var i=0; i < childImgs.length; i++ ) {\r\n        imgs.push(childImgs[i]);\r\n      }\r\n\r\n      // get background image on element\r\n      if ( options.background === true ) {\r\n        addBackgroundImage(elm);\r\n      } else  if ( typeof options.background == 'string' ) {\r\n        var children = finder.findAll(elm, options.background );\r\n        for ( i=0; i < children.length; i++ ) {\r\n          addBackgroundImage( children[i] );\r\n        }\r\n      }\r\n    }\r\n\r\n    return watch(imgs);\r\n  }\r\n\r\n  function preload(urls,options) {\r\n      if (langx.isString(urls)) {\r\n        urls = [urls];\r\n      }\r\n      var images = [];\r\n\r\n      urls.forEach(function(url){\r\n        var img = new Image();\r\n        img.src = url;\r\n        images.push(img);\r\n      });\r\n\r\n      return watch(images);\r\n  }\r\n\r\n\r\n  $.fn.imagesLoaded = function( options ) {\r\n    return loaded(this,options);\r\n  };\r\n\r\n\r\n  function viewer(el,options) {\r\n    var img ,\r\n        style = {},\r\n        clientSize = geom.clientSize(el),\r\n        loadedCallback = options.loaded,\r\n        faileredCallback = options.failered;\r\n\r\n    function onload() {\r\n        styler.css(img,{//居中\r\n          top: (clientSize.height - img.offsetHeight) / 2 + \"px\",\r\n          left: (clientSize.width - img.offsetWidth) / 2 + \"px\"\r\n        });\r\n\r\n        transforms.reset(img);\r\n\r\n        styler.css(img,{\r\n          visibility: \"visible\"\r\n        });\r\n\r\n        if (loadedCallback) {\r\n          loadedCallback();\r\n        }\r\n    }\r\n\r\n    function onerror() {\r\n\r\n    }\r\n    function _init() {\r\n      style = styler.css(el,[\"position\",\"overflow\"]);\r\n      if (style.position != \"relative\" && style.position != \"absolute\") { \r\n        styler.css(el,\"position\", \"relative\" );\r\n      }\r\n      styler.css(el,\"overflow\", \"hidden\" );\r\n\r\n      img = new Image();\r\n\r\n      styler.css(img,{\r\n        position: \"absolute\",\r\n        border: 0, padding: 0, margin: 0, width: \"auto\", height: \"auto\",\r\n        visibility: \"hidden\"\r\n      });\r\n\r\n      img.onload = onload;\r\n      img.onerror = onerror;\r\n\r\n      noder.append(el,img);\r\n\r\n      if (options.url) {\r\n        _load(options.url);\r\n      }\r\n    }\r\n\r\n    function _load(url) {\r\n        img.style.visibility = \"hidden\";\r\n        img.src = url;\r\n    }\r\n\r\n    function _dispose() {\r\n        noder.remove(img);\r\n        styler.css(el,style);\r\n        img = img.onload = img.onerror = null;\r\n    }\r\n\r\n    _init();\r\n\r\n    var ret =  {\r\n      load : _load,\r\n      dispose : _dispose\r\n    };\r\n\r\n    [\"vertical\",\"horizontal\",\"rotate\",\"left\",\"right\",\"scale\",\"zoom\",\"zoomin\",\"zoomout\",\"reset\"].forEach(\r\n      function(name){\r\n        ret[name] = function() {\r\n          var args = langx.makeArray(arguments);\r\n          args.unshift(img);\r\n          transforms[name].apply(null,args);\r\n        }\r\n      }\r\n    );\r\n\r\n    return ret;\r\n  }\r\n\r\n  $.fn.imagesViewer = function( options ) {\r\n    return viewer(this,options);\r\n  };\r\n\r\n  function images() {\r\n    return images;\r\n  }\r\n\r\n  images.transform = function (el,options) {\r\n  };\r\n\r\n  [\"vertical\",\"horizontal\",\"rotate\",\"left\",\"right\",\"scale\",\"zoom\",\"zoomin\",\"zoomout\",\"reset\"].forEach(\r\n    function(name){\r\n      images.transform[name] = transforms[name];\r\n    }\r\n  );\r\n\r\n\r\n  langx.mixin(images, {\r\n    isCompleted : isCompleted,\r\n\r\n    isLoaded : isLoaded,\r\n\r\n    loaded : loaded,\r\n\r\n    preload : preload,\r\n\r\n    viewer : viewer\r\n  });\r\n\r\n  return dom.images = images;\r\n});\r\n\ndefine('skylark-utils-dom/elmx',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./datax\",\r\n    \"./eventer\",\r\n    \"./finder\",\r\n    \"./fx\",\r\n    \"./geom\",\r\n    \"./noder\",\r\n    \"./styler\"\r\n], function(dom, langx, datax, eventer, finder, fx, geom, noder, styler) {\r\n    var map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n    /*\r\n     * VisualElement is a skylark class type wrapping a visule dom node,\r\n     * provides a number of prototype methods and supports chain calls.\r\n     */\r\n    var VisualElement = langx.klass({\r\n        klassName: \"VisualElement\",\r\n\r\n        \"init\": function(node) {\r\n            if (langx.isString(node)) {\r\n                node = document.getElementById(node);\r\n            }\r\n            this.domNode = node;\r\n        }\r\n    });\r\n    /*\r\n     * the VisualElement object wrapping document.body\r\n     */\r\n    var root = new VisualElement(document.body),\r\n        elmx = function(node) {\r\n            if (node) {\r\n                return new VisualElement(node);\r\n            } else {\r\n                return root;\r\n            }\r\n        };\r\n    /*\r\n     * Extend VisualElement prototype with wrapping the specified methods.\r\n     * @param {ArrayLike} fn\r\n     * @param {Object} context\r\n     */\r\n    function _delegator(fn, context) {\r\n        return function() {\r\n            var self = this,\r\n                elem = self.domNode,\r\n                ret = fn.apply(context, [elem].concat(slice.call(arguments)));\r\n\r\n            if (ret) {\r\n                if (ret === context) {\r\n                    return self;\r\n                } else {\r\n                    if (ret instanceof HTMLElement) {\r\n                        ret = new VisualElement(ret);\r\n                    } else if (langx.isArrayLike(ret)) {\r\n                        ret = map.call(ret, function(el) {\r\n                            if (el instanceof HTMLElement) {\r\n                                return new VisualElement(ret);\r\n                            } else {\r\n                                return el;\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            return ret;\r\n        };\r\n    }\r\n\r\n    langx.mixin(elmx, {\r\n        batch: function(nodes, action, args) {\r\n            nodes.forEach(function(node) {\r\n                var elm = (node instanceof VisualElement) ? node : elmx(node);\r\n                elm[action].apply(elm, args);\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        root: new VisualElement(document.body),\r\n\r\n        VisualElement: VisualElement,\r\n\r\n        partial: function(name, fn) {\r\n            var props = {};\r\n\r\n            props[name] = fn;\r\n\r\n            VisualElement.partial(props);\r\n        },\r\n\r\n        delegate: function(names, context) {\r\n            var props = {};\r\n\r\n            names.forEach(function(name) {\r\n                props[name] = _delegator(context[name], context);\r\n            });\r\n\r\n            VisualElement.partial(props);\r\n        }\r\n    });\r\n\r\n    // from ./datax\r\n    elmx.delegate([\r\n        \"attr\",\r\n        \"data\",\r\n        \"prop\",\r\n        \"removeAttr\",\r\n        \"removeData\",\r\n        \"text\",\r\n        \"val\"\r\n    ], datax);\r\n\r\n    // from ./eventer\r\n    elmx.delegate([\r\n        \"off\",\r\n        \"on\",\r\n        \"one\",\r\n        \"shortcuts\",\r\n        \"trigger\"\r\n    ], eventer);\r\n\r\n    // from ./finder\r\n    elmx.delegate([\r\n        \"ancestor\",\r\n        \"ancestors\",\r\n        \"children\",\r\n        \"descendant\",\r\n        \"find\",\r\n        \"findAll\",\r\n        \"firstChild\",\r\n        \"lastChild\",\r\n        \"matches\",\r\n        \"nextSibling\",\r\n        \"nextSiblings\",\r\n        \"parent\",\r\n        \"previousSibling\",\r\n        \"previousSiblings\",\r\n        \"siblings\"\r\n    ], finder);\r\n\r\n    /*\r\n     * find a dom element matched by the specified selector.\r\n     * @param {String} selector\r\n     */\r\n    elmx.find = function(selector) {\r\n        if (selector === \"body\") {\r\n            return this.root;\r\n        } else {\r\n            return this.root.descendant(selector);\r\n        }\r\n    };\r\n\r\n    // from ./fx\r\n    elmx.delegate([\r\n        \"animate\",\r\n        \"fadeIn\",\r\n        \"fadeOut\",\r\n        \"fadeTo\",\r\n        \"fadeToggle\",\r\n        \"hide\",\r\n        \"scrollToTop\",\r\n        \"show\",\r\n        \"toggle\"\r\n    ], fx);\r\n\r\n\r\n    // from ./geom\r\n    elmx.delegate([\r\n        \"borderExtents\",\r\n        \"boundingPosition\",\r\n        \"boundingRect\",\r\n        \"clientHeight\",\r\n        \"clientSize\",\r\n        \"clientWidth\",\r\n        \"contentRect\",\r\n        \"height\",\r\n        \"marginExtents\",\r\n        \"offsetParent\",\r\n        \"paddingExtents\",\r\n        \"pagePosition\",\r\n        \"pageRect\",\r\n        \"relativePosition\",\r\n        \"relativeRect\",\r\n        \"scrollIntoView\",\r\n        \"scrollLeft\",\r\n        \"scrollTop\",\r\n        \"size\",\r\n        \"width\"\r\n    ], geom);\r\n\r\n    // from ./noder\r\n    elmx.delegate([\r\n        \"after\",\r\n        \"append\",\r\n        \"before\",\r\n        \"clone\",\r\n        \"contains\",\r\n        \"contents\",\r\n        \"empty\",\r\n        \"html\",\r\n        \"isChildOf\",\r\n        \"ownerDoc\",\r\n        \"prepend\",\r\n        \"remove\",\r\n        \"removeChild\",\r\n        \"replace\",\r\n        \"reverse\",\r\n        \"throb\",\r\n        \"traverse\",\r\n        \"wrapper\",\r\n        \"wrapperInner\",\r\n        \"unwrap\"\r\n    ], noder);\r\n\r\n    // from ./styler\r\n    elmx.delegate([\r\n        \"addClass\",\r\n        \"className\",\r\n        \"css\",\r\n        \"hasClass\",\r\n        \"hide\",\r\n        \"isInvisible\",\r\n        \"removeClass\",\r\n        \"show\",\r\n        \"toggleClass\"\r\n    ], styler);\r\n\r\n    // properties\r\n\r\n    var properties = [ 'position', 'left', 'top', 'right', 'bottom', 'width', 'height', 'border', 'borderLeft',\r\n    'borderTop', 'borderRight', 'borderBottom', 'borderColor', 'display', 'overflow', 'margin', 'marginLeft', 'marginTop', 'marginRight', 'marginBottom', 'padding', 'paddingLeft', 'paddingTop', 'paddingRight', 'paddingBottom', 'color',\r\n    'background', 'backgroundColor', 'opacity', 'fontSize', 'fontWeight', 'textAlign', 'textDecoration', 'textTransform', 'cursor', 'zIndex' ];\r\n\r\n    properties.forEach( function ( property ) {\r\n\r\n        var method = property;\r\n\r\n        VisualElement.prototype[method ] = function (value) {\r\n\r\n            this.css( property, value );\r\n\r\n            return this;\r\n\r\n        };\r\n\r\n    });\r\n\r\n    // events\r\n    var events = [ 'keyUp', 'keyDown', 'mouseOver', 'mouseOut', 'click', 'dblClick', 'change' ];\r\n\r\n    events.forEach( function ( event ) {\r\n\r\n        var method = event;\r\n\r\n        VisualElement.prototype[method ] = function ( callback ) {\r\n\r\n            this.on( event.toLowerCase(), callback);\r\n\r\n            return this;\r\n        };\r\n\r\n    });\r\n\r\n\r\n    return dom.elmx = elmx;\r\n});\ndefine('skylark-utils-dom/plugins',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./eventer\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./fx\",\r\n    \"./query\",\r\n    \"./elmx\"\r\n], function(dom, langx, noder, datax, eventer, finder, geom, styler, fx, $, elmx) {\r\n    \"use strict\";\r\n\r\n    var slice = Array.prototype.slice,\r\n        concat = Array.prototype.concat,\r\n        pluginKlasses = {};\r\n\r\n\r\n    /*\r\n     * Register a plugin type\r\n     */\r\n    function register( pluginKlass,shortcut) {\r\n        var name = pluginKlass.prototype.pluginName;\r\n        \r\n        pluginKlasses[name] = pluginKlass;\r\n\r\n        if (shortcut) {\r\n            elmx.partial(shortcut,$.fn[shortcut] = function(options) {\r\n                var args = slice.call(arguments,0);\r\n                args.unshift(name);\r\n                return this.plugin.apply(this,args);\r\n            });\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Create or get a plugin instance assocated with the element,\r\n     * also you can execute the plugin method directory;\r\n     */\r\n    function instantiate(elm,pluginName,options) {\r\n\r\n        var pluginInstance = datax.data( elm, pluginName );\r\n\r\n        if (options === \"instance\") {\r\n            return pluginInstance;\r\n        }\r\n\r\n        var isMethodCall = typeof options === \"string\",\r\n            args = slice.call( arguments, 2 ),\r\n            returnValue = this;\r\n\r\n        if ( isMethodCall ) {\r\n            var methodName = options;\r\n\r\n            if ( !pluginInstance ) {\r\n                return langx.error( \"cannot call methods on \" + pluginName +\r\n                    \" prior to initialization; \" +\r\n                    \"attempted to call method '\" + methodName + \"'\" );\r\n            }\r\n\r\n            if ( !langx.isFunction( pluginInstance[ methodName ] ) || methodName.charAt( 0 ) === \"_\" ) {\r\n                return langx.error( \"no such method '\" + methodName + \"' for \" + pluginName +\r\n                    \" plugin instance\" );\r\n            }\r\n\r\n            return pluginInstance[ methodName ].apply( pluginInstance, args );\r\n\r\n        } else {\r\n            // Allow multiple hashes to be passed on init\r\n            if ( args.length ) {\r\n                options = langx.mixin.apply( langx, [{},options ].concat( args ) );\r\n            }\r\n\r\n            if ( pluginInstance ) {\r\n                pluginInstance.option( options || {} );\r\n            } else {\r\n                var pluginKlass = pluginKlasses[pluginName]; \r\n                datax.data( elm, pluginName, new pluginKlass(elm,options));\r\n            }\r\n        }\r\n\r\n        return returnValue;\r\n    }\r\n\r\n    var Plugin =   langx.Evented.inherit({\r\n        klassName: \"Plugin\",\r\n\r\n        _construct : function(elm,options) {\r\n           this._elm = elm;\r\n           this._initOptions(options);\r\n        },\r\n\r\n        _initOptions : function(options) {\r\n          var ctor = this.constructor,\r\n              cache = ctor.cache = ctor.cache || {},\r\n              defaults = cache.defaults;\r\n          if (!defaults) {\r\n            var  ctors = [];\r\n            do {\r\n              ctors.unshift(ctor);\r\n              if (ctor === Plugin) {\r\n                break;\r\n              }\r\n              ctor = ctor.superclass;\r\n            } while (ctor);\r\n\r\n            defaults = cache.defaults = {};\r\n            for (var i=0;i<ctors.length;i++) {\r\n              ctor = ctors[i];\r\n              if (ctor.prototype.hasOwnProperty(\"options\")) {\r\n                langx.mixin(defaults,ctor.prototype.options);\r\n              }\r\n            }\r\n          }\r\n          return this.options = langx.mixin({},defaults,options);\r\n        },\r\n\r\n\r\n        destroy: function() {\r\n            var that = this;\r\n\r\n            this._destroy();\r\n            // We can probably remove the unbind calls in 2.0\r\n            // all event bindings should go through this._on()\r\n            datax.removeData(this._elm,this.pluginName );\r\n        },\r\n\r\n        _destroy: langx.noop,\r\n\r\n        _delay: function( handler, delay ) {\r\n            function handlerProxy() {\r\n                return ( typeof handler === \"string\" ? instance[ handler ] : handler )\r\n                    .apply( instance, arguments );\r\n            }\r\n            var instance = this;\r\n            return setTimeout( handlerProxy, delay || 0 );\r\n        },\r\n\r\n        option: function( key, value ) {\r\n            var options = key;\r\n            var parts;\r\n            var curOption;\r\n            var i;\r\n\r\n            if ( arguments.length === 0 ) {\r\n\r\n                // Don't return a reference to the internal hash\r\n                return langx.mixin( {}, this.options );\r\n            }\r\n\r\n            if ( typeof key === \"string\" ) {\r\n\r\n                // Handle nested keys, e.g., \"foo.bar\" => { foo: { bar: ___ } }\r\n                options = {};\r\n                parts = key.split( \".\" );\r\n                key = parts.shift();\r\n                if ( parts.length ) {\r\n                    curOption = options[ key ] = langx.mixin( {}, this.options[ key ] );\r\n                    for ( i = 0; i < parts.length - 1; i++ ) {\r\n                        curOption[ parts[ i ] ] = curOption[ parts[ i ] ] || {};\r\n                        curOption = curOption[ parts[ i ] ];\r\n                    }\r\n                    key = parts.pop();\r\n                    if ( arguments.length === 1 ) {\r\n                        return curOption[ key ] === undefined ? null : curOption[ key ];\r\n                    }\r\n                    curOption[ key ] = value;\r\n                } else {\r\n                    if ( arguments.length === 1 ) {\r\n                        return this.options[ key ] === undefined ? null : this.options[ key ];\r\n                    }\r\n                    options[ key ] = value;\r\n                }\r\n            }\r\n\r\n            this._setOptions( options );\r\n\r\n            return this;\r\n        },\r\n\r\n        _setOptions: function( options ) {\r\n            var key;\r\n\r\n            for ( key in options ) {\r\n                this._setOption( key, options[ key ] );\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        _setOption: function( key, value ) {\r\n\r\n            this.options[ key ] = value;\r\n\r\n            return this;\r\n        }\r\n\r\n    });\r\n\r\n    $.fn.plugin = function(name,options) {\r\n        var args = slice.call( arguments, 1 ),\r\n            self = this,\r\n            returnValue = this;\r\n\r\n        this.each(function(){\r\n            returnValue = instantiate.apply(self,[this,name].concat(args));\r\n        });\r\n        return returnValue;\r\n    };\r\n\r\n    elmx.partial(\"plugin\",function(name,options) {\r\n        var args = slice.call( arguments, 1 );\r\n        return instantiate.apply(this,[this,name].concat(args));\r\n    }); \r\n\r\n\r\n    function plugins() {\r\n        return plugins;\r\n    }\r\n     \r\n    langx.mixin(plugins, {\r\n        instantiate : instantiate,\r\n        \r\n        Plugin : Plugin,\r\n\r\n        register : register\r\n\r\n    });\r\n\r\n    return plugins;\r\n});\ndefine('skylark-utils-dom/scripter',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./finder\"\r\n], function(dom, langx, noder, finder) {\r\n\r\n    var head = document.getElementsByTagName('head')[0],\r\n        scriptsByUrl = {},\r\n        scriptElementsById = {},\r\n        count = 0;\r\n\r\n    function scripter() {\r\n        return scripter;\r\n    }\r\n\r\n    langx.mixin(scripter, {\r\n        /*\r\n         * Load a script from a url into the document.\r\n         * @param {} url\r\n         * @param {} loadedCallback\r\n         * @param {} errorCallback\r\n         */\r\n        loadJavaScript: function(url, loadedCallback, errorCallback) {\r\n            var script = scriptsByUrl[url];\r\n            if (!script) {\r\n                script = scriptsByUrl[url] = {\r\n                    state: 0, //0:unload,1:loaded,-1:loaderror\r\n                    loadedCallbacks: [],\r\n                    errorCallbacks: []\r\n                }\r\n            }\r\n\r\n            script.loadedCallbacks.push(loadedCallback);\r\n            script.errorCallbacks.push(errorCallback);\r\n\r\n            if (script.state === 1) {\r\n                script.node.onload();\r\n            } else if (script.state === -1) {\r\n                script.node.onerror();\r\n            } else {\r\n                var node = script.node = document.createElement(\"script\"),\r\n                    id = script.id = (count++);\r\n\r\n                node.type = \"text/javascript\";\r\n                node.async = false;\r\n                node.defer = false;\r\n                startTime = new Date().getTime();\r\n                head.appendChild(node);\r\n\r\n                node.onload = function() {\r\n                        script.state = 1;\r\n\r\n                        var callbacks = script.loadedCallbacks,\r\n                            i = callbacks.length;\r\n\r\n                        while (i--) {\r\n                            callbacks[i]();\r\n                        }\r\n                        script.loadedCallbacks = [];\r\n                        script.errorCallbacks = [];\r\n                    },\r\n                    node.onerror = function() {\r\n                        script.state = -1;\r\n                        var callbacks = script.errorCallbacks,\r\n                            i = callbacks.length;\r\n\r\n                        while (i--) {\r\n                            callbacks[i]();\r\n                        }\r\n                        script.loadedCallbacks = [];\r\n                        script.errorCallbacks = [];\r\n                    };\r\n                node.src = url;\r\n\r\n                scriptElementsById[id] = node;\r\n            }\r\n            return script.id;\r\n        },\r\n        /*\r\n         * Remove the specified script from the document.\r\n         * @param {Number} id\r\n         */\r\n        deleteJavaScript: function(id) {\r\n            var node = scriptElementsById[id];\r\n            if (node) {\r\n                var url = node.src;\r\n                noder.remove(node);\r\n                delete scriptElementsById[id];\r\n                delete scriptsByUrl[url];\r\n            }\r\n        }\r\n    });\r\n\r\n    return dom.scripter = scripter;\r\n});\ndefine('skylark-utils-dom/main',[\r\n    \"./dom\",\r\n    \"./browser\",\r\n    \"./css\",\r\n    \"./datax\",\r\n    \"./eventer\",\r\n    \"./finder\",\r\n    \"./fx\",\r\n    \"./geom\",\r\n    \"./images\",\r\n    \"./noder\",\r\n    \"./plugins\",\r\n    \"./query\",\r\n    \"./scripter\",\r\n    \"./styler\",\r\n    \"./transforms\",\r\n    \"./langx\",\r\n    \"./elmx\"\r\n], function(dom) {\r\n    return dom;\r\n})\r\n;\ndefine('skylark-utils-dom', ['skylark-utils-dom/main'], function (main) { return main; });\n\n"]}