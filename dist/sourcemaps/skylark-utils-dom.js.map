{"version":3,"sources":["skylark-utils-dom.js"],"names":["factory","globals","absolute","relative","base","stack","split","parts","pop","i","length","push","join","define","require","isAmd","amd","isCmd","exports","map","id","deps","dep","hasOwnProperty","Error","module","args","forEach","apply","window","skylarkjs","skylark","langx","normalizeCssEvent","name","css3EventPrefix","toLowerCase","normalizeCssProperty","cssProps","normalizeStyleProperty","cssStyles","browser","vendorPrefix","vendorPrefixRE","transEndEventNames","WebkitTransition","MozTransition","OTransition","transition","transEndEventName","css3PropPrefix","css3StylePrefix","vendorPrefixesRE","document","testEl","createElement","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","requestFullScreen","requestFullscreen","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","testStyle","exitFullscreen","webkitCancelFullScreen","mozCancelFullScreen","msExitFullscreen","style","matched","match","RegExp","lowerFirst","cssPropName","dasherize","mixin","isIE","exec","navigator","userAgent","location","support","end","maybeAddPx","value","cssNumber","classRE","classReCache","className","node","klass","svg","undefined","baseVal","disabled","elm","arguments","this","dom","defaultDisplay","nodeName","element","display","elementDisplay","body","appendChild","getComputedStyle","getPropertyValue","parentNode","removeChild","show","styler","css","isInvisible","hide","addClass","names","cls","isString","re","property","computedStyle","camelCase","isArrayLike","props","call","prop","removeProperty","key","cssText","hasClass","removeClass","replace","trim","toggleClass","when","self","Array","prototype","every","column-count","columns","font-weight","line-height","opacity","z-index","zoom","autocssfix","cssHooks","ensureNodes","nodes","copyByClone","cloneNode","flatten","chkName","after","placing","refNode","parent","nextSibling","insertBefore","append","before","contents","contentDocument","childNodes","tag","setAttribute","createFragment","html","singleTagRE","test","$1","fragmentRE","containers","container","innerHTML","slice","clone","deep","nodeType","each","getAttribs","attr","setAttrib","getAttrib","contains","child","isChildOf","createTextNode","text","doc","empty","hasChildNodes","firstChild","fullScreen","el","exitFullScreen","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","fulledEl","focusable","hasTabindex","mapName","img","focusableIfVisible","fieldset","href","$","is","closest","visible","rxhtmlTag","isNumber","directly","documentElement","isDoc","DOCUMENT_NODE","ownerDoc","ownerDocument","ownerWindow","defaultView","parentWindow","prepend","offsetParent","rootNodeRE","overlay","params","overlayDiv","position","top","left","width","height","zIndex","remove","e","console","warn","children","oldNode","replaceChild","throb","timer","time","callback","throbber","textNode","clearTimeout","update","nodeValue","setTimeout","traverse","fn","len","reverse","wrapper","wrapperNode","wrapperInner","unwrap","noder","div","table","tableBody","tableRow","tr","tbody","thead","tfoot","td","th","*","isWindow","_createStyleSheet","external","options","type","count","media","create","rel","async","head","sheetsById","createStyleSheet","sheetId","addSheetRules","deleteSheetRule","rule","sheet","deleteRuleFunc","rulesPropName","_rule","deleteRule","defaultSheetId","removeStyleSheet","insertRule","selector","index","insertSheetRule","addRules","rules","insertRuleFunc","toString","isAtRule","str","startsWith","json","adjust","parentName","depth","strNode","values","atFlg","SPACE","repeat","isArray","n","adjusted","getElementsByTagName","defaultSheet","removeRule","_insertRule","addRule","velm","createInputPseudo","elem","createButtonPseudo","ancestor","root","rootIsSelector","matches","ancestors","ret","local","filter","byId","getElementById","descendants","querySelectorAll","matchError","query","descendant","querySelector","find","findAll","first","lastChild","last","previousSibling","nativeMatchesSelector","inArray","isPlainObject","check","adjacent","nextSiblings","previousSiblings","siblings","parser","rawMatch","separator","combinator","combinatorChildren","tagName","attributeKey","attributeOperator","attributeQuote","attributeValue","pseudoMarker","pseudoClass","pseudoQuote","pseudoClassQuotedValue","pseudoClassValue","separatorIndex","parsed","expressions","combinatorIndex","currentSeparator","reversed","reverseCombinator","currentParsed","reUnescape","classList","classes","regexp","escapeRegExp","pseudos","indexOf","attributes","operator","cache","reverseCache","parse","expression","isReversed","Slick","currentCache","raw","exp","j","cexp","from","to","string","rinputs","rheader","parseSelector","button","checked","idx","enabled","eq","even","focus","activeElement","tabindex","gt","has","sel","header","hidden","input","lt","not","odd","selected","tabbable","tabIndex","offsetWidth","item","isArrayFilter","radio","checkbox","file","password","image","submit","reset","divide","cond","nativeSelector","customPseudos","JSON","stringify","part","toUpperCase","arrayFilte","pseudo","getAttribute","hasAttribute","currentExpression","simpleExpCounter","filterSingle","matchs","uniq","concat","combine","bit","node1","op","prev","next","divided","single","currentBit","founds","found","currentItems","finder","removeAttribute","aria","attrName","_attributeData","store","deserializeValue","_store","confirm","_getData","camelName","capitalRE","_setData","data","dataAttrName","cleanData","removeData","pluck","propMap","removeAttr","removeProp","txt","textContent","val","multiple","selectedOptions","option","datax","readonly","for","class","maxlength","cellspacing","cellpadding","rowspan","colspan","usemap","frameborder","contenteditable","compatible","event","source","isDefaultPrevented","eventMethods","predicate","sourceMethod","returnTrue","returnFalse","segs","ns","sort","createProxy","src","proxy","originalEvent","ignoreProperties","off","events","$this","isFunction","handler","findHandler","unregister","on","one","ready","register","stop","all","keyCode","preventDefault","stopPropagation","trigger","evented","Event","createEvent","_args","dispatchEvent","readyRE","readyState","defer","addEventListener","shortcuts","registry","run","shortcut","metaKey","ctrlKey","ctrl","alt","altKey","shift","shiftKey","charCode","target","add","pattern","shortcutKeys","shortcutKey","setting","charCodeAt","keyCodeLookup","regKey","eventer","uid","stopImmediatePropagation","getEventCtor","NativeEvents","EventCtors","compositionstart","compositionend","compositionupdate","beforecopy","beforecut","beforepaste","copy","cut","paste","drag","dragend","dragenter","dragexit","dragleave","dragover","dragstart","drop","abort","change","error","selectionchange","blur","focusin","focusout","keydown","keypress","keyup","message","click","contextmenu","dblclick","mousedown","mouseup","mousemove","mouseover","mouseout","mouseenter","mouseleave","textInput","touchstart","touchmove","touchend","load","resize","select","scroll","unload","wheel","bubbles","cancelable","namespace","ctor","safeMixin","specialEvents","focusinSupported","hover","realEvent","handlers","EventBindings","init","_target","_event","_bindings","bindings","binding","_listener","domEvt","isDefined","isImmediatePropagationStopped","currentTarget","liveFired","related","relatedTarget","result","matcherFor","matcher","removing","removeEventListener","EventsHandler","_handler","specialEvent","bindingEvent","bindType","bindEventName","listener","backspace","comma","delete","down","enter","escape","home","page_down","page_up","period","right","space","tab","up","transitionEnd","delegateType","handle","handleObj","keys","special","scrollbarWidth","cachedScrollbarWidth","w1","w2","innerDiv","clientWidth","borderExtents","s","px","borderLeftWidth","borderTopWidth","borderRightWidth","bottom","borderBottomWidth","boundingPosition","coords","getBoundingClientRect","parentOffset","mex","marginExtents","pbex","relativePosition","boundingRect","size","clientHeight","clientSize","dimension","isBorderBox","bex","pex","paddingExtents","contentRect","cs","getDocumentSize","max","Math","scrollWidth","scrollHeight","offsetHeight","marginLeft","marginTop","marginRight","marginBottom","marginRect","obj","relativeRect","me","marginSize","paddingLeft","paddingTop","paddingRight","paddingBottom","pagePosition","pageXOffset","pageYOffset","pageRect","round","offset","scrollIntoView","align","getOffset","rootElm","x","y","offsetLeft","offsetTop","parentWidth","parentHeight","parentElm","pos","scrollLeft","scrollTop","hasScrollLeft","scrollTo","scrollY","hasScrollTop","scrollX","innerWidth","innerHeight","isDocument","geom","toPixel","animate","properties","duration","ease","delay","endEvent","wrappedCallback","cssValues","cssProperties","transforms","that","fired","resetClipAuto","easing","complete","fx","speeds","normal","eace","animationName","animationDuration","animationTiming","animationEnd","v","supportedTransforms","transform","transitionProperty","transitionDuration","transitionDelay","transitionTiming","cssReset","debounce","clientLeft","scrollToTop","speed","scale","scrollFrom","parseInt","runEvery","freq","interval","setInterval","clearInterval","toggle","fadeTo","fadeIn","fadeOut","fadeToggle","ceasing","allback","slideDown","visibility","overflow","slideUp","queue","slideToggle","animationDelay","fast","slow","getMatrix","radian","Cos","cos","Sin","sin","M11","M12","M21","M22","getZoom","d","matrix","css3Transform","toFixed","transformData","_createApiMethod","calcFunc","makeArray","unshift","calcs","vertical","PI","horizontal","rotate","degress","hZoom","vZoom","zoomin","zoomout","wrapper_map","func","context","wrapper_selector","wrapper_selector_until","util","wrapper_every_act","wrapper_every_act_firstArgFunc","oldValueFunc","arg1","funcArg","wrapper_some_chk","some","wrapper_name_value","newValue","wrapper_value","isQ","rquickExpr","isObject","NodeList","compact","klassName","charAt","wrapper_node_operation","argType","arg","object","get","toArray","isHtmlNode","excludes","parents","parentsUntil","pushStack","elms","prevObject","replaceWith","newContent","wrap","structure","wrapAll","wrappingElement","wrapInner","prevAll","nextAll","detach","fnOver","fnOut","Dimension","m","margin","cb","mb","appendTo","prependTo","insertAfter","replaceAll","original","elems","insert","toogle","andSelf","addBack","place","addContent","content","template","substitute","replaceClass","newClass","oldClass","plugin","returnValue","plugins","instantiate","watch","imgs","resolve","total","totalCount","successed","successedCount","failered","faileredCount","progress","isLoaded","progressedCount","progressed","isCompleted","Deferred","promise","naturalWidth","loaded","addBackgroundImage","elm1","reURL","url","Image","childImgs","background","preload","urls","images","viewer","onload","loadedCallback","onerror","_init","border","padding","_load","_dispose","dispose","imagesLoaded","imagesViewer","_delegator","domNode","HTMLElement","VisualElement","batch","action","partial","delegate","method","pluginKlass","pluginKlasses","pluginName","pluginInstance","isMethodCall","methodName","pluginUuid","Plugin","Evented","inherit","pluginEventPrefix","_construct","defaultElement","uuid","eventNamespace","pluginFullName","_on","destroy","_getCreateOptions","_create","_trigger","_getCreateEventData","noop","_destroy","curOption","extend","_setOptions","_setOption","scripter","scriptsByUrl","scriptElementsById","loadJavaScript","errorCallback","script","state","loadedCallbacks","errorCallbacks","startTime","Date","getTime","callbacks","deleteJavaScript","main"],"mappings":"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","file":"../skylark-utils-dom.js","sourcesContent":["define('skylark-utils-dom/skylark',[\"skylark-langx/skylark\"], function(skylark) {\r\n    return skylark;\r\n});\r\n\ndefine('skylark-utils-dom/langx',[\r\n    \"skylark-langx/langx\"\r\n], function(langx) {\r\n    return langx;\r\n});\r\n\ndefine('skylark-utils-dom/browser',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark,langx) {\r\n    \"use strict\";\r\n \r\n    var checkedCssProperties = {\r\n            \"transitionproperty\": \"TransitionProperty\",\r\n        },\r\n        transEndEventNames = {\r\n          WebkitTransition : 'webkitTransitionEnd',\r\n          MozTransition    : 'transitionend',\r\n          OTransition      : 'oTransitionEnd otransitionend',\r\n          transition       : 'transitionend'\r\n        },\r\n        transEndEventName = null;\r\n\r\n\r\n    var css3PropPrefix = \"\",\r\n        css3StylePrefix = \"\",\r\n        css3EventPrefix = \"\",\r\n\r\n        cssStyles = {},\r\n        cssProps = {},\r\n\r\n        vendorPrefix,\r\n        vendorPrefixRE,\r\n        vendorPrefixesRE = /^(Webkit|webkit|O|Moz|moz|ms)(.*)$/,\r\n\r\n        document = window.document,\r\n        testEl = document.createElement(\"div\"),\r\n\r\n        matchesSelector = testEl.webkitMatchesSelector ||\r\n                          testEl.mozMatchesSelector ||\r\n                          testEl.oMatchesSelector ||\r\n                          testEl.matchesSelector,\r\n\r\n        requestFullScreen = testEl.requestFullscreen || \r\n                            testEl.webkitRequestFullscreen || \r\n                            testEl.mozRequestFullScreen || \r\n                            testEl.msRequestFullscreen,\r\n\r\n        exitFullScreen =  document.exitFullscreen ||\r\n                          document.webkitCancelFullScreen ||\r\n                          document.mozCancelFullScreen ||\r\n                          document.msExitFullscreen,\r\n\r\n        testStyle = testEl.style;\r\n\r\n    for (var name in testStyle) {\r\n        var matched = name.match(vendorPrefixRE || vendorPrefixesRE);\r\n        if (matched) {\r\n            if (!vendorPrefixRE) {\r\n                vendorPrefix = matched[1];\r\n                vendorPrefixRE = new RegExp(\"^(\" + vendorPrefix + \")(.*)$\");\r\n\r\n                css3StylePrefix = vendorPrefix;\r\n                css3PropPrefix = '-' + vendorPrefix.toLowerCase() + '-';\r\n                css3EventPrefix = vendorPrefix.toLowerCase();\r\n            }\r\n\r\n            cssStyles[langx.lowerFirst(matched[2])] = name;\r\n            var cssPropName = langx.dasherize(matched[2]);\r\n            cssProps[cssPropName] = css3PropPrefix + cssPropName;\r\n\r\n        }\r\n\r\n        if (transEndEventNames[name]) {\r\n          transEndEventName = transEndEventNames[name];\r\n        }\r\n    }\r\n\r\n    function normalizeCssEvent(name) {\r\n        return css3EventPrefix ? css3EventPrefix + name : name.toLowerCase();\r\n    }\r\n\r\n    function normalizeCssProperty(name) {\r\n        return cssProps[name] || name;\r\n    }\r\n\r\n    function normalizeStyleProperty(name) {\r\n        return cssStyles[name] || name;\r\n    }\r\n\r\n    function browser() {\r\n        return browser;\r\n    }\r\n\r\n    langx.mixin(browser, {\r\n        css3PropPrefix: css3PropPrefix,\r\n\r\n        isIE : !!/msie/i.exec( window.navigator.userAgent ),\r\n\r\n        normalizeStyleProperty: normalizeStyleProperty,\r\n\r\n        normalizeCssProperty: normalizeCssProperty,\r\n\r\n        normalizeCssEvent: normalizeCssEvent,\r\n\r\n        matchesSelector: matchesSelector,\r\n\r\n        requestFullScreen : requestFullScreen,\r\n\r\n        exitFullscreen : requestFullScreen,\r\n\r\n        location: function() {\r\n            return window.location;\r\n        },\r\n\r\n        support : {\r\n\r\n        }\r\n\r\n    });\r\n\r\n    if  (transEndEventName) {\r\n        browser.support.transition = {\r\n            end : transEndEventName\r\n        };\r\n    }\r\n\r\n    testEl = null;\r\n\r\n    return skylark.browser = browser;\r\n});\r\n\ndefine('skylark-utils-dom/styler',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark, langx) {\r\n    var every = Array.prototype.every,\r\n        forEach = Array.prototype.forEach,\r\n        camelCase = langx.camelCase,\r\n        dasherize = langx.dasherize;\r\n\r\n    function maybeAddPx(name, value) {\r\n        return (typeof value == \"number\" && !cssNumber[dasherize(name)]) ? value + \"px\" : value\r\n    }\r\n\r\n    var cssNumber = {\r\n            'column-count': 1,\r\n            'columns': 1,\r\n            'font-weight': 1,\r\n            'line-height': 1,\r\n            'opacity': 1,\r\n            'z-index': 1,\r\n            'zoom': 1\r\n        },\r\n        classReCache = {\r\n\r\n        };\r\n\r\n    function classRE(name) {\r\n        return name in classReCache ?\r\n            classReCache[name] : (classReCache[name] = new RegExp('(^|\\\\s)' + name + '(\\\\s|$)'));\r\n    }\r\n\r\n    // access className property while respecting SVGAnimatedString\r\n    /*\r\n     * Adds the specified class(es) to each element in the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {String} value\r\n     */\r\n    function className(node, value) {\r\n        var klass = node.className || '',\r\n            svg = klass && klass.baseVal !== undefined\r\n\r\n        if (value === undefined) return svg ? klass.baseVal : klass\r\n        svg ? (klass.baseVal = value) : (node.className = value)\r\n    }\r\n\r\n    function disabled(elm, value ) {\r\n        if (arguments.length < 2) {\r\n            return !!this.dom.disabled;\r\n        }\r\n\r\n        elm.disabled = value;\r\n\r\n        return this;\r\n    }\r\n\r\n    var elementDisplay = {};\r\n\r\n    function defaultDisplay(nodeName) {\r\n        var element, display\r\n        if (!elementDisplay[nodeName]) {\r\n            element = document.createElement(nodeName)\r\n            document.body.appendChild(element)\r\n            display = getComputedStyle(element, '').getPropertyValue(\"display\")\r\n            element.parentNode.removeChild(element)\r\n            display == \"none\" && (display = \"block\")\r\n            elementDisplay[nodeName] = display\r\n        }\r\n        return elementDisplay[nodeName]\r\n    }\r\n    /*\r\n     * Display the matched elements.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function show(elm) {\r\n        styler.css(elm, \"display\", \"\");\r\n        if (styler.css(elm, \"display\") == \"none\") {\r\n            styler.css(elm, \"display\", defaultDisplay(elm.nodeName));\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function isInvisible(elm) {\r\n        return styler.css(elm, \"display\") == \"none\" || styler.css(elm, \"opacity\") == 0;\r\n    }\r\n\r\n    /*\r\n     * Hide the matched elements.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function hide(elm) {\r\n        styler.css(elm, \"display\", \"none\");\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Adds the specified class(es) to each element in the set of matched elements.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function addClass(elm, name) {\r\n        if (!name) return this\r\n        var cls = className(elm),\r\n            names;\r\n        if (langx.isString(name)) {\r\n            names = name.split(/\\s+/g);\r\n        } else {\r\n            names = name;\r\n        }\r\n        names.forEach(function(klass) {\r\n            var re = classRE(klass);\r\n            if (!cls.match(re)) {\r\n                cls += (cls ? \" \" : \"\") + klass;\r\n            }\r\n        });\r\n\r\n        className(elm, cls);\r\n\r\n        return this;\r\n    }\r\n    /*\r\n     * Get the value of a computed style property for the first element in the set of matched elements or set one or more CSS properties for every matched element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} property\r\n     * @param {Any} value\r\n     */\r\n    function css(elm, property, value) {\r\n        if (arguments.length < 3) {\r\n            var computedStyle,\r\n                computedStyle = getComputedStyle(elm, '')\r\n            if (langx.isString(property)) {\r\n                return elm.style[camelCase(property)] || computedStyle.getPropertyValue(dasherize(property))\r\n            } else if (langx.isArrayLike(property)) {\r\n                var props = {}\r\n                forEach.call(property, function(prop) {\r\n                    props[prop] = (elm.style[camelCase(prop)] || computedStyle.getPropertyValue(dasherize(prop)))\r\n                })\r\n                return props\r\n            }\r\n        }\r\n\r\n        var css = '';\r\n        if (typeof(property) == 'string') {\r\n            if (!value && value !== 0) {\r\n                elm.style.removeProperty(dasherize(property));\r\n            } else {\r\n                css = dasherize(property) + \":\" + maybeAddPx(property, value)\r\n            }\r\n        } else {\r\n            for (key in property) {\r\n                if (property[key] === undefined) {\r\n                    continue;\r\n                }\r\n                if (!property[key] && property[key] !== 0) {\r\n                    elm.style.removeProperty(dasherize(key));\r\n                } else {\r\n                    css += dasherize(key) + ':' + maybeAddPx(key, property[key]) + ';'\r\n                }\r\n            }\r\n        }\r\n\r\n        elm.style.cssText += ';' + css;\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Determine whether any of the matched elements are assigned the given class.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function hasClass(elm, name) {\r\n        var re = classRE(name);\r\n        return elm.className && elm.className.match(re);\r\n    }\r\n\r\n    /*\r\n     * Remove a single class, multiple classes, or all classes from each element in the set of matched elements.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function removeClass(elm, name) {\r\n        if (name) {\r\n            var cls = className(elm),\r\n                names;\r\n\r\n            if (langx.isString(name)) {\r\n                names = name.split(/\\s+/g);\r\n            } else {\r\n                names = name;\r\n            }\r\n\r\n            names.forEach(function(klass) {\r\n                var re = classRE(klass);\r\n                if (cls.match(re)) {\r\n                    cls = cls.replace(re, \" \");\r\n                }\r\n            });\r\n\r\n            className(elm, cls.trim());\r\n        } else {\r\n            className(elm, \"\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Add or remove one or more classes from the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     * @param {} when\r\n     */\r\n    function toggleClass(elm, name, when) {\r\n        var self = this;\r\n        name.split(/\\s+/g).forEach(function(klass) {\r\n            if (when === undefined) {\r\n                when = !self.hasClass(elm, klass);\r\n            }\r\n            if (when) {\r\n                self.addClass(elm, klass);\r\n            } else {\r\n                self.removeClass(elm, klass)\r\n            }\r\n        });\r\n\r\n        return self;\r\n    }\r\n\r\n    var styler = function() {\r\n        return styler;\r\n    };\r\n\r\n    langx.mixin(styler, {\r\n        autocssfix: false,\r\n        cssHooks: {\r\n\r\n        },\r\n\r\n        addClass: addClass,\r\n        className: className,\r\n        css: css,\r\n        disabled : disabled,        \r\n        hasClass: hasClass,\r\n        hide: hide,\r\n        isInvisible: isInvisible,\r\n        removeClass: removeClass,\r\n        show: show,\r\n        toggleClass: toggleClass\r\n    });\r\n\r\n    return skylark.styler = styler;\r\n});\ndefine('skylark-utils-dom/noder',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./styler\"\r\n], function(skylark, langx, browser, styler) {\r\n    var isIE = !!navigator.userAgent.match(/Trident/g) || !!navigator.userAgent.match(/MSIE/g),\r\n        fragmentRE = /^\\s*<(\\w+|!)[^>]*>/,\r\n        singleTagRE = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\r\n        div = document.createElement(\"div\"),\r\n        table = document.createElement('table'),\r\n        tableBody = document.createElement('tbody'),\r\n        tableRow = document.createElement('tr'),\r\n        containers = {\r\n            'tr': tableBody,\r\n            'tbody': table,\r\n            'thead': table,\r\n            'tfoot': table,\r\n            'td': tableRow,\r\n            'th': tableRow,\r\n            '*': div\r\n        },\r\n        rootNodeRE = /^(?:body|html)$/i,\r\n        map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    function ensureNodes(nodes, copyByClone) {\r\n        if (!langx.isArrayLike(nodes)) {\r\n            nodes = [nodes];\r\n        }\r\n        if (copyByClone) {\r\n            nodes = map.call(nodes, function(node) {\r\n                return node.cloneNode(true);\r\n            });\r\n        }\r\n        return langx.flatten(nodes);\r\n    }\r\n\r\n    function nodeName(elm, chkName) {\r\n        var name = elm.nodeName && elm.nodeName.toLowerCase();\r\n        if (chkName !== undefined) {\r\n            return name === chkName.toLowerCase();\r\n        }\r\n        return name;\r\n    };\r\n\r\n    function after(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone),\r\n                refNode = refNode.nextSibling;\r\n\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                if (refNode) {\r\n                    parent.insertBefore(nodes[i], refNode);\r\n                } else {\r\n                    parent.appendChild(nodes[i]);\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function append(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            parentNode.appendChild(nodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function before(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone);\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                parent.insertBefore(nodes[i], refNode);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    /*   \r\n     * Get the children of the specified node, including text and comment nodes.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function contents(elm) {\r\n        if (nodeName(elm, \"iframe\")) {\r\n            return elm.contentDocument;\r\n        }\r\n        return elm.childNodes;\r\n    }\r\n\r\n    /*   \r\n     * Create a element and set attributes on it.\r\n     * @param {HTMLElement} tag\r\n     * @param {props} props\r\n     * @param } parent\r\n     */\r\n    function createElement(tag, props, parent) {\r\n        var node = document.createElement(tag);\r\n        if (props) {\r\n            for (var name in props) {\r\n                node.setAttribute(name, props[name]);\r\n            }\r\n        }\r\n        if (parent) {\r\n            append(parent, node);\r\n        }\r\n        return node;\r\n    }\r\n\r\n    /*   \r\n     * Create a DocumentFragment from the HTML fragment.\r\n     * @param {String} html\r\n     */\r\n    function createFragment(html) {\r\n        // A special case optimization for a single tag\r\n        html = langx.trim(html);\r\n        if (singleTagRE.test(html)) {\r\n            return [createElement(RegExp.$1)];\r\n        }\r\n\r\n        var name = fragmentRE.test(html) && RegExp.$1\r\n        if (!(name in containers)) {\r\n            name = \"*\"\r\n        }\r\n        var container = containers[name];\r\n        container.innerHTML = \"\" + html;\r\n        dom = slice.call(container.childNodes);\r\n\r\n        dom.forEach(function(node) {\r\n            container.removeChild(node);\r\n        })\r\n\r\n        return dom;\r\n    }\r\n\r\n    /*   \r\n     * Create a deep copy of the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {Boolean} deep\r\n     */\r\n    function clone(node, deep) {\r\n        var self = this,\r\n            clone;\r\n\r\n        // TODO: Add feature detection here in the future\r\n        if (!isIE || node.nodeType !== 1 || deep) {\r\n            return node.cloneNode(deep);\r\n        }\r\n\r\n        // Make a HTML5 safe shallow copy\r\n        if (!deep) {\r\n            clone = document.createElement(node.nodeName);\r\n\r\n            // Copy attribs\r\n            each(self.getAttribs(node), function(attr) {\r\n                self.setAttrib(clone, attr.nodeName, self.getAttrib(node, attr.nodeName));\r\n            });\r\n\r\n            return clone;\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node .\r\n     * @param {String} node\r\n     * @param {Node} child\r\n     */\r\n    function contains(node, child) {\r\n        return isChildOf(child, node);\r\n    }\r\n\r\n    /*   \r\n     * Create a new Text node.\r\n     * @param {String} text\r\n     * @param {Node} child\r\n     */\r\n    function createTextNode(text) {\r\n        return document.createTextNode(text);\r\n    }\r\n\r\n    /*   \r\n     * Get the current document object.\r\n     */\r\n    function doc() {\r\n        return document;\r\n    }\r\n\r\n    /*   \r\n     * Remove all child nodes of the set of matched elements from the DOM.\r\n     * @param {Object} node\r\n     */\r\n    function empty(node) {\r\n        while (node.hasChildNodes()) {\r\n            var child = node.firstChild;\r\n            node.removeChild(child);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    var fulledEl = null;\r\n\r\n    function fullScreen(el) {\r\n        if (el === false) {\r\n            browser.exitFullScreen.apply(document);\r\n        } else if (el) {\r\n            browser.requestFullScreen.apply(el);\r\n            fulledEl = el;\r\n        } else {\r\n            return (\r\n                document.fullscreenElement ||\r\n                document.webkitFullscreenElement ||\r\n                document.mozFullScreenElement ||\r\n                document.msFullscreenElement\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    // Selectors\r\n    function focusable( element, hasTabindex ) {\r\n        var map, mapName, img, focusableIfVisible, fieldset,\r\n            nodeName = element.nodeName.toLowerCase();\r\n\r\n        if ( \"area\" === nodeName ) {\r\n            map = element.parentNode;\r\n            mapName = map.name;\r\n            if ( !element.href || !mapName || map.nodeName.toLowerCase() !== \"map\" ) {\r\n                return false;\r\n            }\r\n            img = $( \"img[usemap='#\" + mapName + \"']\" );\r\n            return img.length > 0 && img.is( \":visible\" );\r\n        }\r\n\r\n        if ( /^(input|select|textarea|button|object)$/.test( nodeName ) ) {\r\n            focusableIfVisible = !element.disabled;\r\n\r\n            if ( focusableIfVisible ) {\r\n\r\n                // Form controls within a disabled fieldset are disabled.\r\n                // However, controls within the fieldset's legend do not get disabled.\r\n                // Since controls generally aren't placed inside legends, we skip\r\n                // this portion of the check.\r\n                fieldset = $( element ).closest( \"fieldset\" )[ 0 ];\r\n                if ( fieldset ) {\r\n                    focusableIfVisible = !fieldset.disabled;\r\n                }\r\n            }\r\n        } else if ( \"a\" === nodeName ) {\r\n            focusableIfVisible = element.href || hasTabindex;\r\n        } else {\r\n            focusableIfVisible = hasTabindex;\r\n        }\r\n\r\n        return focusableIfVisible && $( element ).is( \":visible\" ) && visible( $( element ) );\r\n    };\r\n\r\n\r\n   var rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/gi;\r\n \r\n    /*   \r\n     * Get the HTML contents of the first element in the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {String} html\r\n     */\r\n    function html(node, html) {\r\n        if (html === undefined) {\r\n            return node.innerHTML;\r\n        } else {\r\n            this.empty(node);\r\n            html = html || \"\";\r\n            if (langx.isString(html)) {\r\n                html = html.replace( rxhtmlTag, \"<$1></$2>\" );\r\n            }\r\n            if (langx.isString(html) || langx.isNumber(html)) {               \r\n                node.innerHTML = html;\r\n            } else if (langx.isArrayLike(html)) {\r\n                for (var i = 0; i < html.length; i++) {\r\n                    node.appendChild(html[i]);\r\n                }\r\n            } else {\r\n                node.appendChild(html);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node.\r\n     * @param {Node} node\r\n     * @param {Node} parent\r\n     * @param {Node} directly\r\n     */\r\n    function isChildOf(node, parent, directly) {\r\n        if (directly) {\r\n            return node.parentNode === parent;\r\n        }\r\n        if (document.documentElement.contains) {\r\n            return parent.contains(node);\r\n        }\r\n        while (node) {\r\n            if (parent === node) {\r\n                return true;\r\n            }\r\n\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node.\r\n     * @param {Node} node\r\n     * @param {Node} parent\r\n     * @param {Node} directly\r\n     */\r\n    function isDoc(node) {\r\n        return node != null && node.nodeType == node.DOCUMENT_NODE\r\n    }\r\n\r\n    /*   \r\n     * Get the owner document object for the specified element.\r\n     * @param {Node} elm\r\n     */\r\n    function ownerDoc(elm) {\r\n        if (!elm) {\r\n            return document;\r\n        }\r\n\r\n        if (elm.nodeType == 9) {\r\n            return elm;\r\n        }\r\n\r\n        return elm.ownerDocument;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     */\r\n    function ownerWindow(elm) {\r\n        var doc = ownerDoc(elm);\r\n        return doc.defaultView || doc.parentWindow;\r\n    }\r\n\r\n    /*   \r\n     * insert one or more nodes as the first children of the specified node.\r\n     * @param {Node} node\r\n     * @param {Node or ArrayLike} placing\r\n     * @param {Boolean Optional} copyByClone\r\n     */\r\n    function prepend(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            refNode = parentNode.firstChild,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            if (refNode) {\r\n                parentNode.insertBefore(nodes[i], refNode);\r\n            } else {\r\n                parentNode.appendChild(nodes[i]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     */\r\n    function offsetParent(elm) {\r\n        var parent = elm.offsetParent || document.body;\r\n        while (parent && !rootNodeRE.test(parent.nodeName) && styler.css(parent, \"position\") == \"static\") {\r\n            parent = parent.offsetParent;\r\n        }\r\n        return parent;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     * @param {Node} params\r\n     */\r\n    function overlay(elm, params) {\r\n        var overlayDiv = createElement(\"div\", params);\r\n        styler.css(overlayDiv, {\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            zIndex: 0x7FFFFFFF,\r\n            opacity: 0.7\r\n        });\r\n        elm.appendChild(overlayDiv);\r\n        return overlayDiv;\r\n\r\n    }\r\n\r\n    /*   \r\n     * Remove the set of matched elements from the DOM.\r\n     * @param {Node} node\r\n     */\r\n    function remove(node) {\r\n        if (node && node.parentNode) {\r\n            try {\r\n                node.parentNode.removeChild(node);\r\n            } catch (e) {\r\n                console.warn(\"The node is already removed\", e);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function removeChild(node,children) {\r\n        if (!langx.isArrayLike(children)) {\r\n            children = [children];\r\n        }\r\n        for (var i=0;i<children.length;i++) {\r\n            node.removeChild(children[i]);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function scrollParent( elm, includeHidden ) {\r\n        var position = styler.css(elm,\"position\" ),\r\n            excludeStaticParent = position === \"absolute\",\r\n            overflowRegex = includeHidden ? /(auto|scroll|hidden)/ : /(auto|scroll)/,\r\n            scrollParent = this.parents().filter( function() {\r\n                var parent = $( this );\r\n                if ( excludeStaticParent && parent.css( \"position\" ) === \"static\" ) {\r\n                    return false;\r\n                }\r\n                return overflowRegex.test( parent.css( \"overflow\" ) + parent.css( \"overflow-y\" ) +\r\n                    parent.css( \"overflow-x\" ) );\r\n            } ).eq( 0 );\r\n\r\n        return position === \"fixed\" || !scrollParent.length ?\r\n            $( this[ 0 ].ownerDocument || document ) :\r\n            scrollParent;\r\n    };\r\n\r\n        /*   \r\n     * Replace an old node with the specified node.\r\n     * @param {Node} node\r\n     * @param {Node} oldNode\r\n     */\r\n    function replace(node, oldNode) {\r\n        oldNode.parentNode.replaceChild(node, oldNode);\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Replace an old node with the specified node.\r\n     * @param {HTMLElement} elm\r\n     * @param {Node} params\r\n     */\r\n    function throb(elm, params) {\r\n        params = params || {};\r\n        var self = this,\r\n            text = params.text,\r\n            style = params.style,\r\n            time = params.time,\r\n            callback = params.callback,\r\n            timer,\r\n            throbber = this.createElement(\"div\", {\r\n                className: params.className || \"throbber\",\r\n                style: style\r\n            }),\r\n            _overlay = overlay(throbber, {\r\n                className: 'overlay fade'\r\n            }),\r\n            throb = this.createElement(\"div\", {\r\n                className: \"throb\"\r\n            }),\r\n            textNode = this.createTextNode(text || \"\"),\r\n            remove = function() {\r\n                if (timer) {\r\n                    clearTimeout(timer);\r\n                    timer = null;\r\n                }\r\n                if (throbber) {\r\n                    self.remove(throbber);\r\n                    throbber = null;\r\n                }\r\n            },\r\n            update = function(params) {\r\n                if (params && params.text && throbber) {\r\n                    textNode.nodeValue = params.text;\r\n                }\r\n            };\r\n        throb.appendChild(textNode);\r\n        throbber.appendChild(throb);\r\n        elm.appendChild(throbber);\r\n        var end = function() {\r\n            remove();\r\n            if (callback) callback();\r\n        };\r\n        if (time) {\r\n            timer = setTimeout(end, time);\r\n        }\r\n\r\n        return {\r\n            remove: remove,\r\n            update: update\r\n        };\r\n    }\r\n\r\n\r\n    /*   \r\n     * traverse the specified node and its descendants, perform the callback function on each\r\n     * @param {Node} node\r\n     * @param {Function} fn\r\n     */\r\n    function traverse(node, fn) {\r\n        fn(node)\r\n        for (var i = 0, len = node.childNodes.length; i < len; i++) {\r\n            traverse(node.childNodes[i], fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} node\r\n     */\r\n    function reverse(node) {\r\n        var firstChild = node.firstChild;\r\n        for (var i = node.children.length - 1; i > 0; i--) {\r\n            if (i > 0) {\r\n                var child = node.children[i];\r\n                node.insertBefore(child, firstChild);\r\n            }\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Wrap an HTML structure around each element in the set of matched elements.\r\n     * @param {Node} node\r\n     * @param {Node} wrapperNode\r\n     */\r\n    function wrapper(node, wrapperNode) {\r\n        if (langx.isString(wrapperNode)) {\r\n            wrapperNode = this.createFragment(wrapperNode).firstChild;\r\n        }\r\n        node.parentNode.insertBefore(wrapperNode, node);\r\n        wrapperNode.appendChild(node);\r\n    }\r\n\r\n    /*   \r\n     * Wrap an HTML structure around the content of each element in the set of matched\r\n     * @param {Node} node\r\n     * @param {Node} wrapperNode\r\n     */\r\n    function wrapperInner(node, wrapperNode) {\r\n        var childNodes = slice.call(node.childNodes);\r\n        node.appendChild(wrapperNode);\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            wrapperNode.appendChild(childNodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Remove the parents of the set of matched elements from the DOM, leaving the matched\r\n     * @param {Node} node\r\n     */\r\n    function unwrap(node) {\r\n        var child, parent = node.parentNode;\r\n        if (parent) {\r\n            if (this.isDoc(parent.parentNode)) return;\r\n            parent.parentNode.insertBefore(node, parent);\r\n        }\r\n    }\r\n\r\n    function noder() {\r\n        return noder;\r\n    }\r\n\r\n    langx.mixin(noder, {\r\n        body: function() {\r\n            return document.body;\r\n        },\r\n\r\n        clone: clone,\r\n        contents: contents,\r\n\r\n        createElement: createElement,\r\n\r\n        createFragment: createFragment,\r\n\r\n        contains: contains,\r\n\r\n        createTextNode: createTextNode,\r\n\r\n        doc: doc,\r\n\r\n        empty: empty,\r\n\r\n        fullScreen: fullScreen,\r\n\r\n        focusable: focusable,\r\n\r\n        html: html,\r\n\r\n        isChildOf: isChildOf,\r\n\r\n        isDoc: isDoc,\r\n\r\n        isWindow: langx.isWindow,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        ownerDoc: ownerDoc,\r\n\r\n        ownerWindow: ownerWindow,\r\n\r\n        after: after,\r\n\r\n        before: before,\r\n\r\n        prepend: prepend,\r\n\r\n        append: append,\r\n\r\n        remove: remove,\r\n\r\n        removeChild : removeChild,\r\n\r\n        replace: replace,\r\n\r\n        throb: throb,\r\n\r\n        traverse: traverse,\r\n\r\n        reverse: reverse,\r\n\r\n        wrapper: wrapper,\r\n\r\n        wrapperInner: wrapperInner,\r\n\r\n        unwrap: unwrap\r\n    });\r\n\r\n    return skylark.noder = noder;\r\n});\ndefine('skylark-utils-dom/css',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\"\r\n], function(skylark, langx, noder) {\r\n    \"use strict\";\r\n\r\n    var head = document.getElementsByTagName(\"head\")[0],\r\n        count = 0,\r\n        sheetsByUrl = {},\r\n        sheetsById = {},\r\n        defaultSheetId = _createStyleSheet(),\r\n        defaultSheet = sheetsById[defaultSheetId],\r\n        rulesPropName = (\"cssRules\" in defaultSheet) ? \"cssRules\" : \"rules\",\r\n        insertRuleFunc,\r\n        deleteRuleFunc = defaultSheet.deleteRule || defaultSheet.removeRule;\r\n\r\n    if (defaultSheet.insertRule) {\r\n        var _insertRule = defaultSheet.insertRule;\r\n        insertRuleFunc = function(selector, css, index) {\r\n            _insertRule.call(this, selector + \"{\" + css + \"}\", index);\r\n        };\r\n    } else {\r\n        insertRuleFunc = defaultSheet.addRule;\r\n    }\r\n\r\n    function normalizeSelector(selectorText) {\r\n        var selector = [],\r\n            last, len;\r\n        last = defaultSheet[rulesPropName].length;\r\n        insertRuleFunc.call(defaultSheet, selectorText, ';');\r\n        len = defaultSheet[rulesPropName].length;\r\n        for (var i = len - 1; i >= last; i--) {\r\n            selector.push(_sheet[_rules][i].selectorText);\r\n            deleteRuleFunc.call(defaultSheet, i);\r\n        }\r\n        return selector.reverse().join(', ');\r\n    }\r\n\r\n    /*\r\n     * create a stylesheet element.\r\n     * @param {Boolean} external\r\n     * @param {Object} options\r\n     * @param {String} [options.media = null]\r\n     */\r\n    function _createStyleSheet(external,options ) {\r\n        var node,\r\n            props = {\r\n                type : \"text/css\"\r\n            },\r\n            id = (count++);\r\n\r\n        options = options || {};\r\n        if (options.media) {\r\n            props.media = options.media;\r\n        }\r\n\r\n        if (external) {\r\n            node = noder.create(\"link\",langx.mixin(props,{\r\n                rel  : \"stylesheet\",\r\n                async : false\r\n            }));\r\n        } else {\r\n            node = noder.createElement(\"style\",props);\r\n        }\r\n\r\n        noder.append(head,node);\r\n        sheetsById[id] = {\r\n            id : id,\r\n            node :node\r\n        };\r\n\r\n        return id;\r\n    }\r\n\r\n    function createStyleSheet(css,options) {\r\n        if (!options) {\r\n            options = {};\r\n        }\r\n        var sheetId = _createStyleSheet(false,options);\r\n        if (css) {\r\n            addSheetRules(sheetId,css);\r\n        }\r\n\r\n        return sheetId;\r\n    }\r\n\r\n    function loadStyleSheet(url, options) {\r\n        var sheet = sheetsByUrl[url];\r\n        if (!sheet) {\r\n            var sheetId = _createStyleSheet(true,options);\r\n\r\n            sheet = sheetsByUrl[url] = sheetsById[sheetId];\r\n            langx.mixin(sheet,{\r\n                state: 0, //0:unload,1:loaded,-1:loaderror\r\n                url : url,\r\n                deferred : new langx.Deferred()\r\n            });\r\n\r\n            var node = sheet.node;\r\n\r\n            startTime = new Date().getTime();\r\n\r\n            node.onload = function() {\r\n                sheet.state = 1;\r\n                sheet.deferred.resolve(sheet.id);\r\n            },\r\n            node.onerror = function(e) {\r\n                sheet.state = -1;\r\n                sheet.deferred.reject(e);\r\n            };\r\n\r\n            node.href = sheet.url;\r\n        }\r\n        return sheet.deferred.promise;\r\n    }\r\n\r\n    function deleteSheetRule(sheetId, rule) {\r\n        var sheet = sheetsById[sheetId];\r\n        if (langx.isNumber(rule)) {\r\n            deleteRuleFunc.call(sheet, rule);\r\n        } else {\r\n            langx.each(sheet[rulesPropName], function(i, _rule) {\r\n                if (rule === _rule) {\r\n                    deleteRuleFunc.call(sheet, i);\r\n                    return false;\r\n                }\r\n            });\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function deleteRule(rule) {\r\n        deleteSheetRule(defaultSheetId, rule);\r\n        return this;\r\n    }\r\n\r\n    function removeStyleSheet(sheetId) {\r\n        if (sheetId === defaultSheetId) {\r\n            throw new Error(\"The default stylesheet can not be deleted\");\r\n        }\r\n        var sheet = sheetsById[sheetId];\r\n        delete sheetsById[sheetId];\r\n\r\n        noder.remove(sheet.node);\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * insert a rule to the default stylesheet.\r\n     * @param {String} selector\r\n     * @param {String} css\r\n     * @param {Number} index \r\n     */\r\n    function insertRule(selector, css, index) {\r\n        return this.insertSheetRule(defaultSheetId, selector, css, index);\r\n    }\r\n\r\n    /*\r\n     * Add rules to the default stylesheet.\r\n     * @param {Object} rules\r\n     */\r\n    function addRules(rules) {\r\n        return this.addRules(defaultSheetId,rules);\r\n    }\r\n\r\n    /*\r\n     * insert a rule to the stylesheet specified by sheetId.\r\n     * @param {Number} sheetId  \r\n     * @param {String} selector\r\n     * @param {String} css\r\n     * @param {Number} index \r\n     */\r\n    function insertSheetRule(sheetId, selector, css, index) {\r\n        if (!selector || !css) {\r\n            return -1;\r\n        }\r\n\r\n        var sheet = sheetsById[sheetId];\r\n        index = index || sheet[rulesPropName].length;\r\n\r\n        return insertRuleFunc.call(sheet, selector, css, index);\r\n    }\r\n\r\n    /*\r\n     * Add  rules to stylesheet.\r\n     * @param {Number} sheetId  \r\n     * @param {Object|String} rules\r\n     * @return this\r\n     * @example insertSheetRules(sheetId,{\r\n     * \r\n     * });\r\n     */\r\n    function addSheetRules(sheetId,rules) {\r\n        var sheet = sheetsById[sheetId],\r\n            css;\r\n        if (langx.isString(rules)) {\r\n            css = rules;\r\n        } else {\r\n            css = toString(rules);\r\n        }\r\n\r\n        noder.append(sheet.node,noder.createTextNode(css));\r\n        \r\n        return this;\r\n    }\r\n\r\n    function isAtRule(str) {\r\n        return str.startsWith(\"@\");\r\n    }\r\n\r\n    function toString(json){\r\n        var adjust = function(parentName,name,depth) {\r\n            if (parentName) {\r\n                if (isAtRule(parentName)) {\r\n                    depth += 1;\r\n                } else {\r\n                    name =  parentName + \" \" + name;\r\n                }                \r\n            }\r\n            return {\r\n                name : name,\r\n                depth : depth\r\n            }\r\n        };\r\n\r\n        var strNode = function (name, values, depth) {\r\n            var str = \"\",\r\n                atFlg = isAtRule(name);\r\n\r\n\r\n            if (isAtRule(name)) {\r\n                // at rule\r\n                if (langx.isString(values)) {\r\n                    // an at rule without block\r\n                    // ex: (1) @charset 'utf8';\r\n                    str = css.SPACE.repeat(depth) + name.trim() + \" \\\"\" + values.trim() + \" \\\";\\n\";\r\n                } else {\r\n                    // an at rule with block, ex :\r\n                    //  @media 'screen' {\r\n                    //  }\r\n                    str += css.SPACE.repeat(depth) + name.trim() + \" {\\n\";\r\n                    str += strNode(\"\",values,depth+1);\r\n                    str += css.SPACE.repeat(depth) + \" }\\n\";\r\n                }\r\n            } else {\r\n                // a selector or a property\r\n                if (langx.isString(values)) {\r\n                    // a css property \r\n                    // ex : (1) font-color : red;\r\n                    str = css.SPACE.repeat(depth) + name.trim() ;\r\n                    if (atFlg) {\r\n                        str = str +  \" \\\"\" + values.trim() + \" \\\";\\n\";\r\n                    } else {\r\n                        str = str + ': ' + values.trim() + \";\\n\";\r\n                    }\r\n\r\n                } else {\r\n                    // a selector rule \r\n                    // ex : (1) .class1 : {\r\n                    //            font-color : red;\r\n                    //          }\r\n                    if (langx.isArray(values)) {\r\n                        // array for ordering\r\n                        for (var n =0; n<values.length; n ++) {\r\n                           str +=  strNode(name,values[n],depth);\r\n                        }\r\n                    } else {\r\n                        // plain object\r\n\r\n                        if (name) {\r\n                            str += css.SPACE.repeat(depth) + name.trim() + \" {\\n\";\r\n\r\n                            for (var n in values) {\r\n                                var value =values[n];\r\n                                if (langx.isString(value)) {\r\n                                    // css property\r\n                                    str += strNode(n,value,depth+1)\r\n                                }\r\n                            }\r\n\r\n                            str += css.SPACE.repeat(depth) + \"}\\n\";\r\n                        }\r\n\r\n                        for (var n in values) {\r\n                            var value =values[n];\r\n                            if (!langx.isString(value)) {\r\n                                var adjusted = adjust(name,n,depth);\r\n                                str +=  strNode(adjusted.name,value,adjusted.depth);\r\n                            } \r\n                        }\r\n\r\n                    }\r\n                }\r\n            }   \r\n\r\n            return str;\r\n        };\r\n\r\n\r\n        return strNode(\"\",json,0);\r\n    }\r\n \r\n\r\n    function css() {\r\n        return css;\r\n    }\r\n\r\n    langx.mixin(css, {\r\n        SPACE : \"\\t\",\r\n\r\n        addRules : addRules,\r\n\r\n        addSheetRules : addSheetRules,\r\n\r\n        createStyleSheet: createStyleSheet,\r\n\r\n        deleteSheetRule : deleteSheetRule,\r\n\r\n        deleteRule : deleteRule,\r\n\r\n        insertRule : insertRule,\r\n\r\n        insertSheetRule : insertSheetRule,\r\n\r\n        removeStyleSheet : removeStyleSheet,\r\n\r\n        toString : toString\r\n    });\r\n\r\n    return skylark.css = css;\r\n});\r\n\ndefine('skylark-utils-dom/finder',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./noder\"\r\n], function(skylark, langx, browser, noder, velm) {\r\n    var local = {},\r\n        filter = Array.prototype.filter,\r\n        slice = Array.prototype.slice,\r\n        nativeMatchesSelector = browser.matchesSelector;\r\n\r\n    /*\r\n    ---\r\n    name: Slick.Parser\r\n    description: Standalone CSS3 Selector parser\r\n    provides: Slick.Parser\r\n    ...\r\n    */\r\n    ;\r\n    (function() {\r\n\r\n        var parsed,\r\n            separatorIndex,\r\n            combinatorIndex,\r\n            reversed,\r\n            cache = {},\r\n            reverseCache = {},\r\n            reUnescape = /\\\\/g;\r\n\r\n        var parse = function(expression, isReversed) {\r\n            if (expression == null) return null;\r\n            if (expression.Slick === true) return expression;\r\n            expression = ('' + expression).replace(/^\\s+|\\s+$/g, '');\r\n            reversed = !!isReversed;\r\n            var currentCache = (reversed) ? reverseCache : cache;\r\n            if (currentCache[expression]) return currentCache[expression];\r\n            parsed = {\r\n                Slick: true,\r\n                expressions: [],\r\n                raw: expression,\r\n                reverse: function() {\r\n                    return parse(this.raw, true);\r\n                }\r\n            };\r\n            separatorIndex = -1;\r\n            while (expression != (expression = expression.replace(regexp, parser)));\r\n            parsed.length = parsed.expressions.length;\r\n            return currentCache[parsed.raw] = (reversed) ? reverse(parsed) : parsed;\r\n        };\r\n\r\n        var reverseCombinator = function(combinator) {\r\n            if (combinator === '!') return ' ';\r\n            else if (combinator === ' ') return '!';\r\n            else if ((/^!/).test(combinator)) return combinator.replace(/^!/, '');\r\n            else return '!' + combinator;\r\n        };\r\n\r\n        var reverse = function(expression) {\r\n            var expressions = expression.expressions;\r\n            for (var i = 0; i < expressions.length; i++) {\r\n                var exp = expressions[i];\r\n                var last = {\r\n                    parts: [],\r\n                    tag: '*',\r\n                    combinator: reverseCombinator(exp[0].combinator)\r\n                };\r\n\r\n                for (var j = 0; j < exp.length; j++) {\r\n                    var cexp = exp[j];\r\n                    if (!cexp.reverseCombinator) cexp.reverseCombinator = ' ';\r\n                    cexp.combinator = cexp.reverseCombinator;\r\n                    delete cexp.reverseCombinator;\r\n                }\r\n\r\n                exp.reverse().push(last);\r\n            }\r\n            return expression;\r\n        };\r\n\r\n        var escapeRegExp = (function() {\r\n            // Credit: XRegExp 0.6.1 (c) 2007-2008 Steven Levithan <http://stevenlevithan.com/regex/xregexp/> MIT License\r\n            var from = /(?=[\\-\\[\\]{}()*+?.\\\\\\^$|,#\\s])/g,\r\n                to = '\\\\';\r\n            return function(string) {\r\n                return string.replace(from, to)\r\n            }\r\n        }())\r\n\r\n        var regexp = new RegExp(\r\n            \"^(?:\\\\s*(,)\\\\s*|\\\\s*(<combinator>+)\\\\s*|(\\\\s+)|(<unicode>+|\\\\*)|\\\\#(<unicode>+)|\\\\.(<unicode>+)|\\\\[\\\\s*(<unicode1>+)(?:\\\\s*([*^$!~|]?=)(?:\\\\s*(?:([\\\"']?)(.*?)\\\\9)))?\\\\s*\\\\](?!\\\\])|(:+)(<unicode>+)(?:\\\\((?:(?:([\\\"'])([^\\\\13]*)\\\\13)|((?:\\\\([^)]+\\\\)|[^()]*)+))\\\\))?)\"\r\n            .replace(/<combinator>/, '[' + escapeRegExp(\">+~`!@$%^&={}\\\\;</\") + ']')\r\n            .replace(/<unicode>/g, '(?:[\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n            .replace(/<unicode1>/g, '(?:[:\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n        );\r\n\r\n        function parser(\r\n            rawMatch,\r\n\r\n            separator,\r\n            combinator,\r\n            combinatorChildren,\r\n\r\n            tagName,\r\n            id,\r\n            className,\r\n\r\n            attributeKey,\r\n            attributeOperator,\r\n            attributeQuote,\r\n            attributeValue,\r\n\r\n            pseudoMarker,\r\n            pseudoClass,\r\n            pseudoQuote,\r\n            pseudoClassQuotedValue,\r\n            pseudoClassValue\r\n        ) {\r\n            if (separator || separatorIndex === -1) {\r\n                parsed.expressions[++separatorIndex] = [];\r\n                combinatorIndex = -1;\r\n                if (separator) return '';\r\n            }\r\n\r\n            if (combinator || combinatorChildren || combinatorIndex === -1) {\r\n                combinator = combinator || ' ';\r\n                var currentSeparator = parsed.expressions[separatorIndex];\r\n                if (reversed && currentSeparator[combinatorIndex])\r\n                    currentSeparator[combinatorIndex].reverseCombinator = reverseCombinator(combinator);\r\n                currentSeparator[++combinatorIndex] = {\r\n                    combinator: combinator,\r\n                    tag: '*'\r\n                };\r\n            }\r\n\r\n            var currentParsed = parsed.expressions[separatorIndex][combinatorIndex];\r\n\r\n            if (tagName) {\r\n                currentParsed.tag = tagName.replace(reUnescape, '');\r\n\r\n            } else if (id) {\r\n                currentParsed.id = id.replace(reUnescape, '');\r\n\r\n            } else if (className) {\r\n                className = className.replace(reUnescape, '');\r\n\r\n                if (!currentParsed.classList) currentParsed.classList = [];\r\n                if (!currentParsed.classes) currentParsed.classes = [];\r\n                currentParsed.classList.push(className);\r\n                currentParsed.classes.push({\r\n                    value: className,\r\n                    regexp: new RegExp('(^|\\\\s)' + escapeRegExp(className) + '(\\\\s|$)')\r\n                });\r\n\r\n            } else if (pseudoClass) {\r\n                pseudoClassValue = pseudoClassValue || pseudoClassQuotedValue;\r\n                pseudoClassValue = pseudoClassValue ? pseudoClassValue.replace(reUnescape, '') : null;\r\n\r\n                if (!currentParsed.pseudos) currentParsed.pseudos = [];\r\n                currentParsed.pseudos.push({\r\n                    key: pseudoClass.replace(reUnescape, ''),\r\n                    value: pseudoClassValue,\r\n                    type: pseudoMarker.length == 1 ? 'class' : 'element'\r\n                });\r\n\r\n            } else if (attributeKey) {\r\n                attributeKey = attributeKey.replace(reUnescape, '');\r\n                attributeValue = (attributeValue || '').replace(reUnescape, '');\r\n\r\n                var test, regexp;\r\n\r\n                switch (attributeOperator) {\r\n                    case '^=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue));\r\n                        break;\r\n                    case '$=':\r\n                        regexp = new RegExp(escapeRegExp(attributeValue) + '$');\r\n                        break;\r\n                    case '~=':\r\n                        regexp = new RegExp('(^|\\\\s)' + escapeRegExp(attributeValue) + '(\\\\s|$)');\r\n                        break;\r\n                    case '|=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue) + '(-|$)');\r\n                        break;\r\n                    case '=':\r\n                        test = function(value) {\r\n                            return attributeValue == value;\r\n                        };\r\n                        break;\r\n                    case '*=':\r\n                        test = function(value) {\r\n                            return value && value.indexOf(attributeValue) > -1;\r\n                        };\r\n                        break;\r\n                    case '!=':\r\n                        test = function(value) {\r\n                            return attributeValue != value;\r\n                        };\r\n                        break;\r\n                    default:\r\n                        test = function(value) {\r\n                            return !!value;\r\n                        };\r\n                }\r\n\r\n                if (attributeValue == '' && (/^[*$^]=$/).test(attributeOperator)) test = function() {\r\n                    return false;\r\n                };\r\n\r\n                if (!test) test = function(value) {\r\n                    return value && regexp.test(value);\r\n                };\r\n\r\n                if (!currentParsed.attributes) currentParsed.attributes = [];\r\n                currentParsed.attributes.push({\r\n                    key: attributeKey,\r\n                    operator: attributeOperator,\r\n                    value: attributeValue,\r\n                    test: test\r\n                });\r\n\r\n            }\r\n\r\n            return '';\r\n        };\r\n\r\n        // Slick NS\r\n\r\n        var Slick = (this.Slick || {});\r\n\r\n        Slick.parse = function(expression) {\r\n            return parse(expression);\r\n        };\r\n\r\n        Slick.escapeRegExp = escapeRegExp;\r\n\r\n        if (!this.Slick) this.Slick = Slick;\r\n\r\n    }).apply(local);\r\n\r\n\r\n    var simpleClassSelectorRE = /^\\.([\\w-]*)$/,\r\n        simpleIdSelectorRE = /^#([\\w-]*)$/,\r\n        rinputs = /^(?:input|select|textarea|button)$/i,\r\n        rheader = /^h\\d$/i,\r\n        slice = Array.prototype.slice;\r\n\r\n\r\n    local.parseSelector = local.Slick.parse;\r\n\r\n\r\n    var pseudos = local.pseudos = {\r\n        // custom pseudos\r\n        \"button\": function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === \"button\" || name === \"button\";\r\n        },\r\n\r\n        'checked': function(elm) {\r\n            return !!elm.checked;\r\n        },\r\n\r\n        'contains': function(elm, idx, nodes, text) {\r\n            if ($(this).text().indexOf(text) > -1) return this\r\n        },\r\n\r\n        'disabled': function(elm) {\r\n            return !!elm.disabled;\r\n        },\r\n\r\n        'enabled': function(elm) {\r\n            return !elm.disabled;\r\n        },\r\n\r\n        'eq': function(elm, idx, nodes, value) {\r\n            return (idx == value);\r\n        },\r\n\r\n        'even': function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 0;\r\n        },\r\n\r\n        'focus': function(elm) {\r\n            return document.activeElement === elm && (elm.href || elm.type || elm.tabindex);\r\n        },\r\n\r\n        'focusable': function( elm ) {\r\n            return noder.focusable(elm, elm.tabindex != null );\r\n        },\r\n\r\n        'first': function(elm, idx) {\r\n            return (idx === 0);\r\n        },\r\n\r\n        'gt': function(elm, idx, nodes, value) {\r\n            return (idx > value);\r\n        },\r\n\r\n        'has': function(elm, idx, nodes, sel) {\r\n            return find(elm, sel);\r\n        },\r\n\r\n        // Element/input types\r\n        \"header\": function(elem) {\r\n            return rheader.test(elem.nodeName);\r\n        },\r\n\r\n        'hidden': function(elm) {\r\n            return !local.pseudos[\"visible\"](elm);\r\n        },\r\n\r\n        \"input\": function(elem) {\r\n            return rinputs.test(elem.nodeName);\r\n        },\r\n\r\n        'last': function(elm, idx, nodes) {\r\n            return (idx === nodes.length - 1);\r\n        },\r\n\r\n        'lt': function(elm, idx, nodes, value) {\r\n            return (idx < value);\r\n        },\r\n\r\n        'not': function(elm, idx, nodes, sel) {\r\n            return !matches(elm, sel);\r\n        },\r\n\r\n        'odd': function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 1;\r\n        },\r\n\r\n        /*   \r\n         * Get the parent of each element in the current set of matched elements.\r\n         * @param {Object} elm\r\n         */\r\n        'parent': function(elm) {\r\n            return !!elm.parentNode;\r\n        },\r\n\r\n        'selected': function(elm) {\r\n            return !!elm.selected;\r\n        },\r\n\r\n        'tabbable': function(elm) {\r\n            var tabIndex = elm.tabindex,\r\n                hasTabindex = tabIndex != null;\r\n            return ( !hasTabindex || tabIndex >= 0 ) && noder.focusable( element, hasTabindex );\r\n        },\r\n\r\n        'text': function(elm) {\r\n            return elm.type === \"text\";\r\n        },\r\n\r\n        'visible': function(elm) {\r\n            return elm.offsetWidth && elm.offsetWidth\r\n        }\r\n    };\r\n\r\n    [\"first\", \"eq\", \"last\"].forEach(function(item) {\r\n        pseudos[item].isArrayFilter = true;\r\n    });\r\n\r\n\r\n\r\n    pseudos[\"nth\"] = pseudos[\"eq\"];\r\n\r\n    function createInputPseudo(type) {\r\n        return function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === type;\r\n        };\r\n    }\r\n\r\n    function createButtonPseudo(type) {\r\n        return function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return (name === \"input\" || name === \"button\") && elem.type === type;\r\n        };\r\n    }\r\n\r\n    // Add button/input type pseudos\r\n    for (i in {\r\n        radio: true,\r\n        checkbox: true,\r\n        file: true,\r\n        password: true,\r\n        image: true\r\n    }) {\r\n        pseudos[i] = createInputPseudo(i);\r\n    }\r\n    for (i in {\r\n        submit: true,\r\n        reset: true\r\n    }) {\r\n        pseudos[i] = createButtonPseudo(i);\r\n    }\r\n\r\n\r\n    local.divide = function(cond) {\r\n        var nativeSelector = \"\",\r\n            customPseudos = [],\r\n            tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos;\r\n\r\n\r\n        if (id = cond.id) {\r\n            nativeSelector += (\"#\" + id);\r\n        }\r\n        if (classes = cond.classes) {\r\n            for (var i = classes.length; i--;) {\r\n                nativeSelector += (\".\" + classes[i].value);\r\n            }\r\n        }\r\n        if (attributes = cond.attributes) {\r\n            for (var i = 0; i < attributes.length; i++) {\r\n                if (attributes[i].operator) {\r\n                    nativeSelector += (\"[\" + attributes[i].key + attributes[i].operator + JSON.stringify(attributes[i].value) + \"]\");\r\n                } else {\r\n                    nativeSelector += (\"[\" + attributes[i].key + \"]\");\r\n                }\r\n            }\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (this.pseudos[part.key]) {\r\n                    customPseudos.push(part);\r\n                } else {\r\n                    if (part.value !== undefined) {\r\n                        nativeSelector += (\":\" + part.key + \"(\" + JSON.stringify(part))\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (tag = cond.tag) {\r\n            if (tag !== \"*\") {\r\n                nativeSelector = tag.toUpperCase() + nativeSelector;\r\n            }\r\n        }\r\n\r\n        if (!nativeSelector) {\r\n            nativeSelector = \"*\";\r\n        }\r\n\r\n        return {\r\n            nativeSelector: nativeSelector,\r\n            customPseudos: customPseudos\r\n        }\r\n\r\n    };\r\n\r\n    local.check = function(node, cond, idx, nodes, arrayFilte) {\r\n        var tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos,\r\n\r\n            i, part, cls, pseudo;\r\n\r\n        if (!arrayFilte) {\r\n            if (tag = cond.tag) {\r\n                var nodeName = node.nodeName.toUpperCase();\r\n                if (tag == '*') {\r\n                    if (nodeName < '@') return false; // Fix for comment nodes and closed nodes\r\n                } else {\r\n                    if (nodeName != (tag || \"\").toUpperCase()) return false;\r\n                }\r\n            }\r\n\r\n            if (id = cond.id) {\r\n                if (node.getAttribute('id') != id) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n\r\n            if (classes = cond.classes) {\r\n                for (i = classes.length; i--;) {\r\n                    cls = node.getAttribute('class');\r\n                    if (!(cls && classes[i].regexp.test(cls))) return false;\r\n                }\r\n            }\r\n\r\n            if (attributes = cond.attributes) {\r\n                for (i = attributes.length; i--;) {\r\n                    part = attributes[i];\r\n                    if (part.operator ? !part.test(node.getAttribute(part.key)) : !node.hasAttribute(part.key)) return false;\r\n                }\r\n            }\r\n\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (pseudo = this.pseudos[part.key]) {\r\n                    if ((arrayFilte && pseudo.isArrayFilter) || (!arrayFilte && !pseudo.isArrayFilter)) {\r\n                        if (!pseudo(node, idx, nodes, part.value)) {\r\n                            return false;\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (!arrayFilte && !nativeMatchesSelector.call(node, part.key)) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    local.match = function(node, selector) {\r\n\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            parsed = selector;\r\n        }\r\n\r\n        if (!parsed) {\r\n            return true;\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            simpleExpCounter = 0,\r\n            i,\r\n            currentExpression;\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n                if (this.check(node, exp)) {\r\n                    return true;\r\n                }\r\n                simpleExpCounter++;\r\n            }\r\n        }\r\n\r\n        if (simpleExpCounter == parsed.length) {\r\n            return false;\r\n        }\r\n\r\n        var nodes = this.query(document, parsed),\r\n            item;\r\n        for (i = 0; item = nodes[i++];) {\r\n            if (item === node) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n\r\n    local.filterSingle = function(nodes, exp) {\r\n        var matchs = filter.call(nodes, function(node, idx) {\r\n            return local.check(node, exp, idx, nodes, false);\r\n        });\r\n\r\n        matchs = filter.call(matchs, function(node, idx) {\r\n            return local.check(node, exp, idx, matchs, true);\r\n        });\r\n        return matchs;\r\n    };\r\n\r\n    local.filter = function(nodes, selector) {\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            return local.filterSingle(nodes, selector);\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            i,\r\n            currentExpression,\r\n            ret = [];\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n\r\n                var matchs = local.filterSingle(nodes, exp);\r\n\r\n                ret = langx.uniq(ret.concat(matchs));\r\n            } else {\r\n                throw new Error(\"not supported selector:\" + selector);\r\n            }\r\n        }\r\n\r\n        return ret;\r\n\r\n    };\r\n\r\n    local.combine = function(elm, bit) {\r\n        var op = bit.combinator,\r\n            cond = bit,\r\n            node1,\r\n            nodes = [];\r\n\r\n        switch (op) {\r\n            case '>': // direct children\r\n                nodes = children(elm, cond);\r\n                break;\r\n            case '+': // next sibling\r\n                node1 = nextSibling(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '^': // first child\r\n                node1 = firstChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '~': // next siblings\r\n                nodes = nextSiblings(elm, cond);\r\n                break;\r\n            case '++': // next sibling and previous sibling\r\n                var prev = previousSibling(elm, cond, true),\r\n                    next = nextSibling(elm, cond, true);\r\n                if (prev) {\r\n                    nodes.push(prev);\r\n                }\r\n                if (next) {\r\n                    nodes.push(next);\r\n                }\r\n                break;\r\n            case '~~': // next siblings and previous siblings\r\n                nodes = siblings(elm, cond);\r\n                break;\r\n            case '!': // all parent nodes up to document\r\n                nodes = ancestors(elm, cond);\r\n                break;\r\n            case '!>': // direct parent (one level)\r\n                node1 = parent(elm, cond);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!+': // previous sibling\r\n                nodes = previousSibling(elm, cond, true);\r\n                break;\r\n            case '!^': // last child\r\n                node1 = lastChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!~': // previous siblings\r\n                nodes = previousSiblings(elm, cond);\r\n                break;\r\n            default:\r\n                var divided = this.divide(bit);\r\n                nodes = slice.call(elm.querySelectorAll(divided.nativeSelector));\r\n                if (divided.customPseudos) {\r\n                    for (var i = divided.customPseudos.length - 1; i >= 0; i--) {\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes, false)\r\n                        });\r\n\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes, true)\r\n                        });\r\n                    }\r\n                }\r\n                break;\r\n\r\n        }\r\n        return nodes;\r\n    }\r\n\r\n    local.query = function(node, selector, single) {\r\n\r\n\r\n        var parsed = this.Slick.parse(selector);\r\n\r\n        var\r\n            founds = [],\r\n            currentExpression, currentBit,\r\n            expressions = parsed.expressions;\r\n\r\n        for (var i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            var currentItems = [node],\r\n                found;\r\n            for (var j = 0;\r\n                (currentBit = currentExpression[j]); j++) {\r\n                found = langx.map(currentItems, function(item, i) {\r\n                    return local.combine(item, currentBit)\r\n                });\r\n                if (found) {\r\n                    currentItems = found;\r\n                }\r\n            }\r\n            if (found) {\r\n                founds = founds.concat(found);\r\n            }\r\n        }\r\n\r\n        return founds;\r\n    }\r\n\r\n    /*\r\n     * Get the nearest ancestor of the specified element,optional matched by a selector.\r\n     * @param {HTMLElement} node\r\n     * @param {String Optional } selector\r\n     * @param {Object} root\r\n     */\r\n    function ancestor(node, selector, root) {\r\n        var rootIsSelector = root && langx.isString(root);\r\n        while (node = node.parentNode) {\r\n            if (matches(node, selector)) {\r\n                return node;\r\n            }\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node, root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the ancestors of the specitied element , optionally filtered by a selector.\r\n     * @param {HTMLElement} node\r\n     * @param {String Optional } selector\r\n     * @param {Object} root\r\n     */\r\n    function ancestors(node, selector, root) {\r\n        var ret = [],\r\n            rootIsSelector = root && langx.isString(root);\r\n        while ((node = node.parentNode) && (node.nodeType !== 9)) {\r\n            ret.push(node);\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node, root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (selector) {\r\n            ret = local.filter(ret, selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Returns a element by its ID.\r\n     * @param {string} id\r\n     */\r\n    function byId(id, doc) {\r\n        doc = doc || noder.doc();\r\n        return doc.getElementById(id);\r\n    }\r\n\r\n    /*\r\n     * Get the children of the specified element , optionally filtered by a selector.\r\n     * @param {string} node\r\n     * @param {String optionlly} selector\r\n     */\r\n    function children(node, selector) {\r\n        var childNodes = node.childNodes,\r\n            ret = [];\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            var node = childNodes[i];\r\n            if (node.nodeType == 1) {\r\n                ret.push(node);\r\n            }\r\n        }\r\n        if (selector) {\r\n            ret = local.filter(ret, selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function closest(node, selector) {\r\n        while (node && !(matches(node, selector))) {\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    /*\r\n     * Get the decendant of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function descendants(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return slice.call(elm.querySelectorAll(selector));\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        return local.query(elm, selector);\r\n    }\r\n\r\n    /*\r\n     * Get the nearest decendent of the specified element,optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function descendant(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return elm.querySelector(selector);\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        var nodes = local.query(elm, selector);\r\n        if (nodes.length > 0) {\r\n            return nodes[0];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the descendants of each element in the current set of matched elements, filtered by a selector, jQuery object, or element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function find(elm, selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        if (matches(elm, selector)) {\r\n            return elm;\r\n        } else {\r\n            return descendant(elm, selector);\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the findAll of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function findAll(elm, selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        return descendants(elm, selector);\r\n    }\r\n\r\n    /*\r\n     * Get the first child of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {String} first\r\n     */\r\n    function firstChild(elm, selector, first) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[0];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (first) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the last child of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {String } last\r\n     */\r\n    function lastChild(elm, selector, last) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[childNodes.length - 1];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (last) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Check the specified element against a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function matches(elm, selector) {\r\n        if (!selector || !elm || elm.nodeType !== 1) {\r\n            return false\r\n        }\r\n\r\n        if (langx.isString(selector)) {\r\n            try {\r\n                return nativeMatchesSelector.call(elm, selector.replace(/\\[([^=]+)=\\s*([^'\"\\]]+?)\\s*\\]/g, '[$1=\"$2\"]'));\r\n            } catch (matchError) {\r\n                //console.log(matchError);\r\n            }\r\n            return local.match(elm, selector);\r\n        } else if (langx.isArrayLike(selector)) {\r\n            return langx.inArray(elm, selector) > -1;\r\n        } else if (langx.isPlainObject(selector)) {\r\n            return local.check(elm, selector);\r\n        } else {\r\n            return elm === selector;\r\n        }\r\n\r\n    }\r\n\r\n    /*\r\n     * Get the nearest next sibing of the specitied element , optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {Boolean Optional} adjacent\r\n     */\r\n    function nextSibling(elm, selector, adjacent) {\r\n        var node = elm.nextSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the next siblings of the specified element , optional filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function nextSiblings(elm, selector) {\r\n        var node = elm.nextSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Get the parent element of the specified element. if a selector is provided, it retrieves the parent element only if it matches that selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function parent(elm, selector) {\r\n        var node = elm.parentNode;\r\n        if (node && (!selector || matches(node, selector))) {\r\n            return node;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get hte nearest previous sibling of the specified element ,optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {Boolean Optional } adjacent\r\n     */\r\n    function previousSibling(elm, selector, adjacent) {\r\n        var node = elm.previousSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get all preceding siblings of each element in the set of matched elements, optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function previousSiblings(elm, selector) {\r\n        var node = elm.previousSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Selects all sibling elements that follow after the “prev” element, have the same parent, and match the filtering “siblings” selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function siblings(elm, selector) {\r\n        var node = elm.parentNode.firstChild,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1 && node !== elm) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    var finder = function() {\r\n        return finder;\r\n    };\r\n\r\n    langx.mixin(finder, {\r\n\r\n        ancestor: ancestor,\r\n\r\n        ancestors: ancestors,\r\n\r\n        byId: byId,\r\n\r\n        children: children,\r\n\r\n        closest: closest,\r\n\r\n        descendant: descendant,\r\n\r\n        descendants: descendants,\r\n\r\n        find: find,\r\n\r\n        findAll: findAll,\r\n\r\n        firstChild: firstChild,\r\n\r\n        lastChild: lastChild,\r\n\r\n        matches: matches,\r\n\r\n        nextSibling: nextSibling,\r\n\r\n        nextSiblings: nextSiblings,\r\n\r\n        parent: parent,\r\n\r\n        previousSibling: previousSibling,\r\n\r\n        previousSiblings: previousSiblings,\r\n\r\n        pseudos: local.pseudos,\r\n\r\n        siblings: siblings\r\n    });\r\n\r\n    return skylark.finder = finder;\r\n});\ndefine('skylark-utils-dom/datax',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./finder\"\r\n], function(skylark, langx, finder) {\r\n    var map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        camelCase = langx.camelCase,\r\n        deserializeValue = langx.deserializeValue,\r\n\r\n        capitalRE = /([A-Z])/g,\r\n        propMap = {\r\n            'tabindex': 'tabIndex',\r\n            'readonly': 'readOnly',\r\n            'for': 'htmlFor',\r\n            'class': 'className',\r\n            'maxlength': 'maxLength',\r\n            'cellspacing': 'cellSpacing',\r\n            'cellpadding': 'cellPadding',\r\n            'rowspan': 'rowSpan',\r\n            'colspan': 'colSpan',\r\n            'usemap': 'useMap',\r\n            'frameborder': 'frameBorder',\r\n            'contenteditable': 'contentEditable'\r\n        };\r\n    /*\r\n     * Set property values\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n\r\n    function setAttribute(elm, name, value) {\r\n        if (value == null) {\r\n            elm.removeAttribute(name);\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n        }\r\n    }\r\n\r\n    function aria(elm, name, value) {\r\n        return this.attr(elm, \"aria-\" + name, value);\r\n    }\r\n\r\n    /*\r\n     * Set property values\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n\r\n    function attr(elm, name, value) {\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var attrName in name) {\r\n                    attr(elm, attrName, name[attrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                if (elm.hasAttribute && elm.hasAttribute(name)) {\r\n                    return elm.getAttribute(name);\r\n                }\r\n            }\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n            return this;\r\n        }\r\n    }\r\n\r\n\r\n    /*\r\n     *  Read all \"data-*\" attributes from a node\r\n     * @param {Object} elm  \r\n     */\r\n\r\n    function _attributeData(elm) {\r\n        var store = {}\r\n        langx.each(elm.attributes || [], function(i, attr) {\r\n            if (attr.name.indexOf('data-') == 0) {\r\n                store[camelCase(attr.name.replace('data-', ''))] = deserializeValue(attr.value);\r\n            }\r\n        })\r\n        return store;\r\n    }\r\n\r\n    function _store(elm, confirm) {\r\n        var store = elm[\"_$_store\"];\r\n        if (!store && confirm) {\r\n            store = elm[\"_$_store\"] = _attributeData(elm);\r\n        }\r\n        return store;\r\n    }\r\n\r\n    function _getData(elm, name) {\r\n        if (name === undefined) {\r\n            return _store(elm, true);\r\n        } else {\r\n            var store = _store(elm);\r\n            if (store) {\r\n                if (name in store) {\r\n                    return store[name];\r\n                }\r\n                var camelName = camelCase(name);\r\n                if (camelName in store) {\r\n                    return store[camelName];\r\n                }\r\n            }\r\n            var attrName = 'data-' + name.replace(capitalRE, \"-$1\").toLowerCase()\r\n            return attr(elm, attrName);\r\n        }\r\n\r\n    }\r\n\r\n    function _setData(elm, name, value) {\r\n        var store = _store(elm, true);\r\n        store[camelCase(name)] = value;\r\n    }\r\n\r\n\r\n    /*\r\n     * xxx\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n    function data(elm, name, value) {\r\n\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var dataAttrName in name) {\r\n                    _setData(elm, dataAttrName, name[dataAttrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                return _getData(elm, name);\r\n            }\r\n        } else {\r\n            _setData(elm, name, value);\r\n            return this;\r\n        }\r\n    } \r\n    /*\r\n     * Remove from the element all items that have not yet been run. \r\n     * @param {Object} elm  \r\n     */\r\n\r\n    function cleanData(elm) {\r\n        if (elm[\"_$_store\"]) {\r\n            delete elm[\"_$_store\"];\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Remove a previously-stored piece of data. \r\n     * @param {Object} elm  \r\n     * @param {Array} names\r\n     */\r\n    function removeData(elm, names) {\r\n        if (langx.isString(names)) {\r\n            names = names.split(/\\s+/);\r\n        }\r\n        var store = _store(elm, true);\r\n        names.forEach(function(name) {\r\n            delete store[name];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * xxx \r\n     * @param {Object} elm  \r\n     * @param {Array} names\r\n     */\r\n    function pluck(nodes, property) {\r\n        return map.call(nodes, function(elm) {\r\n            return elm[property];\r\n        });\r\n    }\r\n\r\n    /*\r\n     * Get or set the value of an property for the specified element.\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n    function prop(elm, name, value) {\r\n        name = propMap[name] || name;\r\n        if (value === undefined) {\r\n            return elm[name];\r\n        } else {\r\n            elm[name] = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * remove Attributes  \r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     */\r\n    function removeAttr(elm, name) {\r\n        name.split(' ').forEach(function(attr) {\r\n            setAttribute(elm, attr);\r\n        });\r\n        return this;\r\n    }\r\n\r\n\r\n    /*\r\n     * Remove the value of a property for the first element in the set of matched elements or set one or more properties for every matched element.\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     */\r\n    function removeProp(elm, name) {\r\n        name.split(' ').forEach(function(prop) {\r\n            delete elm[prop];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Get the combined text contents of each element in the set of matched elements, including their descendants, or set the text contents of the matched elements.  \r\n     * @param {Object} elm  \r\n     * @param {String} txt\r\n     */\r\n    function text(elm, txt) {\r\n        if (txt === undefined) {\r\n            return elm.textContent;\r\n        } else {\r\n            elm.textContent = txt == null ? '' : '' + txt;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Get the current value of the first element in the set of matched elements or set the value of every matched element.\r\n     * @param {Object} elm  \r\n     * @param {String} value\r\n     */\r\n    function val(elm, value) {\r\n        if (value === undefined) {\r\n            if (elm.multiple) {\r\n                // select multiple values\r\n                var selectedOptions = filter.call(finder.find(elm, \"option\"), (function(option) {\r\n                    return option.selected;\r\n                }));\r\n                return pluck(selectedOptions, \"value\");\r\n            } else {\r\n                return elm.value;\r\n            }\r\n        } else {\r\n            elm.value = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function datax() {\r\n        return datax;\r\n    }\r\n\r\n    langx.mixin(datax, {\r\n        aria: aria,\r\n\r\n        attr: attr,\r\n\r\n        cleanData: cleanData,\r\n\r\n        data: data,\r\n\r\n        pluck: pluck,\r\n\r\n        prop: prop,\r\n\r\n        removeAttr: removeAttr,\r\n\r\n        removeData: removeData,\r\n\r\n        removeProp: removeProp,\r\n\r\n        text: text,\r\n\r\n        val: val\r\n    });\r\n\r\n    return skylark.datax = datax;\r\n});\ndefine('skylark-utils-dom/eventer',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./finder\",\r\n    \"./noder\",\r\n    \"./datax\"\r\n], function(skylark, langx, browser, finder, noder, datax) {\r\n    var mixin = langx.mixin,\r\n        each = langx.each,\r\n        slice = Array.prototype.slice,\r\n        uid = langx.uid,\r\n        ignoreProperties = /^([A-Z]|returnValue$|layer[XY]$)/,\r\n        eventMethods = {\r\n            preventDefault: \"isDefaultPrevented\",\r\n            stopImmediatePropagation: \"isImmediatePropagationStopped\",\r\n            stopPropagation: \"isPropagationStopped\"\r\n        },\r\n        readyRE = /complete|loaded|interactive/;\r\n\r\n    function compatible(event, source) {\r\n        if (source || !event.isDefaultPrevented) {\r\n            if (!source) {\r\n                source = event;\r\n            }\r\n\r\n            langx.each(eventMethods, function(name, predicate) {\r\n                var sourceMethod = source[name];\r\n                event[name] = function() {\r\n                    this[predicate] = langx.returnTrue;\r\n                    return sourceMethod && sourceMethod.apply(source, arguments);\r\n                }\r\n                event[predicate] = langx.returnFalse;\r\n            });\r\n        }\r\n        return event;\r\n    }\r\n\r\n    function parse(event) {\r\n        var segs = (\"\" + event).split(\".\");\r\n        return {\r\n            type: segs[0],\r\n            ns: segs.slice(1).sort().join(\" \")\r\n        };\r\n    }\r\n\r\n    //create a custom dom event\r\n    var createEvent = (function() {\r\n        var EventCtors = [\r\n                window[\"CustomEvent\"], // 0 default\r\n                window[\"CompositionEvent\"], // 1\r\n                window[\"DragEvent\"], // 2\r\n                window[\"Event\"], // 3\r\n                window[\"FocusEvent\"], // 4\r\n                window[\"KeyboardEvent\"], // 5\r\n                window[\"MessageEvent\"], // 6\r\n                window[\"MouseEvent\"], // 7\r\n                window[\"MouseScrollEvent\"], // 8\r\n                window[\"MouseWheelEvent\"], // 9\r\n                window[\"MutationEvent\"], // 10\r\n                window[\"ProgressEvent\"], // 11\r\n                window[\"TextEvent\"], // 12\r\n                window[\"TouchEvent\"], // 13\r\n                window[\"UIEvent\"], // 14\r\n                window[\"WheelEvent\"], // 15\r\n                window[\"ClipboardEvent\"] // 16\r\n            ],\r\n            NativeEvents = {\r\n                \"compositionstart\": 1, // CompositionEvent\r\n                \"compositionend\": 1, // CompositionEvent\r\n                \"compositionupdate\": 1, // CompositionEvent\r\n\r\n                \"beforecopy\": 16, // ClipboardEvent\r\n                \"beforecut\": 16, // ClipboardEvent\r\n                \"beforepaste\": 16, // ClipboardEvent\r\n                \"copy\": 16, // ClipboardEvent\r\n                \"cut\": 16, // ClipboardEvent\r\n                \"paste\": 16, // ClipboardEvent\r\n\r\n                \"drag\": 2, // DragEvent\r\n                \"dragend\": 2, // DragEvent\r\n                \"dragenter\": 2, // DragEvent\r\n                \"dragexit\": 2, // DragEvent\r\n                \"dragleave\": 2, // DragEvent\r\n                \"dragover\": 2, // DragEvent\r\n                \"dragstart\": 2, // DragEvent\r\n                \"drop\": 2, // DragEvent\r\n\r\n                \"abort\": 3, // Event\r\n                \"change\": 3, // Event\r\n                \"error\": 3, // Event\r\n                \"selectionchange\": 3, // Event\r\n                \"submit\": 3, // Event\r\n                \"reset\": 3, // Event\r\n\r\n                \"focus\": 4, // FocusEvent\r\n                \"blur\": 4, // FocusEvent\r\n                \"focusin\": 4, // FocusEvent\r\n                \"focusout\": 4, // FocusEvent\r\n\r\n                \"keydown\": 5, // KeyboardEvent\r\n                \"keypress\": 5, // KeyboardEvent\r\n                \"keyup\": 5, // KeyboardEvent\r\n\r\n                \"message\": 6, // MessageEvent\r\n\r\n                \"click\": 7, // MouseEvent\r\n                \"contextmenu\": 7, // MouseEvent\r\n                \"dblclick\": 7, // MouseEvent\r\n                \"mousedown\": 7, // MouseEvent\r\n                \"mouseup\": 7, // MouseEvent\r\n                \"mousemove\": 7, // MouseEvent\r\n                \"mouseover\": 7, // MouseEvent\r\n                \"mouseout\": 7, // MouseEvent\r\n                \"mouseenter\": 7, // MouseEvent\r\n                \"mouseleave\": 7, // MouseEvent\r\n\r\n\r\n                \"textInput\": 12, // TextEvent\r\n\r\n                \"touchstart\": 13, // TouchEvent\r\n                \"touchmove\": 13, // TouchEvent\r\n                \"touchend\": 13, // TouchEvent\r\n\r\n                \"load\": 14, // UIEvent\r\n                \"resize\": 14, // UIEvent\r\n                \"select\": 14, // UIEvent\r\n                \"scroll\": 14, // UIEvent\r\n                \"unload\": 14, // UIEvent,\r\n\r\n                \"wheel\": 15 // WheelEvent\r\n            };\r\n\r\n        function getEventCtor(type) {\r\n            var idx = NativeEvents[type];\r\n            if (!idx) {\r\n                idx = 0;\r\n            }\r\n            return EventCtors[idx];\r\n        }\r\n\r\n        return function(type, props) {\r\n            //create a custom dom event\r\n\r\n            if (langx.isString(type)) {\r\n                props = props || {};\r\n            } else {\r\n                props = type || {};\r\n                type = props.type || \"\";\r\n            }\r\n            var parsed = parse(type);\r\n            type = parsed.type;\r\n\r\n            props = langx.mixin({\r\n                bubbles: true,\r\n                cancelable: true\r\n            }, props);\r\n\r\n            if (parsed.ns) {\r\n                props.namespace = parsed.ns;\r\n            }\r\n\r\n            var ctor = getEventCtor(type),\r\n                e = new ctor(type, props);\r\n\r\n            langx.safeMixin(e, props);\r\n\r\n            return compatible(e);\r\n        };\r\n    })();\r\n\r\n    function createProxy(src, props) {\r\n        var key,\r\n            proxy = {\r\n                originalEvent: src\r\n            };\r\n        for (key in src) {\r\n            if (key !== \"keyIdentifier\" && !ignoreProperties.test(key) && src[key] !== undefined) {\r\n                proxy[key] = src[key];\r\n            }\r\n        }\r\n        if (props) {\r\n            langx.mixin(proxy, props);\r\n        }\r\n        return compatible(proxy, src);\r\n    }\r\n\r\n    var\r\n        specialEvents = {},\r\n        focusinSupported = \"onfocusin\" in window,\r\n        focus = { focus: \"focusin\", blur: \"focusout\" },\r\n        hover = { mouseenter: \"mouseover\", mouseleave: \"mouseout\" },\r\n        realEvent = function(type) {\r\n            return hover[type] || (focusinSupported && focus[type]) || type;\r\n        },\r\n        handlers = {},\r\n        EventBindings = langx.klass({\r\n            init: function(target, event) {\r\n                this._target = target;\r\n                this._event = event;\r\n                this._bindings = [];\r\n            },\r\n\r\n            add: function(fn, options) {\r\n                var bindings = this._bindings,\r\n                    binding = {\r\n                        fn: fn,\r\n                        options: langx.mixin({}, options)\r\n                    };\r\n\r\n                bindings.push(binding);\r\n\r\n                var self = this;\r\n                if (!self._listener) {\r\n                    self._listener = function(domEvt) {\r\n                        var elm = this,\r\n                            e = createProxy(domEvt),\r\n                            args = domEvt._args,\r\n                            bindings = self._bindings,\r\n                            ns = e.namespace;\r\n\r\n                        if (langx.isDefined(args)) {\r\n                            args = [e].concat(args);\r\n                        } else {\r\n                            args = [e];\r\n                        }\r\n\r\n                        langx.each(bindings, function(idx, binding) {\r\n                            var match = elm;\r\n                            if (e.isImmediatePropagationStopped && e.isImmediatePropagationStopped()) {\r\n                                return false;\r\n                            }\r\n                            var fn = binding.fn,\r\n                                options = binding.options || {},\r\n                                selector = options.selector,\r\n                                one = options.one,\r\n                                data = options.data;\r\n\r\n                            if (ns && ns != options.ns && options.ns.indexOf(ns) === -1) {\r\n                                return;\r\n                            }\r\n                            if (selector) {\r\n                                match = finder.closest(e.target, selector);\r\n                                if (match && match !== elm) {\r\n                                    langx.mixin(e, {\r\n                                        currentTarget: match,\r\n                                        liveFired: elm\r\n                                    });\r\n                                } else {\r\n                                    return;\r\n                                }\r\n                            }\r\n\r\n                            var originalEvent = self._event;\r\n                            if (originalEvent in hover) {\r\n                                var related = e.relatedTarget;\r\n                                if (related && (related === match || noder.contains(match, related))) {\r\n                                    return;\r\n                                }\r\n                            }\r\n\r\n                            if (langx.isDefined(data)) {\r\n                                e.data = data;\r\n                            }\r\n\r\n                            if (one) {\r\n                                self.remove(fn, options);\r\n                            }\r\n\r\n                            var result = fn.apply(match, args);\r\n\r\n                            if (result === false) {\r\n                                e.preventDefault();\r\n                                e.stopPropagation();\r\n                            }\r\n                        });;\r\n                    };\r\n\r\n                    var event = self._event;\r\n                    /*\r\n                                        if (event in hover) {\r\n                                            var l = self._listener;\r\n                                            self._listener = function(e) {\r\n                                                var related = e.relatedTarget;\r\n                                                if (!related || (related !== this && !noder.contains(this, related))) {\r\n                                                    return l.apply(this, arguments);\r\n                                                }\r\n                                            }\r\n                                        }\r\n                    */\r\n\r\n                    if (self._target.addEventListener) {\r\n                        self._target.addEventListener(realEvent(event), self._listener, false);\r\n                    } else {\r\n                        console.warn(\"invalid eventer object\", self._target);\r\n                    }\r\n                }\r\n\r\n            },\r\n            remove: function(fn, options) {\r\n                options = langx.mixin({}, options);\r\n\r\n                function matcherFor(ns) {\r\n                    return new RegExp(\"(?:^| )\" + ns.replace(\" \", \" .* ?\") + \"(?: |$)\");\r\n                }\r\n                var matcher;\r\n                if (options.ns) {\r\n                    matcher = matcherFor(options.ns);\r\n                }\r\n\r\n                this._bindings = this._bindings.filter(function(binding) {\r\n                    var removing = (!fn || fn === binding.fn) &&\r\n                        (!matcher || matcher.test(binding.options.ns)) &&\r\n                        (!options.selector || options.selector == binding.options.selector);\r\n\r\n                    return !removing;\r\n                });\r\n                if (this._bindings.length == 0) {\r\n                    if (this._target.removeEventListener) {\r\n                        this._target.removeEventListener(realEvent(this._event), this._listener, false);\r\n                    }\r\n                    this._listener = null;\r\n                }\r\n            }\r\n        }),\r\n        EventsHandler = langx.klass({\r\n            init: function(elm) {\r\n                this._target = elm;\r\n                this._handler = {};\r\n            },\r\n\r\n            // add a event listener\r\n            // selector Optional\r\n            register: function(event, callback, options) {\r\n                // Seperate the event from the namespace\r\n                var parsed = parse(event),\r\n                    event = parsed.type,\r\n                    specialEvent = specialEvents[event],\r\n                    bindingEvent = specialEvent && (specialEvent.bindType || specialEvent.bindEventName);\r\n\r\n                var events = this._handler;\r\n\r\n                // Check if there is already a handler for this event\r\n                if (events[event] === undefined) {\r\n                    events[event] = new EventBindings(this._target, bindingEvent || event);\r\n                }\r\n\r\n                // Register the new callback function\r\n                events[event].add(callback, langx.mixin({\r\n                    ns: parsed.ns\r\n                }, options)); // options:{selector:xxx}\r\n            },\r\n\r\n            // remove a event listener\r\n            unregister: function(event, fn, options) {\r\n                // Check for parameter validtiy\r\n                var events = this._handler,\r\n                    parsed = parse(event);\r\n                event = parsed.type;\r\n\r\n                if (event) {\r\n                    var listener = events[event];\r\n\r\n                    if (listener) {\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                } else {\r\n                    //remove all events\r\n                    for (event in events) {\r\n                        var listener = events[event];\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                }\r\n            }\r\n        }),\r\n\r\n        findHandler = function(elm) {\r\n            var id = uid(elm),\r\n                handler = handlers[id];\r\n            if (!handler) {\r\n                handler = handlers[id] = new EventsHandler(elm);\r\n            }\r\n            return handler;\r\n        };\r\n\r\n    /*   \r\n     * Remove an event handler for one or more events from the specified element.\r\n     * @param {HTMLElement} elm  \r\n     * @param {String} events\r\n     * @param {String　Optional } selector\r\n     * @param {Function} callback\r\n     */\r\n    function off(elm, events, selector, callback) {\r\n        var $this = this\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                off(elm, type, selector, fn);\r\n            })\r\n            return $this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback) && callback !== false) {\r\n            callback = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        if (events) events.forEach(function(event) {\r\n\r\n            handler.unregister(event, callback, {\r\n                selector: selector,\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Attach an event handler function for one or more events to the selected elements.\r\n     * @param {HTMLElement} elm  \r\n     * @param {String} events\r\n     * @param {String　Optional} selector\r\n     * @param {Anything Optional} data\r\n     * @param {Function} callback\r\n     * @param {Boolean　Optional} one\r\n     */\r\n    function on(elm, events, selector, data, callback, one) {\r\n\r\n        var autoRemove, delegator;\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                on(elm, type, selector, data, fn, one);\r\n            });\r\n            return this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n            callback = data;\r\n            data = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (langx.isFunction(data)) {\r\n            callback = data;\r\n            data = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        events.forEach(function(event) {\r\n            if (event == \"ready\") {\r\n                return ready(callback);\r\n            }\r\n            handler.register(event, callback, {\r\n                data: data,\r\n                selector: selector,\r\n                one: !!one\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Attach a handler to an event for the elements. The handler is executed at most once per \r\n     * @param {HTMLElement} elm  \r\n     * @param {String} event\r\n     * @param {String　Optional} selector\r\n     * @param {Anything Optional} data\r\n     * @param {Function} callback\r\n     */\r\n    function one(elm, events, selector, data, callback) {\r\n        on(elm, events, selector, data, callback, 1);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Prevents propagation and clobbers the default action of the passed event. The same as calling event.preventDefault() and event.stopPropagation(). \r\n     * @param {String} event\r\n     */\r\n    function stop(event) {\r\n        if (window.document.all) {\r\n            event.keyCode = 0;\r\n        }\r\n        if (event.preventDefault) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        return this;\r\n    }\r\n    /*   \r\n     * Execute all handlers and behaviors attached to the matched elements for the given event  \r\n     * @param {String} evented\r\n     * @param {String} type\r\n     * @param {Array or PlainObject } args\r\n     */\r\n    function trigger(evented, type, args) {\r\n        var e;\r\n        if (type instanceof Event) {\r\n            e = type;\r\n        } else {\r\n            e = createEvent(type, args);\r\n        }\r\n        e._args = args;\r\n\r\n        var fn = (evented.dispatchEvent || evented.trigger);\r\n        if (fn) {\r\n            fn.call(evented, e);\r\n        } else {\r\n            console.warn(\"The evented parameter is not a eventable object\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n    /*   \r\n     * Specify a function to execute when the DOM is fully loaded.  \r\n     * @param {Function} callback\r\n     */\r\n    function ready(callback) {\r\n        // need to check if document.body exists for IE as that browser reports\r\n        // document ready when it hasn't yet created the body elm\r\n        if (readyRE.test(document.readyState) && document.body) {\r\n            langx.defer(callback);\r\n        } else {\r\n            document.addEventListener('DOMContentLoaded', callback, false);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    var keyCodeLookup = {\r\n        \"backspace\": 8,\r\n        \"comma\": 188,\r\n        \"delete\": 46,\r\n        \"down\": 40,\r\n        \"end\": 35,\r\n        \"enter\": 13,\r\n        \"escape\": 27,\r\n        \"home\": 36,\r\n        \"left\": 37,\r\n        \"page_down\": 34,\r\n        \"page_up\": 33,\r\n        \"period\": 190,\r\n        \"right\": 39,\r\n        \"space\": 32,\r\n        \"tab\": 9,\r\n        \"up\": 38\r\n    };\r\n    //example:\r\n    //shortcuts(elm).add(\"CTRL+ALT+SHIFT+X\",function(){console.log(\"test!\")});\r\n    function shortcuts(elm) {\r\n\r\n        var registry = datax.data(elm, \"shortcuts\");\r\n        if (!registry) {\r\n            registry = {};\r\n            datax.data(elm, \"shortcuts\", registry);\r\n            var run = function(shortcut, event) {\r\n                var n = event.metaKey || event.ctrlKey;\r\n                if (shortcut.ctrl == n && shortcut.alt == event.altKey && shortcut.shift == event.shiftKey) {\r\n                    if (event.keyCode == shortcut.keyCode || event.charCode && event.charCode == shortcut.charCode) {\r\n                        event.preventDefault();\r\n                        if (\"keydown\" == event.type) {\r\n                            shortcut.fn(event);\r\n                        }\r\n                        return true;\r\n                    }\r\n                }\r\n            };\r\n            on(elm, \"keyup keypress keydown\", function(event) {\r\n                if (!(/INPUT|TEXTAREA/.test(event.target.nodeName))) {\r\n                    for (var key in registry) {\r\n                        run(registry[key], event);\r\n                    }\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        return {\r\n            add: function(pattern, fn) {\r\n                var shortcutKeys;\r\n                if (pattern.indexOf(\",\") > -1) {\r\n                    shortcutKeys = pattern.toLowerCase().split(\",\");\r\n                } else {\r\n                    shortcutKeys = pattern.toLowerCase().split(\" \");\r\n                }\r\n                shortcutKeys.forEach(function(shortcutKey) {\r\n                    var setting = {\r\n                        fn: fn,\r\n                        alt: false,\r\n                        ctrl: false,\r\n                        shift: false\r\n                    };\r\n                    shortcutKey.split(\"+\").forEach(function(key) {\r\n                        switch (key) {\r\n                            case \"alt\":\r\n                            case \"ctrl\":\r\n                            case \"shift\":\r\n                                setting[key] = true;\r\n                                break;\r\n                            default:\r\n                                setting.charCode = key.charCodeAt(0);\r\n                                setting.keyCode = keyCodeLookup[key] || key.toUpperCase().charCodeAt(0);\r\n                        }\r\n                    });\r\n                    var regKey = (setting.ctrl ? \"ctrl\" : \"\") + \",\" + (setting.alt ? \"alt\" : \"\") + \",\" + (setting.shift ? \"shift\" : \"\") + \",\" + setting.keyCode;\r\n                    registry[regKey] = setting;\r\n                })\r\n            }\r\n\r\n        };\r\n\r\n    }\r\n\r\n    if (browser.support.transitionEnd) {\r\n        specialEvents.transitionEnd = {\r\n          bindType: browser.support.transition.end,\r\n          delegateType: browser.support.transition.end,\r\n          handle: function (e) {\r\n            if ($(e.target).is(this)) return e.handleObj.handler.apply(this, arguments)\r\n          }\r\n        }        \r\n    }\r\n\r\n    function eventer() {\r\n        return eventer;\r\n    }\r\n\r\n    langx.mixin(eventer, {\r\n        create: createEvent,\r\n\r\n        keys: keyCodeLookup,\r\n\r\n        off: off,\r\n\r\n        on: on,\r\n\r\n        one: one,\r\n\r\n        proxy: createProxy,\r\n\r\n        ready: ready,\r\n\r\n        shortcuts: shortcuts,\r\n\r\n        special: specialEvents,\r\n\r\n        stop: stop,\r\n\r\n        trigger: trigger\r\n\r\n    });\r\n\r\n    return skylark.eventer = eventer;\r\n});\ndefine('skylark-utils-dom/geom',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./styler\"\r\n], function(skylark, langx, noder, styler) {\r\n    var rootNodeRE = /^(?:body|html)$/i,\r\n        px = langx.toPixel,\r\n        offsetParent = noder.offsetParent,\r\n        cachedScrollbarWidth;\r\n\r\n    function scrollbarWidth() {\r\n        if (cachedScrollbarWidth !== undefined) {\r\n            return cachedScrollbarWidth;\r\n        }\r\n        var w1, w2,\r\n            div = noder.createFragment(\"<div style=\" +\r\n                \"'display:block;position:absolute;width:200px;height:200px;overflow:hidden;'>\" +\r\n                \"<div style='height:300px;width:auto;'></div></div>\")[0],\r\n            innerDiv = div.childNodes[0];\r\n\r\n        noder.append(document.body, div);\r\n\r\n        w1 = innerDiv.offsetWidth;\r\n\r\n        styler.css(div, \"overflow\", \"scroll\");\r\n\r\n        w2 = innerDiv.offsetWidth;\r\n\r\n        if (w1 === w2) {\r\n            w2 = div[0].clientWidth;\r\n        }\r\n\r\n        noder.remove(div);\r\n\r\n        return (cachedScrollbarWidth = w1 - w2);\r\n    }\r\n    /*\r\n     * Get the widths of each border of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function borderExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.borderLeftWidth, elm),\r\n            top: px(s.borderTopWidth, elm),\r\n            right: px(s.borderRightWidth, elm),\r\n            bottom: px(s.borderBottomWidth, elm)\r\n        }\r\n    }\r\n\r\n    //viewport coordinate\r\n    /*\r\n     * Get or set the viewport position of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function boundingPosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            return rootNodeRE.test(elm.nodeName) ? { top: 0, left: 0 } : elm.getBoundingClientRect();\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the viewport rect of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function boundingRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            return elm.getBoundingClientRect()\r\n        } else {\r\n            boundingPosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the height of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function clientHeight(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).height;\r\n        } else {\r\n            return clientSize(elm, {\r\n                height: value\r\n            });\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the size of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} dimension\r\n     */\r\n    function clientSize(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            return {\r\n                width: elm.clientWidth,\r\n                height: elm.clientHeight\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width - pex.left - pex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height - pex.top - pex.bottom;\r\n                }\r\n            } else {\r\n                var bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width + bex.left + bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height + bex.top + bex.bottom;\r\n                }\r\n\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n        return {\r\n            width: elm.clientWidth,\r\n            height: elm.clientHeight\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get or set the width of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} dimension\r\n     */\r\n    function clientWidth(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).width;\r\n        } else {\r\n            clientSize(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the rect of the specified element content box.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function contentRect(elm) {\r\n        var cs = clientSize(elm),\r\n            pex = paddingExtents(elm);\r\n\r\n\r\n        //// On Opera, offsetLeft includes the parent's border\r\n        //if(has(\"opera\")){\r\n        //    pe.l += be.l;\r\n        //    pe.t += be.t;\r\n        //}\r\n        return {\r\n            left: pex.left,\r\n            top: pex.top,\r\n            width: cs.width - pex.left - pex.right,\r\n            height: cs.height - pex.top - pex.bottom\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the document size.\r\n     * @param {HTMLDocument} doc\r\n     */\r\n    function getDocumentSize(doc) {\r\n        var documentElement = doc.documentElement,\r\n            body = doc.body,\r\n            max = Math.max,\r\n            scrollWidth = max(documentElement.scrollWidth, body.scrollWidth),\r\n            clientWidth = max(documentElement.clientWidth, body.clientWidth),\r\n            offsetWidth = max(documentElement.offsetWidth, body.offsetWidth),\r\n            scrollHeight = max(documentElement.scrollHeight, body.scrollHeight),\r\n            clientHeight = max(documentElement.clientHeight, body.clientHeight),\r\n            offsetHeight = max(documentElement.offsetHeight, body.offsetHeight);\r\n\r\n        return {\r\n            width: scrollWidth < offsetWidth ? clientWidth : scrollWidth,\r\n            height: scrollHeight < offsetHeight ? clientHeight : scrollHeight\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the document size.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function height(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).height;\r\n        } else {\r\n            size(elm, {\r\n                height: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the widths of each margin of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function marginExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.marginLeft),\r\n            top: px(s.marginTop),\r\n            right: px(s.marginRight),\r\n            bottom: px(s.marginBottom),\r\n        }\r\n    }\r\n\r\n\r\n    function marginRect(elm) {\r\n        var obj = this.relativeRect(elm),\r\n            me = this.marginExtents(elm);\r\n\r\n        return {\r\n            left: obj.left,\r\n            top: obj.top,\r\n            width: obj.width + me.left + me.right,\r\n            height: obj.height + me.top + me.bottom\r\n        };\r\n    }\r\n\r\n\r\n    function marginSize(elm) {\r\n        var obj = this.size(elm),\r\n            me = this.marginExtents(elm);\r\n\r\n        return {\r\n            width: obj.width + me.left + me.right,\r\n            height: obj.height + me.top + me.bottom\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the widths of each padding of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function paddingExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.paddingLeft),\r\n            top: px(s.paddingTop),\r\n            right: px(s.paddingRight),\r\n            bottom: px(s.paddingBottom),\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the document position of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    //coordinate to the document\r\n    function pagePosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset\r\n            }\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = pagePosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the document rect of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function pageRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset,\r\n                width: Math.round(obj.width),\r\n                height: Math.round(obj.height)\r\n            }\r\n        } else {\r\n            pagePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the position of the specified element border box , relative to parent element.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    // coordinate relative to it's parent\r\n    function relativePosition(elm, coords) {\r\n        if (coords == undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingPosition(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top, // - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left, // - mex.left\r\n            }\r\n        } else {\r\n            var props = {\r\n                top: coords.top,\r\n                left: coords.left\r\n            }\r\n\r\n            if (styler.css(elm, \"position\") == \"static\") {\r\n                props['position'] = \"relative\";\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the rect of the specified element border box , relatived to parent element.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function relativeRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingRect(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top, // - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left, // - mex.left,\r\n                width: offset.width,\r\n                height: offset.height\r\n            }\r\n        } else {\r\n            relativePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Scroll the specified element into view.\r\n     * @param {HTMLElement} elm\r\n     * @param {} align\r\n     */\r\n    function scrollIntoView(elm, align) {\r\n        function getOffset(elm, rootElm) {\r\n            var x, y, parent = elm;\r\n\r\n            x = y = 0;\r\n            while (parent && parent != rootElm && parent.nodeType) {\r\n                x += parent.offsetLeft || 0;\r\n                y += parent.offsetTop || 0;\r\n                parent = parent.offsetParent;\r\n            }\r\n\r\n            return { x: x, y: y };\r\n        }\r\n\r\n        var parentElm = elm.parentNode;\r\n        var x, y, width, height, parentWidth, parentHeight;\r\n        var pos = getOffset(elm, parentElm);\r\n\r\n        x = pos.x;\r\n        y = pos.y;\r\n        width = elm.offsetWidth;\r\n        height = elm.offsetHeight;\r\n        parentWidth = parentElm.clientWidth;\r\n        parentHeight = parentElm.clientHeight;\r\n\r\n        if (align == \"end\") {\r\n            x -= parentWidth - width;\r\n            y -= parentHeight - height;\r\n        } else if (align == \"center\") {\r\n            x -= (parentWidth / 2) - (width / 2);\r\n            y -= (parentHeight / 2) - (height / 2);\r\n        }\r\n\r\n        parentElm.scrollLeft = x;\r\n        parentElm.scrollTop = y;\r\n\r\n        return this;\r\n    }\r\n    /*\r\n     * Get or set the current horizontal position of the scroll bar for the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function scrollLeft(elm, value) {\r\n        var hasScrollLeft = \"scrollLeft\" in elm;\r\n        if (value === undefined) {\r\n            return hasScrollLeft ? elm.scrollLeft : elm.pageXOffset\r\n        } else {\r\n            if (hasScrollLeft) {\r\n                elm.scrollLeft = value;\r\n            } else {\r\n                elm.scrollTo(value, elm.scrollY);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or the current vertical position of the scroll bar for the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function scrollTop(elm, value) {\r\n        var hasScrollTop = \"scrollTop\" in elm;\r\n\r\n        if (value === undefined) {\r\n            return hasScrollTop ? elm.scrollTop : elm.pageYOffset\r\n        } else {\r\n            if (hasScrollTop) {\r\n                elm.scrollTop = value;\r\n            } else {\r\n                elm.scrollTo(elm.scrollX, value);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or set the size of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject}dimension\r\n     */\r\n    function size(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            if (langx.isWindow(elm)) {\r\n                return {\r\n                    width: elm.innerWidth,\r\n                    height: elm.innerHeight\r\n                }\r\n\r\n            } else if (langx.isDocument(elm)) {\r\n                return getDocumentSize(document);\r\n            } else {\r\n                return {\r\n                    width: elm.offsetWidth,\r\n                    height: elm.offsetHeight\r\n                }\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm),\r\n                    bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined && props.width !== \"\" && props.width !== null) {\r\n                    props.width = props.width - pex.left - pex.right - bex.left - bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined && props.height !== \"\" && props.height !== null) {\r\n                    props.height = props.height - pex.top - pex.bottom - bex.top - bex.bottom;\r\n                }\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or set the size of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function width(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).width;\r\n        } else {\r\n            size(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n    \r\n// in development start\r\n    function _place(/*DomNode*/ node, choices, layoutNode, aroundNodeCoords){\r\n        // summary:\r\n        //      Given a list of spots to put node, put it at the first spot where it fits,\r\n        //      of if it doesn't fit anywhere then the place with the least overflow\r\n        // choices: Array\r\n        //      Array of elements like: {corner: 'TL', pos: {x: 10, y: 20} }\r\n        //      Above example says to put the top-left corner of the node at (10,20)\r\n        // layoutNode: Function(node, aroundNodeCorner, nodeCorner, size)\r\n        //      for things like tooltip, they are displayed differently (and have different dimensions)\r\n        //      based on their orientation relative to the parent.   This adjusts the popup based on orientation.\r\n        //      It also passes in the available size for the popup, which is useful for tooltips to\r\n        //      tell them that their width is limited to a certain amount.   layoutNode() may return a value expressing\r\n        //      how much the popup had to be modified to fit into the available space.   This is used to determine\r\n        //      what the best placement is.\r\n        // aroundNodeCoords: Object\r\n        //      Size of aroundNode, ex: {w: 200, h: 50}\r\n\r\n        // get {x: 10, y: 10, w: 100, h:100} type obj representing position of\r\n        // viewport over document\r\n\r\n        var doc = noder.ownerDoc(node),\r\n            win = noder.ownerWindow(doc),\r\n            view = geom.size(win);\r\n\r\n        view.left = 0;\r\n        view.top = 0;\r\n\r\n        if(!node.parentNode || String(node.parentNode.tagName).toLowerCase() != \"body\"){\r\n            doc.body.appendChild(node);\r\n        }\r\n\r\n        var best = null;\r\n\r\n        some.apply(choices, function(choice){\r\n            var corner = choice.corner;\r\n            var pos = choice.pos;\r\n            var overflow = 0;\r\n\r\n            // calculate amount of space available given specified position of node\r\n            var spaceAvailable = {\r\n                w: {\r\n                    'L': view.left + view.width - pos.x,\r\n                    'R': pos.x - view.left,\r\n                    'M': view.width\r\n                }[corner.charAt(1)],\r\n\r\n                h: {\r\n                    'T': view.top + view.height - pos.y,\r\n                    'B': pos.y - view.top,\r\n                    'M': view.height\r\n                }[corner.charAt(0)]\r\n            };\r\n\r\n            if(layoutNode){\r\n                var res = layoutNode(node, choice.aroundCorner, corner, spaceAvailable, aroundNodeCoords);\r\n                overflow = typeof res == \"undefined\" ? 0 : res;\r\n            }\r\n\r\n            var bb = geom.size(node);\r\n\r\n            // coordinates and size of node with specified corner placed at pos,\r\n            // and clipped by viewport\r\n            var\r\n                startXpos = {\r\n                    'L': pos.x,\r\n                    'R': pos.x - bb.width,\r\n                    'M': Math.max(view.left, Math.min(view.left + view.width, pos.x + (bb.width >> 1)) - bb.width) // M orientation is more flexible\r\n                }[corner.charAt(1)],\r\n\r\n                startYpos = {\r\n                    'T': pos.y,\r\n                    'B': pos.y - bb.height,\r\n                    'M': Math.max(view.top, Math.min(view.top + view.height, pos.y + (bb.height >> 1)) - bb.height)\r\n                }[corner.charAt(0)],\r\n\r\n                startX = Math.max(view.left, startXpos),\r\n                startY = Math.max(view.top, startYpos),\r\n                endX = Math.min(view.left + view.width, startXpos + bb.width),\r\n                endY = Math.min(view.top + view.height, startYpos + bb.height),\r\n                width = endX - startX,\r\n                height = endY - startY;\r\n\r\n            overflow += (bb.width - width) + (bb.height - height);\r\n\r\n            if(best == null || overflow < best.overflow){\r\n                best = {\r\n                    corner: corner,\r\n                    aroundCorner: choice.aroundCorner,\r\n                    left: startX,\r\n                    top: startY,\r\n                    width: width,\r\n                    height: height,\r\n                    overflow: overflow,\r\n                    spaceAvailable: spaceAvailable\r\n                };\r\n            }\r\n\r\n            return !overflow;\r\n        });\r\n\r\n        // In case the best position is not the last one we checked, need to call\r\n        // layoutNode() again.\r\n        if(best.overflow && layoutNode){\r\n            layoutNode(node, best.aroundCorner, best.corner, best.spaceAvailable, aroundNodeCoords);\r\n        }\r\n\r\n\r\n        geom.boundingPosition(node,best);\r\n\r\n        return best;\r\n    }\r\n\r\n    function at(node, pos, corners, padding, layoutNode){\r\n        var choices = map.apply(corners, function(corner){\r\n            var c = {\r\n                corner: corner,\r\n                aroundCorner: reverse[corner],  // so TooltipDialog.orient() gets aroundCorner argument set\r\n                pos: {x: pos.x,y: pos.y}\r\n            };\r\n            if(padding){\r\n                c.pos.x += corner.charAt(1) == 'L' ? padding.x : -padding.x;\r\n                c.pos.y += corner.charAt(0) == 'T' ? padding.y : -padding.y;\r\n            }\r\n            return c;\r\n        });\r\n\r\n        return _place(node, choices, layoutNode);\r\n    }\r\n\r\n    function around(\r\n        /*DomNode*/     node,\r\n        /*DomNode|__Rectangle*/ anchor,\r\n        /*String[]*/    positions,\r\n        /*Boolean*/     leftToRight,\r\n        /*Function?*/   layoutNode){\r\n\r\n        // summary:\r\n        //      Position node adjacent or kitty-corner to anchor\r\n        //      such that it's fully visible in viewport.\r\n        // description:\r\n        //      Place node such that corner of node touches a corner of\r\n        //      aroundNode, and that node is fully visible.\r\n        // anchor:\r\n        //      Either a DOMNode or a rectangle (object with x, y, width, height).\r\n        // positions:\r\n        //      Ordered list of positions to try matching up.\r\n        //\r\n        //      - before: places drop down to the left of the anchor node/widget, or to the right in the case\r\n        //          of RTL scripts like Hebrew and Arabic; aligns either the top of the drop down\r\n        //          with the top of the anchor, or the bottom of the drop down with bottom of the anchor.\r\n        //      - after: places drop down to the right of the anchor node/widget, or to the left in the case\r\n        //          of RTL scripts like Hebrew and Arabic; aligns either the top of the drop down\r\n        //          with the top of the anchor, or the bottom of the drop down with bottom of the anchor.\r\n        //      - before-centered: centers drop down to the left of the anchor node/widget, or to the right\r\n        //          in the case of RTL scripts like Hebrew and Arabic\r\n        //      - after-centered: centers drop down to the right of the anchor node/widget, or to the left\r\n        //          in the case of RTL scripts like Hebrew and Arabic\r\n        //      - above-centered: drop down is centered above anchor node\r\n        //      - above: drop down goes above anchor node, left sides aligned\r\n        //      - above-alt: drop down goes above anchor node, right sides aligned\r\n        //      - below-centered: drop down is centered above anchor node\r\n        //      - below: drop down goes below anchor node\r\n        //      - below-alt: drop down goes below anchor node, right sides aligned\r\n        // layoutNode: Function(node, aroundNodeCorner, nodeCorner)\r\n        //      For things like tooltip, they are displayed differently (and have different dimensions)\r\n        //      based on their orientation relative to the parent.   This adjusts the popup based on orientation.\r\n        // leftToRight:\r\n        //      True if widget is LTR, false if widget is RTL.   Affects the behavior of \"above\" and \"below\"\r\n        //      positions slightly.\r\n        // example:\r\n        //  |   placeAroundNode(node, aroundNode, {'BL':'TL', 'TR':'BR'});\r\n        //      This will try to position node such that node's top-left corner is at the same position\r\n        //      as the bottom left corner of the aroundNode (ie, put node below\r\n        //      aroundNode, with left edges aligned).   If that fails it will try to put\r\n        //      the bottom-right corner of node where the top right corner of aroundNode is\r\n        //      (ie, put node above aroundNode, with right edges aligned)\r\n        //\r\n\r\n        // If around is a DOMNode (or DOMNode id), convert to coordinates.\r\n        var aroundNodePos;\r\n        if(typeof anchor == \"string\" || \"offsetWidth\" in anchor || \"ownerSVGElement\" in anchor){\r\n            aroundNodePos = domGeometry.position(anchor, true);\r\n\r\n            // For above and below dropdowns, subtract width of border so that popup and aroundNode borders\r\n            // overlap, preventing a double-border effect.  Unfortunately, difficult to measure the border\r\n            // width of either anchor or popup because in both cases the border may be on an inner node.\r\n            if(/^(above|below)/.test(positions[0])){\r\n                var anchorBorder = domGeometry.getBorderExtents(anchor),\r\n                    anchorChildBorder = anchor.firstChild ? domGeometry.getBorderExtents(anchor.firstChild) : {t:0,l:0,b:0,r:0},\r\n                    nodeBorder =  domGeometry.getBorderExtents(node),\r\n                    nodeChildBorder = node.firstChild ? domGeometry.getBorderExtents(node.firstChild) : {t:0,l:0,b:0,r:0};\r\n                aroundNodePos.y += Math.min(anchorBorder.t + anchorChildBorder.t, nodeBorder.t + nodeChildBorder.t);\r\n                aroundNodePos.h -=  Math.min(anchorBorder.t + anchorChildBorder.t, nodeBorder.t+ nodeChildBorder.t) +\r\n                    Math.min(anchorBorder.b + anchorChildBorder.b, nodeBorder.b + nodeChildBorder.b);\r\n            }\r\n        }else{\r\n            aroundNodePos = anchor;\r\n        }\r\n\r\n        // Compute position and size of visible part of anchor (it may be partially hidden by ancestor nodes w/scrollbars)\r\n        if(anchor.parentNode){\r\n            // ignore nodes between position:relative and position:absolute\r\n            var sawPosAbsolute = domStyle.getComputedStyle(anchor).position == \"absolute\";\r\n            var parent = anchor.parentNode;\r\n            while(parent && parent.nodeType == 1 && parent.nodeName != \"BODY\"){  //ignoring the body will help performance\r\n                var parentPos = domGeometry.position(parent, true),\r\n                    pcs = domStyle.getComputedStyle(parent);\r\n                if(/relative|absolute/.test(pcs.position)){\r\n                    sawPosAbsolute = false;\r\n                }\r\n                if(!sawPosAbsolute && /hidden|auto|scroll/.test(pcs.overflow)){\r\n                    var bottomYCoord = Math.min(aroundNodePos.y + aroundNodePos.h, parentPos.y + parentPos.h);\r\n                    var rightXCoord = Math.min(aroundNodePos.x + aroundNodePos.w, parentPos.x + parentPos.w);\r\n                    aroundNodePos.x = Math.max(aroundNodePos.x, parentPos.x);\r\n                    aroundNodePos.y = Math.max(aroundNodePos.y, parentPos.y);\r\n                    aroundNodePos.h = bottomYCoord - aroundNodePos.y;\r\n                    aroundNodePos.w = rightXCoord - aroundNodePos.x;\r\n                }\r\n                if(pcs.position == \"absolute\"){\r\n                    sawPosAbsolute = true;\r\n                }\r\n                parent = parent.parentNode;\r\n            }\r\n        }           \r\n\r\n        var x = aroundNodePos.x,\r\n            y = aroundNodePos.y,\r\n            width = \"w\" in aroundNodePos ? aroundNodePos.w : (aroundNodePos.w = aroundNodePos.width),\r\n            height = \"h\" in aroundNodePos ? aroundNodePos.h : (kernel.deprecated(\"place.around: dijit/place.__Rectangle: { x:\"+x+\", y:\"+y+\", height:\"+aroundNodePos.height+\", width:\"+width+\" } has been deprecated.  Please use { x:\"+x+\", y:\"+y+\", h:\"+aroundNodePos.height+\", w:\"+width+\" }\", \"\", \"2.0\"), aroundNodePos.h = aroundNodePos.height);\r\n\r\n        // Convert positions arguments into choices argument for _place()\r\n        var choices = [];\r\n        function push(aroundCorner, corner){\r\n            choices.push({\r\n                aroundCorner: aroundCorner,\r\n                corner: corner,\r\n                pos: {\r\n                    x: {\r\n                        'L': x,\r\n                        'R': x + width,\r\n                        'M': x + (width >> 1)\r\n                    }[aroundCorner.charAt(1)],\r\n                    y: {\r\n                        'T': y,\r\n                        'B': y + height,\r\n                        'M': y + (height >> 1)\r\n                    }[aroundCorner.charAt(0)]\r\n                }\r\n            })\r\n        }\r\n        array.forEach(positions, function(pos){\r\n            var ltr =  leftToRight;\r\n            switch(pos){\r\n                case \"above-centered\":\r\n                    push(\"TM\", \"BM\");\r\n                    break;\r\n                case \"below-centered\":\r\n                    push(\"BM\", \"TM\");\r\n                    break;\r\n                case \"after-centered\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"before-centered\":\r\n                    push(ltr ? \"ML\" : \"MR\", ltr ? \"MR\" : \"ML\");\r\n                    break;\r\n                case \"after\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"before\":\r\n                    push(ltr ? \"TL\" : \"TR\", ltr ? \"TR\" : \"TL\");\r\n                    push(ltr ? \"BL\" : \"BR\", ltr ? \"BR\" : \"BL\");\r\n                    break;\r\n                case \"below-alt\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"below\":\r\n                    // first try to align left borders, next try to align right borders (or reverse for RTL mode)\r\n                    push(ltr ? \"BL\" : \"BR\", ltr ? \"TL\" : \"TR\");\r\n                    push(ltr ? \"BR\" : \"BL\", ltr ? \"TR\" : \"TL\");\r\n                    break;\r\n                case \"above-alt\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"above\":\r\n                    // first try to align left borders, next try to align right borders (or reverse for RTL mode)\r\n                    push(ltr ? \"TL\" : \"TR\", ltr ? \"BL\" : \"BR\");\r\n                    push(ltr ? \"TR\" : \"TL\", ltr ? \"BR\" : \"BL\");\r\n                    break;\r\n                default:\r\n                    // To assist dijit/_base/place, accept arguments of type {aroundCorner: \"BL\", corner: \"TL\"}.\r\n                    // Not meant to be used directly.  Remove for 2.0.\r\n                    push(pos.aroundCorner, pos.corner);\r\n            }\r\n        });\r\n\r\n        var position = _place(node, choices, layoutNode, {w: width, h: height});\r\n        position.aroundNodePos = aroundNodePos;\r\n\r\n        return position;\r\n    }\r\n// in development end\r\n\r\n    function geom() {\r\n        return geom;\r\n    }\r\n\r\n    langx.mixin(geom, {\r\n        borderExtents: borderExtents,\r\n        //viewport coordinate\r\n        boundingPosition: boundingPosition,\r\n\r\n        boundingRect: boundingRect,\r\n\r\n        clientHeight: clientHeight,\r\n\r\n        clientSize: clientSize,\r\n\r\n        clientWidth: clientWidth,\r\n\r\n        contentRect: contentRect,\r\n\r\n        getDocumentSize: getDocumentSize,\r\n\r\n        height: height,\r\n\r\n        marginExtents: marginExtents,\r\n\r\n        marginRect: marginRect,\r\n\r\n        marginSize: marginSize,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        paddingExtents: paddingExtents,\r\n\r\n        //coordinate to the document\r\n        pagePosition: pagePosition,\r\n\r\n        pageRect: pageRect,\r\n\r\n        // coordinate relative to it's parent\r\n        relativePosition: relativePosition,\r\n\r\n        relativeRect: relativeRect,\r\n\r\n        scrollbarWidth: scrollbarWidth,\r\n\r\n        scrollIntoView: scrollIntoView,\r\n\r\n        scrollLeft: scrollLeft,\r\n\r\n        scrollTop: scrollTop,\r\n\r\n        size: size,\r\n\r\n        width: width\r\n    });\r\n\r\n    return skylark.geom = geom;\r\n});\ndefine('skylark-utils-dom/fx',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./eventer\"\r\n], function(skylark, langx, browser, geom, styler, eventer) {\r\n    var animationName,\r\n        animationDuration,\r\n        animationTiming,\r\n        animationDelay,\r\n        transitionProperty,\r\n        transitionDuration,\r\n        transitionTiming,\r\n        transitionDelay,\r\n\r\n        animationEnd = browser.normalizeCssEvent('AnimationEnd'),\r\n        transitionEnd = browser.normalizeCssEvent('TransitionEnd'),\r\n\r\n        supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i,\r\n        transform = browser.css3PropPrefix + \"transform\",\r\n        cssReset = {};\r\n\r\n\r\n    cssReset[animationName = browser.normalizeCssProperty(\"animation-name\")] =\r\n        cssReset[animationDuration = browser.normalizeCssProperty(\"animation-duration\")] =\r\n        cssReset[animationDelay = browser.normalizeCssProperty(\"animation-delay\")] =\r\n        cssReset[animationTiming = browser.normalizeCssProperty(\"animation-timing-function\")] = \"\";\r\n\r\n    cssReset[transitionProperty = browser.normalizeCssProperty(\"transition-property\")] =\r\n        cssReset[transitionDuration = browser.normalizeCssProperty(\"transition-duration\")] =\r\n        cssReset[transitionDelay = browser.normalizeCssProperty(\"transition-delay\")] =\r\n        cssReset[transitionTiming = browser.normalizeCssProperty(\"transition-timing-function\")] = \"\";\r\n\r\n\r\n\r\n    /*   \r\n     * Perform a custom animation of a set of CSS properties.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} properties\r\n     * @param {String} ease\r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     * @param {Number or String} delay\r\n     */\r\n    function animate(elm, properties, duration, ease, callback, delay) {\r\n        var key,\r\n            cssValues = {},\r\n            cssProperties = [],\r\n            transforms = \"\",\r\n            that = this,\r\n            endEvent,\r\n            wrappedCallback,\r\n            fired = false,\r\n            hasScrollTop = false,\r\n            resetClipAuto = false;\r\n\r\n        if (langx.isPlainObject(duration)) {\r\n            ease = duration.easing;\r\n            callback = duration.complete;\r\n            delay = duration.delay;\r\n            duration = duration.duration;\r\n        }\r\n\r\n        if (langx.isString(duration)) {\r\n            duration = fx.speeds[duration];\r\n        }\r\n        if (duration === undefined) {\r\n            duration = fx.speeds.normal;\r\n        }\r\n        duration = duration / 1000;\r\n        if (fx.off) {\r\n            duration = 0;\r\n        }\r\n\r\n        if (langx.isFunction(ease)) {\r\n            callback = ease;\r\n            eace = \"swing\";\r\n        } else {\r\n            ease = ease || \"swing\";\r\n        }\r\n\r\n        if (delay) {\r\n            delay = delay / 1000;\r\n        } else {\r\n            delay = 0;\r\n        }\r\n\r\n        if (langx.isString(properties)) {\r\n            // keyframe animation\r\n            cssValues[animationName] = properties;\r\n            cssValues[animationDuration] = duration + \"s\";\r\n            cssValues[animationTiming] = ease;\r\n            endEvent = animationEnd;\r\n        } else {\r\n            // CSS transitions\r\n            for (key in properties) {\r\n                var v = properties[key];\r\n                if (supportedTransforms.test(key)) {\r\n                    transforms += key + \"(\" + v + \") \";\r\n                } else {\r\n                    if (key === \"scrollTop\") {\r\n                        hasScrollTop = true;\r\n                    }\r\n                    if (key == \"clip\" && langx.isPlainObject(v)) {\r\n                        cssValues[key] = \"rect(\" + v.top+\"px,\"+ v.right +\"px,\"+ v.bottom +\"px,\"+ v.left+\"px)\";\r\n                        if (styler.css(elm,\"clip\") == \"auto\") {\r\n                            var size = geom.size(elm);\r\n                            styler.css(elm,\"clip\",\"rect(\"+\"0px,\"+ size.width +\"px,\"+ size.height +\"px,\"+\"0px)\");  \r\n                            resetClipAuto = true;\r\n                        }\r\n\r\n                    } else {\r\n                        cssValues[key] = v;\r\n                    }\r\n                    cssProperties.push(langx.dasherize(key));\r\n                }\r\n            }\r\n            endEvent = transitionEnd;\r\n        }\r\n\r\n        if (transforms) {\r\n            cssValues[transform] = transforms;\r\n            cssProperties.push(transform);\r\n        }\r\n\r\n        if (duration > 0 && langx.isPlainObject(properties)) {\r\n            cssValues[transitionProperty] = cssProperties.join(\", \");\r\n            cssValues[transitionDuration] = duration + \"s\";\r\n            cssValues[transitionDelay] = delay + \"s\";\r\n            cssValues[transitionTiming] = ease;\r\n        }\r\n\r\n        wrappedCallback = function(event) {\r\n            fired = true;\r\n            if (event) {\r\n                if (event.target !== event.currentTarget) {\r\n                    return // makes sure the event didn't bubble from \"below\"\r\n                }\r\n                eventer.off(event.target, endEvent, wrappedCallback)\r\n            } else {\r\n                eventer.off(elm, animationEnd, wrappedCallback) // triggered by setTimeout\r\n            }\r\n            styler.css(elm, cssReset);\r\n            if (resetClipAuto) {\r\n //               styler.css(elm,\"clip\",\"auto\");\r\n            }\r\n            callback && callback.call(this);\r\n        };\r\n\r\n        if (duration > 0) {\r\n            eventer.on(elm, endEvent, wrappedCallback);\r\n            // transitionEnd is not always firing on older Android phones\r\n            // so make sure it gets fired\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, ((duration + delay) * 1000) + 25)();\r\n        }\r\n\r\n        // trigger page reflow so new elements can animate\r\n        elm.clientLeft;\r\n\r\n        styler.css(elm, cssValues);\r\n\r\n        if (duration <= 0) {\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, 0)();\r\n        }\r\n\r\n        if (hasScrollTop) {\r\n            scrollToTop(elm, properties[\"scrollTop\"], duration, callback);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display an element.\r\n     * @param {Object} elm  \r\n     * @param {String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function show(elm, speed, callback) {\r\n        styler.show(elm);\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            styler.css(elm, \"opacity\", 0)\r\n            animate(elm, { opacity: 1, scale: \"1,1\" }, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Hide an element.\r\n     * @param {Object} elm  \r\n     * @param {String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function hide(elm, speed, callback) {\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            animate(elm, { opacity: 0, scale: \"0,0\" }, speed, function() {\r\n                styler.hide(elm);\r\n                if (callback) {\r\n                    callback.call(elm);\r\n                }\r\n            });\r\n        } else {\r\n            styler.hide(elm);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Set the vertical position of the scroll bar for an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} pos\r\n     * @param {Number or String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function scrollToTop(elm, pos, speed, callback) {\r\n        var scrollFrom = parseInt(elm.scrollTop),\r\n            i = 0,\r\n            runEvery = 5, // run every 5ms\r\n            freq = speed * 1000 / runEvery,\r\n            scrollTo = parseInt(pos);\r\n\r\n        var interval = setInterval(function() {\r\n            i++;\r\n\r\n            if (i <= freq) elm.scrollTop = (scrollTo - scrollFrom) / freq * i + scrollFrom;\r\n\r\n            if (i >= freq + 1) {\r\n                clearInterval(interval);\r\n                if (callback) langx.debounce(callback, 1000)();\r\n            }\r\n        }, runEvery);\r\n    }\r\n\r\n    /*   \r\n     * Display or hide an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function toggle(elm, speed, callback) {\r\n        if (styler.isInvisible(elm)) {\r\n            show(elm, speed, callback);\r\n        } else {\r\n            hide(elm, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Adjust the opacity of an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {Number or String} opacity\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeTo(elm, speed, opacity, easing, callback) {\r\n        animate(elm, { opacity: opacity }, speed, easing, callback);\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Display an element by fading them to opaque.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeIn(elm, speed, easing, callback) {\r\n        var target = styler.css(elm, \"opacity\");\r\n        if (target > 0) {\r\n            styler.css(elm, \"opacity\", 0);\r\n        } else {\r\n            target = 1;\r\n        }\r\n        styler.show(elm);\r\n\r\n        fadeTo(elm, speed, target, easing, callback);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Hide an element by fading them to transparent.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeOut(elm, speed, easing, callback) {\r\n        var _elm = elm,\r\n            complete,\r\n            opacity = styler.css(elm,\"opacity\"),\r\n            options = {};\r\n\r\n        if (langx.isPlainObject(speed)) {\r\n            options.easing = speed.easing;\r\n            options.duration = speed.duration;\r\n            complete = speed.complete;\r\n        } else {\r\n            options.duration = speed;\r\n            if (callback) {\r\n                complete = callback;\r\n                options.easing = easing;\r\n            } else {\r\n                complete = easing;\r\n            }\r\n        }\r\n        options.complete = function() {\r\n            styler.css(elm,\"opacity\",opacity);\r\n            styler.hide(elm);\r\n            if (complete) {\r\n                complete.call(elm);\r\n            }\r\n        }\r\n\r\n        fadeTo(elm, options, 0);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display or hide an element by animating its opacity.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} ceasing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeToggle(elm, speed, ceasing, allback) {\r\n        if (styler.isInvisible(elm)) {\r\n            fadeIn(elm, speed, easing, callback);\r\n        } else {\r\n            fadeOut(elm, speed, easing, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideDown(elm, duration, callback) {\r\n\r\n        // get the element position to restore it then\r\n        var position = styler.css(elm, 'position');\r\n\r\n        // show element if it is hidden\r\n        show(elm);\r\n\r\n        // place it so it displays as usually but hidden\r\n        styler.css(elm, {\r\n            position: 'absolute',\r\n            visibility: 'hidden'\r\n        });\r\n\r\n        // get naturally height, margin, padding\r\n        var marginTop = styler.css(elm, 'margin-top');\r\n        var marginBottom = styler.css(elm, 'margin-bottom');\r\n        var paddingTop = styler.css(elm, 'padding-top');\r\n        var paddingBottom = styler.css(elm, 'padding-bottom');\r\n        var height = styler.css(elm, 'height');\r\n\r\n        // set initial css for animation\r\n        styler.css(elm, {\r\n            position: position,\r\n            visibility: 'visible',\r\n            overflow: 'hidden',\r\n            height: 0,\r\n            marginTop: 0,\r\n            marginBottom: 0,\r\n            paddingTop: 0,\r\n            paddingBottom: 0\r\n        });\r\n\r\n        // animate to gotten height, margin and padding\r\n        animate(elm, {\r\n            height: height,\r\n            marginTop: marginTop,\r\n            marginBottom: marginBottom,\r\n            paddingTop: paddingTop,\r\n            paddingBottom: paddingBottom\r\n        }, {\r\n            duration: duration,\r\n            complete: function() {\r\n                if (callback) {\r\n                    callback.apply(elm);\r\n                }\r\n            }\r\n        });\r\n\r\n        return this;\r\n    };\r\n\r\n    /*   \r\n     * Hide an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideUp(elm, duration, callback) {\r\n        // active the function only if the element is visible\r\n        if (geom.height(elm) > 0) {\r\n\r\n            // get the element position to restore it then\r\n            var position = styler.css(elm, 'position');\r\n\r\n            // get the element height, margin and padding to restore them then\r\n            var height = styler.css(elm, 'height');\r\n            var marginTop = styler.css(elm, 'margin-top');\r\n            var marginBottom = styler.css(elm, 'margin-bottom');\r\n            var paddingTop = styler.css(elm, 'padding-top');\r\n            var paddingBottom = styler.css(elm, 'padding-bottom');\r\n\r\n            // set initial css for animation\r\n            styler.css(elm, {\r\n                visibility: 'visible',\r\n                overflow: 'hidden',\r\n                height: height,\r\n                marginTop: marginTop,\r\n                marginBottom: marginBottom,\r\n                paddingTop: paddingTop,\r\n                paddingBottom: paddingBottom\r\n            });\r\n\r\n            // animate element height, margin and padding to zero\r\n            animate(elm, {\r\n                height: 0,\r\n                marginTop: 0,\r\n                marginBottom: 0,\r\n                paddingTop: 0,\r\n                paddingBottom: 0\r\n            }, {\r\n                // callback : restore the element position, height, margin and padding to original values\r\n                duration: duration,\r\n                queue: false,\r\n                complete: function() {\r\n                    hide(elm);\r\n                    styler.css(elm, {\r\n                        visibility: 'visible',\r\n                        overflow: 'hidden',\r\n                        height: height,\r\n                        marginTop: marginTop,\r\n                        marginBottom: marginBottom,\r\n                        paddingTop: paddingTop,\r\n                        paddingBottom: paddingBottom\r\n                    });\r\n                    if (callback) {\r\n                        callback.apply(elm);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        return this;\r\n    };\r\n\r\n\r\n    /*   \r\n     * Display or hide an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideToggle(elm, duration, callback) {\r\n\r\n        // if the element is hidden, slideDown !\r\n        if (geom.height(elm) == 0) {\r\n            slideDown(elm, duration, callback);\r\n        }\r\n        // if the element is visible, slideUp !\r\n        else {\r\n            slideUp(elm, duration, callback);\r\n        }\r\n        return this;\r\n    };\r\n\r\n\r\n    function fx() {\r\n        return fx;\r\n    }\r\n\r\n    langx.mixin(fx, {\r\n        off: false,\r\n\r\n        speeds: {\r\n            normal: 400,\r\n            fast: 200,\r\n            slow: 600\r\n        },\r\n\r\n        animate: animate,\r\n        fadeIn: fadeIn,\r\n        fadeOut: fadeOut,\r\n        fadeTo: fadeTo,\r\n        fadeToggle: fadeToggle,\r\n        hide: hide,\r\n        scrollToTop: scrollToTop,\r\n\r\n        slideDown: slideDown,\r\n        slideToggle: slideToggle,\r\n        slideUp: slideUp,\r\n        show: show,\r\n        toggle: toggle\r\n    });\r\n\r\n    return skylark.fx = fx;\r\n});\ndefine('skylark-utils-dom/transforms',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./datax\",\r\n    \"./styler\"\r\n], function(skylark,langx,browser,datax,styler) {\r\n  var css3Transform = browser.normalizeCssProperty(\"transform\");\r\n\r\n  function getMatrix(radian, x, y) {\r\n    var Cos = Math.cos(radian), Sin = Math.sin(radian);\r\n    return {\r\n      M11: Cos * x, \r\n      M12: -Sin * y,\r\n      M21: Sin * x, \r\n      M22: Cos * y\r\n    };\r\n  }\r\n\r\n  function getZoom(scale, zoom) {\r\n      return scale > 0 && scale > -zoom ? zoom :\r\n        scale < 0 && scale < zoom ? -zoom : 0;\r\n  }\r\n\r\n    function change(el,d) {\r\n      var matrix = getMatrix(d.radian, d.y, d.x);\r\n      styler.css(el,css3Transform, \"matrix(\"\r\n        + matrix.M11.toFixed(16) + \",\" + matrix.M21.toFixed(16) + \",\"\r\n        + matrix.M12.toFixed(16) + \",\" + matrix.M22.toFixed(16) + \", 0, 0)\"\r\n      );      \r\n  }\r\n\r\n  function transformData(el,d) {\r\n    if (d) {\r\n      datax.data(el,\"transform\",d);\r\n    } else {\r\n      d = datax.data(el,\"transform\") || {};\r\n      d.radian = d.radian || 0;\r\n      d.x = d.x || 1;\r\n      d.y = d.y || 1;\r\n      d.zoom = d.zoom || 1;\r\n      return d;     \r\n    }\r\n  }\r\n\r\n  var calcs = {\r\n    //Vertical flip\r\n    vertical : function (d) {\r\n        d.radian = Math.PI - d.radian; \r\n        d.y *= -1;\r\n    },\r\n\r\n   //Horizontal flip\r\n    horizontal : function (d) {\r\n        d.radian = Math.PI - d.radian; \r\n        d.x *= -1;\r\n    },\r\n\r\n    //Rotate according to angle\r\n    rotate : function (d,degress) {\r\n        d.radian = degress * Math.PI / 180;; \r\n    },\r\n\r\n    //Turn left 90 degrees\r\n    left : function (d) {\r\n        d.radian -= Math.PI / 2; \r\n    },\r\n\r\n    //Turn right 90 degrees\r\n    right : function (d) {\r\n        d.radian += Math.PI / 2; \r\n    },\r\n \r\n    //zoom\r\n    scale: function (d,zoom) {\r\n        var hZoom = getZoom(d.y, zoom), vZoom = getZoom(d.x, zoom);\r\n        if (hZoom && vZoom) {\r\n          d.y += hZoom; \r\n          d.x += vZoom;\r\n        }\r\n    }, \r\n\r\n    //zoom in\r\n    zoomin: function (d) { \r\n      calcs.scale(d,0.1); \r\n    },\r\n    \r\n    //zoom out\r\n    zoomout: function (d) { \r\n      calcs.scale(d,-0.1); \r\n    }\r\n\r\n  };\r\n  \r\n  \r\n  function _createApiMethod(calcFunc) {\r\n    return function() {\r\n      var args = langx.makeArray(arguments),\r\n        el = args.shift(),\r\n          d = transformData(el);\r\n        args.unshift(d);\r\n        calcFunc.apply(this,args)\r\n        change(el,d);\r\n        transformData(el,d);\r\n    }\r\n  }\r\n  \r\n  function transforms() {\r\n    return transforms;\r\n  }\r\n\r\n  [\"vertical\",\"horizontal\",\"rotate\",\"left\",\"right\",\"scale\",\"zoom\",\"zoomin\",\"zoomout\"].forEach(function(name){\r\n    transforms[name] = _createApiMethod(calcs[name]);\r\n  });\r\n\r\n  langx.mixin(transforms, {\r\n    reset : function(el) {\r\n      var d = {\r\n        x : 1,\r\n        y : 1,\r\n        radian : 0,\r\n      }\r\n      change(el,d);\r\n      transformData(el,d);\r\n    }\r\n  });\r\n\r\n\r\n  return skylark.transforms = transforms;\r\n});\r\n\ndefine('skylark-utils-dom/query',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./eventer\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./fx\"\r\n], function(skylark, langx, noder, datax, eventer, finder, geom, styler, fx) {\r\n    var some = Array.prototype.some,\r\n        push = Array.prototype.push,\r\n        every = Array.prototype.every,\r\n        concat = Array.prototype.concat,\r\n        slice = Array.prototype.slice,\r\n        map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        forEach = Array.prototype.forEach,\r\n        indexOf = Array.prototype.indexOf,\r\n        sort = Array.prototype.sort,\r\n        isQ;\r\n\r\n    var rquickExpr = /^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)/;\r\n\r\n    var funcArg = langx.funcArg,\r\n        isArrayLike = langx.isArrayLike,\r\n        isString = langx.isString,\r\n        uniq = langx.uniq,\r\n        isFunction = langx.isFunction;\r\n\r\n    var type = langx.type,\r\n        isArray = langx.isArray,\r\n\r\n        isWindow = langx.isWindow,\r\n\r\n        isDocument = langx.isDocument,\r\n\r\n        isObject = langx.isObject,\r\n\r\n        isPlainObject = langx.isPlainObject,\r\n\r\n        compact = langx.compact,\r\n\r\n        flatten = langx.flatten,\r\n\r\n        camelCase = langx.camelCase,\r\n\r\n        dasherize = langx.dasherize,\r\n        children = finder.children;\r\n\r\n    function wrapper_map(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = $.map(self, function(elem, idx) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n            return $(uniq(result));\r\n        }\r\n    }\r\n\r\n    function wrapper_selector(func, context, last) {\r\n        return function(selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem] : [elem, selector]);\r\n                }\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper_selector_until(func, context, last) {\r\n        return function(util, selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            if (selector === undefined) {\r\n                selector = util;\r\n                util = undefined;\r\n            }\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem, util] : [elem, selector, util]);\r\n                }\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function wrapper_every_act(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            this.each(function(idx) {\r\n                func.apply(context, [this].concat(params));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_every_act_firstArgFunc(func, context, oldValueFunc) {\r\n        return function(arg1) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            forEach.call(self, function(elem, idx) {\r\n                var newArg1 = funcArg(elem, arg1, idx, oldValueFunc(elem));\r\n                func.apply(context, [elem, arg1].concat(params.slice(1)));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_some_chk(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            return some.call(self, function(elem) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n        }\r\n    }\r\n\r\n    function wrapper_name_value(func, context, oldValueFunc) {\r\n        return function(name, value) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n\r\n            if (langx.isPlainObject(name) || langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem, name));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem].concat(params));\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0], name]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    function wrapper_value(func, context, oldValueFunc) {\r\n        return function(value) {\r\n            var self = this;\r\n\r\n            if (langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem, newValue]);\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0]]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    var NodeList = langx.klass({\r\n        klassName: \"SkNodeList\",\r\n        init: function(selector, context) {\r\n            var self = this,\r\n                match, nodes, node, props;\r\n\r\n            if (selector) {\r\n                self.context = context = context || noder.doc();\r\n\r\n                if (isString(selector)) {\r\n                    // a html string or a css selector is expected\r\n                    self.selector = selector;\r\n\r\n                    if (selector.charAt(0) === \"<\" && selector.charAt(selector.length - 1) === \">\" && selector.length >= 3) {\r\n                        match = [null, selector, null];\r\n                    } else {\r\n                        match = rquickExpr.exec(selector);\r\n                    }\r\n\r\n                    if (match) {\r\n                        if (match[1]) {\r\n                            // if selector is html\r\n                            nodes = noder.createFragment(selector);\r\n\r\n                            if (langx.isPlainObject(context)) {\r\n                                props = context;\r\n                            }\r\n\r\n                        } else {\r\n                            node = finder.byId(match[2], noder.ownerDoc(context));\r\n\r\n                            if (node) {\r\n                                // if selector is id\r\n                                nodes = [node];\r\n                            }\r\n\r\n                        }\r\n                    } else {\r\n                        // if selector is css selector\r\n                        if (langx.isString(context)) {\r\n                            context = finder.find(context);\r\n                        }\r\n\r\n                        nodes = finder.descendants(context, selector);\r\n                    }\r\n                } else {\r\n                    if (isArray(selector)) {\r\n                        // a dom node array is expected\r\n                        nodes = selector;\r\n                    } else {\r\n                        // a dom node is expected\r\n                        nodes = [selector];\r\n                    }\r\n                    //self.add(selector, false);\r\n                }\r\n            }\r\n\r\n\r\n            if (nodes) {\r\n\r\n                push.apply(self, nodes);\r\n\r\n                if (props) {\r\n                    for ( var name  in props ) {\r\n                        // Properties of context are called as methods if possible\r\n                        if ( langx.isFunction( this[ name ] ) ) {\r\n                            this[ name ]( props[ name ] );\r\n                        } else {\r\n                            this.attr( name, props[ name ] );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return self;\r\n        }\r\n    });\r\n\r\n    var query = (function() {\r\n        isQ = function(object) {\r\n            return object instanceof NodeList;\r\n        }\r\n        init = function(selector, context) {\r\n            return new NodeList(selector, context);\r\n        }\r\n\r\n        var $ = function(selector, context) {\r\n            if (isFunction(selector)) {\r\n                eventer.ready(function() {\r\n                    selector($);\r\n                });\r\n            } else if (isQ(selector)) {\r\n                return selector;\r\n            } else {\r\n                if (context && isQ(context) && isString(selector)) {\r\n                    return context.find(selector);\r\n                }\r\n                return init(selector, context);\r\n            }\r\n        };\r\n\r\n        $.fn = NodeList.prototype;\r\n        langx.mixin($.fn, {\r\n            // `map` and `slice` in the jQuery API work differently\r\n            // from their array counterparts\r\n            length : 0,\r\n\r\n            map: function(fn) {\r\n                return $(uniq(langx.map(this, function(el, i) {\r\n                    return fn.call(el, i, el)\r\n                })));\r\n            },\r\n\r\n            slice: function() {\r\n                return $(slice.apply(this, arguments))\r\n            },\r\n\r\n            forEach: function() {\r\n                return forEach.apply(this,arguments);\r\n            },\r\n\r\n            get: function(idx) {\r\n                return idx === undefined ? slice.call(this) : this[idx >= 0 ? idx : idx + this.length]\r\n            },\r\n\r\n            indexOf: function() {\r\n                return indexOf.apply(this,arguments);\r\n            },\r\n\r\n            sort : function() {\r\n                return sort.apply(this,arguments);\r\n            },\r\n\r\n            toArray: function() {\r\n                return slice.call(this);\r\n            },\r\n\r\n            size: function() {\r\n                return this.length\r\n            },\r\n\r\n            remove: wrapper_every_act(noder.remove, noder),\r\n\r\n            each: function(callback) {\r\n                langx.each(this, callback);\r\n                return this;\r\n            },\r\n\r\n            filter: function(selector) {\r\n                if (isFunction(selector)) return this.not(this.not(selector))\r\n                return $(filter.call(this, function(element) {\r\n                    return finder.matches(element, selector)\r\n                }))\r\n            },\r\n\r\n            add: function(selector, context) {\r\n                return $(uniq(this.toArray().concat($(selector, context).toArray())));\r\n            },\r\n\r\n            is: function(selector) {\r\n                if (this.length > 0) {\r\n                    var self = this;\r\n                    if (langx.isString(selector)) {\r\n                        return some.call(self,function(elem) {\r\n                            return finder.matches(elem, selector);\r\n                        });\r\n                    } else if (langx.isArrayLike(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return langx.inArray(elem, selector) > -1;\r\n                        });\r\n                    } else if (langx.isHtmlNode(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return elem ==  selector;\r\n                        });\r\n                    }\r\n                }\r\n                return false;\r\n            },\r\n            \r\n            not: function(selector) {\r\n                var nodes = []\r\n                if (isFunction(selector) && selector.call !== undefined)\r\n                    this.each(function(idx) {\r\n                        if (!selector.call(this, idx)) nodes.push(this)\r\n                    })\r\n                else {\r\n                    var excludes = typeof selector == 'string' ? this.filter(selector) :\r\n                        (isArrayLike(selector) && isFunction(selector.item)) ? slice.call(selector) : $(selector)\r\n                    this.forEach(function(el) {\r\n                        if (excludes.indexOf(el) < 0) nodes.push(el)\r\n                    })\r\n                }\r\n                return $(nodes)\r\n            },\r\n\r\n            has: function(selector) {\r\n                return this.filter(function() {\r\n                    return isObject(selector) ?\r\n                        noder.contains(this, selector) :\r\n                        $(this).find(selector).size()\r\n                })\r\n            },\r\n\r\n            eq: function(idx) {\r\n                return idx === -1 ? this.slice(idx) : this.slice(idx, +idx + 1);\r\n            },\r\n\r\n            first: function() {\r\n                return this.eq(0);\r\n            },\r\n\r\n            last: function() {\r\n                return this.eq(-1);\r\n            },\r\n\r\n            find: wrapper_selector(finder.descendants, finder),\r\n\r\n            closest: wrapper_selector(finder.closest, finder),\r\n            /*\r\n                        closest: function(selector, context) {\r\n                            var node = this[0],\r\n                                collection = false\r\n                            if (typeof selector == 'object') collection = $(selector)\r\n                            while (node && !(collection ? collection.indexOf(node) >= 0 : finder.matches(node, selector)))\r\n                                node = node !== context && !isDocument(node) && node.parentNode\r\n                            return $(node)\r\n                        },\r\n            */\r\n\r\n\r\n            parents: wrapper_selector(finder.ancestors, finder),\r\n\r\n            parentsUntil: wrapper_selector_until(finder.ancestors, finder),\r\n\r\n\r\n            parent: wrapper_selector(finder.parent, finder),\r\n\r\n            children: wrapper_selector(finder.children, finder),\r\n\r\n            contents: wrapper_map(noder.contents, noder),\r\n\r\n            empty: wrapper_every_act(noder.empty, noder),\r\n\r\n            // `pluck` is borrowed from Prototype.js\r\n            pluck: function(property) {\r\n                return langx.map(this, function(el) {\r\n                    return el[property]\r\n                })\r\n            },\r\n\r\n            pushStack : function(elms) {\r\n                var ret = $(elms);\r\n                ret.prevObject = this;\r\n                return ret;\r\n            },\r\n            \r\n            show: wrapper_every_act(fx.show, fx),\r\n\r\n            replaceWith: function(newContent) {\r\n                return this.before(newContent).remove();\r\n            },\r\n\r\n            wrap: function(structure) {\r\n                var func = isFunction(structure)\r\n                if (this[0] && !func)\r\n                    var dom = $(structure).get(0),\r\n                        clone = dom.parentNode || this.length > 1\r\n\r\n                return this.each(function(index) {\r\n                    $(this).wrapAll(\r\n                        func ? structure.call(this, index) :\r\n                        clone ? dom.cloneNode(true) : dom\r\n                    )\r\n                })\r\n            },\r\n\r\n            wrapAll: function(wrappingElement) {\r\n                if (this[0]) {\r\n                    $(this[0]).before(wrappingElement = $(wrappingElement));\r\n                    var children;\r\n                    // drill down to the inmost element\r\n                    while ((children = wrappingElement.children()).length) {\r\n                        wrappingElement = children.first();\r\n                    }\r\n                    $(wrappingElement).append(this);\r\n                }\r\n                return this\r\n            },\r\n\r\n            wrapInner: function(wrappingElement) {\r\n                var func = isFunction(wrappingElement)\r\n                return this.each(function(index) {\r\n                    var self = $(this),\r\n                        contents = self.contents(),\r\n                        dom = func ? wrappingElement.call(this, index) : wrappingElement\r\n                    contents.length ? contents.wrapAll(dom) : self.append(dom)\r\n                })\r\n            },\r\n\r\n            unwrap: function(selector) {\r\n                if (this.parent().children().length === 0) {\r\n                    // remove dom without text\r\n                    this.parent(selector).not(\"body\").each(function() {\r\n                        $(this).replaceWith(document.createTextNode(this.childNodes[0].textContent));\r\n                    });\r\n                } else {\r\n                    this.parent().each(function() {\r\n                        $(this).replaceWith($(this).children())\r\n                    });\r\n                }\r\n                return this\r\n            },\r\n\r\n            clone: function() {\r\n                return this.map(function() {\r\n                    return this.cloneNode(true)\r\n                })\r\n            },\r\n\r\n            hide: wrapper_every_act(fx.hide, fx),\r\n\r\n            toggle: function(setting) {\r\n                return this.each(function() {\r\n                    var el = $(this);\r\n                    (setting === undefined ? el.css(\"display\") == \"none\" : setting) ? el.show(): el.hide()\r\n                })\r\n            },\r\n\r\n            prev: function(selector) {\r\n                return $(this.pluck('previousElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            prevAll: wrapper_selector(finder.previousSibling, finder),\r\n\r\n            next: function(selector) {\r\n                return $(this.pluck('nextElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            nextAll: wrapper_selector(finder.nextSiblings, finder),\r\n\r\n            siblings: wrapper_selector(finder.siblings, finder),\r\n\r\n            html: wrapper_value(noder.html, noder, noder.html),\r\n\r\n            text: wrapper_value(datax.text, datax, datax.text),\r\n\r\n            attr: wrapper_name_value(datax.attr, datax, datax.attr),\r\n\r\n            removeAttr: wrapper_every_act(datax.removeAttr, datax),\r\n\r\n            prop: wrapper_name_value(datax.prop, datax, datax.prop),\r\n\r\n            removeProp: wrapper_every_act(datax.removeProp, datax),\r\n\r\n            data: wrapper_name_value(datax.data, datax, datax.data),\r\n\r\n            removeData: wrapper_every_act(datax.removeData, datax),\r\n\r\n            val: wrapper_value(datax.val, datax, datax.val),\r\n\r\n            offset: wrapper_value(geom.pagePosition, geom, geom.pagePosition),\r\n\r\n            style: wrapper_name_value(styler.css, styler),\r\n\r\n            css: wrapper_name_value(styler.css, styler),\r\n\r\n            index: function(elem) {\r\n                if (elem) {\r\n                    return this.indexOf($(elem)[0]);\r\n                } else {\r\n                    return this.parent().children().indexOf(this[0]);\r\n                }\r\n            },\r\n\r\n            //hasClass(name)\r\n            hasClass: wrapper_some_chk(styler.hasClass, styler),\r\n\r\n            //addClass(name)\r\n            addClass: wrapper_every_act_firstArgFunc(styler.addClass, styler, styler.className),\r\n\r\n            //removeClass(name)\r\n            removeClass: wrapper_every_act_firstArgFunc(styler.removeClass, styler, styler.className),\r\n\r\n            //toogleClass(name,when)\r\n            toggleClass: wrapper_every_act_firstArgFunc(styler.toggleClass, styler, styler.className),\r\n\r\n            scrollTop: wrapper_value(geom.scrollTop, geom),\r\n\r\n            scrollLeft: wrapper_value(geom.scrollLeft, geom),\r\n\r\n            position: function() {\r\n                if (!this.length) return\r\n\r\n                var elem = this[0];\r\n\r\n                return geom.relativePosition(elem);\r\n            },\r\n\r\n            offsetParent: wrapper_map(geom.offsetParent, geom)\r\n        });\r\n\r\n        // for now\r\n        $.fn.detach = $.fn.remove;\r\n\r\n        $.fn.hover = function(fnOver, fnOut) {\r\n            return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);\r\n        };\r\n\r\n        $.fn.size = wrapper_value(geom.size, geom);\r\n\r\n        $.fn.width = wrapper_value(geom.width, geom, geom.width);\r\n\r\n        $.fn.height = wrapper_value(geom.height, geom, geom.height);\r\n\r\n        $.fn.clientSize = wrapper_value(geom.clientSize, geom.clientSize);\r\n\r\n        ['width', 'height'].forEach(function(dimension) {\r\n            var offset, Dimension = dimension.replace(/./, function(m) {\r\n                return m[0].toUpperCase()\r\n            });\r\n\r\n            $.fn['outer' + Dimension] = function(margin, value) {\r\n                if (arguments.length) {\r\n                    if (typeof margin !== 'boolean') {\r\n                        value = margin;\r\n                        margin = false;\r\n                    }\r\n                } else {\r\n                    margin = false;\r\n                    value = undefined;\r\n                }\r\n\r\n                if (value === undefined) {\r\n                    var el = this[0];\r\n                    if (!el) {\r\n                        return undefined;\r\n                    }\r\n                    var cb = geom.size(el);\r\n                    if (margin) {\r\n                        var me = geom.marginExtents(el);\r\n                        cb.width = cb.width + me.left + me.right;\r\n                        cb.height = cb.height + me.top + me.bottom;\r\n                    }\r\n                    return dimension === \"width\" ? cb.width : cb.height;\r\n                } else {\r\n                    return this.each(function(idx, el) {\r\n                        var mb = {};\r\n                        var me = geom.marginExtents(el);\r\n                        if (dimension === \"width\") {\r\n                            mb.width = value;\r\n                            if (margin) {\r\n                                mb.width = mb.width - me.left - me.right\r\n                            }\r\n                        } else {\r\n                            mb.height = value;\r\n                            if (margin) {\r\n                                mb.height = mb.height - me.top - me.bottom;\r\n                            }\r\n                        }\r\n                        geom.size(el, mb);\r\n                    })\r\n\r\n                }\r\n            };\r\n        })\r\n\r\n        $.fn.innerWidth = wrapper_value(geom.clientWidth, geom, geom.clientWidth);\r\n\r\n        $.fn.innerHeight = wrapper_value(geom.clientHeight, geom, geom.clientHeight);\r\n\r\n\r\n        var traverseNode = noder.traverse;\r\n\r\n        function wrapper_node_operation(func, context, oldValueFunc) {\r\n            return function(html) {\r\n                var argType, nodes = langx.map(arguments, function(arg) {\r\n                    argType = type(arg)\r\n                    return argType == \"object\" || argType == \"array\" || arg == null ?\r\n                        arg : noder.createFragment(arg)\r\n                });\r\n                if (nodes.length < 1) {\r\n                    return this\r\n                }\r\n                this.each(function(idx) {\r\n                    func.apply(context, [this, nodes, idx > 0]);\r\n                });\r\n                return this;\r\n            }\r\n        }\r\n\r\n\r\n        $.fn.after = wrapper_node_operation(noder.after, noder);\r\n\r\n        $.fn.prepend = wrapper_node_operation(noder.prepend, noder);\r\n\r\n        $.fn.before = wrapper_node_operation(noder.before, noder);\r\n\r\n        $.fn.append = wrapper_node_operation(noder.append, noder);\r\n\r\n\r\n        langx.each( {\r\n            appendTo: \"append\",\r\n            prependTo: \"prepend\",\r\n            insertBefore: \"before\",\r\n            insertAfter: \"after\",\r\n            replaceAll: \"replaceWith\"\r\n        }, function( name, original ) {\r\n            $.fn[ name ] = function( selector ) {\r\n                var elems,\r\n                    ret = [],\r\n                    insert = $( selector ),\r\n                    last = insert.length - 1,\r\n                    i = 0;\r\n\r\n                for ( ; i <= last; i++ ) {\r\n                    elems = i === last ? this : this.clone( true );\r\n                    $( insert[ i ] )[ original ]( elems );\r\n\r\n                    // Support: Android <=4.0 only, PhantomJS 1 only\r\n                    // .get() because push.apply(_, arraylike) throws on ancient WebKit\r\n                    push.apply( ret, elems.get() );\r\n                }\r\n\r\n                return this.pushStack( ret );\r\n            };\r\n        } );\r\n\r\n/*\r\n        $.fn.insertAfter = function(html) {\r\n            $(html).after(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.insertBefore = function(html) {\r\n            $(html).before(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.appendTo = function(html) {\r\n            $(html).append(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.prependTo = function(html) {\r\n            $(html).prepend(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.replaceAll = function(selector) {\r\n            $(selector).replaceWith(this);\r\n            return this;\r\n        };\r\n*/\r\n        return $;\r\n    })();\r\n\r\n    (function($) {\r\n        $.fn.on = wrapper_every_act(eventer.on, eventer);\r\n\r\n        $.fn.off = wrapper_every_act(eventer.off, eventer);\r\n\r\n        $.fn.trigger = wrapper_every_act(eventer.trigger, eventer);\r\n\r\n        ('focusin focusout focus blur load resize scroll unload click dblclick ' +\r\n            'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave ' +\r\n            'change select keydown keypress keyup error transitionEnd').split(' ').forEach(function(event) {\r\n            $.fn[event] = function(data, callback) {\r\n                return (0 in arguments) ?\r\n                    this.on(event, data, callback) :\r\n                    this.trigger(event)\r\n            }\r\n        });\r\n\r\n        $.fn.one = function(event, selector, data, callback) {\r\n            if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n                callback = data;\r\n                data = selector;\r\n                selector = null;\r\n            }\r\n\r\n            if (langx.isFunction(data)) {\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            return this.on(event, selector, data, callback, 1)\r\n        };\r\n\r\n        $.fn.animate = wrapper_every_act(fx.animate, fx);\r\n\r\n        $.fn.show = wrapper_every_act(fx.show, fx);\r\n        $.fn.hide = wrapper_every_act(fx.hide, fx);\r\n        $.fn.toogle = wrapper_every_act(fx.toogle, fx);\r\n        $.fn.fadeTo = wrapper_every_act(fx.fadeTo, fx);\r\n        $.fn.fadeIn = wrapper_every_act(fx.fadeIn, fx);\r\n        $.fn.fadeOut = wrapper_every_act(fx.fadeOut, fx);\r\n        $.fn.fadeToggle = wrapper_every_act(fx.fadeToggle, fx);\r\n\r\n        $.fn.slideDown = wrapper_every_act(fx.slideDown, fx);\r\n        $.fn.slideToggle = wrapper_every_act(fx.slideToggle, fx);\r\n        $.fn.slideUp = wrapper_every_act(fx.slideUp, fx);\r\n\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.end = function() {\r\n            return this.prevObject || $()\r\n        }\r\n\r\n        $.fn.andSelf = function() {\r\n            return this.add(this.prevObject || $())\r\n        }\r\n\r\n        $.fn.addBack = function(selector) {\r\n            if (this.prevObject) {\r\n                if (selector) {\r\n                    return this.add(this.prevObject.filter(selector));\r\n                } else {\r\n                    return this.add(this.prevObject);\r\n                }\r\n            } else {\r\n                return this;\r\n            }\r\n        }\r\n\r\n        'filter,add,not,eq,first,last,find,closest,parents,parent,children,siblings'.split(',').forEach(function(property) {\r\n            var fn = $.fn[property]\r\n            $.fn[property] = function() {\r\n                var ret = fn.apply(this, arguments)\r\n                ret.prevObject = this\r\n                return ret\r\n            }\r\n        })\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.query = $.fn.find;\r\n\r\n        $.fn.place = function(refNode, position) {\r\n            // summary:\r\n            //      places elements of this node list relative to the first element matched\r\n            //      by queryOrNode. Returns the original NodeList. See: `dojo/dom-construct.place`\r\n            // queryOrNode:\r\n            //      may be a string representing any valid CSS3 selector or a DOM node.\r\n            //      In the selector case, only the first matching element will be used\r\n            //      for relative positioning.\r\n            // position:\r\n            //      can be one of:\r\n            //\r\n            //      -   \"last\" (default)\r\n            //      -   \"first\"\r\n            //      -   \"before\"\r\n            //      -   \"after\"\r\n            //      -   \"only\"\r\n            //      -   \"replace\"\r\n            //\r\n            //      or an offset in the childNodes\r\n            if (langx.isString(refNode)) {\r\n                refNode = finder.descendant(refNode);\r\n            } else if (isQ(refNode)) {\r\n                refNode = refNode[0];\r\n            }\r\n            return this.each(function(i, node) {\r\n                switch (position) {\r\n                    case \"before\":\r\n                        noder.before(refNode, node);\r\n                        break;\r\n                    case \"after\":\r\n                        noder.after(refNode, node);\r\n                        break;\r\n                    case \"replace\":\r\n                        noder.replace(refNode, node);\r\n                        break;\r\n                    case \"only\":\r\n                        noder.empty(refNode);\r\n                        noder.append(refNode, node);\r\n                        break;\r\n                    case \"first\":\r\n                        noder.prepend(refNode, node);\r\n                        break;\r\n                        // else fallthrough...\r\n                    default: // aka: last\r\n                        noder.append(refNode, node);\r\n                }\r\n            });\r\n        };\r\n\r\n        $.fn.addContent = function(content, position) {\r\n            if (content.template) {\r\n                content = langx.substitute(content.template, content);\r\n            }\r\n            return this.append(content);\r\n        };\r\n\r\n        $.fn.replaceClass = function(newClass, oldClass) {\r\n            this.removeClass(oldClass);\r\n            this.addClass(newClass);\r\n            return this;\r\n        };\r\n\r\n    })(query);\r\n\r\n    query.fn.plugin = function(name,options) {\r\n        var args = slice.call( arguments, 1 ),\r\n            self = this,\r\n            returnValue = this;\r\n\r\n        this.each(function(){\r\n            returnValue = plugins.instantiate.apply(self,[this,name].concat(args));\r\n        });\r\n        return returnValue;\r\n    };\r\n\r\n    return skylark.query = query;\r\n\r\n});\ndefine('skylark-utils-dom/images',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./eventer\",\r\n    \"./noder\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./datax\",\r\n    \"./transforms\",\r\n    \"./query\"\r\n], function(skylark,langx,eventer,noder,finder,geom,styler,datax,transforms,$) {\r\n\r\n  function watch(imgs) {\r\n    if (!langx.isArray(imgs)) {\r\n      imgs = [imgs];\r\n    }\r\n    var totalCount = imgs.length,\r\n        progressedCount = 0,\r\n        successedCount = 0,\r\n        faileredCount = 0,\r\n        d = new langx.Deferred();\r\n\r\n\r\n    function complete() {\r\n\r\n      d.resolve({\r\n        \"total\" : totalCount,\r\n        \"successed\" : successedCount,\r\n        \"failered\" : faileredCount,\r\n        \"imgs\" : imgs \r\n      });\r\n    }\r\n\r\n    function progress(img,isLoaded) {\r\n\r\n      progressedCount++;\r\n      if (isLoaded) {\r\n        successedCount ++ ; \r\n      } else {\r\n        faileredCount ++ ;\r\n      }\r\n\r\n      // progress event\r\n      d.progress({\r\n        \"img\" : img,\r\n        \"isLoaded\" : isLoaded,\r\n        \"progressed\" : progressedCount,\r\n        \"total\" : totalCount,\r\n        \"imgs\" : imgs \r\n      });\r\n\r\n      // check if completed\r\n      if ( progressedCount == totalCount ) {\r\n        complete();\r\n      }\r\n    }\r\n\r\n    function check() {\r\n      if (!imgs.length ) {\r\n        complete();\r\n        return;\r\n      }\r\n\r\n      imgs.forEach(function(img) {\r\n        if (isCompleted(img)) {\r\n          progress(img,isLoaded(img));\r\n        } else {\r\n          eventer.on(img,{\r\n            \"load\" : function() {\r\n              progress(img,true);\r\n            },\r\n\r\n            \"error\" : function() {\r\n              progress(img,false);\r\n            }\r\n          });      \r\n        }\r\n      });\r\n    }\r\n\r\n    langx.defer(check);\r\n\r\n    d.promise.totalCount = totalCount;\r\n    return d.promise;\r\n  }\r\n\r\n\r\n  function isCompleted(img) {\r\n     return img.complete && img.naturalWidth !== undefined;\r\n  }\r\n\r\n  function isLoaded(img) {\r\n    return img.complete && img.naturalWidth !== 0;\r\n  }\r\n\r\n  function loaded(elm,options) {\r\n    var imgs = [];\r\n\r\n    options = options || {};\r\n\r\n    function addBackgroundImage (elm1) {\r\n\r\n      var reURL = /url\\((['\"])?(.*?)\\1\\)/gi;\r\n      var matches = reURL.exec( styler.css(elm1,\"background-image\"));\r\n      var url = matches && matches[2];\r\n      if ( url ) {\r\n        var img = new Image();\r\n        img.src = url;\r\n        imgs.push(img);\r\n      }\r\n    }\r\n\r\n    // filter siblings\r\n    if ( elm.nodeName == 'IMG' ) {\r\n      imgs.push( elm );\r\n    } else {\r\n      // find children\r\n      var childImgs = finder.findAll(elm,'img');\r\n      // concat childElems to filterFound array\r\n      for ( var i=0; i < childImgs.length; i++ ) {\r\n        imgs.push(childImgs[i]);\r\n      }\r\n\r\n      // get background image on element\r\n      if ( options.background === true ) {\r\n        addBackgroundImage(elm);\r\n      } else  if ( typeof options.background == 'string' ) {\r\n        var children = finder.findAll(elm, options.background );\r\n        for ( i=0; i < children.length; i++ ) {\r\n          addBackgroundImage( children[i] );\r\n        }\r\n      }\r\n    }\r\n\r\n    return watch(imgs);\r\n  }\r\n\r\n  function preload(urls,options) {\r\n      if (langx.isString(urls)) {\r\n        urls = [urls];\r\n      }\r\n      var images = [];\r\n\r\n      urls.forEach(function(url){\r\n        var img = new Image();\r\n        img.src = url;\r\n        images.push(img);\r\n      });\r\n\r\n      return watch(images);\r\n  }\r\n\r\n\r\n  $.fn.imagesLoaded = function( options ) {\r\n    return loaded(this,options);\r\n  };\r\n\r\n\r\n  function viewer(el,options) {\r\n    var img ,\r\n        style = {},\r\n        clientSize = geom.clientSize(el),\r\n        loadedCallback = options.loaded,\r\n        faileredCallback = options.failered;\r\n\r\n    function onload() {\r\n        styler.css(img,{//居中\r\n          top: (clientSize.height - img.offsetHeight) / 2 + \"px\",\r\n          left: (clientSize.width - img.offsetWidth) / 2 + \"px\"\r\n        });\r\n\r\n        transforms.reset(img);\r\n\r\n        styler.css(img,{\r\n          visibility: \"visible\"\r\n        });\r\n\r\n        if (loadedCallback) {\r\n          loadedCallback();\r\n        }\r\n    }\r\n\r\n    function onerror() {\r\n\r\n    }\r\n    function _init() {\r\n      style = styler.css(el,[\"position\",\"overflow\"]);\r\n      if (style.position != \"relative\" && style.position != \"absolute\") { \r\n        styler.css(el,\"position\", \"relative\" );\r\n      }\r\n      styler.css(el,\"overflow\", \"hidden\" );\r\n\r\n      img = new Image();\r\n\r\n      styler.css(img,{\r\n        position: \"absolute\",\r\n        border: 0, padding: 0, margin: 0, width: \"auto\", height: \"auto\",\r\n        visibility: \"hidden\"\r\n      });\r\n\r\n      img.onload = onload;\r\n      img.onerror = onerror;\r\n\r\n      noder.append(el,img);\r\n\r\n      if (options.url) {\r\n        _load(options.url);\r\n      }\r\n    }\r\n\r\n    function _load(url) {\r\n        img.style.visibility = \"hidden\";\r\n        img.src = url;\r\n    }\r\n\r\n    function _dispose() {\r\n        noder.remove(img);\r\n        styler.css(el,style);\r\n        img = img.onload = img.onerror = null;\r\n    }\r\n\r\n    _init();\r\n\r\n    var ret =  {\r\n      load : _load,\r\n      dispose : _dispose\r\n    };\r\n\r\n    [\"vertical\",\"horizontal\",\"rotate\",\"left\",\"right\",\"scale\",\"zoom\",\"zoomin\",\"zoomout\",\"reset\"].forEach(\r\n      function(name){\r\n        ret[name] = function() {\r\n          var args = langx.makeArray(arguments);\r\n          args.unshift(img);\r\n          transforms[name].apply(null,args);\r\n        }\r\n      }\r\n    );\r\n\r\n    return ret;\r\n  }\r\n\r\n  $.fn.imagesViewer = function( options ) {\r\n    return viewer(this,options);\r\n  };\r\n\r\n  function images() {\r\n    return images;\r\n  }\r\n\r\n  images.transform = function (el,options) {\r\n  };\r\n\r\n  [\"vertical\",\"horizontal\",\"rotate\",\"left\",\"right\",\"scale\",\"zoom\",\"zoomin\",\"zoomout\",\"reset\"].forEach(\r\n    function(name){\r\n      images.transform[name] = transforms[name];\r\n    }\r\n  );\r\n\r\n\r\n  langx.mixin(images, {\r\n    isCompleted : isCompleted,\r\n\r\n    isLoaded : isLoaded,\r\n\r\n    loaded : loaded,\r\n\r\n    preload : preload,\r\n\r\n    viewer : viewer\r\n  });\r\n\r\n  return skylark.images = images;\r\n});\r\n\ndefine('skylark-utils-dom/velm',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./datax\",\r\n    \"./eventer\",\r\n    \"./finder\",\r\n    \"./fx\",\r\n    \"./geom\",\r\n    \"./noder\",\r\n    \"./styler\"\r\n], function(skylark, langx, datax, eventer, finder, fx, geom, noder, styler) {\r\n    var map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n    /*\r\n     * VisualElement is a skylark class type wrapping a visule dom node,\r\n     * provides a number of prototype methods and supports chain calls.\r\n     */\r\n    var VisualElement = langx.klass({\r\n        klassName: \"VisualElement\",\r\n\r\n        \"init\": function(node) {\r\n            if (langx.isString(node)) {\r\n                node = document.getElementById(node);\r\n            }\r\n            this.domNode = node;\r\n        }\r\n    });\r\n    /*\r\n     * the VisualElement object wrapping document.body\r\n     */\r\n    var root = new VisualElement(document.body),\r\n        velm = function(node) {\r\n            if (node) {\r\n                return new VisualElement(node);\r\n            } else {\r\n                return root;\r\n            }\r\n        };\r\n    /*\r\n     * Extend VisualElement prototype with wrapping the specified methods.\r\n     * @param {ArrayLike} fn\r\n     * @param {Object} context\r\n     */\r\n    function _delegator(fn, context) {\r\n        return function() {\r\n            var self = this,\r\n                elem = self.domNode,\r\n                ret = fn.apply(context, [elem].concat(slice.call(arguments)));\r\n\r\n            if (ret) {\r\n                if (ret === context) {\r\n                    return self;\r\n                } else {\r\n                    if (ret instanceof HTMLElement) {\r\n                        ret = new VisualElement(ret);\r\n                    } else if (langx.isArrayLike(ret)) {\r\n                        ret = map.call(ret, function(el) {\r\n                            if (el instanceof HTMLElement) {\r\n                                return new VisualElement(ret);\r\n                            } else {\r\n                                return el;\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            return ret;\r\n        };\r\n    }\r\n\r\n    langx.mixin(velm, {\r\n        batch: function(nodes, action, args) {\r\n            nodes.forEach(function(node) {\r\n                var elm = (node instanceof VisualElement) ? node : velm(node);\r\n                elm[action].apply(elm, args);\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        root: new VisualElement(document.body),\r\n\r\n        VisualElement: VisualElement,\r\n\r\n        partial: function(name, fn) {\r\n            var props = {};\r\n\r\n            props[name] = fn;\r\n\r\n            VisualElement.partial(props);\r\n        },\r\n\r\n        delegate: function(names, context) {\r\n            var props = {};\r\n\r\n            names.forEach(function(name) {\r\n                props[name] = _delegator(context[name], context);\r\n            });\r\n\r\n            VisualElement.partial(props);\r\n        }\r\n    });\r\n\r\n    // from ./datax\r\n    velm.delegate([\r\n        \"attr\",\r\n        \"data\",\r\n        \"prop\",\r\n        \"removeAttr\",\r\n        \"removeData\",\r\n        \"text\",\r\n        \"val\"\r\n    ], datax);\r\n\r\n    // from ./eventer\r\n    velm.delegate([\r\n        \"off\",\r\n        \"on\",\r\n        \"one\",\r\n        \"shortcuts\",\r\n        \"trigger\"\r\n    ], eventer);\r\n\r\n    // from ./finder\r\n    velm.delegate([\r\n        \"ancestor\",\r\n        \"ancestors\",\r\n        \"children\",\r\n        \"descendant\",\r\n        \"find\",\r\n        \"findAll\",\r\n        \"firstChild\",\r\n        \"lastChild\",\r\n        \"matches\",\r\n        \"nextSibling\",\r\n        \"nextSiblings\",\r\n        \"parent\",\r\n        \"previousSibling\",\r\n        \"previousSiblings\",\r\n        \"siblings\"\r\n    ], finder);\r\n\r\n    /*\r\n     * find a dom element matched by the specified selector.\r\n     * @param {String} selector\r\n     */\r\n    velm.find = function(selector) {\r\n        if (selector === \"body\") {\r\n            return this.root;\r\n        } else {\r\n            return this.root.descendant(selector);\r\n        }\r\n    };\r\n\r\n    // from ./fx\r\n    velm.delegate([\r\n        \"animate\",\r\n        \"fadeIn\",\r\n        \"fadeOut\",\r\n        \"fadeTo\",\r\n        \"fadeToggle\",\r\n        \"hide\",\r\n        \"scrollToTop\",\r\n        \"show\",\r\n        \"toggle\"\r\n    ], fx);\r\n\r\n\r\n    // from ./geom\r\n    velm.delegate([\r\n        \"borderExtents\",\r\n        \"boundingPosition\",\r\n        \"boundingRect\",\r\n        \"clientHeight\",\r\n        \"clientSize\",\r\n        \"clientWidth\",\r\n        \"contentRect\",\r\n        \"height\",\r\n        \"marginExtents\",\r\n        \"offsetParent\",\r\n        \"paddingExtents\",\r\n        \"pagePosition\",\r\n        \"pageRect\",\r\n        \"relativePosition\",\r\n        \"relativeRect\",\r\n        \"scrollIntoView\",\r\n        \"scrollLeft\",\r\n        \"scrollTop\",\r\n        \"size\",\r\n        \"width\"\r\n    ], geom);\r\n\r\n    // from ./noder\r\n    velm.delegate([\r\n        \"after\",\r\n        \"append\",\r\n        \"before\",\r\n        \"clone\",\r\n        \"contains\",\r\n        \"contents\",\r\n        \"empty\",\r\n        \"html\",\r\n        \"isChildOf\",\r\n        \"ownerDoc\",\r\n        \"prepend\",\r\n        \"remove\",\r\n        \"removeChild\",\r\n        \"replace\",\r\n        \"reverse\",\r\n        \"throb\",\r\n        \"traverse\",\r\n        \"wrapper\",\r\n        \"wrapperInner\",\r\n        \"unwrap\"\r\n    ], noder);\r\n\r\n    // from ./styler\r\n    velm.delegate([\r\n        \"addClass\",\r\n        \"className\",\r\n        \"css\",\r\n        \"hasClass\",\r\n        \"hide\",\r\n        \"isInvisible\",\r\n        \"removeClass\",\r\n        \"show\",\r\n        \"toggleClass\"\r\n    ], styler);\r\n\r\n    // properties\r\n\r\n    var properties = [ 'position', 'left', 'top', 'right', 'bottom', 'width', 'height', 'border', 'borderLeft',\r\n    'borderTop', 'borderRight', 'borderBottom', 'borderColor', 'display', 'overflow', 'margin', 'marginLeft', 'marginTop', 'marginRight', 'marginBottom', 'padding', 'paddingLeft', 'paddingTop', 'paddingRight', 'paddingBottom', 'color',\r\n    'background', 'backgroundColor', 'opacity', 'fontSize', 'fontWeight', 'textAlign', 'textDecoration', 'textTransform', 'cursor', 'zIndex' ];\r\n\r\n    properties.forEach( function ( property ) {\r\n\r\n        var method = property;\r\n\r\n        VisualElement.prototype[method ] = function (value) {\r\n\r\n            this.css( property, value );\r\n\r\n            return this;\r\n\r\n        };\r\n\r\n    });\r\n\r\n    // events\r\n    var events = [ 'keyUp', 'keyDown', 'mouseOver', 'mouseOut', 'click', 'dblClick', 'change' ];\r\n\r\n    events.forEach( function ( event ) {\r\n\r\n        var method = event;\r\n\r\n        VisualElement.prototype[method ] = function ( callback ) {\r\n\r\n            this.on( event.toLowerCase(), callback);\r\n\r\n            return this;\r\n        };\r\n\r\n    });\r\n\r\n\r\n    return skylark.velm = velm;\r\n});\ndefine('skylark-utils-dom/plugins',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/klass\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./eventer\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./fx\",\r\n    \"./query\",\r\n    \"./velm\"\r\n], function(skylark, klass, langx, noder, datax, eventer, finder, geom, styler, fx, $, velm) {\r\n    \"use strict\";\r\n\r\n\tvar slice = Array.prototype.slice,\r\n        pluginKlasses = {};\r\n\r\n\r\n    /*\r\n     * Register a plugin type\r\n     */\r\n    function register( name, pluginKlass,shortcut) {\r\n        pluginKlasses[name] = pluginKlass;\r\n\r\n        if (shortcut) {\r\n            velm.partial(shortcut,$.fn[shortcut] = function(options) {\r\n                return this.plugin.apply(this,[name].concat(arguments));\r\n            });\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Create or get a plugin instance assocated with the element,\r\n     * also you can execute the plugin method directory;\r\n     */\r\n    function instantiate(elm,pluginName,options) {\r\n\r\n        var pluginInstance = datax.data( elem, pluginName );\r\n\r\n        if (options === undefined || options === \"instance\") {\r\n            return pluginInstance;\r\n        }\r\n\r\n        var isMethodCall = typeof options === \"string\",\r\n            args = slice.call( arguments, 2 ),\r\n            returnValue = this;\r\n\r\n        if ( isMethodCall ) {\r\n            var methodName = options;\r\n\r\n            if ( !pluginInstance ) {\r\n                return langx.error( \"cannot call methods on \" + pluginName +\r\n                    \" prior to initialization; \" +\r\n                    \"attempted to call method '\" + methodName + \"'\" );\r\n            }\r\n\r\n            if ( !langx.isFunction( pluginInstance[ methodName ] ) || methodName.charAt( 0 ) === \"_\" ) {\r\n                return langx.error( \"no such method '\" + methodName + \"' for \" + pluginName +\r\n                    \" plugin instance\" );\r\n            }\r\n\r\n            return pluginInstance[ methodName ].apply( pluginInstance, args );\r\n\r\n        } else {\r\n            // Allow multiple hashes to be passed on init\r\n            if ( args.length ) {\r\n                options = langx.mixin.apply( langx, [{},options ].concat( args ) );\r\n            }\r\n\r\n            if ( pluginInstance ) {\r\n                pluginInstance.option( options || {} );\r\n            } else {\r\n                var pluginKlass = pluginKlasses[pluginName]; \r\n                datax.data( elm, pluginName, new pluginKlass( options, elm ) );\r\n            }\r\n        }\r\n\r\n        return returnValue;\r\n    }\r\n\r\n    var pluginUuid = 0;\r\n    var Plugin =   langx.Evented.inherit({\r\n        klassName: \"Plugin\",\r\n\r\n        pluginEventPrefix: \"\",\r\n\r\n        options: {\r\n            // Callbacks\r\n            create: null\r\n        },\r\n\r\n        _construct : function(options,element) {\r\n            this.options = langx.mixin( {}, this.options );\r\n\r\n            element = $( element || this.defaultElement || this )[ 0 ];\r\n            this.element = $( element );\r\n            this.uuid = pluginUuid++;\r\n            this.eventNamespace = \".\" + this.pluginName + this.uuid;\r\n\r\n            this.bindings = $();\r\n\r\n            if ( element !== this ) {\r\n                datax.data( element, this.pluginFullName, this );\r\n                this._on( true, this.element, {\r\n                    remove: function( event ) {\r\n                        if ( event.target === element ) {\r\n                            this.destroy();\r\n                        }\r\n                    }\r\n                } );\r\n                this.document = $( element.style ?\r\n\r\n                    // Element within the document\r\n                    element.ownerDocument :\r\n\r\n                    // Element is window or document\r\n                    element.document || element );\r\n                this.window = $( this.document[ 0 ].defaultView || this.document[ 0 ].parentWindow );\r\n            }\r\n\r\n            this.options = langx.mixin( {},\r\n                this.options,\r\n                this._getCreateOptions(),\r\n                options );\r\n\r\n            this._create();\r\n\r\n            this._trigger( \"create\", null, this._getCreateEventData() );\r\n\r\n            this._init();\r\n        },\r\n\r\n        _getCreateOptions: function() {\r\n            return {};\r\n        },\r\n\r\n        _getCreateEventData: langx.noop,\r\n\r\n        _create: langx.noop,\r\n\r\n        _init: langx.noop,\r\n\r\n        destroy: function() {\r\n            var that = this;\r\n\r\n            this._destroy();\r\n            // We can probably remove the unbind calls in 2.0\r\n            // all event bindings should go through this._on()\r\n            this.element\r\n                .off( this.eventNamespace )\r\n                .removeData( this.pluginFullName );\r\n            this.plugin()\r\n                .off( this.eventNamespace )\r\n                .removeAttr( \"aria-disabled\" );\r\n\r\n            // Clean up events and states\r\n            this.bindings.off( this.eventNamespace );\r\n        },\r\n\r\n        _destroy: langx.noop,\r\n\r\n        option: function( key, value ) {\r\n            var options = key;\r\n            var parts;\r\n            var curOption;\r\n            var i;\r\n\r\n            if ( arguments.length === 0 ) {\r\n\r\n                // Don't return a reference to the internal hash\r\n                return langx.mixin( {}, this.options );\r\n            }\r\n\r\n            if ( typeof key === \"string\" ) {\r\n\r\n                // Handle nested keys, e.g., \"foo.bar\" => { foo: { bar: ___ } }\r\n                options = {};\r\n                parts = key.split( \".\" );\r\n                key = parts.shift();\r\n                if ( parts.length ) {\r\n                    curOption = options[ key ] = $.plugin.extend( {}, this.options[ key ] );\r\n                    for ( i = 0; i < parts.length - 1; i++ ) {\r\n                        curOption[ parts[ i ] ] = curOption[ parts[ i ] ] || {};\r\n                        curOption = curOption[ parts[ i ] ];\r\n                    }\r\n                    key = parts.pop();\r\n                    if ( arguments.length === 1 ) {\r\n                        return curOption[ key ] === undefined ? null : curOption[ key ];\r\n                    }\r\n                    curOption[ key ] = value;\r\n                } else {\r\n                    if ( arguments.length === 1 ) {\r\n                        return this.options[ key ] === undefined ? null : this.options[ key ];\r\n                    }\r\n                    options[ key ] = value;\r\n                }\r\n            }\r\n\r\n            this._setOptions( options );\r\n\r\n            return this;\r\n        },\r\n\r\n        _setOptions: function( options ) {\r\n            var key;\r\n\r\n            for ( key in options ) {\r\n                this._setOption( key, options[ key ] );\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        _setOption: function( key, value ) {\r\n\r\n            this.options[ key ] = value;\r\n\r\n            return this;\r\n        },\r\n\r\n    });\r\n\r\n    $.fn.plugin = function(name,options) {\r\n        var args = slice.call( arguments, 1 ),\r\n            self = this,\r\n            returnValue = this;\r\n\r\n        this.each(function(){\r\n            returnValue = instantiate.apply(self,[this,name].concat(args));\r\n        });\r\n        return returnValue;\r\n    };\r\n\r\n    velm.partial(\"plugin\",function(name,options) {\r\n        var args = slice.call( arguments, 1 );\r\n        return instantiate.apply(this,[this,name].concat(args));\r\n    }); \r\n\r\n\r\n    function plugins() {\r\n        return plugins;\r\n    }\r\n     \r\n    langx.mixin(plugins, {\r\n        instantiate : instantiate,\r\n    \t\r\n        Plugin : Plugin,\r\n\r\n        register : register\r\n\r\n    });\r\n\r\n    return plugins;\r\n});\ndefine('skylark-utils-dom/scripter',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./finder\"\r\n], function(skylark, langx, noder, finder) {\r\n\r\n    var head = document.getElementsByTagName('head')[0],\r\n        scriptsByUrl = {},\r\n        scriptElementsById = {},\r\n        count = 0;\r\n\r\n    function scripter() {\r\n        return scripter;\r\n    }\r\n\r\n    langx.mixin(scripter, {\r\n        /*\r\n         * Load a script from a url into the document.\r\n         * @param {} url\r\n         * @param {} loadedCallback\r\n         * @param {} errorCallback\r\n         */\r\n        loadJavaScript: function(url, loadedCallback, errorCallback) {\r\n            var script = scriptsByUrl[url];\r\n            if (!script) {\r\n                script = scriptsByUrl[url] = {\r\n                    state: 0, //0:unload,1:loaded,-1:loaderror\r\n                    loadedCallbacks: [],\r\n                    errorCallbacks: []\r\n                }\r\n            }\r\n\r\n            script.loadedCallbacks.push(loadedCallback);\r\n            script.errorCallbacks.push(errorCallback);\r\n\r\n            if (script.state === 1) {\r\n                script.node.onload();\r\n            } else if (script.state === -1) {\r\n                script.node.onerror();\r\n            } else {\r\n                var node = script.node = document.createElement(\"script\"),\r\n                    id = script.id = (count++);\r\n\r\n                node.type = \"text/javascript\";\r\n                node.async = false;\r\n                node.defer = false;\r\n                startTime = new Date().getTime();\r\n                head.appendChild(node);\r\n\r\n                node.onload = function() {\r\n                        script.state = 1;\r\n\r\n                        var callbacks = script.loadedCallbacks,\r\n                            i = callbacks.length;\r\n\r\n                        while (i--) {\r\n                            callbacks[i]();\r\n                        }\r\n                        script.loadedCallbacks = [];\r\n                        script.errorCallbacks = [];\r\n                    },\r\n                    node.onerror = function() {\r\n                        script.state = -1;\r\n                        var callbacks = script.errorCallbacks,\r\n                            i = callbacks.length;\r\n\r\n                        while (i--) {\r\n                            callbacks[i]();\r\n                        }\r\n                        script.loadedCallbacks = [];\r\n                        script.errorCallbacks = [];\r\n                    };\r\n                node.src = url;\r\n\r\n                scriptElementsById[id] = node;\r\n            }\r\n            return script.id;\r\n        },\r\n        /*\r\n         * Remove the specified script from the document.\r\n         * @param {Number} id\r\n         */\r\n        deleteJavaScript: function(id) {\r\n            var node = scriptElementsById[id];\r\n            if (node) {\r\n                var url = node.src;\r\n                noder.remove(node);\r\n                delete scriptElementsById[id];\r\n                delete scriptsByUrl[url];\r\n            }\r\n        }\r\n    });\r\n\r\n    return skylark.scripter = scripter;\r\n});\ndefine('skylark-utils-dom/main',[\r\n    \"./skylark\",\r\n    \"./browser\",\r\n    \"./css\",\r\n    \"./datax\",\r\n    \"./eventer\",\r\n    \"./finder\",\r\n    \"./fx\",\r\n    \"./geom\",\r\n    \"./images\",\r\n    \"./noder\",\r\n    \"./plugins\",\r\n    \"./query\",\r\n    \"./scripter\",\r\n    \"./styler\",\r\n    \"./transforms\",\r\n    \"./langx\",\r\n    \"./velm\"\r\n], function(skylark) {\r\n    return skylark;\r\n})\r\n;\ndefine('skylark-utils-dom', ['skylark-utils-dom/main'], function (main) { return main; });\n\n"]}