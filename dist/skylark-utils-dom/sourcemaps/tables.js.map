{"version":3,"sources":["tables.js"],"names":["define","dom","langx","$","tables","_changeCellTag","$tr","tagName","find","each","i","cell","$cell","replaceWith","html","deleteTable","td","callback","$block","$table","closest","next","remove","refreshTableWidth","setTimeout","cols","tableWidth","width","eq","attr","outerWidth","undecorate","table","parent","length","mixin","createTable","row","col","phBr","$tbody","$td","$thead","k","l","r","ref","ref1","appendTo","append","decorate","cssClasses","$colgroup","$headRow","$wrapper","tableDecorate","wrap","first","before","prepend","prependTo","class","resizeHandle","contenteditable","deleteCol","$newTd","index","noOtherCol","noOtherRow","siblings","prev","tr","deleteRow","$newTr","$nextTr","_nextRow","$prevTr","_prevRow","is","insertCol","direction","$col","$newCol","cellTag","Math","max","parseFloat","insertRow","colNum"],"mappings":";;;;;;;AAAAA,QACI,QACA,UACA,WACD,SAASC,EAAKC,EAAMC,GAGrB,SAASC,IACL,OAAOA,EAGX,SAASC,EAAeC,EAAKC,GAC3B,OAAOD,EAAIE,KAAK,UAAUC,KAAK,SAASC,EAAGC,GACzC,IAAIC,EAEJ,OADAA,EAAQT,EAAEQ,IACGE,YAAY,IAAMN,EAAU,IAAOK,EAAME,OAAU,KAAOP,EAAU,OA+ErF,SAASQ,EAAYC,EAAGC,GACtB,IAEIC,EAAQC,EAEZD,GADAC,EAHUhB,EAAEa,GAGCI,QAAQ,oBACLC,KAAK,KACrBF,EAAOG,SACHL,GACFA,EAASC,GA+Hb,SAASK,EAAkBJ,GACzB,OAAOK,WACE,WACL,IAAIC,EAAMC,EAGV,OAFAA,EAAaP,EAAOQ,QACpBF,EAAON,EAAOX,KAAK,OACZW,EAAOX,KAAK,eAAeC,KAAK,SAASC,EAAGM,GAGjD,OADOS,EAAKG,GAAGlB,GACHmB,KAAK,QAAU1B,EAAEa,GAAIc,aAAeJ,EAAa,IAAO,QAGhE,GAGZ,SAASK,EAAWC,GAClB,IAAIb,EAAShB,EAAE6B,GACf,GAAMb,EAAOc,OAAO,mBAAmBC,OAAS,EAGhD,OAAOf,EAAOc,SAASpB,YAAYM,GAAQ,GAkB9C,OAbCjB,EAAMiC,MAAM/B,GACVgC,YA1NF,SAAqBC,EAAKC,EAAKC,GAC9B,IAAIpB,EAAQqB,EAAQC,EAAKC,EAAQpC,EAAQqC,EAAGC,EAAGC,EAAGC,EAAKC,EAIvD,IAHA5B,EAAShB,EAAE,YACXuC,EAASvC,EAAE,YAAY6C,SAAS7B,GAChCqB,EAASrC,EAAE,YAAY6C,SAAS7B,GAC3B0B,EAAIF,EAAI,EAAGG,EAAMT,EAAK,GAAKS,EAAMH,EAAIG,EAAMH,EAAIG,EAAKD,EAAI,GAAKC,IAAQH,IAAMA,EAG7E,KAFArC,EAAMH,EAAE,UACJ6C,SAAe,IAANH,EAAUH,EAASF,GACvBI,EAAI,EAAGG,EAAOT,EAAK,GAAKS,EAAOH,EAAIG,EAAOH,EAAIG,EAAU,GAAKA,IAASH,IAAMA,EACnFH,EAAMtC,EAAQ,IAAN0C,EAAU,QAAU,SAASG,SAAS1C,GAC1CiC,GACDE,EAAIQ,OAAOV,GAInB,OAAOpB,EAAO,IA4Mb+B,SAvMF,SAAkBlB,EAAMmB,GACtB,IAEIC,EAAWC,EAAyBb,EAAQE,EAAQY,EAFpDnC,EAAShB,EAAE6B,GAiCf,OA9BIb,EAAOc,OAAO,IAAMkB,EAAWI,eAAerB,OAAS,GACzDH,EAAWC,GAEbb,EAAOqC,KAAK,eAAiBL,EAAWI,cAAgB,YACxDD,EAAWnC,EAAOc,OAAO,IAAMkB,EAAWI,eAC1CH,EAAYjC,EAAOX,KAAK,YACpBW,EAAOX,KAAK,SAAS0B,OAAS,IAChCQ,EAASvC,EAAE,aACXkD,EAAWlC,EAAOX,KAAK,MAAMiD,QAC7Bf,EAAOO,OAAOI,GACdhD,EAAegD,EAAU,OACzBb,EAASrB,EAAOX,KAAK,UACV0B,OAAS,EAClBM,EAAOkB,OAAOhB,GAEdvB,EAAOwC,QAAQjB,IAGfU,EAAUlB,OAAS,IACrBkB,EAAYjD,EAAE,eAAeyD,UAAUzC,GACvCA,EAAOX,KAAK,eAAeC,KAAK,SAASC,EAAGM,GAE1C,OAAcb,EAAE,UAAU6C,SAASI,KAErC7B,EAAkBJ,IAEJhB,EAAE,WAChB0D,MAASV,EAAWW,aACpBC,gBAAiB,UAChBf,SAASM,GACLnC,EAAOc,UAsKd+B,UA1FF,SAAmBhD,EAAGC,GACpB,IAEIgD,EAAQ9C,EAAQb,EAAK4D,EAAOC,EAAYC,EAFxC3B,EAAMtC,EAAEa,GAMZ,GAFAoD,GADA9D,EAAMmC,EAAIR,OAAO,OACAb,QAAQ,SAASZ,KAAK,MAAM0B,OAAS,EACtDiC,EAAa1B,EAAI4B,SAAS,UAAUnC,OAAS,EACzCkC,GAAcD,EAChB,OAAOpD,EAAYC,GAEnBkD,EAAQ5D,EAAIE,KAAK,UAAU0D,MAAMzB,IACjCwB,EAASxB,EAAIpB,KAAK,WACLa,OAAS,IACpB+B,EAAS3D,EAAIgE,KAAK,YAEpBnD,EAASb,EAAIc,QAAQ,UACdZ,KAAK,OAAOoB,GAAGsC,GAAO5C,SAC7BH,EAAOX,KAAK,MAAMC,KAAK,SAASC,EAAG6D,GACjC,OAAOpE,EAAEoE,GAAI/D,KAAK,UAAUoB,GAAGsC,GAAO5C,WAExCC,EAAkBJ,GAEdF,GACFA,EAASgD,EAAO,KAoEpBO,UAxJF,SAAmBxD,EAAGC,GACpB,IAEIwD,EAAQnE,EAAK4D,EAFbzB,EAAMtC,EAAEa,GAIZ,IADAV,EAAMmC,EAAIR,OAAO,OACTb,QAAQ,SAASZ,KAAK,MAAM0B,OAAS,EAC3C,OAAOnB,EAAYC,IAEnByD,EA/FJ,SAAkBnE,GAChB,IAAIoE,EAKJ,OAJAA,EAAUpE,EAAIe,KAAK,OACPa,OAAS,GAAK5B,EAAI2B,OAAO,SAASC,OAAS,IACrDwC,EAAUpE,EAAI2B,OAAO,SAASZ,KAAK,SAASb,KAAK,aAE5CkE,EAyFIC,CAASrE,IACL4B,OAAS,IACpBuC,EAxFN,SAAkBnE,GAChB,IAAIsE,EAKJ,OAJAA,EAAUtE,EAAIgE,KAAK,OACPpC,OAAS,GAAK5B,EAAI2B,OAAO,SAASC,OAAS,IACrD0C,EAAUtE,EAAI2B,OAAO,SAASqC,KAAK,SAAS9D,KAAK,OAE5CoE,EAkFMC,CAASvE,IAEpB4D,EAAQ5D,EAAIE,KAAK,UAAU0D,MAAMzB,GAC7BnC,EAAI2B,SAAS6C,GAAG,WAClBL,EAAOzB,SAAS1C,EAAI2B,UACpB5B,EAAeoE,EAAQ,OAEzBnE,EAAIgB,SAEAL,GACFA,EAASwD,EAAO,GAAGP,IAqIvBnD,YAAgBA,EAChBgE,UAjEF,SAAmB/D,EAAIgE,EAAUzC,EAAKtB,GACpC,IAEIgE,EAAMC,EAASjB,EAAQ9C,EAAQb,EAAK4D,EAAOxC,EAAYC,EAFvDc,EAAMtC,EAAEa,GAGK,MAAbgE,IACFA,EAAY,SAEd1E,EAAMmC,EAAIR,OAAO,MACjBiC,EAAQ5D,EAAIE,KAAK,UAAU0D,MAAMzB,GAEjCwC,GADA9D,EAASsB,EAAIrB,QAAQ,UACPZ,KAAK,OAAOoB,GAAGsC,GAC7B/C,EAAOX,KAAK,MAAMC,KACT,SAASC,EAAG6D,GACjB,IAAIN,EAAQkB,EAGZ,OAFAA,EAAUhF,EAAEoE,GAAItC,SAAS6C,GAAG,SAAW,KAAO,KAC9Cb,EAAS9D,EAAE,IAAMgF,EAAU,MAAMlC,OAAOV,GACjCpC,EAAEoE,GAAI/D,KAAK,UAAUoB,GAAGsC,GAAOc,GAAWf,KAGrDiB,EAAU/E,EAAE,UACZ8E,EAAKD,GAAWE,GAChBxD,EAAaP,EAAOQ,QACpBA,EAAQyD,KAAKC,IAAIC,WAAWL,EAAKpD,KAAK,UAAY,EAAG,GAAKH,EAAa,KACvEuD,EAAKpD,KAAK,QAASF,EAAQ,KAC3BuD,EAAQrD,KAAK,QAASF,EAAQ,KAC9BJ,EAAkBJ,GAClB8C,EAAuB,UAAde,EAAwBvC,EAAIpB,KAAK,UAAYoB,EAAI6B,KAAK,UAE3DrD,GACFA,EAASgD,EAAO,KAqClBsB,UAjIF,SAAmBvE,EAAIgE,EAAUzC,EAAKtB,GACpC,IAEIwD,EAAQtD,EAAQb,EAAK6E,EAASK,EAAWtB,EAAOvB,EAAGG,EAFnDL,EAAMtC,EAAEa,GAyBZ,IAtBiB,MAAbgE,IACFA,EAAY,SAGd7D,GADAb,EAAMmC,EAAIR,OAAO,OACJb,QAAQ,SACrBoE,EAAS,EACTrE,EAAOX,KAAK,MAAMC,KAAK,SAASC,EAAG6D,GACjC,OAAOiB,EAASJ,KAAKC,IAAIG,EAAQrF,EAAEoE,GAAI/D,KAAK,MAAM0B,UAEpDgC,EAAQ5D,EAAIE,KAAK,UAAU0D,MAAMzB,GACjCgC,EAAStE,EAAE,SACXgF,EAAU,KACQ,UAAdH,GAAyB1E,EAAI2B,SAAS6C,GAAG,SAC3CxE,EAAI2B,SAASZ,KAAK,SAASsC,QAAQc,GACZ,WAAdO,GAA0B1E,EAAI2B,SAAS6C,GAAG,UACnDxE,EAAIoD,OAAOe,GACXnE,EAAI2B,SAASZ,KAAK,SAASsC,QAAQrD,GACnCD,EAAeC,EAAK,MACpB6E,EAAU,MAEV7E,EAAI0E,GAAWP,GAER9B,EAAI,EAAGG,EAAM0C,EAAQ,GAAK1C,EAAMH,GAAKG,EAAMH,GAAKG,EAAS,GAAKA,IAAQH,IAAMA,EACnFxC,EAAE,IAAMgF,EAAU,MAAMlC,OAAOV,GAAMS,SAASyB,GAG5CxD,GACFA,EAASwD,EAAO,GAAGP,IAmGrB3C,kBAAsBA,EACtBQ,WAAeA,IAIX9B,EAAIG,OAASA","file":"../tables.js","sourcesContent":["define([\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./query\"\r\n], function(dom, langx,$) {\r\n  //TODO : don't use query\r\n\r\n  function tables() {\r\n      return tables;\r\n  }\r\n\r\n  function _changeCellTag($tr, tagName) {\r\n    return $tr.find('td, th').each(function(i, cell) {\r\n      var $cell;\r\n      $cell = $(cell);\r\n      return $cell.replaceWith(\"<\" + tagName + \">\" + ($cell.html()) + \"</\" + tagName + \">\");\r\n    });\r\n  }\r\n\r\n  function _nextRow($tr) {\r\n    var $nextTr;\r\n    $nextTr = $tr.next('tr');\r\n    if ($nextTr.length < 1 && $tr.parent('thead').length > 0) {\r\n      $nextTr = $tr.parent('thead').next('tbody').find('tr:first');\r\n    }\r\n    return $nextTr;\r\n  };\r\n\r\n  function _prevRow($tr) {\r\n    var $prevTr;\r\n    $prevTr = $tr.prev('tr');\r\n    if ($prevTr.length < 1 && $tr.parent('tbody').length > 0) {\r\n      $prevTr = $tr.parent('tbody').prev('thead').find('tr');\r\n    }\r\n    return $prevTr;\r\n  }\r\n\r\n  function createTable(row, col, phBr) {\r\n  \tvar $table, $tbody, $td, $thead, $tr, c, k, l, r, ref, ref1;\r\n  \t$table = $('<table/>');\r\n \t\t$thead = $('<thead/>').appendTo($table);\r\n  \t$tbody = $('<tbody/>').appendTo($table);\r\n  \tfor (r = k = 0, ref = row; 0 <= ref ? k < ref : k > ref; r = 0 <= ref ? ++k : --k) {\r\n    \t\t$tr = $('<tr/>');\r\n    \t\t$tr.appendTo(r === 0 ? $thead : $tbody);\r\n    \t\tfor (c = l = 0, ref1 = col; 0 <= ref1 ? l < ref1 : l > ref1; c = 0 <= ref1 ? ++l : --l) {\r\n     \t\t\t$td = $(r === 0 ? '<th/>' : '<td/>').appendTo($tr);\r\n      \t\tif (phBr) {\r\n        \t\t\t$td.append(phBr);\r\n      \t\t}\r\n    \t\t}\r\n  \t}\t\t\r\n  \treturn $table[0];\r\n  }\r\n    \r\n\r\n  //cls = simditor-table\r\n  function decorate(table,cssClasses) {\r\n    var $table = $(table);\r\n\r\n    var $colgroup, $headRow, $resizeHandle, $tbody, $thead, $wrapper;\r\n    if ($table.parent('.' + cssClasses.tableDecorate).length > 0) {\r\n      undecorate(table);\r\n    }\r\n    $table.wrap('<div class=\"' + cssClasses.tableDecorate + '\"></div>');\r\n    $wrapper = $table.parent('.' + cssClasses.tableDecorate );\r\n    $colgroup = $table.find('colgroup');\r\n    if ($table.find('thead').length < 1) {\r\n      $thead = $('<thead />');\r\n      $headRow = $table.find('tr').first();\r\n      $thead.append($headRow);\r\n      _changeCellTag($headRow, 'th');\r\n      $tbody = $table.find('tbody');\r\n      if ($tbody.length > 0) {\r\n        $tbody.before($thead);\r\n      } else {\r\n        $table.prepend($thead);\r\n      }\r\n    }\r\n    if ($colgroup.length < 1) {\r\n      $colgroup = $('<colgroup/>').prependTo($table);\r\n      $table.find('thead tr th').each(function(i, td) {\r\n        var $col;\r\n        return $col = $('<col/>').appendTo($colgroup);\r\n      });\r\n      refreshTableWidth($table);\r\n    }\r\n    $resizeHandle = $('<div />', {\r\n      \"class\": cssClasses.resizeHandle, // 'simditor-resize-handle',\r\n      contenteditable: 'false'\r\n    }).appendTo($wrapper);\r\n    return $table.parent();\r\n  }\r\n\r\n  function deleteTable(td,callback) {\r\n    var $td = $(td);\r\n\r\n    var $block, $table;\r\n    $table = $td.closest('.simditor-table');\r\n    $block = $table.next('p');\r\n    $table.remove();\r\n    if (callback) {\r\n      callback($block);\r\n    }\r\n  }\r\n\r\n  function deleteRow(td,callback) {\r\n    var $td = $(td);\r\n\r\n    var $newTr, $tr, index;\r\n    $tr = $td.parent('tr');\r\n    if ($tr.closest('table').find('tr').length < 1) {\r\n      return deleteTable(td);\r\n    } else {\r\n      $newTr = _nextRow($tr);\r\n      if (!($newTr.length > 0)) {\r\n        $newTr = _prevRow($tr);\r\n      }\r\n      index = $tr.find('td, th').index($td);\r\n      if ($tr.parent().is('thead')) {\r\n        $newTr.appendTo($tr.parent());\r\n        _changeCellTag($newTr, 'th');\r\n      }\r\n      $tr.remove();\r\n    \r\n      if (callback) {\r\n        callback($newTr[0],index);\r\n      }\r\n      //return this.editor.selection.setRangeAtEndOf($newTr.find('td, th').eq(index));\r\n    }\r\n  }\r\n\r\n  function insertRow(td, direction,phBr,callback) {\r\n    var $td = $(td);\r\n\r\n    var $newTr, $table, $tr, cellTag, colNum, i, index, k, ref;\r\n    if (direction == null) {\r\n      direction = 'after';\r\n    }\r\n    $tr = $td.parent('tr');\r\n    $table = $tr.closest('table');\r\n    colNum = 0;\r\n    $table.find('tr').each(function(i, tr) {\r\n      return colNum = Math.max(colNum, $(tr).find('td').length);\r\n    });\r\n    index = $tr.find('td, th').index($td);\r\n    $newTr = $('<tr/>');\r\n    cellTag = 'td';\r\n    if (direction === 'after' && $tr.parent().is('thead')) {\r\n      $tr.parent().next('tbody').prepend($newTr);\r\n    } else if (direction === 'before' && $tr.parent().is('thead')) {\r\n      $tr.before($newTr);\r\n      $tr.parent().next('tbody').prepend($tr);\r\n      _changeCellTag($tr, 'td');\r\n      cellTag = 'th';\r\n    } else {\r\n      $tr[direction]($newTr);\r\n    }\r\n    for (i = k = 1, ref = colNum; 1 <= ref ? k <= ref : k >= ref; i = 1 <= ref ? ++k : --k) {\r\n      $(\"<\" + cellTag + \"/>\").append(phBr).appendTo($newTr);\r\n    }\r\n\r\n    if (callback) {\r\n      callback($newTr[0],index);\r\n    }\r\n  }\r\n\r\n  function deleteCol(td,callback) {\r\n    var $td = $(td);\r\n\r\n    var $newTd, $table, $tr, index, noOtherCol, noOtherRow;\r\n    $tr = $td.parent('tr');\r\n    noOtherRow = $tr.closest('table').find('tr').length < 2;\r\n    noOtherCol = $td.siblings('td, th').length < 1;\r\n    if (noOtherRow && noOtherCol) {\r\n      return deleteTable(td);\r\n    } else {\r\n      index = $tr.find('td, th').index($td);\r\n      $newTd = $td.next('td, th');\r\n      if (!($newTd.length > 0)) {\r\n        $newTd = $tr.prev('td, th');\r\n      }\r\n      $table = $tr.closest('table');\r\n      $table.find('col').eq(index).remove();\r\n      $table.find('tr').each(function(i, tr) {\r\n        return $(tr).find('td, th').eq(index).remove();\r\n      });\r\n      refreshTableWidth($table);\r\n      //return this.editor.selection.setRangeAtEndOf($newTd);\r\n      if (callback) {\r\n        callback($newTd[0]);\r\n      }\r\n    }\r\n  }\r\n\r\n  function insertCol(td, direction,phBr,callback) {\r\n    var $td = $(td);\r\n\r\n    var $col, $newCol, $newTd, $table, $tr, index, tableWidth, width;\r\n    if (direction == null) {\r\n      direction = 'after';\r\n    }\r\n    $tr = $td.parent('tr');\r\n    index = $tr.find('td, th').index($td);\r\n    $table = $td.closest('table');\r\n    $col = $table.find('col').eq(index);\r\n    $table.find('tr').each((function(_this) {\r\n      return function(i, tr) {\r\n        var $newTd, cellTag;\r\n        cellTag = $(tr).parent().is('thead') ? 'th' : 'td';\r\n        $newTd = $(\"<\" + cellTag + \"/>\").append(phBr);\r\n        return $(tr).find('td, th').eq(index)[direction]($newTd);\r\n      };\r\n    })(this));\r\n    $newCol = $('<col/>');\r\n    $col[direction]($newCol);\r\n    tableWidth = $table.width();\r\n    width = Math.max(parseFloat($col.attr('width')) / 2, 50 / tableWidth * 100);\r\n    $col.attr('width', width + '%');\r\n    $newCol.attr('width', width + '%');\r\n    refreshTableWidth($table);\r\n    $newTd = direction === 'after' ? $td.next('td, th') : $td.prev('td, th');\r\n    //return this.editor.selection.setRangeAtStartOf($newTd);\r\n    if (callback) {\r\n      callback($newTd[0]);\r\n    }\r\n  }\r\n\r\n\r\n  function refreshTableWidth($table) {\r\n    return setTimeout((function(_this) {\r\n      return function() {\r\n        var cols, tableWidth;\r\n        tableWidth = $table.width();\r\n        cols = $table.find('col');\r\n        return $table.find('thead tr th').each(function(i, td) {\r\n          var $col;\r\n          $col = cols.eq(i);\r\n          return $col.attr('width', ($(td).outerWidth() / tableWidth * 100) + '%');\r\n        });\r\n      };\r\n    })(this), 0);\r\n  }\r\n\r\n  function undecorate(table) {\r\n    var $table = $(table);\r\n    if (!($table.parent('.simditor-table').length > 0)) {\r\n      return;\r\n    }\r\n    return $table.parent().replaceWith($table)[0];\r\n  };\r\n\r\n\r\n\r\n  langx.mixin(tables,{\r\n    \"createTable\" : createTable,\r\n    \"decorate\" : decorate,\r\n    \"deleteCol\" : deleteCol,\r\n    \"deleteRow\" : deleteRow,\r\n    \"deleteTable\" : deleteTable,\r\n    \"insertCol\" : insertCol,\r\n    \"insertRow\" : insertRow,\r\n    \"refreshTableWidth\" : refreshTableWidth,\r\n    \"undecorate\" : undecorate\r\n  })\r\n\r\n\r\n\treturn dom.tables = tables;\r\n});"]}