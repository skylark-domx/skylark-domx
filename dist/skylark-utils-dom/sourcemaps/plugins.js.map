{"version":3,"sources":["plugins.js"],"names":["define","skylark","klass","langx","noder","datax","eventer","finder","geom","styler","fx","$","velm","register","pluginKlass","shortcut","name","prototype","pluginName","pluginKlasses","partial","fn","options","this","plugin","apply","concat","arguments","instantiate","elm","pluginInstance","data","undefined","isMethodCall","args","slice","call","returnValue","methodName","isFunction","charAt","error","length","mixin","option","plugins","Array","pluginUuid","Plugin","Evented","inherit","klassName","pluginEventPrefix","create","_construct","element","defaultElement","uuid","eventNamespace","bindings","classesElementLookup","_on","remove","event","target","destroy","document","style","ownerDocument","window","defaultView","parentWindow","_getCreateOptions","_create","_trigger","_getCreateEventData","_init","noop","_destroy","off","removeData","removeAttr","key","value","parts","curOption","i","split","shift","pop","_setOptions","_setOption","self","each"],"mappings":"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","file":"../plugins.js","sourcesContent":["define([\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/klass\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./eventer\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./fx\",\r\n    \"./query\",\r\n    \"./velm\"\r\n], function(skylark, klass, langx, noder, datax, eventer, finder, geom, styler, fx, $, velm) {\r\n    \"use strict\";\r\n\r\n\tvar slice = Array.prototype.slice,\r\n        pluginKlasses = {};\r\n\r\n\r\n    /*\r\n     * Register a plugin type\r\n     */\r\n    function register( pluginKlass,shortcut) {\r\n        var name = pluginKlass.prototype.pluginName;\r\n        \r\n        pluginKlasses[name] = pluginKlass;\r\n\r\n        if (shortcut) {\r\n            velm.partial(shortcut,$.fn[shortcut] = function(options) {\r\n                return this.plugin.apply(this,[name].concat(arguments));\r\n            });\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Create or get a plugin instance assocated with the element,\r\n     * also you can execute the plugin method directory;\r\n     */\r\n    function instantiate(elm,pluginName,options) {\r\n\r\n        var pluginInstance = datax.data( elm, pluginName );\r\n\r\n        if (options === undefined || options === \"instance\") {\r\n            return pluginInstance;\r\n        }\r\n\r\n        var isMethodCall = typeof options === \"string\",\r\n            args = slice.call( arguments, 2 ),\r\n            returnValue = this;\r\n\r\n        if ( isMethodCall ) {\r\n            var methodName = options;\r\n\r\n            if ( !pluginInstance ) {\r\n                return langx.error( \"cannot call methods on \" + pluginName +\r\n                    \" prior to initialization; \" +\r\n                    \"attempted to call method '\" + methodName + \"'\" );\r\n            }\r\n\r\n            if ( !langx.isFunction( pluginInstance[ methodName ] ) || methodName.charAt( 0 ) === \"_\" ) {\r\n                return langx.error( \"no such method '\" + methodName + \"' for \" + pluginName +\r\n                    \" plugin instance\" );\r\n            }\r\n\r\n            return pluginInstance[ methodName ].apply( pluginInstance, args );\r\n\r\n        } else {\r\n            // Allow multiple hashes to be passed on init\r\n            if ( args.length ) {\r\n                options = langx.mixin.apply( langx, [{},options ].concat( args ) );\r\n            }\r\n\r\n            if ( pluginInstance ) {\r\n                pluginInstance.option( options || {} );\r\n            } else {\r\n                var pluginKlass = pluginKlasses[pluginName]; \r\n                datax.data( elm, pluginName, new pluginKlass( options, elm ) );\r\n            }\r\n        }\r\n\r\n        return returnValue;\r\n    }\r\n\r\n    var pluginUuid = 0;\r\n    var Plugin =   langx.Evented.inherit({\r\n        klassName: \"Plugin\",\r\n\r\n        pluginEventPrefix: \"\",\r\n\r\n        options: {\r\n            // Callbacks\r\n            create: null\r\n        },\r\n\r\n        _construct : function(options,element) {\r\n            this.options = langx.mixin( {}, this.options );\r\n\r\n            element = $( element || this.defaultElement || this )[ 0 ];\r\n            this.element = $( element );\r\n            this.uuid = pluginUuid++;\r\n            this.eventNamespace = \".\" + this.pluginName + this.uuid;\r\n\r\n            this.bindings = $();\r\n            this.classesElementLookup = {};\r\n\r\n            if ( element !== this ) {\r\n                datax.data( element, this.pluginName, this );\r\n                this._on( true, this.element, {\r\n                    remove: function( event ) {\r\n                        if ( event.target === element ) {\r\n                            this.destroy();\r\n                        }\r\n                    }\r\n                } );\r\n                this.document = $( element.style ?\r\n\r\n                    // Element within the document\r\n                    element.ownerDocument :\r\n\r\n                    // Element is window or document\r\n                    element.document || element );\r\n                this.window = $( this.document[ 0 ].defaultView || this.document[ 0 ].parentWindow );\r\n            }\r\n\r\n            this.options = langx.mixin( {},\r\n                this.options,\r\n                this._getCreateOptions(),\r\n                options );\r\n\r\n            this._create();\r\n\r\n            this._trigger( \"create\", null, this._getCreateEventData() );\r\n\r\n            this._init();\r\n        },\r\n\r\n        _getCreateOptions: function() {\r\n            return {};\r\n        },\r\n\r\n        _getCreateEventData: langx.noop,\r\n\r\n        _create: langx.noop,\r\n\r\n        _init: langx.noop,\r\n\r\n        destroy: function() {\r\n            var that = this;\r\n\r\n            this._destroy();\r\n            // We can probably remove the unbind calls in 2.0\r\n            // all event bindings should go through this._on()\r\n            this.element\r\n                .off( this.eventNamespace )\r\n                .removeData( this.pluginName );\r\n            this.plugin()\r\n                .off( this.eventNamespace )\r\n                .removeAttr( \"aria-disabled\" );\r\n\r\n            // Clean up events and states\r\n            this.bindings.off( this.eventNamespace );\r\n        },\r\n\r\n        _destroy: langx.noop,\r\n\r\n        option: function( key, value ) {\r\n            var options = key;\r\n            var parts;\r\n            var curOption;\r\n            var i;\r\n\r\n            if ( arguments.length === 0 ) {\r\n\r\n                // Don't return a reference to the internal hash\r\n                return langx.mixin( {}, this.options );\r\n            }\r\n\r\n            if ( typeof key === \"string\" ) {\r\n\r\n                // Handle nested keys, e.g., \"foo.bar\" => { foo: { bar: ___ } }\r\n                options = {};\r\n                parts = key.split( \".\" );\r\n                key = parts.shift();\r\n                if ( parts.length ) {\r\n                    curOption = options[ key ] = langx.mixin( {}, this.options[ key ] );\r\n                    for ( i = 0; i < parts.length - 1; i++ ) {\r\n                        curOption[ parts[ i ] ] = curOption[ parts[ i ] ] || {};\r\n                        curOption = curOption[ parts[ i ] ];\r\n                    }\r\n                    key = parts.pop();\r\n                    if ( arguments.length === 1 ) {\r\n                        return curOption[ key ] === undefined ? null : curOption[ key ];\r\n                    }\r\n                    curOption[ key ] = value;\r\n                } else {\r\n                    if ( arguments.length === 1 ) {\r\n                        return this.options[ key ] === undefined ? null : this.options[ key ];\r\n                    }\r\n                    options[ key ] = value;\r\n                }\r\n            }\r\n\r\n            this._setOptions( options );\r\n\r\n            return this;\r\n        },\r\n\r\n        _setOptions: function( options ) {\r\n            var key;\r\n\r\n            for ( key in options ) {\r\n                this._setOption( key, options[ key ] );\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        _setOption: function( key, value ) {\r\n\r\n            this.options[ key ] = value;\r\n\r\n            return this;\r\n        },\r\n\r\n    });\r\n\r\n    $.fn.plugin = function(name,options) {\r\n        var args = slice.call( arguments, 1 ),\r\n            self = this,\r\n            returnValue = this;\r\n\r\n        this.each(function(){\r\n            returnValue = instantiate.apply(self,[this,name].concat(args));\r\n        });\r\n        return returnValue;\r\n    };\r\n\r\n    velm.partial(\"plugin\",function(name,options) {\r\n        var args = slice.call( arguments, 1 );\r\n        return instantiate.apply(this,[this,name].concat(args));\r\n    }); \r\n\r\n\r\n    function plugins() {\r\n        return plugins;\r\n    }\r\n     \r\n    langx.mixin(plugins, {\r\n        instantiate : instantiate,\r\n    \t\r\n        Plugin : Plugin,\r\n\r\n        register : register\r\n\r\n    });\r\n\r\n    return plugins;\r\n});"]}